Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 1
1840v4.asm



      1				     ;This source code made by Gleb Larionov, Prague.
      2				     ;Changed by Leonid	Yadrennikov, Tyumen.
      3				     ;v1 - 04.10.2021 -	ros_checksum removed
      4				     ;___________________
      5				     ; v4 - ??/??/???? (Other version than 24/04/1981) новая клавиатура
      6				     ;	БАЗОВАЯ СИСТЕМА ВВОДА/ВЫВОДА (БСУВВ)
      7				     ;___________________
      8	      =0060		     port_a  equ     60h
      9	      =F000		     cod     equ     0f000h
     10	      =0040		     dat     equ     0040h
     11	      =0030		     sta     equ     0030h
     12	      =0050		     xxdat   equ     0050h
     13	      =B800		     video_ra equ    0b800h
     14	      =0061		     port_b  equ     61h
     15	      =0062		     port_c  equ     62h
     16	      =0063		     cmd_port equ    63h
     17	      =0020		     inta00  equ     20h
     18	      =0021		     inta01  equ     21h
     19	      =0020		     eoi     equ     20h
     20	      =0040		     timer   equ     40h
     21	      =0043		     tim_ctl equ     43h
     22	      =0040		     timero  equ     40h
     23	      =0001		     tmint   equ     01
     24	      =0008		     dma08   equ     08
     25	      =0000		     dma     equ     00
     26	      =0540		     max_period	equ  540h
     27	      =0410		     min_period	equ  410h
     28	      =0060		     kbd_in  equ     60h
     29	      =0002		     kbdint  equ     02
     30	      =0060		     kb_dat  equ     60h
     31	      =0061		     kb_ctl  equ     61h
     32				     ;_______________
     33				     ;	Расположение прерываний 8086
     34				     ;_________________________
     35	0000			     abs0    segment para
     36	0000			     zb	     label   byte
     37	0000			     zw	     label   word
     38	0000			     stg_loc0 label  byte
     39					     org     2*4
     40	0008			     nmi_ptr label   word
     41					     org     5*4
     42	0014			     int5_ptr label  word
     43					     org     8*4
     44	0020			     int_addr label  word
     45	0020			     int_ptr label   dword
     46					     org     0dh*4
     47	0034			     hdisk_int	label  dword
     48					     org     10h*4
     49	0040			     video_int label word
     50					     org     13h*4
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 2
1840v4.asm



     51	004C			     org_vector	 label	dword
     52					     org     19h*4
     53	0064			     boot_vec  label  dword
     54					     org     1dh*4
     55	0074			     parm_ptr label  dword
     56					     org     01eh*4
     57	0078			     disk_pointer label	dword
     58	0078			     diskette_parm  label  dword
     59					     org     01fh*4
     60	007C			     ext_ptr label   dword
     61					     org     040h*4
     62	0100			     disk_vector  label	 dword
     63					     org     041h*4
     64
     65	0104			     hf_tbl_vec	 label	dword
     66					     org     410h
     67	0410			     eq_fl   label   byte
     68
     69					     org     413h
     70	0413			     mem_siz label   word
     71					     org     472h
     72	0472			     res_fl  label   word
     73					     org     4d0h
     74	04D0			     csi     label   word
     75					     org     4e0h
     76	04E0			     tabl1   label   word
     77					     org     7c00h
     78	7C00			     boot_locn label far
     79	7C00			     abs0    ends
     80
     81				     ;______________________
     82				     ;	Использование стека только во	время	       +
     83				     инициализации
     84				     ;______________________
     85	0000			     stac    segment para stack
     86	0000  80*(????)			     dw	     128 dup(?)
     87
     88
     89
     90	0100			     tos     label   word
     91	0100			     stac    ends
     92
     93				     ;______________________
     94				     ;	Область данных ПЗУ
     95				     ;____________________
     96	0000			     data segment    para
     97	0000  04*(????)		     rs232_base	dw 4 dup(?)
     98
     99
    100
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 3
1840v4.asm



    101	0008  04*(????)		     printer_base dw 4 dup(?)
    102
    103
    104
    105	0010  ????		     equip_flag	dw ?
    106	0012  ??		     mfg_tst db	     ?
    107	0013  ????		     memory_size dw  ?
    108	0015  ????		     io_ram_size dw  ?
    109				     ;_______________
    110				     ;	Область данных клавиатуры
    111				     ;_________________
    112	0017  ??		     kb_flag db	     ?
    113
    114				     ;	Размещение флажков в kb_flag
    115
    116	      =0080		     ins_state equ   80h
    117	      =0040		     caps_state	equ  40h
    118	      =0020		     num_state equ   20h
    119	      =0010		     scroll_state equ 10h
    120	      =0008		     alt_shift equ   08h
    121	      =0004		     ctl_shift equ   04h
    122	      =0002		     left_shift	equ  02h
    123	      =0001		     right_shift equ 01h
    124
    125	0018  ??		     kb_flag_1 db    ?
    126
    127	      =0080		     ins_shift equ   80h
    128	      =0040		     caps_shift	equ  40h
    129	      =0020		     num_shift equ   20h
    130	      =0010		     scroll_shift equ 10h
    131	      =0008		     hold_state	equ  08h
    132	      =0004		     inv_shift equ   04h
    133	      =0002		     lat	     equ     02h
    134	      =0001		     lat_shift	     equ     01h
    135
    136
    137
    138	0019  ??		     alt_input db    ?
    139	001A  ????		     buffer_head dw  ?
    140	001C  ????		     buffer_tail dw  ?
    141	001E  10*(????)		     kb_buffer dw    16	dup(?)
    142
    143
    144
    145	003E			     kb_buffer_end label word
    146
    147				     ;	head=tail указывает на заполнение буфера
    148
    149	      =0045		     num_key equ     69
    150	      =0046		     scroll_key	equ  70
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 4
1840v4.asm



    151	      =0038		     alt_key equ     56
    152	      =001D		     ctl_key equ     29
    153	      =0056		     caps_key equ    86
    154	      =0054		     left_key equ    84
    155	      =0055		     right_key equ   85
    156	      =0052		     ins_key equ     82
    157	      =0053		     del_key equ     83
    158	      =0059		     inf_key   equ   89
    159	      =0058		     inv_key_l	equ  88
    160	      =005A		     inv_key_r equ   90
    161	      =005B		     rus_key	equ  91
    162	      =0057		     lat_key equ     87
    163
    164				     ;____________________
    165				     ;	Область данных НГМД
    166				     ;____________________
    167	003E  ??		     seek_status db  ?
    168				     ;
    169				     ;
    170	      =0080		     int_flag equ    080h
    171	003F  ??		     motor_status db ?
    172				     ;
    173				     ;
    174	0040  ??		     motor_count db  ?
    175	      =0025		     motor_wait	equ  37
    176
    177				     ;
    178	0041  ??		     diskette_status db	?
    179	      =0080		     time_out equ    80h
    180	      =0040		     bad_seek equ    40h
    181	      =0020		     bad_nec  equ    20h
    182	      =0010		     bad_crc  equ    10h
    183	      =0009		     dma_boundary equ 09h
    184	      =0008		     bad_dma  equ    08h
    185	      =0004		     record_not_fnd equ	04h
    186	      =0003		     write_protect equ 03h
    187	      =0002		     bad_addr_mark equ 02h
    188	      =0001		     bad_cmd equ     01h
    189
    190	0042			     cmd_block	label  byte
    191	0042			     hd_error  label  byte
    192	0042  07*(??)		     nec_status	db   7 dup(?)
    193
    194
    195
    196
    197				     ;_____________________
    198				     ;	Область данных ЭЛИ
    199				     ;_____________________
    200	0049  ??		     crt_mode db     ?
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 5
1840v4.asm



    201	004A  ????		     crt_cols dw     ?
    202	004C  ????		     crt_len  dw     ?
    203	004E  ????		     crt_start dw    ?
    204	0050  08*(????)		     cursor_posn dw  8 dup(?)
    205
    206
    207
    208	0060  ????		     cursor_mode dw  ?
    209	0062  ??		     active_page db  ?
    210	0063  ????		     addr_6845 dw    ?
    211	0065  ??		     crt_mode_set db ?
    212	0066  ??		     crt_pallette db ?
    213
    214				     ;___________________
    215				     ;	Область данных НМД
    216				     ;___________________
    217	0067  ????		     io_rom_init dw  ?
    218	0069  ????		     io_rom_seg	dw   ?
    219	006B  ??		     last_val db     ?
    220
    221				     ;___________________
    222				     ;	Область данных таймера
    223				     ;___________________
    224	006C  ????		     timer_low dw    ?
    225	006E  ????		     timer_high	dw   ?
    226	0070  ??		     timer_ofl db    ?
    227				     ;___________________
    228				     ;	Область данных системы
    229				     ;___________________
    230	0071  ??		     bios_break	db   ?
    231	0072  ????		     reset_flag	dw   ?
    232	0074  ??		     diskw_status  db  ?
    233	0075  ??		     hf_num  db	  ?
    234	0076  ??		     control_byte  db  ?
    235	0077  ??		     port_off  db  ?
    236						     org     7ch
    237	007C			     stat_offset     label   byte ; смещение для хранения	       +
    238				     состояний	модема
    239
    240					     org     80h
    241	0080  ????		     buffer_start    dw	     ?
    242	0082  ????		     buffer_end	     dw	     ?
    243					     org     0090h
    244	0090  ????		     idnpol  dw	     ?
    245					     org     0e0h
    246	00E0			     tabl    label   word
    247
    248					     org     3ff0h
    249	3FF0			     tmp_tos label   word
    250				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 6
1840v4.asm



    251	3FF0			     data    ends
    252
    253				     ;___________________
    254				     ;	Область расширения данных
    255				     ;_________________________________
    256	0000			     xxdata segment  para
    257	0000  ??		     status_byte db  ?
    258	0001			     xxdata  ends
    259
    260				     ;_________________
    261				     ;	Буфер ЭЛИ
    262				     ;___________________
    263	0000			     video_ram segment para
    264	0000			     regen   label   byte
    265	0000			     regenw  label   word
    266	0000  4000*(??)			     db	     16384 dup(?)
    267
    268
    269
    270	4000			     video_ram ends
    271				     ;____________________
    272				     ;	Основной массив в ПЗУ	(сегмент	code)
    273				     ;____________________
    274
    275	0000			     code segment para
    276
    277						     org 0E000h
    278
    279	E000  35 37 30 30 30 35	31+  a5700051Copr_Ib db	'5700051 copr. ibm 1981'
    280	      20 63 6F 70 72 2E	20+
    281	      69 62 6D 20 31 39	38+
    282	      31
    283	E016  E0D9r		     c1		     dw	offset c11	     ; адрес    возврата
    284	E018  E1E0r		     caw	     dw	offset ca3
    285					     assume cs:code,ss:code,es:abs0,ds:data
    286
    287	E01A			     stgtst:
    288	E01A  B9 4000				     mov     cx,4000h
    289
    290	E01D			     stgtst_cnt	     proc    near
    291	E01D  FC				     cld
    292	E01E  8B D9				     mov     bx, cx
    293	E020  B8 FFFF				     mov     ax, 0FFFFh
    294	E023  BA AA55				     mov     dx, 0AA55h
    295	E026  2B FF				     sub     di, di
    296	E028  F3> AA				     repe stosb
    297
    298	E02A			     c2a:
    299	E02A  4F				     dec     di
    300	E02B  FD				     std
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 7
1840v4.asm



    301
    302	E02C			     c2b:
    303	E02C  8B F7				     mov     si, di
    304	E02E  8B CB				     mov     cx, bx
    305
    306	E030			     c3:
    307	E030  AC				     lodsb
    308	E031  32 C4				     xor     al, ah
    309	E033  75 25				     jnz     c7x
    310	E035  E4 62				     in	     al, 62h
    311	E037  24 40				     and     al, 40h
    312	E039  B0 00				     mov     al, 0
    313	E03B  75 1D				     jnz     c7x
    314	E03D  80 FC 00				     cmp     ah, 0
    315	E040  74 03				     jz	     c3a
    316	E042  8A C2				     mov     al, dl
    317	E044  AA				     stosb
    318
    319	E045			     c3a:
    320	E045  E2 E9				     loop    c3
    321	E047  80 FC 00				     cmp     ah, 0
    322	E04A  74 0E				     jz	     c7x
    323	E04C  8A E0				     mov     ah, al
    324	E04E  86 F2				     xchg    dh, dl
    325	E050  FC				     cld
    326	E051  47				     inc     di
    327	E052  74 D8				     jz	     c2b
    328	E054  4F				     dec     di
    329	E055  BA 0001				     mov     dx, 1
    330	E058  EB D0				     jmp     short c2a
    331
    332	E05A			     c7x:
    333	E05A  C3				     retn
    334	E05B			     stgtst_cnt	     endp
    335
    336
    337				     ;____________________
    338				     ;	Сброс системы - фаза 1
    339				     ;____________________
    340				     ;_____________________
    341				     ;	Проверка 16К памяти
    342				     ;_____________________
    343				     ;___________________
    344				     ;	ТЕСТ.01
    345				     ;	     Тест процессора 8086. Осуществляет	       +
    346				     проверку регистра
    347				     ;	     признаков, команд перехода и		       +
    348				     считывания-записи
    349				     ;	     общих	и сегментных	регистров.
    350				     ;_____________________________________
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 8
1840v4.asm



    351	E05B			     reset   label   near
    352	E05B  FA		     start:  cli		     ; сброс признака разрешения+
    353				     прерывания
    354	E05C  B4 D5			     mov     ah,0d5h	     ;уст признаки SF,CF,ZF,AF
    355	E05E  9E			     sahf
    356	E05F  73 4E			     jnc     err01	     ;CF=0,в программу ошибок
    357	E061  75 4C			     jnz     err01	     ;ZF=0,в программу ошибок
    358	E063  7B 4A			     jnp     err01	     ;PF=0,в программу ошибок
    359	E065  79 48			     jns     err01	     ;SF=0,в программу ошибок
    360	E067  9F			     lahf		     ;загрузить признаки в AH
    361	E068  B1 05			     mov     cl,5	     ;загрузить счетчик
    362	E06A  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    363	E06C  73 41			     jnc     err01	     ;признак AF=0
    364	E06E  B0 40			     mov     al,40h	     ;уст признак переполнения
    365	E070  D0 E0			     shl     al,1	     ;уст для контроля
    366	E072  71 3B			     jno     err01	     ;признак OF	не уст
    367	E074  32 E4			     xor     ah,ah	     ;уст AH=0
    368	E076  9E			     sahf		     ;уст в	исходное состояние SF,+
    369				     CF,ZF,PF
    370	E077  72 36			     jc	     err01	     ;признак CF=1
    371	E079  74 34			     jz	     err01	     ;признак ZF=1
    372	E07B  78 32			     js	     err01	     ;признак SF=1
    373	E07D  7A 30			     jp	     err01	     ;признак PF=1
    374	E07F  9F			     lahf		     ;загрузить признаки в AH
    375	E080  B1 05			     mov     cl,5	     ;загрузить счетчик
    376	E082  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    377	E084  72 29			     jc	     err01	     ;признак IF=1
    378	E086  D0 E4			     shl     ah,1	     ;контроль,	что OF сброшен
    379	E088  70 25			     jo	     err01
    380	E08A  B8 FFFF			     mov     ax,0ffffh	     ;уст эталона в AX
    381	E08D  F9			     stc
    382	E08E  8E D8		     c8:     mov     ds,ax	     ;запись во	все регистры
    383	E090  8C DB			     mov     bx,ds
    384	E092  8E C3			     mov     es,bx
    385	E094  8C C1			     mov     cx,es
    386	E096  8E D1			     mov     ss,cx
    387	E098  8C D2			     mov     dx,ss
    388	E09A  8B E2			     mov     sp,dx
    389	E09C  8B EC			     mov     bp,sp
    390	E09E  8B F5			     mov     si,bp
    391	E0A0  8B FE			     mov     di,si
    392	E0A2  73 07			     jnc     c9
    393	E0A4  33 C7			     xor     ax,di	     ;проверка всех	регистров
    394								     ;эталонами "FFFF", "0000"
    395	E0A6  75 07			     jnz     err01
    396	E0A8  F8			     clc
    397	E0A9  73 E3			     jnc     c8
    398	E0AB			     c9:
    399	E0AB  0B C7			     or	     ax,di	     ;нулевым шаблоном все	       +
    400				     регистры проверены ?
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 9
1840v4.asm



    401	E0AD  74 02			     jz	     c10	     ;ДА - переход к следующему    +
    402				     тесту
    403	E0AF  EB AA		     err01:  jmp   short  start
    404				     ;_______________________
    405				     ; ТЕСТ.02
    406				     ;_______________________
    407	E0B1			     c10:
    408	E0B1  B0 00			     mov     al,0	     ;запретить прерывaния NMI
    409	E0B3  E6 A0			     out     0a0h,al
    410	E0B5  E6 83			     out     83h,al	     ;инициализация регистрa       +
    411				     страниц ПДП
    412	E0B7  B0 99			     mov     al,99h	     ;уст A,C -ввод, B -	вывод
    413	E0B9  E6 63			    out	     cmd_port,al	     ;запись в регистр	       +
    414				     режима
    415									     ;трехканального порта
    416	E0BB  B0 FC			     mov     al,0fch		     ;блокировка контроля    +
    417				     по четности
    418	E0BD  E6 61			     out     port_b,al
    419	E0BF  2A C0			     sub     al,al
    420	E0C1  BA 03D8			     mov     dx,3d8h
    421	E0C4  EE			     out     dx,al	     ;блокировка цветного ЭЛИ
    422	E0C5  FE C0			     inc     al
    423	E0C7  BA 03B8			     mov     dx,3b8h
    424	E0CA  EE			     out     dx,al	     ;блокировка черно-белого     +
    425				     ЭЛИ
    426	E0CB  B8 F000			     mov     ax,cod	     ;уст сегментного регистра SS
    427	E0CE  8E D0			     mov     ss,ax
    428	E0D0  BB E000			     mov     bx,0e000h		     ;уст начального адреса +
    429				     памяти
    430	E0D3  BC E016r			     mov     sp,offset c1	     ;уст адреса возврата
    431	E0D6  EB 03			     jmp     short ros
    432	E0D8  90				     nop
    433	E0D9  75 D4		     c11:    jne     err01
    434				     ;------------------------
    435				     ;	ТЕСТ.03
    436				     ;	 Осуществляет проверку, инициализацию и      +
    437				     запуск ПДП и
    438				     ; таймера 1	для регенерации памяти
    439				     ;_________________________
    440				     ;	 Блокировка контроллера ПДП
    441
    442	E0DB  B0 04		     ros:    mov     al,04
    443	E0DD  E6 08			     out     dma08,al
    444
    445				     ;	 Проверка правильности функционирования
    446				     ;	 таймера	1
    447
    448	E0DF  B0 54			     mov     al,54h	     ;выбор таймера	1,LSB, режим 2
    449	E0E1  E6 43			     out     timer+3,al
    450	E0E3  2B C9			     sub     cx,cx
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 10
1840v4.asm



    451	E0E5  8A D9			     mov     bl,cl
    452	E0E7  8A C1			     mov     al,cl	     ;уст начального счетчика     +
    453				     таймера в 0
    454	E0E9  E6 41			     out     timer+1,al
    455	E0EB			     c12:
    456	E0EB  B0 40			     mov     al,40h
    457	E0ED  E6 43			     out     timer+3,al
    458	E0EF  E4 41			     in	     al,timer+1	     ;считывание счетчика	       +
    459				     таймера 1
    460	E0F1  0A D8			     or	     bl,al	     ;все биты таймера включены ?
    461	E0F3  80 FB FF			     cmp     bl,0ffh	     ;ДА - сравнение	с FF
    462	E0F6  74 04			     je	     c13	     ;биты таймера сброшены
    463	E0F8  E2 F1			     loop    c12	     ;биты таймера установлены
    464	E0FA  EB B3			     jmp     short err01     ;сбой таймера 1, останов	       +
    465				     системы
    466	E0FC			     c13:
    467	E0FC  8A C3			     mov     al,bl	     ;уст счетчика таймера 1
    468	E0FE  2B C9			     sub     cx,cx
    469	E100  E6 41			     out     timer+1,al
    470	E102			     c14:	     ;цикл таймера
    471	E102  B0 40			     mov     al,40h
    472	E104  E6 43			     out     timer+3,al
    473	E106  E4 41			     in	     al,timer+1		     ;считывание счетчика    +
    474				     таймера 1
    475	E108  22 D8			     and     bl,al
    476	E10A  74 04			     jz	     c15
    477	E10C  E2 F4			     loop    c14	     ;цикл таймера
    478	E10E  EB 9F			     jmp     short err01
    479
    480				     ;	 Инициализация таймера 1
    481
    482	E110			     c15:
    483	E110  B0 54			     mov     al,54h
    484	E112  E6 43			     out     timer+3,al	     ;запись в регистр режима      +
    485				     таймера
    486	E114  B0 07			     mov     al,7    ;уст коэффициента деления для    +
    487				     регенерации
    488	E116  E6 41			     out     timer+1,al	     ;запись в счетчик таймера 1
    489	E118  E6 0D			     out     dma+0dh,al	     ;послать гашение ПДП
    490
    491				     ;	 Цикл проверки регистров ПДП
    492
    493	E11A  B0 FF			     mov     al,0ffh	     ;запись шаблона FF во все       +
    494				     регистры
    495	E11C  8A D8		     c16:    mov     bl,al	     ;сохранить шаблон для	       +
    496				     сравнения
    497	E11E  8A F8			     mov     bh,al
    498	E120  B9 0008			     mov     cx,8	     ;уст цикла	счетчика
    499	E123  BA 0000			     mov     dx,dma	     ;уст адреса регистра порта  +
    500				     ввода/вывода
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 11
1840v4.asm



    501	E126  EE		     c17:    out     dx,al	     ;запись  шаблона в регистр
    502	E127  EE			     out     dx,al	     ;старшие 16	бит регистра
    503	E128  B8 0101			     mov     ax,0101h	     ;изменение AX перед		       +
    504				     считыванием
    505	E12B  EC			     in	     al,dx
    506	E12C  8A E0			     mov     ah,al	     ;сохранить младшие	16 бит      +
    507				     регистра
    508	E12E  EC			     in	     al,dx
    509	E12F  3B D8			     cmp     bx,ax	     ;считан тот же шаблон ?
    510	E131  74 03			     je	     c18	     ;ДА - проверка следующего     +
    511				     регистра
    512	E133  E9 FF79			     jmp     err01	     ;НЕТ - ошибка
    513	E136			     c18:			     ;выбор следующего регистра +
    514				     ПДП
    515	E136  42			     inc     dx		     ;установка адреса		       +
    516				     следующего
    517								     ;регистра ПДП
    518	E137  E2 ED			     loop    c17	     ;запись шаблона для	       +
    519				     следующего регистра
    520	E139  F6 D0			     not     al		       ;уст шаблона в 0
    521	E13B  74 DF			     jz	     c16
    522
    523				     ;	 Инициализация и запуск ПДП
    524
    525	E13D  B0 FF			     mov     al,0ffh	     ;уст счетчика 64K для	       +
    526				     регенерации
    527	E13F  E6 01			     out     dma+1,al
    528	E141  E6 01			     out     dma+1,al
    529	E143  B0 58			     mov     al,058h	     ;уст режим	ПДП,	счетчик 0,      +
    530				     считывание
    531	E145  E6 0B			     out     dma+0bh,al	     ;запись в регистр режима ПДП
    532	E147  B0 00			     mov     al,0	     ;доступность контроллера    +
    533				     ПДП
    534	E149  E6 08			     out     dma+8,al	     ;уст регистр команд ПДП
    535	E14B  E6 0A			     out     dma+10,al	     ;доступность канала 0 для     +
    536				     регенерации
    537	E14D  B0 41			     mov     al,41h	     ;уст режим	дла канала 1
    538	E14F  E6 0B			     out     dma+0bh,al
    539	E151  B0 42			     mov     al,42h	     ;уст режим	для канала 2
    540	E153  E6 0B			     out     dma+0bh,al
    541	E155  B0 43			     mov     al,43h	     ;уст режим	для канала 3
    542	E157  E6 0B			     out     dma+0bh,al
    543	E159  B8 0040				     mov     ax, dat
    544	E15C  8E D8				     mov     ds, ax
    545
    546	E15E  8B 1E 0072r			     mov     bx, ds:reset_flag
    547	E162  2B C0				     sub     ax, ax
    548	E164  8E C0				     mov     es, ax
    549	E166  8E D8				     mov     ds, ax
    550	E168  E4 62				     in	     al, port_c
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 12
1840v4.asm



    551	E16A  24 0F				     and     al, 0Fh
    552	E16C  FE C0				     inc     al
    553	E16E  02 C0				     add     al, al
    554	E170  BA 0000				     mov     dx, 0
    555	E173  8A E0				     mov     ah, al
    556	E175  B0 00				     mov     al, 0
    557	E177  FC				     cld
    558
    559	E178			     c19:
    560	E178  2B FF				     sub     di, di
    561	E17A  B9 0000				     mov     cx, 0
    562
    563	E17D			     c20:
    564	E17D  AA				     stosb
    565	E17E  E2 FD				     loop    c20
    566	E180  81 C2 1000			     add     dx, 4096
    567	E184  8E C2				     mov     es, dx
    568	E186  FE CC				     dec     ah
    569	E188  74 02				     jz	     c21
    570	E18A  EB EC				     jmp     short c19
    571				     ;____________________
    572				     ;	 Инициализация контроллера
    573				     ;	 прерываний 8259
    574				     ;____________________
    575	E18C			     c21:
    576	E18C  B0 13			     mov     al,13h	     ;ICW1 - EDGE, SNGL, ICW4
    577	E18E  E6 20			     out     inta00,al
    578	E190  B0 08			     mov     al,8	     ;УСТ ICW2 - прерывание типа 8(8-F)
    579	E192  E6 21			     out     inta01,al
    580	E194  B0 09			     mov     al,9	     ;уст ICW4 - BUFFERD , режим 8086
    581	E196  E6 21			     out     inta01,al
    582	E198  2B C0				     sub     ax, ax
    583	E19A  8E C0				     mov     es, ax
    584	E19C  BE 0040				     mov     si, dat
    585	E19F  8E DE				     mov     ds, si
    586
    587	E1A1  89 1E 0072r			     mov     ds:reset_flag, bx
    588	E1A5  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
    589	E1AB  74 38				     jz	     c25
    590	E1AD  8E D8				     mov     ds, ax
    591	E1AF  BC 3FF0r				     mov     sp, offset	tmp_tos
    592	E1B2  8E D0				     mov     ss, ax
    593	E1B4  8B F8				     mov     di, ax
    594	E1B6  BB 0024				     mov     bx, 9*4	     ; int 9 (KBD)
    595	E1B9  C7 07 E2A8r			     mov     word ptr [bx], offset d11
    596	E1BD  43				     inc     bx
    597	E1BE  43				     inc     bx
    598	E1BF  8C 0F				     mov     [bx], cs
    599	E1C1  E8 0407				     call    kbd_reset
    600	E1C4  80 FB 65				     cmp     bl, 65h	     ; Manufacturing test mode - viz document  +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 13
1840v4.asm



    601				     in	BIOS root or http://www.vcfed.org/forum/archive/index.php/t-12377.html
    602	E1C7  75 0E				     jnz     c23
    603	E1C9  B2 FF				     mov     dl, 0FFh
    604
    605	E1CB			     c22:
    606	E1CB  E8 040A				     call    sp_test
    607	E1CE  8A C3				     mov     al, bl
    608	E1D0  AA				     stosb
    609	E1D1  FE CA				     dec     dl
    610	E1D3  75 F6				     jnz     c22
    611	E1D5  CD 3E				     int     3Eh
    612
    613	E1D7			     c23:
    614	E1D7  0E				     push    cs
    615	E1D8  17				     pop     ss
    616						     assume ss:code
    617	E1D9  FA				     cli
    618	E1DA  BC E018r				     mov     sp, offset	caw  ; [caw] = offset ca3 (next	jmp -> indirect+
    619				     call)
    620	E1DD  E9 FE3A				     jmp     stgtst
    621
    622	E1E0			     ca3:
    623	E1E0  74 03				     jz	     c25
    624	E1E2  E9 FECA				     jmp     err01
    625
    626				     ;	 Установка сегмента стека	и SP
    627
    628	E1E5			     c25:
    629	E1E5  B8 0030			     mov     ax,sta	     ;получить величину	стека
    630	E1E8  8E D0			     mov     ss,ax	     ;уст стек
    631	E1EA  BC 0100r			     mov     sp,offset tos   ;стек готов
    632
    633				     ;	 Установка указателя вектора прерывания NMI
    634
    635	E1ED  26: C7 06	0008r	  +	     mov     es:nmi_ptr,offset nmi_int
    636	      E2B5r
    637	E1F4  26: C7 06	000Ar F000	     mov     es:nmi_ptr+2,cod
    638	E1FB  EB 2A			     jmp     short tst6	     ;переход к	следующему тесту
    639
    640				     ;ros_checksum proc	 near
    641				     ;	     mov     cx,8192	     ;число байт для сложения
    642				     ;	     xor     al,al
    643				     ;c26:   add     al,cs:[bx]
    644				     ;	     inc     bx		     ;указание следующего байта
    645				     ;	     loop    c26	     ;сложить все байты в модуле +
    646				     ROS
    647				     ;	     or	     al,al	     ;сумма = 0 ?
    648				     ;	     ret
    649				     ;ros_checksum endp
    650					     org     0e20bh
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 14
1840v4.asm



    651				     ;______________________
    652				     ;	 Начальный тест надежности
    653				     ;______________________
    654					     assume  cs:code,es:abs0
    655
    656	E20B  70 61 72 69 74 79	20+  d1		     db	'parity	check 2'
    657	      63 68 65 63 6B 20	32
    658
    659
    660	      =000E		     d1l     equ     14
    661	E219  70 61 72 69 74 79	20+  d2		     db	'parity	check 1'
    662	      63 68 65 63 6B 20	31
    663
    664
    665	      =000E		     d2l     equ     14
    666				     ;______________________
    667				     ;	 ТЕСТ.06
    668				     ;	      Тест контроллера прерываний
    669				     ;	      8259
    670				     ;_______________________
    671	E227			     tst6:
    672	E227  2B C0			     sub     ax,ax	     ;уст регистра ES
    673	E229  8E C0			     mov     es,ax
    674
    675				     ;-----уст вектора прерываний 5
    676
    677	E22B  26: C7 06	0014r	  +	     mov     es:int5_ptr,offset	print_screen   ; печать экрана
    678	      FF54r
    679	E232  26: C7 06	0016r F000	     mov     es:int5_ptr+2,cod
    680
    681				     ;	 Проверка регистра масок прерываний (IMR)
    682
    683	E239  FA			     cli		     ;сброс признака разрешения +
    684				     прерываний
    685	E23A  B0 00			     mov     al,0	     ;уст IMR в 0
    686	E23C  E6 21			     out     inta01,al
    687	E23E  E4 21			     in	     al,inta01	     ;считывание IMR
    688	E240  0A C0			     or	     al,al	     ;IMR=0 ?
    689	E242  75 2B			     jnz     d6		     ;IMR не 0,в программу ошибок
    690	E244  B0 FF			     mov     al,0ffh	     ;недоступность прерываний
    691	E246  E6 21			     out     inta01,al	     ;запись в IMR
    692	E248  E4 21			     in	     al,inta01	     ;считывание IMR
    693	E24A  04 01			     add     al,1	     ;все биты IMR установлены ?
    694	E24C  75 21			     jnz     d6		     ;НЕТ - в программу ошибок
    695
    696				     ;	 Контроль ожидания прерывания
    697
    698	E24E  FC			     cld		     ; уст признак направления
    699	E24F  B9 0008			     mov     cx,8
    700	E252  BF 0020r			     mov     di,offset int_ptr	     ; уст адресацию таблицы
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 15
1840v4.asm



    701	E255			     d3:
    702	E255  B8 E2A8r			     mov     ax,offset d11   ; установить адрес		       +
    703				     процедуры	прерываний
    704	E258  AB			     stosw
    705	E259  B8 F000			     mov     ax,cod  ; получить	адрес сегмента	       +
    706				     процедуры
    707	E25C  AB			     stosw
    708	E25D  83 C3 04			     add     bx,4    ;уст BX	для указания	следующего   +
    709				     значения
    710	E260  E2 F3			     loop    d3
    711
    712				     ;	 Прерывания размаскированы
    713
    714	E262  32 E4			     xor     ah,ah	     ;очистить регистр AH
    715	E264  FB			     sti		     ; установка признака	       +
    716				     разрешения прерывания
    717	E265  2B C9			     sub     cx,cx	     ; ожидание	1 сек любого	       +
    718				     прерывания,
    719	E267  E2 FE		     d4:     loop    d4		     ; которое может произойти
    720	E269  E2 FE		     d5:     loop    d5
    721	E26B  0A E4			     or	     ah,ah	     ; прерывание возникло ?
    722	E26D  74 08			     jz	     d7		     ; нет -	к следующему	тесту
    723	E26F  BA 0101		     d6:     mov     dx,101h	     ; уст длительности		       +
    724				     звукового	сигнала
    725	E272  E8 030B			     call    err_beep	     ; идти	в программу		       +
    726				     звукового	сигнала
    727	E275  FA			     cli
    728	E276  F4			     hlt		     ; останов системы
    729				     ;__________________
    730				     ;	 ТЕСТ.07
    731				     ;	      Проверка таймера 8253
    732				     ;___________________
    733	E277			     d7:
    734	E277  B4 00			     mov     ah,0	     ; сброс признака прерывания+
    735				     таймера
    736	E279  32 ED			     xor     ch,ch	     ; очистить	регистр CH
    737	E27B  B0 FE			     mov     al,0feh   ; маскировать	все прерывания,   +
    738				     кроме	LVL 0
    739	E27D  E6 21			     out     inta01,al	     ; запись IMR
    740	E27F  B0 10			     mov     al,00010000b    ; выбрать TIM 0, LSD, режим 0,	BINARY
    741	E281  E6 43			     out     tim_ctl,al	 ;записать регистр режима	       +
    742				     управления таймера
    743	E283  B1 16			     mov     cl,16h	     ; уст счетчик программного  +
    744				     цикла
    745	E285  8A C1			     mov     al,cl	     ; установить счетчик	       +
    746				     таймера 0
    747	E287  E6 40			     out     timero,al	     ; записать	счетчик таймера 0
    748	E289  F6 C4 FF		     d8:     test    ah,0ffh	     ; прерывание таймера 0	       +
    749				     произошло	?
    750	E28C  75 04			     jnz     d9		     ; да - таймер считал	медленно
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 16
1840v4.asm



    751	E28E  E2 F9			     loop    d8		     ; ожидание	прерывания	       +
    752				     определенное время
    753	E290  EB DD			     jmp     short d6	;прерывание таймера 0 не	       +
    754				     произошло	- ошибка
    755	E292  B1 12		     d9:     mov     cl,18	     ; уст счетчик программного  +
    756				     цикла
    757	E294  B0 FF			     mov     al,0ffh	     ; записать	счетчик таймера 0
    758	E296  E6 40			     out     timero,al
    759	E298  B4 00			     mov     ah,0	     ; сброс признака,		       +
    760				     полученного прерывания
    761	E29A  B0 FE			     mov     al,0feh	     ; недоступность прерываний +
    762				     таймера 0
    763	E29C  E6 21			     out     inta01,al
    764	E29E  F6 C4 FF		     d10:    test    ah,0ffh	     ; прерывание таймера 0	       +
    765				     произошло	?
    766	E2A1  75 CC			     jnz     d6		     ; да - таймер считает быстро
    767	E2A3  E2 F9			     loop    d10	     ; ожидание	прерывания	       +
    768				     определенное время
    769	E2A5  EB 37			     jmp     short tst8		     ; переход к следующему  +
    770				     тесту
    771	E2A7  90			     nop
    772				     ;____________________
    773				     ;	 Программа обслуживания
    774				     ;	 временного прерывания
    775				     ;____________________
    776	E2A8			     d11     proc    near
    777	E2A8  B4 01			     mov     ah,1
    778	E2AA  50			     push    ax		     ; хранить регистр AX
    779	E2AB  B0 FF			     mov     al,0ffh	     ; размаскировать все	       +
    780				     прерывания
    781	E2AD  E6 21			     out     inta01,al
    782	E2AF  B0 20			     mov     al,eoi
    783	E2B1  E6 20			     out     inta00,al
    784	E2B3  58			     pop     ax		     ; восстановить	регистр AX
    785	E2B4  CF			     iret
    786	E2B5			     d11     endp
    787
    788	E2B5			     nmi_int proc    near
    789	E2B5  50			     push    ax		     ; хранить регистр AX
    790	E2B6  E4 62			     in	     al,port_c
    791	E2B8  A8 40			     test    al,40h	     ; ошибка паритета при	       +
    792				     вводе/выводе ?
    793	E2BA  74 08			     jz	     d12	     ; да - признак сбрасывается  +
    794				     в	0
    795	E2BC  BE E20Br			     mov     si,offset d1    ; адрес поля сообщения об     +
    796				     ошибке
    797	E2BF  B9 000E			     mov     cx,d1l	     ; длина поля сообщения об     +
    798				     ошибке
    799	E2C2  EB 0A			     jmp     short d13	     ; отобразить ошибку на	       +
    800				     дисплее
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 17
1840v4.asm



    801	E2C4			     d12:
    802	E2C4  A8 80			     test    al,80h
    803	E2C6  74 10			     jz	     d14
    804	E2C8  BE E219r			     mov     si,offset d2    ; адрес поля сообщения об     +
    805				     ошибке
    806	E2CB  B9 000E			     mov     cx,d2l	     ; длина поля сообщения об     +
    807				     ошибке
    808	E2CE			     d13:
    809	E2CE  B8 0000			     mov     ax,0	     ; инициировать	и установить+
    810				     режим	ЭЛИ
    811	E2D1  CD 10			     int     10h	     ; вызвать процедуру VIDEO_IO
    812	E2D3  E8 031F			     call    p_msg	     ; распечатать ошибку
    813	E2D6  FA			     cli
    814	E2D7  F4			     hlt		     ; останов системы
    815	E2D8			     d14:
    816	E2D8  58			     pop     ax		     ; восстановить	AX
    817	E2D9  CF			     iret
    818	E2DA			     nmi_int endp
    819				     ;____________________
    820				     ;	 Начальный тест надежности
    821				     ;____________________
    822					     assume  cs:code,ds:data
    823
    824	E2DA  20 32 30 31	     e1	     db	     ' 201'
    825	      =0004		     e1l     equ     04h
    826
    827				     ;	 Выполнение программы БСУВВ,
    828				     ;	 генерирующей вектора прерываний
    829
    830	E2DE			     tst8:
    831	E2DE  FC			     cld		     ; установить признак	       +
    832				     направления вперед
    833	E2DF  BF 0040r			     mov     di,offset video_int   ; уст адреса области	       +
    834				     прерываний
    835	E2E2  0E			     push    cs
    836	E2E3  1F			     pop     ds		     ; уст адреса таблицы	       +
    837				     векторов
    838	E2E4  BE FF13r			     mov     si,offset vector_table+20h	 ; смещение VECTOR_TABLE+32
    839	E2E7  B9 0020			     mov     cx,20h
    840	E2EA  F3> A5			     rep     movsw	     ; передать	таблицу векторов+
    841				     в	память
    842
    843				     ;	 Установка таймера 0 в	режим 3
    844
    845	E2EC  B0 FF			     mov     al,0ffh
    846	E2EE  E6 21			     out     inta01,al
    847	E2F0  B0 36			     mov     al,36h	     ; выбор счетчика 0,		       +
    848				     считывания-за-
    849				     ; писи	младшего,затем старшего байта		       +
    850				     счетчика,уст режима 3
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 18
1840v4.asm



    851	E2F2  E6 43			     out     timer+3,al	     ; запись режима таймера
    852	E2F4  B0 C7			     mov     al,0c7h
    853	E2F6  E6 40			     out     timer,al	     ; записать	младшую часть      +
    854				     счетчика
    855	E2F8  B0 DB			     mov     al,0dbh
    856	E2FA  E6 40			     out     timer,al	     ; записать	старшую часть      +
    857				     счетчика
    858
    859
    860					     assume  ds:data
    861	E2FC  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    862	E2FF  8E D8			     mov     ds,ax
    863	E301			     e3:
    864	E301  81 3E 0072r 1234		     cmp     reset_flag,1234h
    865	E307  74 03			     jz	     e3a
    866	E309  E8 154D			     call    bct     ;загрузка знакогенератора Ч/Б    +
    867				     ЭЛИ
    868				     ;_____________________
    869				     ;	 ТЕСТ.08
    870				     ;	      Инициализация и запуск
    871				     ;	      контроллера ЭЛИ
    872				     ;______________________
    873	E30C  E4 60		     e3a:    in	     al,port_a	     ; считывание состояния	       +
    874				     переключателей
    875	E30E  B4 00			     mov     ah,0
    876	E310  A3 0010r			     mov     equip_flag,ax   ; запомнить считанное	       +
    877				     состояние	пере-
    878								     ; ключателей
    879	E313  24 30			     and     al,30h	     ; выделить	переключатели     +
    880				     ЭЛИ
    881	E315  75 03			     jnz     e7		     ; переключатели ЭЛИ	       +
    882				     установлены в 0 ?
    883	E317  E9 0098			     jmp     e19	     ; пропустить тест ЭЛИ
    884	E31A			     e7:
    885	E31A  86 E0			     xchg    ah,al
    886	E31C  80 FC 30			     cmp     ah,30h	     ; адаптер ч/б ?
    887	E31F  74 09			     je	     e8		     ; да - установить режим для   +
    888				     ч/б адаптера
    889	E321  FE C0			     inc     al	      ;	уст цветной режим для		       +
    890				     цветного адаптера
    891	E323  80 FC 20			     cmp     ah,20h	     ; режим 80х25 установлен ?
    892	E326  75 02			     jne     e8		     ; нет -	уст режим для 40х25
    893	E328  B0 03			     mov     al,3	     ; установить режим 80х25
    894	E32A			     e8:
    895	E32A  50			     push    ax		     ; хранить режим ЭЛИ	в стеке
    896	E32B  2A E4			     sub     ah,ah	     ;
    897	E32D  CD 10			     int     10h
    898	E32F  58			     pop     ax
    899	E330  50			     push    ax
    900	E331  BB B000			     mov     bx,0b000h
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 19
1840v4.asm



    901	E334  BA 03B8			     mov     dx,3b8h	     ; регистр режима для ч/б
    902	E337  B9 1000			     mov     cx,4096	     ; счетчик байт для ч/б	       +
    903				     адаптера
    904	E33A  B0 01			     mov     al,1	     ; уст режим для	ч/б адаптера
    905	E33C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер ЭЛИ подключен ?
    906	E33F  74 0B			     je	     e9		     ; переход к проверке буфера +
    907				     ЭЛИ
    908	E341  BB B800			     mov     bx,0b800h
    909	E344  BA 03D8			     mov     dx,3d8h	     ; регистр режима для	       +
    910				     цветного адаптера
    911	E347  B9 4000			     mov     cx,4000h
    912	E34A  FE C8			     dec     al		     ; уст режим в 0 для цветного  +
    913				     адаптера
    914				     ;
    915				     ;	     Проверка буфера ЭЛИ
    916				     ;
    917	E34C			     e9:
    918	E34C  EE			     out     dx,al	     ; блокировка ЭЛИ для	       +
    919				     цветного адаптера
    920	E34D  8E C3			     mov     es,bx
    921	E34F  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    922	E352  8E D8			     mov     ds,ax
    923	E354  81 3E 0072r 1234		     cmp     reset_flag,1234h
    924	E35A  74 0D			     je	     e10
    925	E35C  8E DB			     mov     ds,bx	     ;
    926	E35E  E8 FCBC			     call    stgtst_cnt	     ; переход к проверке памяти
    927	E361  74 06			     je	     e10
    928	E363  BA 0102			     mov     dx,102h
    929	E366  E8 0217			     call    err_beep
    930
    931				     ;___________________________
    932				     ;
    933				     ;	 ТЕСТ.09
    934				     ;	      Осуществляет проверку	формирования       +
    935				     строк	в буфере	ЭЛИ
    936				     ;_________________________
    937	E369			     e10:
    938	E369  58			     pop     ax	  ; получить считанные			       +
    939				     переключатели	ЭЛИ в AH
    940	E36A  50			     push    ax		     ; сохранить их
    941	E36B  B4 00			     mov     ah,0
    942	E36D  CD 10			     int     10h
    943	E36F  B8 7020			     mov     ax,7020h	     ; запись пробелов в	режиме   +
    944				     реверса
    945	E372  2B FF			     sub     di,di	     ; установка начала области
    946	E374  B9 0028			     mov     cx,40	     ;
    947	E377  FC			     cld	 ; установить	признак направления  +
    948				     для уменьшения
    949	E378  F3> AB			     rep     stosw	     ; записать	в память
    950				     ;______________________
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 20
1840v4.asm



    951				     ;	  ТЕСТ.10
    952				     ;	       Осуществляет	проверку линий		       +
    953				     интерфейса ЭЛИ
    954				     ;______________________
    955	E37A  58			     pop     ax		     ; получить	считанные	       +
    956				     переключатели
    957	E37B  50			     push    ax		     ; сохранить их
    958	E37C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер подключен ?
    959	E37F  BA 03BA			     mov     dx,03bah	     ; уст адрес порта состояния +
    960				     ч/б дисплея
    961	E382  74 03			     je	     e11	     ; да - переход к	следующей     +
    962				     строке
    963	E384  BA 03DA			     mov     dx,03dah	     ; цветной адаптер подключен
    964				     ;
    965				     ;	     Тест строчной развертки
    966				     ;
    967	E387			     e11:
    968	E387  B4 08			     mov     ah,8
    969	E389			     e12:
    970	E389  2B C9			     sub     cx,cx
    971	E38B  EC		     e13:    in	     al,dx	 ;считывание порта состояния   +
    972				     контроллера СМ607
    973	E38C  22 C4			     and     al,ah	     ; проверка	строки
    974	E38E  75 04			     jnz     e14
    975	E390  E2 F9			     loop    e13
    976	E392  EB 13			     jmp     short e17	     ; переход к сообщению об       +
    977				     ошибке
    978	E394  2B C9		     e14:    sub     cx,cx
    979	E396  EC		     e15:    in	     al,dx     ;считывание порта	состояния     +
    980				     контроллера СМ607
    981	E397  22 C4			     and     al,ah
    982	E399  74 04			     jz	     e16
    983	E39B  E2 F9			     loop    e15
    984	E39D  EB 08			     jmp     short e17
    985				     ;
    986				     ;	     Следующий	строчный импульс
    987				     ;
    988	E39F			     e16:
    989	E39F  B1 03			     mov     cl,3	     ; получить	следующий бит      +
    990				     для контроля
    991	E3A1  D2 EC			     shr     ah,cl
    992	E3A3  75 E4			     jnz     e12
    993	E3A5  EB 06			     jmp     short e18	     ; отобразить курсор на	       +
    994				     экране
    995				     ;
    996				     ;	     Сообщение	об ошибке конттроллера СМ607
    997				     ;
    998	E3A7			     e17:
    999	E3A7  BA 0103			     mov     dx,103h
   1000	E3AA  E8 01D3			     call    err_beep
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 21
1840v4.asm



   1001				     ;
   1002				     ;	     Отображение курсора на	экране
   1003				     ;
   1004	E3AD			     e18:
   1005	E3AD  58			     pop     ax		     ; получить	считанные	       +
   1006				     переключатели	в AH
   1007	E3AE  B4 00			     mov     ah,0	     ; установить режим
   1008	E3B0  CD 10			     int     10h
   1009				     ;______________________
   1010				     ;	 ТЕСТ.11
   1011				     ;	      Дополнительный тест памяти
   1012				     ;______________________
   1013					     assume  ds:data
   1014	E3B2			     e19:
   1015	E3B2  B8 0040			     mov     ax,dat
   1016	E3B5  8E D8			     mov     ds,ax
   1017	E3B7  E4 62				     in	     al, port_c
   1018	E3B9  24 0F				     and     al, 0Fh
   1019	E3BB  FE C0				     inc     al
   1020	E3BD  B4 80				     mov     ah, 80h
   1021	E3BF  F6 E4				     mul     ah
   1022	E3C1  A3 0015r				     mov     ds:io_ram_size, ax	; Reserved in original IBM PC
   1023	E3C4  8B D0				     mov     dx, ax
   1024	E3C6  A3 0013r				     mov     ds:memory_size, ax
   1025	E3C9  81 3E 0072r 1234		     cmp     reset_flag,1234h
   1026	E3CF  74 2E			     je	     e22
   1027
   1028				     ;	 Проверка любой действительной памяти
   1029				     ;	 на считывание и запись
   1030
   1031	E3D1  E9 023F			     jmp     e190
   1032
   1033				     ;	 Печать адреса и эталона, если
   1034				     ;	 произошла ошибка данных
   1035
   1036
   1037	E3D4			     osh:
   1038	E3D4  8A E8			     mov     ch,al	     ;
   1039	E3D6  8A C6			     mov     al,dh	     ; получить	измененный адрес
   1040	E3D8  B1 04			     mov     cl,4
   1041	E3DA  D2 E8			     shr     al,cl	     ;
   1042	E3DC  E8 0023			     call    xlat_print_cod  ; преобразование и печать    +
   1043				     кода
   1044	E3DF  8A C6			     mov     al,dh
   1045	E3E1  24 0F			     and     al,0fh
   1046	E3E3  E8 001C			     call    xlat_print_cod  ; преобразование и печать    +
   1047				     кода
   1048	E3E6  8A C5			     mov     al,ch	     ; получить	следующий шаблон
   1049	E3E8  B1 04			     mov     cl,4
   1050	E3EA  D2 E8			     shr     al,cl
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 22
1840v4.asm



   1051	E3EC  E8 0013			     call    xlat_print_cod  ; преобразование и печать    +
   1052				     кода
   1053	E3EF  8A C5			     mov     al,ch	     ;
   1054	E3F1  24 0F			     and     al,0fh	     ;
   1055	E3F3  E8 000C			     call    xlat_print_cod  ; преобразование и печать    +
   1056				     кода
   1057	E3F6  BE E2DAr			     mov     si,offset e1    ; установить адрес поля	       +
   1058				     сообщения
   1059								     ; об ошибке
   1060	E3F9  B9 0004			     mov     cx,e1l	     ; получить	счетчик поля	       +
   1061				     сообщения	об ошибке
   1062	E3FC  E8 01F6			     call    p_msg	     ; печать ошибки
   1063	E3FF			     e22:
   1064	E3FF  EB 2C			     jmp     short tst12	     ; переход к следующему  +
   1065				     тесту
   1066	E401  90			     nop
   1067				     ;_____________________
   1068				     ;
   1069				     ;	 Процедура вывода на экран сообщения об       +
   1070				     ошибке в коде ASCII
   1071				     ;
   1072				     ;_______________________
   1073
   1074	E402			     xlat_print_cod proc near
   1075	E402  1E			     push    ds		     ; сохранить DS
   1076	E403  0E			     push    cs
   1077	E404  1F			     pop     ds
   1078	E405  BB E41Dr			     mov     bx,offset f4e   ; адрес таблицы кодов ASCII
   1079	E408  D7			     xlatb
   1080	E409  B4 0E			     mov     ah,14
   1081	E40B  B7 00			     mov     bh,0
   1082	E40D  CD 10			     int     10h
   1083	E40F  1F			     pop     ds
   1084	E410  C3			     ret
   1085	E411			     xlat_print_cod endp
   1086				     ;______________________
   1087				     ;	 Сброс системы - фаза 4
   1088				     ;______________________
   1089				     ;
   1090				     ;	 Коды сообщений об ошибках
   1091				     ;_______________________
   1092
   1093					     assume  cs:code,ds:data
   1094	E411  20 33 30 31	     f1	     db	     ' 301'
   1095	      =0004		     f1l     equ     4h		     ; сообщение клавиатуры
   1096	E415  31 33 31		     f2	     db	     '131'
   1097	      =0003		     f2l     equ     3h		     ; сообщение кассеты
   1098	E418  36 30 31		     f3	     db	     '601'
   1099	      =0003		     f3l     equ     3h		     ; сообщение НГМД
   1100
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 23
1840v4.asm



   1101	E41B			     f4	     label   word
   1102	E41B  0378			     dw	     378h
   1103	E41D			     f4e     label   word
   1104	E41D  30 31 32 33 34 35	36+  ascii_tbl db    '0123456789abcdef'
   1105	      37 38 39 61 62 63	64+
   1106	      65 66
   1107
   1108
   1109				     ;______________________
   1110				     ;	 ТЕСТ.12
   1111				     ;	 Тест клавиатуры
   1112				     ;______________________
   1113	E42D			     tst12:
   1114
   1115	E42D  B8 0040			     mov     ax,dat
   1116	E430  8E D8			     mov     ds,ax
   1117	E432  E8 0196			     call    kbd_reset	     ; Сброс клавиатуры
   1118	E435  B0 4D			     mov     al,4dh	     ; доступность клавиатуры
   1119	E437  E6 61			     out     port_b,al
   1120	E439  E3 27			     jcxz    f6		     ; нет -	печать ошибки
   1121	E43B  80 FB AA			     cmp     bl,0aah	     ; код сканирования 'AA' ?
   1122	E43E  75 22			     jne     f6		     ; нет -	печать ошибки
   1123
   1124				     ;	 Поиск "залипших" клавиш
   1125
   1126	E440  B0 CC			     mov     al,0cch	   ; сброс	клавиатуры, уст	       +
   1127				     синхронизации
   1128	E442  E6 61			     out     port_b,al
   1129	E444  B0 4C			     mov     al,4ch	   ; доступность клавиатуры
   1130	E446  E6 61			     out     port_b,al
   1131	E448  2B C9			     sub     cx,cx
   1132				     ;
   1133				     ;	     Ожидание прерывания клавиатуры
   1134				     ;
   1135	E44A			     f5:
   1136	E44A  E2 FE			     loop    f5		     ; задержка
   1137	E44C  E4 60			     in	     al,kbd_in	     ; получение кода		       +
   1138				     сканирования
   1139	E44E  3C 00			     cmp     al,0	     ; код сканирования равен 0 ?
   1140	E450  74 19			     je	     f7		     ; да - продолжение		       +
   1141				     тестирования
   1142	E452  8A E8			     mov     ch,al	     ; сохранить код		       +
   1143				     сканирования
   1144	E454  B1 04			     mov     cl,4
   1145	E456  D2 E8			     shr     al,cl
   1146	E458  E8 FFA7			     call    xlat_print_cod  ; преобразование и печать
   1147	E45B  8A C5			     mov     al,ch	     ; восстановить	код		       +
   1148				     сканирования
   1149	E45D  24 0F			     and     al,0fh	     ; выделить	младший байт
   1150	E45F  E8 FFA0			     call    xlat_print_cod  ; преобразование и печать
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 24
1840v4.asm



   1151	E462  BE E411r		     f6:     mov     si,offset f1    ; получить	адрес поля	       +
   1152				     сообщения	об
   1153								     ; ошибке
   1154	E465  B9 0004			     mov     cx,f1l	      ;	длина поля сообщения об    +
   1155				     ошибке
   1156	E468  E8 018A			     call    p_msg	      ;	вывод сообщения об ошибке+
   1157				     на экран
   1158
   1159				     ;	 Установка таблицы векторов прерываний
   1160
   1161	E46B			     f7:
   1162	E46B  2B C0			     sub     ax,ax
   1163	E46D  8E C0			     mov     es,ax
   1164	E46F  B9 0030			     mov     cx,24*2	     ; получить	счетчик векторов
   1165	E472  0E			     push    cs
   1166	E473  1F			     pop     ds
   1167	E474  BE FEF3r			     mov     si,offset vector_table   ;	адрес таблицы	       +
   1168				     векторов
   1169	E477  BF 0020r			     mov     di,offset int_ptr
   1170	E47A  FC			     cld
   1171	E47B  F3> A5			     rep     movsw
   1172				     ;______________________
   1173				     ;	 ТЕСТ.14
   1174				     ;	 Осуществляет проверку НГМД
   1175				     ;______________________
   1176	E47D  B8 0040			     mov     ax,dat	     ; уст. регистр DS
   1177	E480  8E D8			     mov     ds,ax
   1178	E482  B0 FC			     mov     al,0fch  ;	доступность прерываний	       +
   1179				     таймера и клавиатуры
   1180	E484  E6 21			     out     inta01,al
   1181	E486  A0 0010r			     mov     al,byte ptr equip_flag  ; получить	состояние     +
   1182				     переклю-
   1183									     ; чателей
   1184	E489  A8 01			     test    al,01h	     ; первоначальная загрузка с+
   1185				     НГМД ?
   1186	E48B  75 03			     jnz     f10	     ; да - проверка управления    +
   1187				     НГМД
   1188	E48D  E9 00ED			     jmp     f23
   1189	E490			     f10:
   1190	E490  B0 BC			     mov     al,0bch	     ; доступность прерываний с  +
   1191				     НГМД,
   1192	E492  E6 21			     out     inta01,al	     ; клавиатуры и таймера
   1193	E494  B4 00			     mov     ah,0	     ; сброс контроллера НГМД
   1194	E496  CD 13			     int     13h	     ; переход к сбросу НГМД
   1195	E498  F6 C4 FF			     test    ah,0ffh	     ; состояние верно ?
   1196	E49B  75 20			     jnz     f13	     ; нет -	сбой устройства
   1197
   1198				     ;	 Включить мотор устройства 0
   1199
   1200	E49D  BA 03F2			     mov     dx,03f2h	     ; получить	адрес адаптера    +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 25
1840v4.asm



   1201				     НГМД
   1202	E4A0  B0 1C			     mov     al,1ch	     ; включить	мотор
   1203	E4A2  EE			     out     dx,al
   1204	E4A3  2B C9			     sub     cx,cx
   1205
   1206				     ;	  Ожидание включения мотора НГМД
   1207
   1208	E4A5			     f11:
   1209	E4A5  E2 FE			     loop    f11
   1210	E4A7			     f12:			     ; ожидание	мотора 1
   1211	E4A7  E2 FE			     loop    f12
   1212	E4A9  33 D2			     xor     dx,dx
   1213	E4AB  B5 01			     mov     ch,1	     ; выбор первой дорожки
   1214	E4AD  88 16 003Er		     mov seek_status,dl
   1215	E4B1  E8 09B3			     call    seek	     ; переход к рекалибровке      +
   1216				     НГМД
   1217	E4B4  72 07			     jc	     f13	     ; перейти в программу ошибок
   1218	E4B6  B5 22			     mov     ch,34	     ; выбор 34 дорожки
   1219	E4B8  E8 09AC			     call    seek
   1220	E4BB  73 09			     jnc     f14	     ; выключить мотор
   1221
   1222				     ;	  Ошибки НГМД
   1223
   1224	E4BD			     f13:
   1225	E4BD  BE E418r			     mov     si,offset f3    ; получить	адрес поля	       +
   1226				     сообщения	об
   1227								     ; ошибке
   1228	E4C0  B9 0003			     mov     cx,f3l	     ; установить счетчик
   1229	E4C3  E8 012F			     call    p_msg	     ; идти	в программу ошибок
   1230
   1231				     ;	 Выключить мотор устройства 0
   1232
   1233	E4C6			     f14:
   1234	E4C6  B0 0C			     mov     al,0ch	     ; выключить мотор		       +
   1235				     устройства 0
   1236	E4C8  BA 03F2			     mov     dx,03f2h	     ; уст адрес порта		       +
   1237				     управления НГМД
   1238	E4CB  EE			     out     dx,al
   1239
   1240				     ;	 Установка печати и базового адреса
   1241				     ;	 адаптера стыка С2, если устройства		       +
   1242				     подключены
   1243
   1244	E4CC			     f15:
   1245	E4CC  83 FD 00			     cmp     bp,0000h
   1246	E4CF  74 18			     jz	     dal
   1247	E4D1  BA 0003			     mov     dx,3
   1248	E4D4  E8 00A9			     call    err_beep
   1249	E4D7  BE E6A6r			     mov     si,offset f39
   1250	E4DA  B9 0017				     mov     cx, 23
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 26
1840v4.asm



   1251	E4DD  E8 0115			     call    p_msg
   1252	E4E0			     err_wait:
   1253	E4E0  B4 00			     mov     ah,0
   1254	E4E2  CD 16			     int     16h
   1255	E4E4  80 FC 3B			     cmp     ah,3bh
   1256	E4E7  75 F7			     jnz     err_wait
   1257	E4E9  2A E4		     dal:    sub     ah,ah
   1258	E4EB  A0 0049r			     mov     al,crt_mode
   1259	E4EE  CD 10			     int     10h
   1260	E4F0  C7 06 001Ar 001Er			     mov     ds:buffer_head, offset kb_buffer ;	ERROR -	Must be	approx.+
   1261				     6 lines upper, before int 16h
   1262	E4F6  C7 06 001Cr 001Er			     mov     ds:buffer_tail, offset kb_buffer ;	ERROR -	Must be	approx.+
   1263				     6 lines upper, before int 16h
   1264	E4FC  BD E41Br			     mov     bp,offset f4    ; таблица PRT_SRC
   1265	E4FF  BE 0000			     mov     si,0
   1266	E502			     f16:
   1267	E502  2E: 8B 56	00		     mov     dx,cs:[bp]	     ; получить	базовый адрес      +
   1268				     печати
   1269	E506  B0 AA			     mov     al,0aah	     ; записать	данные в	порт А
   1270	E508  EE			     out     dx,al
   1271	E509  2A C0			     sub     al,al
   1272	E50B  EC			     in	     al,dx	     ; считывание порта А
   1273	E50C  3C AA			     cmp     al,0aah	     ; шаблон данных тот	же
   1274	E50E  75 06			     jne     f17	 ; нет - проверка следующего      +
   1275				     устройства печати
   1276	E510  89 94 0008r		     mov     word ptr printer_base[si],dx  ;да-уст	базовый	       +
   1277				     адрес
   1278	E514  46			     inc     si		     ; вычисление следующего       +
   1279				     слова
   1280	E515  46			     inc     si
   1281	E516			     f17:
   1282	E516  45			     inc     bp		     ; указать следующий базовый+
   1283				     адрес
   1284	E517  45			     inc     bp
   1285	E518  81 FD E41Dr		     cmp     bp,offset f4e   ; все возможные адреса	       +
   1286				     проверены	?
   1287	E51C  75 E4			     jne     f16	     ; нет, к проверке следующего+
   1288				     адреса печати
   1289	E51E  BB 0000			     mov     bx,0
   1290	E521  BA 03FF			     mov     dx,3ffh	     ; проверка	подключения	       +
   1291				     адаптера 1	стыка С2
   1292	E524  B0 8A			     mov     al,8ah
   1293	E526  EE			     out     dx,al
   1294	E527  BA 02FF			     mov     dx,2ffh
   1295	E52A  EE			     out     dx,al
   1296	E52B  BA 03FC			     mov     dx,3fch
   1297	E52E  B0 AA			     mov     al,0aah
   1298	E530  EE			     out     dx,al
   1299	E531  42			     inc     dx
   1300	E532  33 C0				     xor     ax, ax
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 27
1840v4.asm



   1301	E534  EE				     out     dx, al
   1302	E535  EC			     in	     al,dx
   1303	E536  3C AA			     cmp     al,0aah
   1304	E538  75 08			     jnz     f18
   1305	E53A  C7 87 0000r 03F8		     mov  word ptr rs232_base[bx],3f8h	; уст адрес адаптера 1
   1306	E540  43			     inc     bx
   1307	E541  43			     inc     bx
   1308	E542  BA 02FC		     f18:    mov     dx,2fch	     ; проверка	подключения	       +
   1309				     адаптера 2	стыка С2
   1310	E545  B0 AA			     mov     al,0aah
   1311	E547  EE			     out     dx,al
   1312	E548  42			     inc     dx
   1313	E549  33 C0				     xor     ax, ax
   1314	E54B  EE				     out     dx, al
   1315	E54C  EC			     in	     al,dx
   1316	E54D  3C AA			     cmp     al,0aah
   1317	E54F  75 08			     jnz     f19
   1318	E551  C7 87 0000r 02F8		     mov  word ptr rs232_base[bx],2f8h	 ; уст адрес адаптера 2
   1319	E557  43			     inc     bx
   1320	E558  43			     inc     bx
   1321
   1322
   1323
   1324				     ;_____Установка EQUIP_FLAG для	инди-
   1325				     ;	   кации номера печати
   1326
   1327	E559			     f19:
   1328	E559  E9 1411				     jmp     f19a
   1329
   1330	E55C			     f19b:
   1331	E55C  D2 C8			     ror     al,cl
   1332	E55E  0A C3			     or	     al,bl
   1333	E560  A2 0011r			     mov     byte ptr equip_flag+1,al
   1334	E563  BA 0201			     mov     dx,201h
   1335	E566  EC			     in	     al,dx
   1336	E567  A8 0F			     test    al,0fh
   1337	E569  75 05			     jnz     f20			; проверка адаптера    +
   1338				     игр
   1339	E56B  80 0E 0011r 10		     or	     byte ptr equip_flag+1,16
   1340	E570			     f20:
   1341	E570  E9 140D				     jmp     f20a
   1342	E573  90				     nop
   1343
   1344	E574			     f20b:
   1345	E574  BA 0001				     mov     dx, 1
   1346	E577  E8 0006			     call    err_beep	     ; переход к подпрограмме      +
   1347				     звукового	сигнала
   1348	E57A			     f21:
   1349	E57A  E9 017A				     jmp     boot_strap
   1350
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 28
1840v4.asm



   1351	E57D			     f23:
   1352	E57D  E9 FF4C			     jmp     f15
   1353
   1354				     ;	  Установка длительности звукового сигнала
   1355
   1356					     assume  cs:code,ds:data
   1357	E580			     err_beep proc   near
   1358	E580  9C			     pushf		     ; сохранить признаки
   1359	E581  FA			     cli		     ; сброс признака разрешения+
   1360				     прерывания
   1361	E582  1E			     push    ds		     ; сохранить DS
   1362	E583  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
   1363	E586  8E D8			     mov     ds,ax
   1364	E588  0A F6			     or	     dh,dh
   1365	E58A  74 0B			     jz	     g3
   1366	E58C			     g1:			      ;	длинный звуковой	сигнал
   1367	E58C  B3 06			     mov     bl,6	      ;	счетчик для звуковых	       +
   1368				     сигналов
   1369	E58E  E8 0018			     call    beep	      ;	выполнить звуковой сигнал
   1370	E591  E2 FE		     g2:     loop    g2		      ;	задержка между звуковыми +
   1371				     сигналами
   1372	E593  FE CE			     dec     dh
   1373	E595  75 F5			     jnz     g1
   1374	E597			     g3:			      ;	короткий звуковой сигнал
   1375	E597  B3 01			     mov     bl,1   ; счетчик для короткого		       +
   1376				     звукового	сигнала
   1377	E599  E8 000D			     call    beep	     ; выполнить звуковой сигнал
   1378	E59C  E2 FE		     g4:     loop    g4		     ; задержка	между звуковыми  +
   1379				     сигналами
   1380	E59E  FE CA			     dec     dl		     ;
   1381	E5A0  75 F5			     jnz     g3		     ; выполнить
   1382	E5A2  E2 FE		     g5:     loop    g5		     ; длинная задержка перед      +
   1383				     возвратом
   1384	E5A4  E2 FE		     g6:     loop    g6
   1385	E5A6  1F			     pop     ds		     ; восстановление DS
   1386	E5A7  9D			     popf		; восстановление			       +
   1387				     первоначальных признаков
   1388	E5A8  C3			     ret		     ; возврат к программе
   1389	E5A9			     err_beep	     endp
   1390
   1391				     ;	 Подпрограмма звукового сигнала
   1392
   1393	E5A9			     beep    proc    near
   1394	E5A9  B0 B6			     mov     al,10110110b    ; таймер 2,младший и	старший +
   1395				     счет-
   1396								     ; чики, двоичный счет
   1397	E5AB  E6 43			     out     timer+3,al	     ; записать	в регистр режима
   1398	E5AD  B8 045E			     mov     ax,45eh	     ; делитель
   1399	E5B0  E6 42			     out     timer+2,al	     ; записать	младший счетчик
   1400	E5B2  8A C4			     mov     al,ah
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 29
1840v4.asm



   1401	E5B4  E6 42			     out     timer+2,al	     ; записать	старший счетчик
   1402	E5B6  E4 61			     in	     al,port_b	     ; получить	текущее		       +
   1403				     состояние	порта
   1404	E5B8  8A E0			     mov     ah,al	     ; сохранить это состояние
   1405	E5BA  0C 03			     or	     al,03	     ; включить	звук
   1406	E5BC  E6 61			     out     port_b,al
   1407	E5BE  2B C9			     sub     cx,cx	     ; установить счетчик	       +
   1408				     ожидания
   1409	E5C0  E2 FE		     g7:     loop    g7		     ; задержка	перед		       +
   1410				     выключением
   1411	E5C2  FE CB			     dec     bl		     ; задержка	счетчика	       +
   1412				     закончена	?
   1413	E5C4  75 FA			     jnz     g7	     ; нет -	продолжение подачи	       +
   1414				     звукового	сигнала
   1415	E5C6  8A C4			     mov     al,ah	     ; восстановить	значение       +
   1416				     порта
   1417	E5C8  E6 61			     out     port_b,al
   1418	E5CA  C3			     ret		     ; возврат к программе
   1419	E5CB			     beep    endp
   1420				     ;_____________________
   1421				     ;	 Эта	процедура вызывает программный
   1422				     ;	 сброс клавиатуры
   1423				     ;_____________________
   1424	E5CB			     kbd_reset proc  near
   1425	E5CB  B0 0C			     mov     al,0ch	; установить низкий уровень     +
   1426				     синхронизации
   1427	E5CD  E6 61			     out     port_b,al	     ; записать	порт B
   1428	E5CF  B9 7530			     mov     cx,30000	     ; время длительности	       +
   1429				     низкого уровня
   1430	E5D2  E2 FE		     g8:     loop    g8
   1431	E5D4  B0 CC			     mov     al,0cch	     ; уст CLK
   1432	E5D6  E6 61			     out     port_b,al
   1433	E5D8			     sp_test:
   1434	E5D8  B0 4C			     mov     al,4ch	     ; уст высокий уровень	       +
   1435				     синхронизации
   1436	E5DA  E6 61			     out     port_b,al
   1437	E5DC  B0 FD			     mov     al,0fdh	     ; разрешить прерывания	       +
   1438				     клавиатуры
   1439	E5DE  E6 21			     out     inta01,al	     ; записать	регистр масок
   1440	E5E0  FB			     sti		     ; уст признака разрешения    +
   1441				     прерывания
   1442	E5E1  B4 00			     mov     ah,0
   1443	E5E3  2B C9			     sub     cx,cx	     ; уст счетчика ожидания	       +
   1444				     прерываний
   1445	E5E5  F6 C4 FF		     g9:     test    ah,0ffh	     ; прерывание клавиатуры       +
   1446				     возникло ?
   1447	E5E8  75 02			     jnz     g10   ;  да - считывание возвращенного   +
   1448				     кода сканирования
   1449	E5EA  E2 F9			     loop    g9		     ; нет -	цикл ожидания
   1450	E5EC  E4 60		     g10:    in	     al,port_a	 ; считать код сканирования      +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 30
1840v4.asm



   1451				     клавиатуры
   1452	E5EE  8A D8			     mov     bl,al	     ; сохранить этот код
   1453	E5F0  B0 CC			     mov     al,0cch	     ; очистка клавиатуры
   1454	E5F2  E6 61			     out     port_b,al
   1455	E5F4  C3			     ret		     ; возврат к программе
   1456	E5F5			     kbd_reset	     endp
   1457				     ;_____________________
   1458				     ;	 Эта	программа выводит на экран дисплея
   1459				     ;	 сообщения об ошибках
   1460				     ;
   1461				     ;	   Необходимые условия:
   1462				     ;	 SI = адрес поля сообщения об ошибке
   1463				     ;	 CX = длина поля сообщения об ошибке
   1464				     ;	 Максимальный размер передаваемой
   1465				     ;	 информации -	36 знаков
   1466				     ;
   1467				     ;______________________
   1468	E5F5			     p_msg   proc    near
   1469	E5F5  B8 0040			     mov     ax,dat
   1470	E5F8  8E D8			     mov     ds,ax
   1471	E5FA  8B EE			     mov     bp,si
   1472	E5FC			     g12:
   1473	E5FC  2E: 8A 04			     mov     al,cs:[si]	     ; поместить знак в AL
   1474	E5FF  46			     inc     si		     ; указать следующий знак
   1475	E600  B7 00			     mov     bh,0	     ; установить страницу
   1476	E602  B4 0E			     mov     ah,14	     ; уст функцию записи знака
   1477	E604  CD 10			     int     10h	     ; и записать знак
   1478	E606  E2 F4			     loop    g12     ; продолжать до записи всего       +
   1479				     сообщения
   1480	E608  B8 0E0D			     mov     ax,0e0dh	; переместить курсор в начало  +
   1481				     строки
   1482	E60B  CD 10			     int     10h
   1483	E60D  B8 0E0A			     mov     ax,0e0ah  ; переместить	курсор на	       +
   1484				     следующую	строку
   1485	E610  CD 10			     int     10h
   1486	E612  C3			     ret
   1487	E613			     p_msg   endp
   1488
   1489
   1490	E613			     e190:
   1491	E613  1E				     push    ds
   1492	E614  B8 0010				     mov     ax, 16
   1493	E617  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
   1494	E61D  75 03				     jnz     e20a
   1495	E61F  E9 FDDD				     jmp     e22
   1496
   1497	E622			     e20a:
   1498	E622  B8 0010				     mov     ax, 16
   1499	E625  EB 25				     jmp     short prt_siz
   1500
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 31
1840v4.asm



   1501	E627			     e20b:
   1502	E627  8B 1E 0013r			     mov     bx, ds:memory_size
   1503	E62B  83 EB 10				     sub     bx, 16
   1504	E62E  B1 04				     mov     cl, 4
   1505	E630  D3 EB				     shr     bx, cl
   1506	E632  8B CB				     mov     cx, bx
   1507	E634  BB 0400				     mov     bx, 400h
   1508
   1509	E637			     e20c:
   1510	E637  8E DB				     mov     ds, bx
   1511
   1512	E639  8E C3				     mov     es, bx
   1513	E63B  81 C3 0400			     add     bx, 400h
   1514	E63F  52				     push    dx
   1515	E640  51				     push    cx
   1516	E641  53				     push    bx
   1517	E642  50				     push    ax
   1518	E643  E8 F9D4				     call    stgtst
   1519	E646  75 41				     jnz     e21a
   1520	E648  58				     pop     ax
   1521	E649  05 0010				     add     ax, 16
   1522
   1523	E64C			     prt_siz:
   1524	E64C  50				     push    ax
   1525	E64D  BB 000A				     mov     bx, 10
   1526	E650  B9 0003				     mov     cx, 3
   1527
   1528	E653			     decimal_loop:
   1529	E653  33 D2				     xor     dx, dx
   1530	E655  F7 F3				     div     bx
   1531	E657  80 CA 30				     or	     dl, 30h
   1532	E65A  52				     push    dx
   1533	E65B  E2 F6				     loop    decimal_loop
   1534	E65D  B9 0003				     mov     cx, 3
   1535
   1536	E660			     prt_dec_loop:
   1537	E660  58				     pop     ax
   1538	E661  E8 0034				     call    prt_hex
   1539	E664  E2 FA				     loop    prt_dec_loop
   1540	E666  B9 0007				     mov     cx, 7
   1541	E669  BE E69Fr				     mov     si, offset	e300 ; " Kb OK\r"
   1542
   1543	E66C			     kb_ok:
   1544	E66C  2E: 8A 04				     mov     al, cs:[si]
   1545	E66F  46				     inc     si
   1546	E670  E8 0025				     call    prt_hex
   1547	E673  E2 F7				     loop    kb_ok
   1548	E675  58				     pop     ax
   1549	E676  3D 0010				     cmp     ax, 16
   1550	E679  74 AC				     jz	     e20b
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 32
1840v4.asm



   1551	E67B  5B				     pop     bx
   1552	E67C  59				     pop     cx
   1553	E67D  5A				     pop     dx
   1554	E67E  E2 B7				     loop    e20c
   1555	E680  B0 0A				     mov     al, 10
   1556	E682  E8 0013				     call    prt_hex
   1557	E685  1F				     pop     ds
   1558
   1559	E686  E9 FD76				     jmp     e22
   1560
   1561	E689			     e21a:
   1562	E689  5B				     pop     bx
   1563	E68A  83 C4 06				     add     sp, 6
   1564	E68D  8C DA				     mov     dx, ds
   1565	E68F  1F				     pop     ds
   1566	E690  1E				     push    ds
   1567	E691  89 1E 0013r			     mov     ds:memory_size, bx
   1568	E695  E9 FD3C				     jmp     osh
   1569
   1570	E698			     prt_hex	     proc near
   1571	E698  B4 0E				     mov     ah, 14
   1572	E69A  B7 00				     mov     bh, 0
   1573	E69C  CD 10				     int     10h
   1574	E69E  C3				     retn
   1575	E69F			     prt_hex	     endp
   1576
   1577	E69F  20 4B 62 20 4F 4B	0D   e300	     db	' Kb OK',0Dh
   1578	E6A6  45 52 52 4F 52 20	28+  f39	     db	'ERROR (RESUME="F1" KEY)'
   1579	      52 45 53 55 4D 45	3D+
   1580	      22 46 31 22 20 4B	45+
   1581	      59 29
   1582
   1583				     ;	 Таблица	кодов русских больших букв	       +
   1584				     (заглавных)
   1585
   1586	E6BD			     rust2   label   byte
   1587	E6BD  1B 21 40 23 24 25	5E+	     db	     1bh,'!@#$',37,05eh,'&*()_+'
   1588	      26 2A 28 29 5F 2B
   1589
   1590
   1591	E6CA  08 00			     db	     08h,0
   1592	E6CC  B9 C6 C3 BA B5 BD	B3+	     db	     0b9h,0c6h,0c3h,0bah,0b5h,0bdh,0b3h,0c8h
   1593	      C8
   1594
   1595	E6D4  C9 B7 B6 CD 0D FF	C4+	     db	     0c9h,0b7h,0b6h,0cdh,0dh,-1,0c4h,0cbh
   1596	      CB
   1597
   1598	E6DC  B2 B0 BF C0 BE BB	B4+	     db	     0b2h,0b0h,0bfh,0c0h,0beh,0bbh,0b4h,27h
   1599	      27
   1600
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 33
1840v4.asm



   1601	E6E4  22 B1 CE 7C CF C7	C1+	     db	     '"',0b1h,0ceh,7ch,0cfh,0c7h,0c1h,0bch,0b8h
   1602	      BC B8
   1603
   1604	E6ED  C2 CC 3C 3E 3F C5	00+	     db	     0c2h,0cch,'<>?',0c5h,000,-1,' ',0cah
   1605	      FF 20 CA
   1606
   1607
   1608
   1609
   1610				     ;___int 19_____________
   1611				     ;	 Программа загрузки системы с НГМД
   1612				     ;
   1613				     ; Программа считывает содержимое дорожки 0     +
   1614				     сектора 1 в
   1615				     ; ячейку boot_locn (адрес 7C00,сегмент 0)
   1616				     ;	 Если НГМД отсутствует или произошла	       +
   1617				     аппаратная ошибка,
   1618				     ; устанавливается прерывание типа INT	18H,	       +
   1619				     которое вызывает
   1620				     ; выполнение программ тестирования и	       +
   1621				     инициализации
   1622				     ; системы
   1623				     ;
   1624				     ;_________________________
   1625					     assume  cs:code,ds:data
   1626	E6F7			     boot_strap	proc near
   1627
   1628	E6F7  FB			     sti		   ; установить признак	       +
   1629				     разрешения прерывания
   1630	E6F8  B8 0040			     mov     ax,dat	   ; установить адресацию
   1631	E6FB  8E D8			     mov     ds,ax
   1632	E6FD  A1 0010r			     mov     ax,equip_flag ; получить состояние	       +
   1633				     переключателей
   1634	E700  A8 01			     test    al,1	   ; опрос	первоначальной	       +
   1635				     загрузки
   1636	E702  74 23			     jz	     h3
   1637
   1638				     ;	 Система	загружается с НГМД
   1639				     ;	 CX содержит счетчик повторений
   1640
   1641	E704  B9 0004			     mov     cx,4	     ; установить счетчик	       +
   1642				     повторений
   1643	E707			     h1:			     ; первоначальная загрузка
   1644	E707  51			     push    cx		     ; сохранить счетчик	       +
   1645				     повторений
   1646	E708  B4 00			     mov     ah,0	     ; сброс НГМД
   1647	E70A  CD 13			     int     13h
   1648	E70C  72 14			     jc	     h2		     ; если	ошибка,повторить
   1649	E70E  B4 02			     mov     ah,2	     ; считать сектор 1
   1650	E710  BB 0000			     mov     bx,0	     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 34
1840v4.asm



   1651	E713  8E C3			     mov     es,bx
   1652	E715  BB 7C00r			     mov     bx,offset boot_locn
   1653	E718  BA 0000			     mov     dx,0	     ;
   1654	E71B  B9 0001			     mov     cx,1	     ; сектор 1 ,	дорожка 0
   1655	E71E  B0 01			     mov     al,1	     ; считывание первого	       +
   1656				     сектора
   1657	E720  CD 13			     int     13h
   1658	E722  59		     h2:     pop     cx		     ; восстановить	счетчик	       +
   1659				     повторений
   1660	E723  73 05			     jnc     h4		     ; уст CF при	безуспешном	       +
   1661				     считывании
   1662	E725  E2 E0			     loop    h1		     ; цикл	повторения
   1663
   1664				     ;	 Загрузка с НГМД недоступна
   1665
   1666	E727			     h3:			     ; кассета
   1667	E727  E9 F985			     jmp     err01   ; отсутствует дискет загрузки
   1668
   1669				     ;	 Загрузка завершилась успешно
   1670
   1671	E72A			     h4:				     ;
   1672	E72A  EA 00007C00sr			     jmp far ptr boot_locn   ; db 0EAh,	00h, 7Ch, 00h, 00h   ;	       +
   1673				     (0000:7C00)   ; ###Gleb###
   1674
   1675	E72F			     boot_strap	     endp
   1676				     ;--------------------
   1677				     ;	 Эта	программа посылает байт в	контроллер   +
   1678				     адаптера НГМД
   1679				     ; после проверки корректности управления и    +
   1680				     готовности
   1681				     ; контроллера.
   1682				     ;	 Программа ожидает байт состояния		       +
   1683				     определенное время
   1684				     ; и проверяет готовность НГМД к работе.
   1685				     ;
   1686				     ;	 ВВОД   (AH) - выводимый байт
   1687				     ;
   1688				     ;	 ВЫВОД  CY=0 - успешно,
   1689				     ;		CY=1 - не успешно.Состояние
   1690				     ;		НГМД анализируется.
   1691				     ;-----------------------
   1692	E72F			     nec_output	proc near
   1693	E72F  52			     push    dx		     ; сохранить регистры
   1694	E730  51			     push    cx
   1695	E731  BA 03F4			     mov     dx,03f4h	     ; состояние порта
   1696	E734  33 C9			     xor     cx,cx	     ; счетчик времени вывода
   1697	E736			     j23:
   1698	E736  EC			     in	     al,dx	     ; получить	состояние
   1699	E737  A8 40			     test    al,040h	     ; проверка	управляющих бит
   1700	E739  74 0C			     jz	     j25	     ; биты	управления		       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 35
1840v4.asm



   1701				     нормальные
   1702	E73B  E2 F9			     loop    j23
   1703	E73D			     j24:
   1704	E73D  80 0E 0041r 80		     or	     diskette_status,time_out
   1705	E742  59			     pop     cx
   1706	E743  5A			     pop     dx	     ; установить код ошибки	и	       +
   1707				     восстановить регистры
   1708	E744  58			     pop     ax		     ; адрес возврата
   1709	E745  F9			     stc		     ;
   1710	E746  C3			     ret
   1711
   1712	E747			     j25:
   1713	E747  33 C9			     xor     cx,cx	     ; обнуление счетчика
   1714	E749			     j26:
   1715	E749  EC			     in	     al,dx	     ; получить	состояние
   1716	E74A  A8 80			     test    al,080h	     ; проверка	готовности
   1717	E74C  75 04			     jnz     j27	     ; да - идти на выход
   1718	E74E  E2 F9			     loop    j26	     ; повторить
   1719	E750  EB EB			     jmp     short j24	     ; ошибка состояния
   1720	E752			     j27:			     ; выход
   1721	E752  8A C4			     mov     al,ah	     ; получить	байт
   1722	E754  BA 03F5			     mov     dx,03f5h	     ; переслать байт данных	в     +
   1723				     порт
   1724	E757  EE			     out     dx,al
   1725	E758  59			     pop     cx		     ; восстановить	регистры
   1726	E759  5A			     pop     dx
   1727	E75A  C3			     ret		     ;
   1728	E75B			     nec_output	     endp
   1729
   1730				     ;___int 16_________________
   1731				     ;
   1732				     ;	 Программа поддержки клавиатуры
   1733				     ;
   1734				     ;	 Эта	программа считывает в регистр
   1735				     ; AX код сканирования клавиши и код
   1736				     ; ASCII из буфера клавиатуры.
   1737				     ;
   1738				     ;	 Программа выполняет три функции, код
   1739				     ; которых задается в регистре AH:
   1740				     ;
   1741				     ;	  AH=0 - считать	следующий символ
   1742				     ;		  из буфера.При выходе	код
   1743				     ;		  сканирования в AH,код
   1744				     ;		  ASCII	в AL.
   1745				     ;	 AH=1 -	установить ZF, если код
   1746				     ;		  ASCII	прочитан:
   1747				     ;
   1748				     ;		  ZF=0 - буфер заполнен,
   1749				     ;		  ZF=1 - буфер пустой.
   1750				     ;	 При	выходе в	AX помещен адрес вершины	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 36
1840v4.asm



   1751				     буфера клавиатуры.
   1752				     ;	 AH=2 -	возврат текущего	состояния в регистр AL
   1753				     ;		   из	постоянно распределенной	области +
   1754				     памяти с
   1755				     ;		адресом 00417H.
   1756				     ;
   1757				     ;	 При	выполнении программ клавиатуры	       +
   1758				     используются флажки,
   1759				     ; которые устанавливаются в	постоянно	       +
   1760				     распределенной области
   1761				     ; памяти по адресам	00417H и 00418H и имеют значение:
   1762				     ;	 00417H
   1763				     ;	       0 - правое	переключение регистра;
   1764				     ;	       1 - левое переключение регистра;
   1765				     ;		  2 - УПР;
   1766				     ;	       3 - ДОП;
   1767				     ;	       4 - ФСД;
   1768				     ;	       5 - ЦИФ;
   1769				     ;	       6 - ФПБ;
   1770				     ;	       7 - ВСТ;
   1771				     ;	 00418H
   1772				     ;	       0 - состояние клавиши ЛАТ между нажатием+
   1773				     и	отжатием;
   1774				     ;	       1 - ЛАТ;
   1775				     ;	       2 - Р/Л;
   1776				     ;	       3 - пауза;
   1777				     ;	       4 - ФСД;
   1778				     ;	       5 - ЦИФ;
   1779				     ;	       6 - ФПБ;
   1780				     ;	       7 - ВСТ.
   1781				     ;
   1782				     ;	 Флажки, соответствующие разрядам 4-7	       +
   1783				     постоянно	распределенной
   1784				     ; области памяти с адресом 00417H,			       +
   1785				     устанавливаются по нажатию
   1786				     ; клавиш ВСТ, ФПБ, ЦИФ, ФСД и сохраняют свои      +
   1787				     значения до сле-
   1788				     ; дующего нажатия соответствующей клавиши.
   1789				     ; Одноименные флажки, соответствующие	       +
   1790				     разрядам 4-7 постоянно
   1791				     ; распределенной области памяти	с адресом      +
   1792				     00418H, и	флажки
   1793				     ; ДОП, УПР, левое переключение регистра,	       +
   1794				     правое переключение
   1795				     ; регистра, Р/Л устанавливаются по нажатию      +
   1796				     клавиш и сбрасываются
   1797				     ; по отжатию.
   1798				     ;
   1799				     ;------------------------------
   1800					     assume  cs:code,ds:data
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 37
1840v4.asm



   1801
   1802
   1803	E75B			     k4	     proc    near
   1804	E75B  83 C3 02			     add     bx,2
   1805	E75E  81 FB 003Er		     cmp  bx, offset kb_buffer_end	      ;	конец буфера	?
   1806	E762  75 03			     jne     k5			      ;	нет - продолжить
   1807	E764  BB 001Er			     mov     bx, offset	kb_buffer     ;	да - уст начала буфера
   1808	E767			     k5:
   1809	E767  C3			     ret
   1810	E768			     k4	     endp
   1811
   1812	E768			     error_beep	proc near
   1813	E768  50			     push    ax
   1814	E769  53			     push    bx
   1815	E76A  51			     push    cx
   1816	E76B  BB 00C0			     mov     bx,0c0h
   1817	E76E  E4 61			     in	     al,kb_ctl
   1818	E770  50			     push    ax
   1819	E771			     k65:
   1820	E771  24 FC			     and     al,0fch
   1821	E773  E6 61			     out     kb_ctl,al
   1822	E775  B9 0048			     mov     cx,48h
   1823	E778  E2 FE		     k66:    loop    k66
   1824	E77A  0C 02			     or	     al,2
   1825	E77C  E6 61			     out     kb_ctl,al
   1826	E77E  B9 0048			     mov     cx,48h
   1827	E781  E2 FE		     k67:    loop    k67
   1828	E783  4B			     dec     bx
   1829	E784  75 EB			     jnz     k65
   1830	E786  58			     pop     ax
   1831	E787  E6 61			     out     kb_ctl,al
   1832	E789  59			     pop     cx
   1833	E78A  5B			     pop     bx
   1834	E78B  58			     pop     ax
   1835	E78C  C3			     ret
   1836	E78D			     error_beep	     endp
   1837
   1838				     ;---
   1839
   1840	E78D			     k54:
   1841	E78D  3C 3B			     cmp     al,59
   1842	E78F  72 05			     jb	     k55
   1843	E791  B0 00			     mov     al,0
   1844	E793  EB 0F				     jmp     short k57
   1845	E795  90				     nop
   1846
   1847	E796  BB E8DCr		     k55:    mov     bx,offset k10
   1848	E799  F6 06 0018r 02		     test    kb_flag_1,lat
   1849	E79E  74 57			     jz	     k99
   1850
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 38
1840v4.asm



   1851				     ;---
   1852
   1853	E7A0			     k56:
   1854	E7A0  FE C8			     dec     al
   1855	E7A2  2E: D7			     xlat    cs:k11
   1856
   1857				     ;---
   1858
   1859	E7A4			     k57:
   1860	E7A4  3C FF			     cmp     al,-1
   1861	E7A6  74 2A			     je	     k59
   1862	E7A8  80 FC FF			     cmp     ah,-1
   1863	E7AB  74 25			     je	     k59
   1864				     ;---
   1865
   1866	E7AD			     k58:
   1867	E7AD  F6 06 0017r 40		     test    kb_flag,caps_state
   1868	E7B2  74 2B			     jz	     k61
   1869
   1870				     ;---
   1871	E7B4  F6 06 0018r 02		     test    kb_flag_1,lat
   1872	E7B9  75 03			     jnz     k88
   1873	E7BB  E9 1175			     jmp     k89
   1874	E7BE			     k88:
   1875	E7BE  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   1876	E7C3  74 10			     jz	     k60
   1877
   1878				     ;----------
   1879
   1880	E7C5  3C 41			     cmp     al,'A'
   1881	E7C7  72 16			     jb	     k61
   1882	E7C9  3C 5A			     cmp     al,'Z'
   1883	E7CB  77 12			     ja	     k61
   1884	E7CD  04 20			     add     al,'a'-'A'
   1885	E7CF  EB 0E				     jmp     short k61
   1886	E7D1  90				     nop
   1887
   1888	E7D2			     k59:
   1889	E7D2  E9 0316			     jmp     k26
   1890
   1891
   1892	E7D5			     k60:
   1893	E7D5  3C 61			     cmp     al,'a'
   1894	E7D7  72 06			     jb	     k61
   1895	E7D9  3C 7A			     cmp     al,'z'
   1896	E7DB  77 02			     ja	     k61
   1897	E7DD  2C 20			     sub     al,'a'-'A'
   1898
   1899	E7DF			     k61:
   1900	E7DF  8B 1E 001Cr		     mov     bx,buffer_tail
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 39
1840v4.asm



   1901	E7E3  8B F3			     mov     si,bx
   1902	E7E5  E8 FF73			     call   k4
   1903	E7E8  3B 1E 001Ar		     cmp     bx,buffer_head
   1904	E7EC  74 0E			     je	     k62
   1905	E7EE  89 04			     mov     word ptr [si],ax
   1906	E7F0  89 1E 001Cr		     mov     buffer_tail,bx
   1907	E7F4  E9 02F4			     jmp     k26
   1908	E7F7  BB F8CBr		     k99:    mov     bx,offset rust
   1909	E7FA  EB A4			     jmp k56
   1910
   1911				     ;---
   1912
   1913	E7FC			     k62:
   1914	E7FC  E8 FF69			     call    error_beep
   1915	E7FF  E9 02E9			     jmp     k26
   1916
   1917				     ;---
   1918
   1919	E802			     k63:
   1920	E802  2C 3B			     sub     al,59
   1921	E804			     k64:
   1922	E804  2E: D7			     xlat    cs:k9
   1923	E806  8A E0			     mov     ah,al
   1924	E808  B0 00			     mov     al,0
   1925	E80A  EB 98				     jmp     short k57
   1926	E80C  22*(00)				     db	34 dup(0)
   1927
   1928				     ;---
   1929
   1930	E82E			     keyboard_io proc	     far
   1931	E82E  FB			     sti		     ;
   1932	E82F  1E			     push    ds
   1933	E830  53			     push    bx
   1934	E831  BB 0040			     mov     bx,dat
   1935	E834  8E DB			     mov     ds,bx	     ; установить сегмент данных
   1936	E836  0A E4			     or	     ah,ah	     ; AH=0
   1937	E838  74 0B			     jz	     k1		  ; переход к считыванию	       +
   1938				     следующего символа
   1939	E83A  FE CC			     dec     ah		     ; AH=1
   1940	E83C  74 20			     jz	     k2		  ; переход к считыванию кода    +
   1941				     ASCII
   1942	E83E  FE CC			     dec     ah			  ; AH=2
   1943	E840  74 2D			     jz	     k3		  ; переход к получению байта    +
   1944				     состояния
   1945	E842  5B			     pop     bx			  ; восстановить регистр
   1946	E843  1F			     pop     ds
   1947	E844  CF			     iret
   1948
   1949				     ;	 Считывание кода сканирования	и кода ASCII из +
   1950				     буфера клавиатуры
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 40
1840v4.asm



   1951				     ;
   1952	E845			     k1:
   1953	E845  FB			     sti	     ; уст признака разрешения	       +
   1954				     прерывания
   1955	E846  90			     nop		     ; задержка
   1956	E847  FA			     cli	     ; сброс признака разрешения	       +
   1957				     прерывания
   1958	E848  8B 1E 001Ar		     mov     bx,buffer_head  ; уст вершину буфера по	       +
   1959				     чтению
   1960	E84C  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   1961				     буфера по записи
   1962	E850  74 F3			     jz	     k1
   1963	E852  8B 07			     mov     ax,word ptr [bx] ;	получить код			       +
   1964				     сканирования и код	ASCII
   1965	E854  E8 FF04			     call    k4
   1966	E857  89 1E 001Ar		     mov     buffer_head,bx  ; запомнить вершину буфера  +
   1967				     по чтению
   1968	E85B  5B			     pop     bx		     ; восстановить	регистр
   1969	E85C  1F			     pop     ds		     ; восстановить	сегмент
   1970	E85D  CF			     iret		     ; возврат к программе
   1971
   1972				     ;	 Считать	код ASCII
   1973
   1974	E85E			     k2:
   1975	E85E  FA			     cli	     ; Сброс признака разрешения	       +
   1976				     прерывания
   1977	E85F  8B 1E 001Ar		     mov     bx,buffer_head  ; получить	указатель	       +
   1978				     вершины буфера
   1979								     ; по чтению
   1980	E863  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   1981				     буфера по записи
   1982	E867  8B 07			     mov     ax,word ptr [bx]
   1983	E869  FB			     sti		     ; уст признак разрешения      +
   1984				     прерывания
   1985	E86A  5B			     pop     bx		     ; восстановить	регистр
   1986	E86B  1F			     pop     ds		     ; восстановить	сегмент
   1987	E86C  CA 0002			     ret     2
   1988
   1989				     ;	 Получение младшего байта	состояния	       +
   1990				     (флажков)
   1991
   1992	E86F			     k3:
   1993	E86F  A0 0017r			     mov     al,kb_flag	     ; получить	младший байт	       +
   1994				     состояния	    на
   1995	E872  5B			     pop     bx		     ; восстановить	регистр
   1996	E873  1F			     pop     ds		     ; восстановить	сегмент
   1997	E874  CF			     iret		     ; возврат к программе
   1998	E875			     keyboard_io     endp
   1999
   2000				     ;	 Таблица	кодов сканирования управляющих     +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 41
1840v4.asm



   2001				     клавиш
   2002
   2003	E875			     k6	     label   byte
   2004	E875  52			     db	     ins_key
   2005	E876  56 45 46 38 1D		     db	     caps_key,num_key,scroll_key,alt_key,ctl_key
   2006	E87B  54 55			     db	     left_key,right_key
   2007	E87D  58			     db	     inv_key_l
   2008	E87E  5A 57 5B			     db	     inv_key_r,lat_key,rus_key
   2009	      =000C		     k6l     equ     0ch
   2010
   2011				     ;	 Таблица	масок нажатых управляющих клавиш
   2012
   2013	E881			     k7	     label   byte
   2014	E881  80			     db	     ins_shift
   2015	E882  40 20 10 08 04		     db	     caps_shift,num_shift,scroll_shift,alt_shift,ctl_shift
   2016	E887  02 01			     db	     left_shift,right_shift
   2017
   2018
   2019				     ;	 Таблица	кодов сканирования при нажатой      +
   2020				     клавише УПР для
   2021				     ; кодов сканирования клавиш	меньше 59
   2022
   2023	E889  1B FF 00 FF FF FF	1E+  k8	     db	     27,-1,0,-1,-1,-1,30,-1
   2024	      FF
   2025
   2026	E891  FF FF FF 1F FF 7F	FF+	     db	     -1,-1,-1,31,-1,127,-1,17
   2027	      11
   2028
   2029	E899  17 05 12 14 19 15	09+	     db	     23,5,18,20,25,21,9,15
   2030	      0F
   2031
   2032	E8A1  10 1B 1D 0A FF 01	13	     db	     16,27,29,10,-1,1,19
   2033
   2034	E8A8  04 06 07 08 0A 0B	0C+	     db	     4,6,7,8,10,11,12,-1,-1
   2035	      FF FF
   2036
   2037	E8B1  FF FF 1C 1A 18 03	16+	     db	     -1,-1,28,26,24,3,22,2
   2038	      02
   2039
   2040	E8B9  0E 0D FF FF FF FF	FF+	     db	     14,13,-1,-1,-1,-1,-1,-1
   2041	      FF
   2042
   2043	E8C1  20 FF			     db	     ' ',-1
   2044
   2045				     ;	 Таблица	кодов сканирования при нажатой      +
   2046				     клавише УПР для
   2047				     ; кодов сканирования клавиш	больше 59
   2048	E8C3			     k9	     label   byte
   2049	E8C3  5E 5F 60 61 62 63	64+	     db	     94,95,96,97,98,99,100,101
   2050	      65
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 42
1840v4.asm



   2051
   2052	E8CB  66 67 FF FF 77 FF	84+	     db	     102,103,-1,-1,119,-1,132,-1
   2053	      FF
   2054
   2055	E8D3  73 FF 74 FF 75 FF	76+	     db	     115,-1,116,-1,117,-1,118,-1
   2056	      FF
   2057
   2058	E8DB  FF			     db	     -1
   2059
   2060				     ;	 Таблица	кодов ASCII нижнего	регистра	       +
   2061				     клавиатуры
   2062
   2063	E8DC			     k10     label   byte
   2064	E8DC  1B 31 32 33 34 35	36+	     db	     27,'1234567890-='
   2065	      37 38 39 30 2D 3D
   2066
   2067
   2068	E8E9  08 09			     db	     08h,09h
   2069	E8EB  71 77 65 72 74 79	75+	     db	     'qwertyuiop[]',0dh,-1,'asdfghjkl;:',60h,7eh
   2070	      69 6F 70 5B 5D 0D	FF+
   2071	      61 73 64 66 67 68	6A+
   2072	      6B 6C 3B 3A 60 7E
   2073
   2074
   2075
   2076
   2077	E906  5C 7A 78 63 76 62	6E+	     db	     05ch,'zxcvbnm',',./{'
   2078	      6D 2C 2E 2F 7B
   2079
   2080	E912  2A FF 20 7D		     db	     '*',-1,' }'
   2081
   2082				     ;	 Таблица	кодов ASCII верхнего регистра	       +
   2083				     клавиатуры
   2084
   2085	E916			     k11     label   byte
   2086	E916  1B 21 40 23 24 25	5E+	     db	     27,'!@#$',37,05eh,'&*()_+'
   2087	      26 2A 28 29 5F 2B
   2088
   2089
   2090	E923  08 00			     db	     08h,0
   2091	E925  51 57 45 52 54 59	55+	     db	     'QWERTYUIOP',-1,-1,0dh,-1
   2092	      49 4F 50 FF FF 0D	FF
   2093
   2094
   2095	E933  41 53 44 46 47 48	4A+	     db	     'ASDFGHJKL'
   2096	      4B 4C
   2097
   2098	E93C  27 22 FF FF 7C		     db	     027h,'"',-1,-1,7ch
   2099	E941  5A 58 43 56 42 4E	4D	     db	     'ZXCVBNM'
   2100
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 43
1840v4.asm



   2101	E948  3C 3E 3F FF 00 FF	20+	     db	     '<>?',-1,0,-1,' ',-1
   2102	      FF
   2103
   2104
   2105				     ;	 Таблица	кодов сканирования клавиш Ф11 -	Ф20   +
   2106				     (на верхнем
   2107				     ; регистре	Ф1 - Ф10)
   2108
   2109	E950			     k12     label   byte
   2110	E950  54 55 56 57 58 59	5A	     db	     84,85,86,87,88,89,90
   2111
   2112	E957  5B 5C 5D			     db	     91,92,93
   2113
   2114				     ;	 Таблица	кодов сканирования одновременно   +
   2115				     нажатых клавиш
   2116				     ; ДОП и Ф1 - Ф10
   2117
   2118	E95A			     k13     label byte
   2119	E95A  68 69 6A 6B 6C		     db	     104,105,106,107,108
   2120	E95F  6D 6E 6F 70 71		     db	     109,110,111,112,113
   2121
   2122				     ;	 Таблица	кодов правого				       +
   2123				     пятнадцатиклавишного поля на верхнем
   2124				     ; регистре
   2125
   2126	E964			     k14     label   byte
   2127	E964  37 38 39 2D 34 35	36+	     db	     '789-456+1230.'
   2128	      2B 31 32 33 30 2E
   2129
   2130
   2131
   2132				     ;	 Таблица	кодов правого				       +
   2133				     пятнадцатиклавишного поля на нижнем
   2134				     ; регистре
   2135
   2136	E971			     k15     label byte
   2137	E971  47 48 49 FF 4B FF	4D	     db	     71,72,73,-1,75,-1,77
   2138
   2139	E978  FF 4F 50 51 52 53		     db	     -1,79,80,81,82,83
   2140
   2141	E97E  09*(00)				     db	9 dup(0)
   2142
   2143				     ;----INT 9--------------------------
   2144				     ;
   2145				     ;	  Программа обработки	прерывания		       +
   2146				     клавиатуры
   2147				     ;
   2148				     ; Программа считывает код сканирования	       +
   2149				     клавиши в регистр AL.
   2150				     ; Единичное состояние разряда 7 в коде	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 44
1840v4.asm



   2151				     сканирования означает,
   2152				     ; что клавиша отжата.
   2153				     ;	 В результате выполнения программы в	       +
   2154				     регистре AX формируется
   2155				     ; слово, старший байт которого (AH) содержит      +
   2156				     код сканирования,
   2157				     ; а младший (AL) -	код ASCII. Эта информация	       +
   2158				     помещается в буфер
   2159				     ; клавиатуры. После	заполнения буфера	       +
   2160				     подается звуковой сигнал.
   2161				     ;
   2162				     ;-----------------------------------
   2163
   2164	E987			     kb_int proc far
   2165	E987  FB			     sti		; установка признака		       +
   2166				     разрешения прерывания
   2167	E988  50			     push    ax
   2168	E989  53			     push    bx
   2169	E98A  51			     push    cx
   2170	E98B  52			     push    dx
   2171	E98C  56			     push    si
   2172	E98D  57			     push    di
   2173	E98E  1E			     push    ds
   2174	E98F  06			     push    es
   2175	E990  FC			     cld		    ; установить признак	       +
   2176				     направления вперед
   2177	E991  B8 0040			     mov     ax,dat	    ; установить адресацию
   2178	E994  8E D8			     mov     ds,ax
   2179	E996  E4 60			     in	     al,kb_dat	    ; считать код сканирования
   2180	E998  50			     push    ax
   2181	E999  E4 61			     in	     al,kb_ctl	    ; считать значение порта 61
   2182	E99B  8A E0			     mov     ah,al	    ; сохранить считанное	       +
   2183				     значение
   2184	E99D  0C 80			     or	     al,80h	    ; установить бит 7 порта 61
   2185	E99F  E6 61			     out     kb_ctl,al	    ; для работы с клавиатурой
   2186	E9A1  86 E0			     xchg    ah,al	    ; восстановить значение	       +
   2187				     порта	61
   2188	E9A3  E6 61			     out     kb_ctl,al
   2189	E9A5  58			     pop     ax		    ; восстановить код		       +
   2190				     сканирования
   2191	E9A6  8A E0			     mov     ah,al	    ; и сохранить его в AH
   2192
   2193				     ;---
   2194
   2195	E9A8  3C FF			     cmp     al,0ffh  ;	сравнение с кодом заполнения  +
   2196				     буфера
   2197							      ;	клавиатуры
   2198	E9AA  75 03			     jnz     k16	     ; продолжить
   2199	E9AC  E9 FE4D			     jmp     k62     ; переход на звуковой сигнал по  +
   2200				     заполнению
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 45
1840v4.asm



   2201							     ; буфера клавиатуры
   2202
   2203	E9AF			     k16:
   2204	E9AF  24 7F			     and     al,07fh	     ; сброс бита отжатия клавиши
   2205	E9B1  0E			     push    cs
   2206	E9B2  07			     pop     es
   2207	E9B3  BF E875r			     mov     di,offset k6  ; установить адрес таблицы    +
   2208				     сканирования
   2209								   ; управляющих клавиш
   2210	E9B6  B9 000C			     mov     cx,k6l
   2211	E9B9  F2> AE			     repne scasb     ; сравнение полученного кода      +
   2212				     ска-
   2213							     ; нирования с содержимым таблицы
   2214	E9BB  8A C4			     mov     al,ah	     ; запомнить код		       +
   2215				     сканирования
   2216	E9BD  74 1A			     je	     k17	     ; переход по совпадению
   2217	E9BF  E9 010A			     jmp     k25	     ; переход по несовпадению
   2218	E9C2			     k406:
   2219	E9C2  F6 06 0018r 02		     test    kb_flag_1,lat
   2220	E9C7  75 7F			     jnz     k26a
   2221	E9C9  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2222	E9CE  B8 5CF1			     mov     ax,5cf1h
   2223	E9D1  74 03			     jz	     k407
   2224	E9D3  B8 5CF0			     mov     ax,5cf0h
   2225
   2226				     ;	 Получение маски нажатой управляющей	       +
   2227				     клавиши
   2228
   2229	E9D6			     k407:
   2230	E9D6  E9 FDCB			     jmp     k57
   2231
   2232	E9D9  81 EF E876r	     k17:    sub     di,offset k6+1
   2233	E9DD  83 FF 08			     cmp     di,8
   2234	E9E0  72 3B			     jb	     k300
   2235	E9E2  B4 06			     mov     ah,6
   2236	E9E4  83 FF 0A			     cmp     di,0ah
   2237	E9E7  72 39			     jb	     k301
   2238	E9E9  A8 80			     test    al,80h
   2239	E9EB  74 5B			     jz	     k26a
   2240	E9ED  80 26 0018r FC		     and     kb_flag_1,not lat+lat_shift
   2241	E9F2  83 FF 0B			     cmp     di,0bh
   2242	E9F5  74 17			     je	     k401
   2243	E9F7  F6 06 0018r 04		     test    kb_flag_1,inv_shift
   2244	E9FC  74 08			     jz	     k400
   2245	E9FE  80 0E 0018r 01		     or	     kb_flag_1,lat_shift
   2246	EA03  EB 43				     jmp     short k26a
   2247	EA05  90				     nop
   2248	EA06  80 0E 0018r 03	     k400:   or	     kb_flag_1,lat+lat_shift
   2249	EA0B  EB 3B				     jmp     short k26a
   2250	EA0D  90				     nop
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 46
1840v4.asm



   2251	EA0E  F6 06 0018r 04	     k401:   test    kb_flag_1,inv_shift
   2252	EA13  74 33			     jz	     k26a
   2253	EA15  80 0E 0018r 02		     or	     kb_flag_1,lat
   2254	EA1A  EB 2C				     jmp     short k26a
   2255	EA1C  90				     nop
   2256	EA1D  2E: 8A A5	E881r	     k300:   mov     ah,cs:k7[di]
   2257	EA22			     k301:
   2258	EA22  A8 80			     test    al,80h	     ; клавиша отжата ?
   2259	EA24  75 79			     jnz     k23     ; переход, если	клавиша отжата
   2260
   2261				     ;	 Управляющая	клавиша нажата
   2262
   2263	EA26  80 FC 10			     cmp     ah,scroll_shift ; нажата управляющая	       +
   2264				     клавиша с
   2265								     ;	запоминанием ?
   2266	EA29  73 20			     jae     k18	     ; переход, если	да
   2267
   2268				     ;---
   2269	EA2B  80 FC 06			     cmp     ah,6
   2270	EA2E  74 07			     je	     k302
   2271
   2272	EA30  08 26 0017r		     or	     kb_flag,ah	     ; установка масок		       +
   2273				     управляющих клавиш
   2274								     ; без запоминания
   2275	EA34  E9 00B4			     jmp     k26	     ; к выходу из прерывания
   2276	EA37  80 0E 0018r 06	     k302:   or	     kb_flag_1,inv_shift+lat
   2277	EA3C  F6 06 0018r 01		     test    kb_flag_1,lat_shift
   2278	EA41  74 05			     jz	     k26a
   2279	EA43  80 26 0018r FD		     and     kb_flag_1,not lat
   2280	EA48			     k26a:
   2281	EA48  E9 00A0			     jmp     k26
   2282
   2283				     ;	 Опрос нажатия клавиши с запоминанием
   2284
   2285	EA4B			     k18:
   2286	EA4B  F6 06 0017r 04		     test    kb_flag,ctl_shift	       ; опрос клавиши УПР
   2287	EA50  75 7A			     jnz     k25
   2288	EA52  3C 52			     cmp     al,ins_key		       ; опрос клавиши ВСТ
   2289	EA54  75 25			     jnz     k22
   2290	EA56  F6 06 0017r 08		     test    kb_flag,alt_shift	       ; опрос клавиши ДОП
   2291	EA5B  74 03			     jz	     k19
   2292	EA5D  EB 6D				     jmp     short k25
   2293	EA5F  90				     nop
   2294	EA60  F6 06 0017r 20	     k19:    test    kb_flag,num_state	; опрос клавиши ЦИФ
   2295	EA65  75 0D			     jnz     k21
   2296	EA67  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift ; опрос клавиш	       +
   2297				     левого
   2298								  ; и правого переключения	       +
   2299				     регистров
   2300	EA6C  74 0D			     jz	     k22
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 47
1840v4.asm



   2301
   2302	EA6E			     k20:
   2303	EA6E  B8 5230			     mov     ax,5230h
   2304	EA71  E9 FD30			     jmp     k57	   ; установка	кода нуля
   2305	EA74			     k21:
   2306	EA74  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2307	EA79  74 F3			     jz	     k20
   2308
   2309	EA7B			     k22:
   2310	EA7B  84 26 0018r		     test    ah,kb_flag_1
   2311	EA7F  75 6A			     jnz     k26
   2312	EA81  08 26 0018r		     or	     kb_flag_1,ah
   2313	EA85  30 26 0017r		     xor     kb_flag,ah
   2314	EA89  3C 52			     cmp     al,ins_key
   2315	EA8B  75 5E			     jne     k26
   2316	EA8D  B8 5200			     mov     ax,ins_key*256
   2317	EA90  E9 FD11			     jmp     k57
   2318
   2319	EA93			     k303:
   2320	EA93  80 26 0018r FB		     and     kb_flag_1,not inv_shift
   2321	EA98  80 36 0018r 02		     xor     kb_flag_1,lat
   2322	EA9D  EB 10			     jmp     short k304
   2323
   2324				     ;	 Управляющая	клавиша отжата
   2325
   2326	EA9F			     k23:
   2327
   2328	EA9F  80 FC 10			     cmp     ah,scroll_shift
   2329	EAA2  73 1F			     jae     k24
   2330	EAA4  F6 D4			     not     ah
   2331	EAA6  80 FC F9			     cmp     ah,0f9h
   2332	EAA9  74 E8			     je	     k303
   2333	EAAB  20 26 0017r		     and     kb_flag,ah
   2334	EAAF			     k304:
   2335	EAAF  3C B8			     cmp     al,alt_key+80h
   2336	EAB1  75 38			     jne     k26
   2337
   2338				     ;---
   2339
   2340	EAB3  A0 0019r			     mov     al,alt_input
   2341	EAB6  B4 00			     mov     ah,0
   2342	EAB8  88 26 0019r		     mov     alt_input,ah
   2343	EABC  3C 00			     cmp     al,0
   2344	EABE  74 2B			     je	     k26
   2345	EAC0  E9 FCEA			     jmp     k58
   2346
   2347	EAC3			     k24:
   2348	EAC3  F6 D4			     not     ah
   2349	EAC5  20 26 0018r		     and     kb_flag_1,ah
   2350	EAC9  EB 20				     jmp     short k26
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 48
1840v4.asm



   2351	EACB  90				     nop
   2352
   2353	EACC			     k25:
   2354	EACC  3C 80			     cmp     al,80h
   2355	EACE  73 1B			     jae     k26
   2356	EAD0  3C 59			     cmp     al,inf_key
   2357	EAD2  74 25			     je	     k307
   2358	EAD4  3C 5C			     cmp     al,92
   2359	EAD6  75 03			     jne     k406b
   2360	EAD8  E9 FEE7			     jmp     k406
   2361	EADB			     k406b:
   2362	EADB  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2363	EAE0  74 1D			     jz	     k28
   2364	EAE2  3C 45			     cmp     al,num_key
   2365	EAE4  74 05			     je	     k26
   2366	EAE6  80 26 0018r F7		     and     kb_flag_1,not hold_state
   2367
   2368	EAEB			     k26:
   2369	EAEB  FA			     cli
   2370	EAEC  B0 20			     mov     al,eoi
   2371	EAEE  E6 20			     out     020h,al
   2372	EAF0			     k27:
   2373	EAF0  07			     pop     es
   2374	EAF1  1F			     pop     ds
   2375	EAF2  5F			     pop     di
   2376	EAF3  5E			     pop     si
   2377	EAF4  5A			     pop     dx
   2378	EAF5  59			     pop     cx
   2379	EAF6  5B			     pop     bx
   2380	EAF7  58			     pop     ax
   2381	EAF8  CF			     iret
   2382
   2383	EAF9  B8 A000		     k307:   mov     ax,0a000h
   2384	EAFC  E9 FCA5			     jmp     k57
   2385
   2386
   2387				     ;---
   2388
   2389	EAFF			     k28:
   2390	EAFF  F6 06 0017r 08		     test    kb_flag,alt_shift
   2391	EB04  75 03			     jnz     k29
   2392	EB06  EB 6D				     jmp     short k38
   2393	EB08  90				     nop
   2394
   2395				     ;---
   2396
   2397	EB09			     k29:
   2398	EB09  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2399	EB0E  74 0F			     jz	     k31
   2400	EB10  3C 53			     cmp     al,del_key
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 49
1840v4.asm



   2401	EB12  75 0B			     jne     k31
   2402
   2403				     ;---
   2404
   2405	EB14  C7 06 0072r 1234		     mov     reset_flag,1234h
   2406	EB1A  EA			     db	     0eah		     ;	     db	     0eah,5bh,0e0h,00h,0f0h  ; +
   2407				     jmp far ptr start
   2408	EB1B  E05Br F000		     dw	     offset start, cod	     ;	     ###Gleb###
   2409
   2410				     ;---
   2411
   2412
   2413
   2414
   2415	EB1F			     k31:
   2416	EB1F  3C 39			     cmp     al,57
   2417	EB21  75 05			     jne     k32
   2418	EB23  B0 20			     mov     al,' '
   2419	EB25  E9 FC7C			     jmp     k57
   2420
   2421				     ;---
   2422
   2423	EB28			     k32:
   2424	EB28  BF F905r			     mov     di,offset k30
   2425	EB2B  B9 000A			     mov     cx,10
   2426	EB2E  F2> AE				     repne scasb
   2427	EB30  75 12			     jne     k33
   2428	EB32  81 EF F906r		     sub     di,offset k30+1
   2429	EB36  A0 0019r			     mov     al,alt_input
   2430	EB39  B4 0A			     mov     ah,10
   2431	EB3B  F6 E4			     mul     ah
   2432	EB3D  03 C7			     add     ax,di
   2433	EB3F  A2 0019r			     mov     alt_input,al
   2434	EB42  EB A7				     jmp     short k26
   2435
   2436				     ;---
   2437
   2438	EB44			     k33:
   2439	EB44  C6 06 0019r 00		     mov     alt_input,00h
   2440	EB49  B9 001A			     mov     cx,0026
   2441	EB4C  F2> AE				     repne scasb
   2442	EB4E  75 05			     jne     k34
   2443	EB50  B0 00			     mov     al,0
   2444	EB52  E9 FC4F			     jmp     k57
   2445
   2446				     ;---
   2447
   2448	EB55			     k34:
   2449	EB55  3C 02			     cmp     al,2
   2450	EB57  72 0C			     jb	     k35
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 50
1840v4.asm



   2451	EB59  3C 0E			     cmp     al,14
   2452	EB5B  73 08			     jae     k35
   2453	EB5D  80 C4 76			     add     ah,118
   2454	EB60  B0 00			     mov     al,0
   2455	EB62  E9 FC3F			     jmp     k57
   2456
   2457				     ;---
   2458
   2459	EB65			     k35:
   2460	EB65  3C 3B			     cmp     al,59
   2461	EB67  73 02			     jae     k37
   2462	EB69			     k36:
   2463	EB69  EB 80				     jmp     short k26
   2464	EB6B			     k37:
   2465	EB6B  3C 47			     cmp     al,71
   2466	EB6D  73 FA			     jae     k36
   2467	EB6F  BB E95Ar			     mov     bx,offset k13
   2468	EB72  E9 FC8D			     jmp     k63
   2469
   2470				     ;---
   2471
   2472	EB75			     k38:
   2473	EB75  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2474	EB7A  74 5B			     jz	     k44
   2475
   2476				     ;---
   2477				     ;---
   2478
   2479	EB7C  3C 46			     cmp     al,scroll_key
   2480	EB7E  75 18			     jne     k39
   2481	EB80  BB 001Er			     mov     bx,offset kb_buffer
   2482	EB83  89 1E 001Ar		     mov     buffer_head,bx
   2483	EB87  89 1E 001Cr		     mov     buffer_tail,bx
   2484	EB8B  C6 06 0071r 80		     mov     bios_break,80h
   2485	EB90  CD 1B			     int     1bh
   2486	EB92  B8 0000			     mov     ax,0
   2487	EB95  E9 FC0C			     jmp     k57
   2488
   2489	EB98			     k39:
   2490	EB98  3C 45			     cmp     al,num_key
   2491	EB9A  75 21			     jne     k41
   2492	EB9C  80 0E 0018r 08		     or	     kb_flag_1,hold_state
   2493	EBA1  B0 20			     mov     al,eoi
   2494	EBA3  E6 20			     out     020h,al
   2495
   2496				     ;---
   2497
   2498	EBA5  80 3E 0049r 07		     cmp     crt_mode,7
   2499	EBAA  74 07			     je	     k40
   2500	EBAC  BA 03D8			     mov     dx,03d8h
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 51
1840v4.asm



   2501	EBAF  A0 0065r			     mov     al,crt_mode_set
   2502	EBB2  EE			     out     dx,al
   2503	EBB3			     k40:
   2504	EBB3  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2505	EBB8  75 F9			     jnz     k40
   2506	EBBA  E9 FF33			     jmp     k27
   2507	EBBD			     k41:
   2508
   2509				     ;---
   2510
   2511	EBBD  3C 37			     cmp     al,55
   2512	EBBF  75 06			     jne     k42
   2513	EBC1  B8 7200			     mov     ax,114*256
   2514	EBC4  E9 FBDD			     jmp     k57
   2515
   2516				     ;---
   2517
   2518	EBC7			     k42:
   2519	EBC7  BB E889r			     mov     bx,offset k8
   2520	EBCA  3C 3B			     cmp     al,59
   2521	EBCC  73 03			     jae     k43
   2522	EBCE  E9 FBCF			     jmp     k56
   2523	EBD1			     k43:
   2524	EBD1  BB E8C3r			     mov     bx,offset k9
   2525	EBD4  E9 FC2B			     jmp     k63
   2526
   2527				     ;---
   2528
   2529	EBD7			     k44:
   2530
   2531	EBD7  3C 47			     cmp     al,71
   2532	EBD9  73 3E			     jae     k48
   2533	EBDB  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2534	EBE0  74 0A			     jz	     k54a
   2535
   2536				     ;---
   2537
   2538	EBE2  3C 0F			     cmp     al,15
   2539	EBE4  75 09			     jne     k45
   2540	EBE6  B8 0F00			     mov     ax,15*256
   2541	EBE9  E9 FBB8			     jmp     k57
   2542
   2543	EBEC			     k54a:
   2544	EBEC  E9 FB9E			     jmp k54
   2545
   2546	EBEF			     k45:
   2547	EBEF  3C 37			     cmp     al,55
   2548	EBF1  75 09			     jne     k46
   2549
   2550				     ;---
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 52
1840v4.asm



   2551
   2552	EBF3  B0 20			     mov     al,eoi
   2553	EBF5  E6 20			     out     020h,al
   2554	EBF7  CD 05			     int     5h
   2555	EBF9  E9 FEF4			     jmp     k27
   2556
   2557	EBFC			     k46:
   2558	EBFC  3C 3B			     cmp     al,59
   2559	EBFE  72 06			     jb	     k47
   2560	EC00  BB E950r			     mov     bx,offset k12
   2561	EC03  E9 FBFC			     jmp     k63
   2562
   2563	EC06			     k47:
   2564	EC06  F6 06 0018r 02		     test    kb_flag_1,lat
   2565	EC0B  74 06			     jz	     k98
   2566	EC0D  BB E916r			     mov     bx,offset k11
   2567	EC10  E9 FB8D			     jmp      k56
   2568	EC13  BB E6BDr		     k98:    mov     bx,offset rust2
   2569	EC16  E9 FB87			     jmp     k56
   2570
   2571				     ;---
   2572
   2573	EC19			     k48:
   2574	EC19  F6 06 0017r 20		     test    kb_flag,num_state
   2575	EC1E  75 23			     jnz     k52
   2576	EC20  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2577	EC25  75 23			     jnz     k53
   2578
   2579				     ;---
   2580
   2581	EC27			     k49:
   2582
   2583	EC27  3C 4A			     cmp     al,74
   2584	EC29  74 0C			     je	     k50
   2585	EC2B  3C 4E			     cmp     al,78
   2586	EC2D  74 0E			     je	     k51
   2587	EC2F  2C 47			     sub     al,71
   2588	EC31  BB E971r			     mov     bx,offset k15
   2589	EC34  E9 FBCD			     jmp       k64
   2590
   2591	EC37  B8 4A2D		     k50:    mov     ax,74*256+'-'
   2592	EC3A  E9 FB67			     jmp      k57
   2593
   2594	EC3D  B8 4E2B		     k51:    mov     ax,78*256+'+'
   2595	EC40  E9 FB61			     jmp      k57
   2596
   2597				     ;---
   2598
   2599	EC43			     k52:
   2600	EC43  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 53
1840v4.asm



   2601	EC48  75 DD			     jnz     k49
   2602
   2603	EC4A			     k53:
   2604	EC4A  2C 46			     sub     al,70
   2605	EC4C  BB E964r			     mov     bx,offset k14
   2606	EC4F  E9 FB4E			     jmp      k56
   2607	EC52			     kb_int  endp
   2608
   2609	EC52  07*(00)				     db	7 dup(0)
   2610
   2611				     ;--- int 13H---------
   2612				     ;	 Программа обслуживания накопителя на	       +
   2613				     гибком магнитном
   2614				     ; диске выполняет шесть	функций,	код которых  +
   2615				     задается
   2616				     ; в регистре AH:
   2617				     ;	 AH=0 -	сбросить  НГМД;
   2618				     ;	 AH=1 -	считать байт	состояния НГМД. Состояние+
   2619				     соответствует
   2620				     ; последней выполняемой операции и		       +
   2621				     передается в регистр AL из
   2622				     ; постоянно распределенной области		       +
   2623				     оперативной памяти с адресом
   2624				     ; 00441H;
   2625				     ;	  AH=2H	- считать указанный сектор в память;
   2626				     ;	  AH=3H	- записать указанный сектор из	памяти;
   2627				     ;	  AH=4H	- верификация;
   2628				     ;	  AH=5H	- форматизация.
   2629				     ;	  Для выполнения функций записи,		       +
   2630				     считывания, верификации,
   2631				     ; форматизации	в регистрах задается		       +
   2632				     следующая	информация:
   2633				     ;	  DL - номер устройства (0-3, контролируемое      +
   2634				     значение);
   2635				     ;	  DH - номер головки (0-1, неконтролируемое	       +
   2636				     значение);
   2637				     ;	  CH - номер дорожки (0-39,	неконтролируемое       +
   2638				     значение);
   2639				     ;	  CL - номер сектора (1-8, неконтролируемое	       +
   2640				     значение);
   2641				     ;	  AL - количество секторов (1-8,			       +
   2642				     неконтролируемое значение).
   2643				     ;
   2644				     ;	  Для выполнения форматизации необходимо    +
   2645				     сформировать в
   2646				     ; памяти четырехбайтную таблицу	для каждого  +
   2647				     сектора, содержащую
   2648				     ; следующую информацию:
   2649				     ;	  номер дорожки;
   2650				     ;	  номер головки;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 54
1840v4.asm



   2651				     ;	  номер сектора;
   2652				     ;	  количество байт	в секторе (00 -	128 байт, 01 - 256 +
   2653				     байт,
   2654				     ; 02 - 512	байт, 03 - 1024 байта).
   2655				     ;	  Адрес таблицы задается в	регистрах ES:BX.
   2656				     ;
   2657				     ;	  После выполнения программы в	регистре AH    +
   2658				     находится
   2659				     ; байт	состояния НГМД.
   2660				     ;
   2661				     ;	  Байт состояния НГМД имеет следующее	       +
   2662				     значение:
   2663				     ;	  80 - тайм-аут;
   2664				     ;	  40 - сбой	позиционирования;
   2665				     ;	  20 - сбой	контроллера;
   2666				     ;	  10 - ошибка кода циклического контроля при  +
   2667				     считывании;
   2668				     ;	  09 - переход адреса через сегмент (64К байт);
   2669				     ;	  08 - переполнение;
   2670				     ;	  04 - сектор не найден;
   2671				     ;	  03 - защита записи;
   2672				     ;	  02 - не обнаружен маркер идентификатора       +
   2673				     сектора;
   2674				     ;	  01 - команда отвергнута.
   2675				     ;	  При успешном завершении программы	       +
   2676				     признак CF=0,  в про-
   2677				     ; тивном случае - признак CF=1 (регистр AH	       +
   2678				     содержит код ошибки).
   2679				     ;	  Регистр AL содержит количество реально       +
   2680				     считанных	секторов.
   2681				     ;	  Адрес программы	обслуживания накопителя  +
   2682				     на гибком магнитном
   2683				     ; диске записывается в вектор 40H в процедуре   +
   2684				     сброса по включению
   2685				     ; питания.
   2686				     ;-------------------------
   2687					     assume  cs:code,ds:data,es:data
   2688	EC59			     diskette_io proc	     far
   2689	EC59  FB			     sti		     ; установить признак	       +
   2690				     прерывания
   2691	EC5A  53			     push    bx		     ; сохранить адрес
   2692	EC5B  51			     push    cx
   2693	EC5C  1E			     push    ds		; сохранить сегментное	       +
   2694				     значение регистра
   2695	EC5D  56			     push    si		; сохранить все регистры во      +
   2696				     время	операции
   2697	EC5E  57			     push    di
   2698	EC5F  55			     push    bp
   2699	EC60  52			     push    dx
   2700	EC61  8B EC			     mov     bp,sp	; установить указатель	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 55
1840v4.asm



   2701				     вершины стека
   2702	EC63  BE 0040			     mov     si,dat
   2703	EC66  8E DE			     mov     ds,si	     ; установить область данных
   2704	EC68  E8 001C			     call    j1		     ;
   2705	EC6B  BB 0004			     mov     bx,4	     ; получить	параметры	       +
   2706				     ожидания мотора
   2707	EC6E  E8 01E0			     call    get_parm
   2708	EC71  88 26 0040r		     mov     motor_count,ah  ; уст время отсчета	для	       +
   2709				     мотора
   2710	EC75  8A 26 0041r		     mov     ah,diskette_status	 ; получить состояние	       +
   2711				     операции
   2712	EC79  80 FC 01			     cmp     ah,1	     ; уст признак CF	для		       +
   2713				     индикации
   2714	EC7C  F5			     cmc		     ; успешной	операции
   2715	EC7D  5A			     pop     dx		     ; восстановить	все регистры
   2716	EC7E  5D			     pop     bp
   2717	EC7F  5F			     pop     di
   2718	EC80  5E			     pop     si
   2719	EC81  1F			     pop     ds
   2720	EC82  59			     pop     cx
   2721	EC83  5B			     pop     bx
   2722	EC84  CA 0002			     ret     2
   2723	EC87			     diskette_io     endp
   2724	EC87			     j1	     proc    near
   2725	EC87  8A F0			     mov     dh,al	     ; сохранить количество	       +
   2726				     секторов
   2727	EC89  80 26 003Fr 7F		     and     motor_status,07fh	 ; указать операцию	       +
   2728				     считывания
   2729	EC8E  0A E4			     or	     ah,ah	     ; AH=0
   2730	EC90  74 27			     jz	     disk_reset
   2731	EC92  FE CC			     dec     ah		     ; AH=1
   2732	EC94  74 74			     jz	     disk_status
   2733	EC96  C6 06 0041r 00		     mov     diskette_status,0	 ; сброс состояния
   2734	EC9B  80 FA 04			     cmp     dl,4	     ; проверка	количества	       +
   2735				     устройств
   2736	EC9E  73 13			     jae     j3		     ; переход по ошибке
   2737	ECA0  FE CC			     dec     ah		     ; AH=2
   2738	ECA2  74 6A			     jz	     disk_read
   2739	ECA4  FE CC			     dec     ah		     ; AH=3
   2740	ECA6  75 03			     jnz     j2
   2741	ECA8  E9 0096			     jmp     disk_write
   2742	ECAB			     j2:
   2743	ECAB  FE CC			     dec     ah		     ; AH=4
   2744	ECAD  74 68			     jz	     disk_verf
   2745	ECAF  FE CC			     dec     ah		     ; AH=5
   2746	ECB1  74 68			     jz	     disk_format
   2747	ECB3			     j3:
   2748	ECB3  C6 06 0041r 01		     mov     diskette_status,bad_cmd   ; неверная команда
   2749
   2750	ECB8  C3			     ret		     ; операция	не определена
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 56
1840v4.asm



   2751	ECB9			     j1	     endp
   2752
   2753				     ;	 Сбросить НГМД
   2754
   2755	ECB9			     disk_reset	proc near
   2756	ECB9  BA 03F2			     mov     dx,03f2h
   2757	ECBC  FA			     cli		     ; сброс признака разрешения+
   2758				     прерывания
   2759	ECBD  A0 003Fr			     mov     al,motor_status  ;	какой мотор включен
   2760	ECC0  B1 04			     mov     cl,4	     ; счетчик сдвига
   2761	ECC2  D2 E0			     sal     al,cl
   2762	ECC4  A8 20			     test    al,20h	     ; выбрать соответствующее   +
   2763				     устройство
   2764	ECC6  75 0C			     jnz     j5		     ; переход, если	включен	       +
   2765				     мотор	первого
   2766								     ; устройства
   2767	ECC8  A8 40			     test    al,40h
   2768	ECCA  75 06			     jnz     j4		     ; переход, если	включен	       +
   2769				     мотор	второго
   2770								     ; устройства
   2771	ECCC  A8 80			     test    al,80h
   2772	ECCE  74 06			     jz	     j6		     ; переход, если	включен	       +
   2773				     мотор	нулевого
   2774								     ; устройства
   2775	ECD0  FE C0			     inc     al
   2776	ECD2  FE C0		     j4:     inc     al
   2777	ECD4  FE C0		     j5:     inc     al
   2778	ECD6  0C 08		     j6:     or	     al,8	     ; включить	доступность	       +
   2779				     прерывания
   2780	ECD8  EE			     out     dx,al	     ; сброс адаптера
   2781	ECD9  C6 06 003Er 00		     mov     seek_status,0
   2782	ECDE  C6 06 0041r 00		     mov     diskette_status,0	; уст нормальное		       +
   2783				     состояние	НГМД
   2784	ECE3  0C 04			     or	     al,4	     ; выключить сброс
   2785	ECE5  EE			     out     dx,al
   2786	ECE6  FB			     sti		     ; установить бит разрешения+
   2787				     прерывания
   2788	ECE7  E8 0225			     call    chk_stat_2	     ; выполнить прерывание	       +
   2789				     после	сброса
   2790	ECEA  A0 0042r			     mov     al,nec_status
   2791	ECED  3C C0			     cmp     al,0c0h	; проверка готовности		       +
   2792				     устройства для передачи
   2793	ECEF  74 07			     jz	     j7		     ; устройство готово
   2794	ECF1  80 0E 0041r 20		     or	     diskette_status,bad_nec  ;	уст код ошибки
   2795	ECF6  EB 11			     jmp     short j8
   2796
   2797				     ;	 Послать	команду в контроллер
   2798
   2799	ECF8			     j7:
   2800	ECF8  B4 03			     mov     ah,03h	     ; установить команду
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 57
1840v4.asm



   2801	ECFA  E8 FA32			     call    nec_output	     ; передать	команду
   2802	ECFD  BB 0001			     mov     bx,1	     ; передача	первого байта      +
   2803				     параметров
   2804	ED00  E8 014E			     call    get_parm	     ; в контроллер
   2805	ED03  BB 0003			     mov     bx,3	     ; передача	второго байта      +
   2806				     параметров
   2807	ED06  E8 0148			     call    get_parm	     ; в контроллер
   2808	ED09			     j8:
   2809	ED09  C3			     ret		     ; возврат к прерванной	       +
   2810				     программе
   2811	ED0A			     disk_reset	     endp
   2812
   2813				     ;
   2814				     ; Считать байт состояния НГМД (AH=1)
   2815				     ;
   2816
   2817	ED0A			     disk_status proc near
   2818	ED0A  A0 0041r			     mov     al,diskette_status
   2819	ED0D  C3			     ret
   2820	ED0E			     disk_status     endp
   2821
   2822				     ;	 Считать	указанный сектор	в память	(AH=2)
   2823
   2824	ED0E			     disk_read proc near
   2825	ED0E  B0 46			     mov     al,046h	     ; установить команду
   2826	ED10			     j9:
   2827	ED10  E8 01B6			     call    dma_setup	     ; установить ПДП
   2828	ED13  B4 E6			     mov     ah,0e6h	 ; уст команду считывания	       +
   2829				     контроллера
   2830	ED15  EB 36			     jmp     short rw_opn    ; переход к выполнению	       +
   2831				     операции
   2832	ED17			     disk_read	     endp
   2833
   2834				     ;	 Верификация	(AH=4)
   2835
   2836	ED17			     disk_verf proc near
   2837	ED17  B0 42			     mov     al,042h	     ; установить команду
   2838	ED19  EB F5			     jmp     short j9
   2839	ED1B			     disk_verf	     endp
   2840
   2841				     ;	 Форматизация (AH=5)
   2842
   2843	ED1B			     disk_format proc near
   2844	ED1B  80 0E 003Fr 80		     or	     motor_status,80h  ; индикация операции	       +
   2845				     записи
   2846	ED20  B0 4A			     mov     al,04ah	       ; установить команду
   2847	ED22  E8 01A4			     call    dma_setup	       ; установить ПДП
   2848	ED25  B4 4D			     mov     ah,04dh	       ; установить команду
   2849	ED27  EB 24			     jmp     short rw_opn
   2850	ED29			     j10:
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 58
1840v4.asm



   2851	ED29  BB 0007			     mov     bx,7	       ; получить значение	       +
   2852				     сектора
   2853	ED2C  E8 0122			     call    get_parm
   2854	ED2F  BB 0009			     mov     bx,9	     ; получить	значение дорожки+
   2855				     на секторе
   2856	ED32  E8 011C			     call    get_parm
   2857	ED35  BB 000F			     mov     bx,15	     ; получить	значение длины    +
   2858				     интервала
   2859	ED38  E8 0116			     call    get_parm	     ; для контроллера
   2860	ED3B  BB 0011			     mov     bx,17	     ; получить	полный байт
   2861	ED3E  E9 00B8			     jmp     j16
   2862	ED41			     disk_format     endp
   2863
   2864				     ;	 Записать указанный сектор из памяти (AH=3)
   2865
   2866	ED41			     disk_write	proc near
   2867	ED41  80 0E 003Fr 80		     or	     motor_status,80h	     ; индикация операции     +
   2868				     записи
   2869	ED46  B0 4A			     mov     al,04ah		     ; уст код операции	       +
   2870				     записи
   2871	ED48  E8 017E			     call    dma_setup
   2872	ED4B  B4 C5			     mov     ah,0c5h		     ; команда записи на	НГМД
   2873	ED4D			     disk_write	     endp
   2874
   2875				     ;______________________
   2876				     ; rw_opn
   2877				     ;	 Программа выполнения операций
   2878				     ;	 считывания, записи, верификации
   2879				     ;----------------------
   2880	ED4D			     rw_opn  proc    near
   2881	ED4D  73 08			     jnc     j11	     ; проверка	ошибки ПДП
   2882	ED4F  C6 06 0041r 09		     mov     diskette_status,dma_boundary   ; установить ошибку
   2883	ED54  B0 00			     mov     al,0	     ;
   2884	ED56  C3			     ret		     ; возврат к основной	       +
   2885				     программе
   2886	ED57			     j11:
   2887	ED57  50			     push    ax		     ; сохранить команду
   2888
   2889				     ;	 Включить мотор и	выбрать устройство
   2890
   2891	ED58  51			     push    cx
   2892	ED59  8A CA			     mov     cl,dl	     ; уст номер устройства, как  +
   2893				     счетчик сдвига
   2894	ED5B  B0 01			     mov     al,1	     ; маска для определения	       +
   2895				     мотора устройства
   2896	ED5D  D2 E0			     sal     al,cl	     ; сдвиг
   2897	ED5F  FA			     cli		     ; сбросить	бит разрешения    +
   2898				     прерывания
   2899	ED60  C6 06 0040r FF		     mov     motor_count,0ffh  ; установить счетчик
   2900	ED65  84 06 003Fr		     test    al,motor_status
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 59
1840v4.asm



   2901	ED69  75 3F			     jnz     j14
   2902	ED6B  80 26 003Fr F0		     and     motor_status,0f0h	; выключить все биты	       +
   2903				     мотора
   2904	ED70  08 06 003Fr		     or	     motor_status,al	; включить мотор
   2905	ED74  FB			     sti		     ; установить бит разрешения+
   2906				     прерывания
   2907	ED75  B0 10			     mov     al,10h	     ; бит маски
   2908	ED77  D2 E0			     sal     al,cl	     ; уст бит маски	для		       +
   2909				     доступности мотора
   2910	ED79  0A C2			     or	     al,dl	     ; включить	бит выбора	       +
   2911				     устройства
   2912	ED7B  0C 0C			     or	     al,0ch	     ; нет сброса, доступность     +
   2913				     прерывания ПДП
   2914	ED7D  52			     push    dx
   2915	ED7E  BA 03F2			     mov     dx,03f2h	     ; установить адрес порта
   2916	ED81  EE			     out     dx,al
   2917	ED82  5A			     pop     dx		     ; восстановить	регистры
   2918	ED83  51			     push    cx		     ;задержка для включения       +
   2919				     мотора устройства
   2920	ED84  B9 0003			     mov     cx,3
   2921	ED87  51		     x2:     push    cx
   2922	ED88  B9 0000			     mov     cx,0
   2923	ED8B  E2 FE		     x1:     loop    x1
   2924	ED8D  59			     pop     cx
   2925	ED8E  E2 F7			     loop    x2
   2926	ED90  59			     pop     cx
   2927
   2928				     ;	 Ожидание включения мотора для операции      +
   2929				     записи
   2930
   2931	ED91  F6 06 003Fr 80		     test    motor_status,80h  ; запись ?
   2932	ED96  74 12			     jz	     j14     ; нет -	продолжать без ожидания
   2933	ED98  BB 0014			     mov     bx,20	     ; установить ожидание	       +
   2934				     включения	мотора
   2935	ED9B  E8 00B3			     call    get_parm	     ; получить	параметры
   2936	ED9E  0A E4			     or	     ah,ah
   2937	EDA0			     j12:
   2938	EDA0  74 08			     jz	     j14	     ; выход по окончании	       +
   2939				     времени ожидания
   2940	EDA2  2B C9			     sub     cx,cx	     ; установить счетчик
   2941	EDA4  E2 FE		     j13:    loop    j13	     ; ожидать требуемое время
   2942	EDA6  FE CC			     dec     ah		     ; уменьшеть значение	       +
   2943				     времени
   2944	EDA8  EB F6			     jmp     short j12	     ; повторить цикл
   2945
   2946	EDAA			     j14:
   2947	EDAA  FB			     sti		     ; уст признак разрешения      +
   2948				     прерывания
   2949	EDAB  59			     pop     cx
   2950
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 60
1840v4.asm



   2951				     ;	 Выполнить операцию поиска
   2952
   2953	EDAC  E8 00B8			     call    seek	     ; установить дорожку
   2954	EDAF  58			     pop     ax		     ; восстановить	команду
   2955	EDB0  8A FC			     mov     bh,ah	     ; сохранить команду в BH
   2956	EDB2  B6 00			     mov     dh,0	     ; уст 0	сектор в	случае	       +
   2957				     ошибки
   2958	EDB4  72 4A			     jc	     j17	     ; выход, если ошибка
   2959	EDB6  BE EE00r			     mov     si,offset j17
   2960
   2961	EDB9  56			     push    si
   2962
   2963				     ;	 Послать	параметры в контроллер
   2964
   2965	EDBA  E8 F972			     call    nec_output	     ; передача	команды
   2966	EDBD  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; уст номер головки
   2967	EDC0  D0 E4			     sal     ah,1	     ; сдвиг на 2
   2968	EDC2  D0 E4			     sal     ah,1
   2969	EDC4  80 E4 04			     and     ah,4	     ; выделить	бит
   2970	EDC7  0A E2			     or	     ah,dl	     ; операция	OR с номером	       +
   2971				     устройства
   2972	EDC9  E8 F963			     call    nec_output
   2973
   2974				     ;	 Проверка операции форматизации
   2975
   2976	EDCC  80 FF 4D			     cmp     bh,04dh	     ; форматизация	?
   2977	EDCF  75 03			     jne     j15    ; нет - продолжать			       +
   2978				     запись/считывание/верификацию
   2979	EDD1  E9 FF55			     jmp     j10
   2980
   2981	EDD4  8A E5		     j15:    mov     ah,ch	     ; номер цилиндра
   2982	EDD6  E8 F956			     call    nec_output
   2983	EDD9  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; номер головки
   2984	EDDC  E8 F950			     call    nec_output
   2985	EDDF  8A E1			     mov     ah,cl	     ; номер сектора
   2986	EDE1  E8 F94B			     call    nec_output
   2987	EDE4  BB 0007			     mov     bx,7
   2988	EDE7  E8 0067			     call    get_parm
   2989	EDEA  BB 0009			     mov     bx,9
   2990	EDED  E8 0061			     call    get_parm
   2991	EDF0  BB 000B			     mov     bx,11
   2992	EDF3  E8 005B			     call    get_parm
   2993	EDF6  BB 000D			     mov     bx,13
   2994	EDF9			     j16:
   2995	EDF9  E8 0055			     call    get_parm
   2996	EDFC  5E			     pop     si
   2997
   2998				     ;	 Операция запущена
   2999
   3000	EDFD  E8 0130			     call    wait_int	     ; ожидание	прерывания
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 61
1840v4.asm



   3001	EE00			     j17:
   3002	EE00  72 45			     jc	     j21	     ; поиск ошибки
   3003	EE02  E8 0166			     call    results	     ; получить	состояние	       +
   3004				     контроллера
   3005	EE05  72 3F			     jc	     j20	     ; поиск ошибки
   3006
   3007				     ;	 Проверка  состояния, полученного из	       +
   3008				     контроллера
   3009
   3010	EE07  FC			     cld		     ; установить направление     +
   3011				     коррекции
   3012	EE08  BE 0042r			     mov     si,offset nec_status
   3013	EE0B  AC			     lods    nec_status
   3014	EE0C  24 C0			     and     al,0c0h	     ; проверить нормальное	       +
   3015				     окончание
   3016	EE0E  74 3B			     jz	     j22
   3017	EE10  3C 40			     cmp     al,040h	     ; проверить неверное	       +
   3018				     окончание
   3019	EE12  75 29			     jnz     j18
   3020
   3021				     ;	 Обнаруженно	неверное окончание
   3022
   3023	EE14  AC			     lods    nec_status
   3024	EE15  D0 E0			     sal     al,1
   3025	EE17  B4 04			     mov     ah,record_not_fnd
   3026	EE19  72 24			     jc	     j19
   3027	EE1B  D0 E0			     sal     al,1
   3028	EE1D  D0 E0			     sal     al,1
   3029	EE1F  B4 10			     mov     ah,bad_crc
   3030	EE21  72 1C			     jc	     j19
   3031	EE23  D0 E0			     sal     al,1
   3032	EE25  B4 08			     mov     ah,bad_dma
   3033	EE27  72 16			     jc	     j19
   3034	EE29  D0 E0			     sal     al,1
   3035	EE2B  D0 E0			     sal     al,1
   3036	EE2D  B4 04			     mov     ah,record_not_fnd
   3037	EE2F  72 0E			     jc	     j19
   3038	EE31  D0 E0			     sal     al,1
   3039	EE33  B4 03			     mov     ah,write_protect  ; проверка защиты записи
   3040	EE35  72 08			     jc	     j19
   3041	EE37  D0 E0			     sal     al,1
   3042	EE39  B4 02			     mov     ah,bad_addr_mark
   3043	EE3B  72 02			     jc	     j19
   3044
   3045				     ;	 Контроллер вышел из строя
   3046
   3047	EE3D			     j18:
   3048	EE3D  B4 20			     mov     ah,bad_nec
   3049	EE3F			     j19:
   3050	EE3F  08 26 0041r		     or	     diskette_status,ah
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 62
1840v4.asm



   3051	EE43  E8 016A			     call    num_trans
   3052	EE46			     j20:
   3053	EE46  C3			     ret	     ; возврат к программе, вызвавшей+
   3054				     прерывание
   3055
   3056	EE47			     j21:
   3057	EE47  E8 0121			     call    results	     ; вызов результатов в буфер
   3058	EE4A  C3			     ret
   3059
   3060				     ;	 Операция была успешной
   3061
   3062	EE4B			     j22:
   3063	EE4B  E8 0162			     call    num_trans
   3064	EE4E  32 E4			     xor     ah,ah	     ; нет ошибок
   3065	EE50  C3			     ret
   3066	EE51			     rw_opn  endp
   3067				     ;------------------------
   3068				     ;get_parm
   3069				     ;
   3070				     ;	 ВХОД   BX - индекс байта,деленный
   3071				     ;		     на 2,который будет
   3072				     ;		     выбран,если младший
   3073				     ;		     бит BX установлен,то
   3074				     ;		     байт немедленно пере-
   3075				     ;		     дается контроллеру.
   3076				     ;
   3077				     ;	 ВЫХОД  AH	- байт из	блока.
   3078				     ;-------------------------
   3079	EE51			     get_parm proc   near
   3080	EE51  1E			     push    ds		     ; сохранить сегмент
   3081	EE52  2B C0			     sub     ax,ax	     ; AX=0
   3082	EE54  8E D8			     mov     ds,ax
   3083					     assume  ds:abs0
   3084	EE56  C5 36 0078r		     lds     si,disk_pointer
   3085	EE5A  D1 EB			     shr     bx,1	     ; делить BX на 2, уст флаг для  +
   3086				     выхода
   3087	EE5C  8A A0 0000r		     mov     ah,zb[si+bx]    ; получить	слово
   3088	EE60  1F			     pop     ds		     ; восстановить	сегмент
   3089					     assume  ds:data
   3090	EE61  72 01			     jc	     nec_op	      ;если	флаг установлен,	       +
   3091				     выход
   3092	EE63  C3			     ret	     ; возврат к программе, вызвавшей+
   3093				     прерывание
   3094	EE64  E9 F8C8		     nec_op: jmp     nec_output
   3095	EE67			     get_parm endp
   3096				     ;----------------------------
   3097				     ;	 Позиционирование
   3098				     ;
   3099				     ;	 Эта	программа позиционирует голов-
   3100				     ; ку обозначенного устройства на нуж-
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 63
1840v4.asm



   3101				     ; ную дорожку. Если устройство не
   3102				     ; было	выбрано до тех пор, пока не
   3103				     ; была	сброшена команда,то устройство
   3104				     ; будет рекалибровано.
   3105				     ;
   3106				     ;	 ВВОД
   3107				     ;	     (DL) - номер усройства для
   3108				     ;		    позиционирования,
   3109				     ;	     (CH) - номер дорожки.
   3110				     ;
   3111				     ;	 ВЫВОД
   3112				     ;	      CY=0 - успешно,
   3113				     ;	      CY=1 - сбой (состояние НГМД установить
   3114				     ;		     согласно  AX).
   3115				     ;----------------------------
   3116	EE67			     seek    proc    near
   3117	EE67  B0 01			     mov     al,1	     ; уст маску
   3118	EE69  51			     push    cx
   3119	EE6A  8A CA			     mov     cl,dl	     ; установить номер		       +
   3120				     устройства
   3121	EE6C  D2 C0			     rol     al,cl	     ; циклический сдвиг влево
   3122	EE6E  59			     pop     cx
   3123	EE6F  84 06 003Er		     test    al,seek_status
   3124	EE73  75 20			     jnz     j28
   3125	EE75  08 06 003Er		     or	     seek_status,al
   3126	EE79  B4 07			     mov     ah,07h
   3127	EE7B  E8 F8B1			     call    nec_output
   3128	EE7E  8A E2			     mov     ah,dl
   3129	EE80  E8 F8AC			     call    nec_output
   3130	EE83  E8 0089			     call    chk_stat_2	  ; получить и	обработать	       +
   3131				     прерывание
   3132	EE86  B4 07			     mov     ah,07h	     ; команда рекалибровки
   3133	EE88  E8 F8A4			     call    nec_output
   3134	EE8B  8A E2			     mov     ah,dl
   3135	EE8D  E8 F89F			     call    nec_output
   3136	EE90  E8 007C			     call    chk_stat_2
   3137	EE93  72 33			     jc	     j32	     ; сбой	позиционирования
   3138
   3139
   3140	EE95			     j28:
   3141	EE95  B4 0F			     mov     ah,0fh
   3142	EE97  E8 F895			     call    nec_output
   3143	EE9A  8A E2			     mov     ah,dl	     ; номер устройства
   3144	EE9C  E8 F890			     call    nec_output
   3145	EE9F  8A E5			     mov     ah,ch	     ; номер дорожки
   3146	EEA1  90				     nop
   3147	EEA2  F6 06 0010r 04		     test    byte ptr equip_flag,4
   3148	EEA7  75 02			     jnz     j300
   3149	EEA9  02 E4			     add     ah,ah	     ; удвоение	номера дорожки
   3150	EEAB			     j300:
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 64
1840v4.asm



   3151	EEAB  E8 F881			     call    nec_output
   3152	EEAE  E8 005E			     call    chk_stat_2	     ; получить	конечное	       +
   3153				     прерывание и
   3154								     ; считать состояние
   3155
   3156
   3157	EEB1  9C			     pushf		     ; сохранить значение	       +
   3158				     флажков
   3159	EEB2  BB 0012			     mov     bx,18
   3160	EEB5  E8 FF99			     call    get_parm
   3161	EEB8  51			     push    cx		     ; сохранить регистр
   3162	EEB9			     j29:
   3163	EEB9  B9 0226			     mov     cx,550	     ; организовать	цикл = 1 ms
   3164	EEBC  0A E4			     or	     ah,ah	     ; проверка	окончания	       +
   3165				     времени
   3166	EEBE  74 06			     jz	     j31
   3167	EEC0  E2 FE		     j30:    loop    j30	     ; задержка	1ms
   3168	EEC2  FE CC			     dec     ah		     ; вычитание из счетчика
   3169	EEC4  EB F3			     jmp     short j29	     ; возврат к началу цикла
   3170	EEC6			     j31:
   3171	EEC6  59			     pop     cx		     ; восстановить	состояние
   3172	EEC7  9D			     popf
   3173	EEC8			     j32:			     ; ошибка позиционирования
   3174	EEC8  C3			     ret	     ; возврат к программе, вызвавшей+
   3175				     прерывание
   3176	EEC9			     seek    endp
   3177				     ;-----------------------
   3178				     ; dma_setup
   3179				     ;	 Программа установки ПДП для операций	       +
   3180				     записи,считывания,верифи-
   3181				     ; кации.
   3182				     ;
   3183				     ;	 ВВОД
   3184				     ;
   3185				     ;	     (AL) - байт режима для ПДП,
   3186				     ;	     (ES:BX) - адрес считывания/записи		       +
   3187				     информации.
   3188				     ;
   3189				     ;------------------------
   3190	EEC9			     dma_setup proc  near
   3191	EEC9  51			     push    cx		     ; сохранить регистр
   3192	EECA  E6 0C			     out     dma+12,al
   3193	EECC  E6 0B			     out     dma+11,al	     ; вывод байта состояния
   3194	EECE  8C C0			     mov     ax,es	     ; получить	значение ES
   3195	EED0  B1 04			     mov     cl,4	     ; счетчик для сдвига
   3196	EED2  D3 C0			     rol ax,cl		     ; циклический сдвиг влево
   3197	EED4  8A E8			     mov     ch,al	     ;
   3198	EED6  24 F0			     and     al,0f0h	     ;
   3199	EED8  03 C3			     add     ax,bx
   3200	EEDA  73 02			     jnc     j33
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 65
1840v4.asm



   3201	EEDC  FE C5			     inc     ch		     ; перенос означает,	что	       +
   3202				     старшие 4 бита
   3203								     ; должны быть прибавлены
   3204	EEDE			     j33:
   3205	EEDE  50			     push    ax		     ; сохранить начальный адрес
   3206	EEDF  E6 04			     out     dma+4,al	     ; вывод младшей половины      +
   3207				     адреса
   3208	EEE1  8A C4			     mov     al,ah
   3209	EEE3  E6 04			     out     dma+4,al	     ; вывод старшей половины      +
   3210				     адреса
   3211	EEE5  8A C5			     mov     al,ch	     ; получить	4 старших бита
   3212	EEE7  24 0F			     and     al,0fh
   3213	EEE9  E6 81			     out     081h,al   ; вывод 4 старших бит на регистр+
   3214				     страниц
   3215
   3216				     ;	 Определение	счетчика
   3217
   3218	EEEB  8A E6			     mov     ah,dh	     ; номер сектора
   3219	EEED  2A C0			     sub     al,al	     ;
   3220	EEEF  D1 E8			     shr     ax,1	     ;
   3221	EEF1  50			     push    ax
   3222	EEF2  BB 0006			     mov     bx,6	     ; получить	параметры	       +
   3223				     байт/сектор
   3224	EEF5  E8 FF59			     call    get_parm
   3225	EEF8  8A CC			     mov     cl,ah	     ; счетчик сдига (0=128, 1=256 и т.д)
   3226	EEFA  58			     pop     ax
   3227	EEFB  D3 E0			     shl     ax,cl	     ; сдвиг
   3228	EEFD  48			     dec     ax		     ; -1
   3229	EEFE  50			     push    ax		     ; сохранить значение	       +
   3230				     счетчика
   3231	EEFF  E6 05			     out     dma+5,al	     ; вывести младший байт	       +
   3232				     счетчика
   3233	EF01  8A C4			     mov     al,ah
   3234	EF03  E6 05			     out     dma+5,al	     ; вывести старший байт	       +
   3235				     счетчика
   3236	EF05  59			     pop     cx		     ; восстановить	значение       +
   3237				     счетчика
   3238	EF06  58			     pop     ax		     ; восстановить	значение       +
   3239				     адреса
   3240	EF07  03 C1			     add     ax,cx	     ; проверка	заполнения 64K
   3241	EF09  59			     pop     cx		     ; восстановить	регистр
   3242	EF0A  B0 02			     mov     al,2	     ; режим для 8237
   3243	EF0C  E6 0A			     out     dma+10,al	     ; инициализация канала НГМД
   3244	EF0E  C3			     ret	     ; возврат к программе, вызвавшей+
   3245				     прерывание
   3246	EF0F			     dma_setup	     endp
   3247				     ;-----------------------
   3248				     ;chk_stat_2
   3249				     ;	 Эта	программа обрабатывает прерывания ,     +
   3250				     полученные после
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 66
1840v4.asm



   3251				     ; рекалибровки, позиционирования или сброса  +
   3252				     адаптера. Прерывание
   3253				     ; ожидается, принимается, обрабатывается	и     +
   3254				     результат	выдается программе,
   3255				     ; вызвавшей прерывание.
   3256				     ;
   3257				     ;	 ВЫВОД
   3258				     ;	       CY=0 - успешно,
   3259				     ;	       CY=1 - сбой (ошибка в	состоянии НГМД),
   3260				     ;--------------------------
   3261	EF0F			     chk_stat_2	proc near
   3262	EF0F  E8 001E			     call    wait_int	     ; ожидание	прерывания
   3263	EF12  72 14			     jc	     j34	     ; если	ошибка, то возврат
   3264	EF14  B4 08			     mov     ah,08h	     ; команда получения	       +
   3265				     состояния
   3266	EF16  E8 F816			     call    nec_output
   3267	EF19  E8 004F			     call    results	     ; считать результаты
   3268	EF1C  72 0A			     jc	     j34
   3269	EF1E  A0 0042r			     mov     al,nec_status   ; получить	первый байт	       +
   3270				     состояния
   3271	EF21  24 60			     and     al,060h	     ; выделить	биты
   3272	EF23  3C 60			     cmp     al,060h	     ; проверка
   3273	EF25  74 02			     jz	     j35	; если ошибка, то идти на метку
   3274	EF27  F8			     clc		     ; возврат
   3275	EF28			     j34:
   3276	EF28  C3			     ret	     ; возврат к программе, вызвавшей+
   3277				     прерывание
   3278	EF29			     j35:
   3279	EF29  80 0E 0041r 40		     or	     diskette_status,bad_seek
   3280	EF2E  F9			     stc		     ; ошибка в возвращенном	коде
   3281	EF2F  C3			     ret
   3282	EF30			     chk_stat_2	     endp
   3283				     ;---------------------------------
   3284				     ; wait_int
   3285				     ;	 Эта	программа ожидает прерывание,	которое +
   3286				     возникает	во время
   3287				     ; программы вывода.	Если устройство не	       +
   3288				     готово, ошибка	может быть
   3289				     ; возвращена.
   3290				     ;
   3291				     ;
   3292				     ;	 ВЫВОД
   3293				     ;		   CY=0	- успешно,
   3294				     ;		   CY=1	- сбой(состояние НГМД			       +
   3295				     устанавливается),
   3296				     ;-----------------------------------
   3297	EF30			     wait_int proc   near
   3298	EF30  FB			     sti		     ; установить признак	       +
   3299				     разрешения прерывания
   3300	EF31  53			     push    bx
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 67
1840v4.asm



   3301	EF32  51			     push    cx		     ; сохранить регистр
   3302	EF33  B3 02			     mov     bl,2	     ; количество циклов
   3303	EF35  33 C9			     xor     cx,cx	     ; длителность одного цикла  +
   3304				     ожидания
   3305	EF37			     j36:
   3306	EF37  F6 06 003Er 80		     test    seek_status,int_flag  ; опрос	наличия		       +
   3307				     прерывания
   3308	EF3C  75 0C			     jnz     j37
   3309	EF3E  E2 F7			     loop    j36	     ; возврат к началу цикла
   3310	EF40  FE CB			     dec     bl
   3311	EF42  75 F3			     jnz     j36
   3312	EF44  80 0E 0041r 80		     or	     diskette_status,time_out
   3313	EF49  F9			     stc		     ; возврат при ошибке
   3314	EF4A			     j37:
   3315	EF4A  9C			     pushf		     ; сохранить текущие	       +
   3316				     признаки
   3317	EF4B  80 26 003Er 7F		     and     seek_status,not int_flag
   3318	EF50  9D			     popf		     ; восстановить	признаки
   3319	EF51  59			     pop     cx
   3320	EF52  5B			     pop     bx		     ; восстановить	регистр
   3321	EF53  C3			     ret	     ; возврат к программе, вызвавшей+
   3322				     прерывание
   3323	EF54			     wait_int	     endp
   3324
   3325	EF54  03*(00)				     db	3 dup(0)
   3326
   3327				     ;---------------------------
   3328				     ;disk_int
   3329				     ;	 Эта	программа обрабатывает прерывания       +
   3330				     НГМД
   3331				     ;
   3332				     ;	 ВЫВОД  - признак прерывания			       +
   3333				     устанавливается в SEEK_STATUS.
   3334				     ;---------------------------
   3335	EF57			     disk_int proc   far
   3336	EF57  FB			     sti		     ; установить признак	       +
   3337				     разрешения прерывания
   3338	EF58  1E			     push    ds
   3339	EF59  50			     push    ax
   3340	EF5A  B8 0040			     mov     ax,dat
   3341	EF5D  8E D8			     mov     ds,ax
   3342	EF5F  80 0E 003Er 80		     or	     seek_status,int_flag
   3343	EF64  B0 20			     mov     al,20h	     ; установить конец		       +
   3344				     прерывания
   3345	EF66  E6 20			     out     20h,al	     ; послать конец прерывания  +
   3346				     в	порт
   3347	EF68  58			     pop     ax
   3348	EF69  1F			     pop     ds
   3349	EF6A  CF			     iret		     ; возврат из прерывания
   3350	EF6B			     disk_int	     endp
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 68
1840v4.asm



   3351				     ;----------------------------
   3352				     ;
   3353				     ;	 Эта	программа считывет все, что контроллер+
   3354				     адаптера НГМД указывает
   3355				     ; программе, следующей за прерыванием.
   3356				     ;
   3357				     ;
   3358				     ;	 ВЫВОД
   3359				     ;		CF=0 - успешно,
   3360				     ;		CF=1 - сбой
   3361				     ;----------------------------
   3362	EF6B			     results proc    near
   3363	EF6B  FC			     cld
   3364	EF6C  BF 0042r			     mov     di,offset nec_status
   3365	EF6F  51			     push    cx		     ; сохранить счетчик
   3366	EF70  52			     push    dx
   3367	EF71  53			     push    bx
   3368	EF72  B3 07			     mov     bl,7	     ; установить длину области  +
   3369				     состояния
   3370
   3371
   3372	EF74			     j38:
   3373	EF74  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3374	EF76  BA 03F4			     mov     dx,03f4h	     ; адрес порта
   3375	EF79			     j39:
   3376	EF79  EC			     in	     al,dx	     ; получить	состояние
   3377	EF7A  A8 80			     test    al,080h	     ; готово ?
   3378	EF7C  75 0C			     jnz     j40a
   3379	EF7E  E2 F9			     loop    j39
   3380	EF80  80 0E 0041r 80		     or	     diskette_status,time_out
   3381	EF85			     j40:			     ; ошибка
   3382	EF85  F9			     stc		     ; возврат по ошибке
   3383	EF86  5B			     pop     bx
   3384	EF87  5A			     pop     dx
   3385	EF88  59			     pop     cx
   3386	EF89  C3			     ret
   3387
   3388				     ;	 Проверка признака направления
   3389
   3390	EF8A  EC		     j40a:   in	     al,dx	     ; получить	регистр		       +
   3391				     состояния
   3392	EF8B  A8 40			     test    al,040h	     ; сбой	позиционирования
   3393	EF8D  75 07			     jnz     j42     ; если	все нормально, считать      +
   3394				     состояние
   3395	EF8F			     j41:
   3396	EF8F  80 0E 0041r 20		     or	     diskette_status,bad_nec
   3397	EF94  EB EF			     jmp     short j40	     ; ошибка
   3398
   3399				     ;	 Считывание состояния
   3400
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 69
1840v4.asm



   3401	EF96			     j42:
   3402	EF96  42			     inc     dx		     ; указать порт
   3403	EF97  EC			     in	     al,dx	     ; ввести данные
   3404	EF98  88 05			     mov    byte ptr [di],al  ;	сохранить байт
   3405	EF9A  47			     inc     di		     ; увеличить адрес
   3406	EF9B  B9 000A			     mov     cx,000ah	     ; счетчик
   3407	EF9E  E2 FE		     j43:    loop    j43
   3408	EFA0  4A			     dec     dx
   3409	EFA1  EC			     in	     al,dx	     ; получить	состояние
   3410	EFA2  A8 10			     test    al,010h
   3411	EFA4  74 06			     jz	     j44
   3412	EFA6  FE CB			     dec     bl		     ; -1 из количества циклов
   3413	EFA8  75 CA			     jnz     j38
   3414	EFAA  EB E3			     jmp     short j41	     ; сигнал неверен
   3415
   3416	EFAC			     j44:
   3417	EFAC  5B			     pop     bx		     ; восстановить	регистры
   3418	EFAD  5A			     pop     dx
   3419	EFAE  59			     pop     cx
   3420	EFAF  C3			     ret		     ; возврат из прерывания
   3421	EFB0			     results endp
   3422				     ;-----------------------------
   3423				     ; num_trans
   3424				     ;	 Эта	программа вычисляет количество	       +
   3425				     секторов, которое действительно
   3426				     ; было	записано или	считано с НГМД
   3427				     ;
   3428				     ;	 ВВОД
   3429				     ;	      (CH) - цилиндр,
   3430				     ;	      (CL) - сектор.
   3431				     ;
   3432				     ;	 ВЫВОД
   3433				     ;	      (AL) - количество действительно		       +
   3434				     переданных секторов.
   3435				     ;
   3436				     ;------------------------------
   3437	EFB0			     num_trans proc  near
   3438	EFB0  A0 0045r			     mov     al,nec_status+3  ;	получить последний	       +
   3439				     цилиндр
   3440	EFB3  3A C5			     cmp     al,ch	     ; сравнить	со стартовым
   3441	EFB5  A0 0047r			     mov     al,nec_status+5  ;	получить последний сектор
   3442	EFB8  74 0A			     jz	     j45
   3443	EFBA  BB 0008			     mov     bx,8
   3444	EFBD  E8 FE91			     call    get_parm	     ; получить	значение EOT
   3445	EFC0  8A C4			     mov     al,ah	     ; AH в AL
   3446	EFC2  FE C0			     inc     al		     ; EOT+1
   3447	EFC4  2A C1		     j45:    sub     al,cl	 ; вычисление	стартового	       +
   3448				     номера из конечного
   3449	EFC6  C3			     ret
   3450	EFC7			     num_trans endp
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 70
1840v4.asm



   3451
   3452				     ;-------------------------------
   3453				     ; disk_base
   3454				     ;	 Эта	программа устанавливает параметры,      +
   3455				     требуемые	для операций
   3456				     ; НГМД.
   3457				     ;--------------------------------
   3458
   3459	EFC7			     disk_base label byte
   3460	EFC7  CF			     db	     11001111b	     ;
   3461	EFC8  02			     db	     2		     ;
   3462	EFC9  25			     db	     motor_wait	     ;
   3463	EFCA  02			     db	     2		     ;
   3464	EFCB  08			     db	     8		     ;
   3465	EFCC  2A			     db	     02ah	     ;
   3466	EFCD  FF			     db	     0ffh	     ;
   3467	EFCE  50			     db	     050h	     ;
   3468	EFCF  F6			     db	     0f6h	     ;
   3469	EFD0  19			     db	     25		     ;
   3470	EFD1  04			     db	     4		     ;
   3471				     ;--- int 17-------------------
   3472				     ;	 Программа связи с печатающим устройством
   3473				     ;
   3474				     ;	 Эта	программа выполняет три функции, код    +
   3475				     которых задается
   3476				     ; в регистре AH:
   3477				     ;	 AH=0 -	печать знака, заданного в регистре	AL.    +
   3478				     Если в
   3479				     ; результате выполнения функции	знак не	       +
   3480				     напечатается, то в регистре
   3481				     ; AL устанавливается "1" (тайм-аут);
   3482				     ;	 AH=1 -	инициализация порта печати. После	       +
   3483				     выполнения функции
   3484				     ; в регистре AH находится байт состояния	       +
   3485				     печатающего устройства;
   3486				     ;	 AH=2H - считывание байта состояния		       +
   3487				     печатающего устройства.
   3488				     ;	 В регистре DX	необходимо задать ноль.
   3489				     ;	 Значение разрядов байта состояния	       +
   3490				     печатающего устройства:
   3491				     ;	 0 - тайм-аут;
   3492				     ;	 3 - ошибка ввода-вывода;
   3493				     ;	 4 - выбран (SLCT);
   3494				     ;	 5 - конец	бумаги (PE);
   3495				     ;	 6 - подтверждение;
   3496				     ;	 7 - занято.
   3497				     ;------------------------------
   3498
   3499					     assume  cs:code,ds:data
   3500	EFD2			     printer_io	proc far
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 71
1840v4.asm



   3501	EFD2  FB			     sti		     ; установить признак	       +
   3502				     разрешения прерывания
   3503	EFD3  1E			     push    ds		     ; сохранить сегмент
   3504	EFD4  52			     push    dx
   3505	EFD5  56			     push    si
   3506	EFD6  51			     push    cx
   3507	EFD7  53			     push    bx
   3508	EFD8  BE 0040			     mov     si,dat
   3509	EFDB  8E DE			     mov     ds,si	     ; установить сегмент
   3510	EFDD  8B F2			     mov     si,dx
   3511	EFDF  D1 E6			     shl     si,1
   3512	EFE1  8B 94 0008r		     mov     dx,printer_base[si]  ; получить базовый адрес
   3513									  ; печатающего устройства
   3514	EFE5  0B D2			     or	     dx,dx		; печать подключена ?
   3515	EFE7  74 0C			     jz	     b1			; нет, возврат
   3516	EFE9  0A E4			     or	     ah,ah		; AH=0 ?
   3517	EFEB  74 0E			     jz	     b2			; да,	переход к печати	       +
   3518				     знака
   3519	EFED  FE CC			     dec     ah			; AH=1 ?
   3520	EFEF  74 42			     jz	     b8			; да,	переход к		       +
   3521				     инициализации
   3522	EFF1  FE CC			     dec     ah			; AH=2 ?
   3523	EFF3  74 2A			     jz	     b5		; да,	переход к считыванию	       +
   3524				     байта	состояния
   3525
   3526				     ;	  Выход из программы
   3527
   3528	EFF5			     b1:
   3529	EFF5  5B			     pop     bx		     ; восстановить	регистры
   3530	EFF6  59			     pop     cx
   3531	EFF7  5E			     pop     si
   3532	EFF8  5A			     pop     dx
   3533	EFF9  1F			     pop     ds
   3534	EFFA  CF			     iret
   3535
   3536				     ;	 Печать знака, заданного в	AL
   3537
   3538	EFFB			     b2:
   3539	EFFB  50			     push    ax
   3540	EFFC  B3 0A			     mov     bl,10	     ; количество циклов	       +
   3541				     ожидания
   3542	EFFE  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3543	F000  EE			     out     dx,al	     ; вывести символ в порт
   3544	F001  42			     inc     dx		     ; -1 из адреса порта
   3545	F002			     b3:			     ; ожидание	BUSY
   3546	F002  EC			     in	     al,dx	     ; получить	состояние
   3547	F003  8A E0			     mov     ah,al	     ; переслать состояние в	AH
   3548	F005  A8 80			     test    al,80h	     ; печать занята ?
   3549	F007  75 0E			     jnz     b4		     ; переход, если	да
   3550	F009  E2 F7			     loop    b3		     ; цикл	ожидания закончился ?
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 72
1840v4.asm



   3551	F00B  FE CB			     dec     bl		     ; да, -1	из количества циклов
   3552	F00D  75 F3			     jnz     b3		     ; время ожидания истекло ?
   3553	F00F  80 CC 01			     or	     ah,1	     ; да, уст бит "тайм-аут"
   3554	F012  80 E4 F9			     and     ah,0f9h	     ;
   3555	F015  EB 14			     jmp     short b7
   3556	F017			     b4:			     ; OUT_STROBE
   3557	F017  B0 0D			     mov     al,0dh	     ; установить высокий строб
   3558	F019  42			     inc     dx	     ; стробирование битом 0 порта C    +
   3559				     для 8255
   3560	F01A  EE			     out     dx,al
   3561	F01B  B0 0C			     mov     al,0ch	     ; установить низкий строб
   3562	F01D  EE			     out     dx,al
   3563	F01E  58			     pop     ax		     ;
   3564
   3565				     ;	 Считывание байта состояния печатающего     +
   3566				     устройства
   3567
   3568	F01F			     b5:
   3569	F01F  50			     push    ax		     ; сохранить регистр
   3570	F020			     b6:
   3571	F020  8B 94 0008r		     mov     dx,printer_base[si]  ; получить адрес	печати
   3572	F024  42			     inc     dx
   3573	F025  EC			     in	     al,dx	     ; получить	состояние печати
   3574	F026  8A E0			     mov     ah,al
   3575	F028  80 E4 F8			     and     ah,0f8h
   3576	F02B			     b7:
   3577	F02B  5A			     pop     dx
   3578	F02C  8A C2			     mov     al,dl
   3579	F02E  80 F4 48			     xor     ah,48h
   3580	F031  EB C2			     jmp     short b1	     ; к выходу из программы
   3581
   3582				     ;	 Инициализация порта печатающего		       +
   3583				     устройства
   3584
   3585	F033			     b8:
   3586	F033  50			     push    ax
   3587	F034  83 C2 02			     add     dx,2	     ; указать порт
   3588	F037  B0 08			     mov     al,8
   3589	F039  EE			     out     dx,al
   3590	F03A  B8 03E8			     mov     ax,1000	      ;	время задержки
   3591	F03D			     b9:
   3592	F03D  48			     dec     ax		      ;	цикл задержки
   3593	F03E  75 FD			     jnz     b9
   3594	F040  B0 0C			     mov     al,0ch
   3595	F042  EE			     out     dx,al
   3596	F043  EB DB			     jmp     short b6	 ; переход к считыванию байта   +
   3597				     состояния
   3598	F045			     printer_io	     endp
   3599				     ;--- int 10------------------
   3600				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 73
1840v4.asm



   3601				     ;	 Программа обработки прерывания ЭЛИ
   3602				     ;
   3603				     ;	 Эта	программа обеспечивает выполнение       +
   3604				     функций обслуживания
   3605				     ; адаптера	ЭЛИ,	код которых задается в	       +
   3606				     регистре AH:
   3607				     ;
   3608				     ;	  AH=0	 - установить	режим работы	адаптера       +
   3609				     ЭЛИ. В	результате
   3610				     ; выполнения функции в регистре AL могут	       +
   3611				     устанавливаться следу-
   3612				     ; ющие	режимы:
   3613				     ;	  0 - 40х25, черно-белый, алфавитно-цифровой;
   3614				     ;	  1 - 40х25, цветной, алфавитно-цифровой;
   3615				     ;	  2 - 80х25, черно-белый, алфавитно-цифровой;
   3616				     ;	  3 - 80х25, цветной, алфавитно-цифровой;
   3617				     ;	  4 - 320х200,	цветной,	графический;
   3618				     ;	  5 - 320х200,	черно-белый, графический;
   3619				     ;	  6 - 640х200,	черно-белый, графический;
   3620				     ;	  7 - 80х25, черно-белый, алфавитно-цифровой.
   3621				     ;	  Режимы 0 - 6 используются для ЭМ адаптера     +
   3622				     ЭЛИ, режим	7
   3623				     ; используется	для монохромного	черно-белого+
   3624				     80х25 адаптера.
   3625				     ;
   3626				     ;	  AH=1	 - установить	размер курсора. Функция    +
   3627				     задает размер кур-
   3628				     ; сора	и управление	им.
   3629				     ;	 Разряды	0 - 4 регистра CL определяют конечную+
   3630				     границу курсора,
   3631				     ; разряды 0	- 4 регистра CH	- начальную границу    +
   3632				     курсора.
   3633				     ;	  Разряды 6 и 5	задают управление курсором:
   3634				     ;	  00 - курсор мерцает с частотой,	задаваемой   +
   3635				     аппаратурно;
   3636				     ;	  01 - курсор отсутствует.
   3637				     ;	  Аппаратурно всегда вызывается мерцание    +
   3638				     курсора с частотой,
   3639				     ; равной 1/16 частоты	кадровой развертки.
   3640				     ;
   3641				     ;	  AH=2	 - установить	текущую позицию курсора.  +
   3642				     Для выполнения
   3643				     ; функции необходимо задать	следующие	       +
   3644				     координаты курсора:
   3645				     ;	  BH - страница;
   3646				     ;	  DX - строка и колонка.
   3647				     ; При графическом режиме регистр BH=0.
   3648				     ;
   3649				     ;	  AH=3	 - считать текущее положение курсора.    +
   3650				     Функция вос-
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 74
1840v4.asm



   3651				     ; станавливает	текущее положение курсора.      +
   3652				     Перед	выполнением
   3653				     ; функции в регистре BH необходимо задать	       +
   3654				     страницу.
   3655				     ;	  После выполнения программы регистры	       +
   3656				     содержат следующую
   3657				     ; информацию:
   3658				     ;	  DH - строка;
   3659				     ;	  DL - колонка;
   3660				     ;	  CX - размер курсора и управление им.
   3661				     ;
   3662				     ;	  AH=5	- установить активную	страницу буфера  +
   3663				     адаптера.
   3664				     ; Функция используется только в			       +
   3665				     алфавитно-цифровом режиме.
   3666				     ; Для ее выполнения	необходимо в	регистре AL    +
   3667				     задать страницу:
   3668				     ;	  0-7 -	для режимов 0	и 1;
   3669				     ;	  0-3 -	для режимов 2	и 3.
   3670				     ;	  Значения режимов те же, что и для функции   +
   3671				     AH=0.
   3672				     ;
   3673				     ;	  AH=6	 - переместить блок символов вверх по    +
   3674				     экрану.
   3675				     ; Функция перемещает символы в пределах	       +
   3676				     заданной области вверх
   3677				     ; по экрану, заполняя нижние	строки пробелами+
   3678				     с	заданным атрибу-
   3679				     ; том.
   3680				     ;	  Для выполнения функции необходимо задать +
   3681				     следующие	пара-
   3682				     ; метры;
   3683				     ;	  AL - количество перемещаемых строк. Для	       +
   3684				     очистки блока AL=0;
   3685				     ;	  CX - координаты левого верхнего угла блока  +
   3686				     (строка,колонка);
   3687				     ;	  DX - координаты правого нижнего угла блока;
   3688				     ;	  BH - атрибут символа пробела.
   3689				     ;
   3690				     ;	  AH=7	 - переместить блок символов вниз.	       +
   3691				     Функция перемещает
   3692				     ; символы в пределах заданной области вниз по+
   3693				     экрану, заполняя
   3694				     ; верхние строки пробелами с заданным	       +
   3695				     атрибутом.
   3696				     ;	  Для выполнения функции необходимо задать +
   3697				     те же параметры,
   3698				     ; что и для	функции AH=6H.
   3699				     ;
   3700				     ;	  AH=8	 - считать атрибут и код символа,	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 75
1840v4.asm



   3701				     находящегося в теку-
   3702				     ; щей позиции курсора. Функция считывает	       +
   3703				     атрибут и код символа
   3704				     ; и помещает их	в регистр AX (AL - код символа, AH - +
   3705				     атрибут
   3706				     ; символа).
   3707				     ;	  Для выполнения функции необходимо в	       +
   3708				     регистре BH задать
   3709				     ; страницу	(только для алфавитно-цифрового     +
   3710				     режима).
   3711				     ;
   3712				     ;	  AH=9	 - записать атрибут и код символа в	       +
   3713				     текущую позицию
   3714				     ; курсора. Функция помещает код символа и	его +
   3715				     атрибут в текущую
   3716				     ; позицию курсора.
   3717				     ;	  Для выполнения функции необходимо задать +
   3718				     следующие	параметры:
   3719				     ;	  BH - отображаемая	страница (только для	       +
   3720				     алфавитно-цифрового
   3721				     ; режима;
   3722				     ;	  CX - количество записываемых символов;
   3723				     ;	  AL - код символа;
   3724				     ;	  BL - атрибут символа для				       +
   3725				     алфавитно-цифрового режима	или
   3726				     ; цвет	знака для графики. При записи точки       +
   3727				     разряд 7 регистра BL=1.    =1
   3728				     ;
   3729				     ;	  AH=10	- записать символ	в текущую позицию       +
   3730				     курсора. Атрибут
   3731				     ; не изменяется.
   3732				     ;	  Для выполнения функции необходимо задать +
   3733				     следующие	параметры:
   3734				     ;	  BH - отображаемая	страница (только для	       +
   3735				     алфавитно-цифрового
   3736				     ; режима);
   3737				     ;	  CX - количество повторений символа;
   3738				     ;	  AL - код записываемого символа.		       +
   3739				     ся
   3740				     ;									   -
   3741				     ;	  AH=11	- установить цветовую	палитру.		       +
   3742				     ь
   3743				     ;	  При выполнении функции используются два   +
   3744				     варианта.
   3745				     ;	  Для первого	варианта в регистре BH		       +
   3746				     задается ноль,а в регистре
   3747				     ; BL - значения пяти младших разрядов,		       +
   3748				     используемых для выбора
   3749				     ; цветовой	палитры (цвет заднего	плана для      +
   3750				     цветного графического
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 76
1840v4.asm



   3751				     ; режима 320х200 или цвет каймы	для цветного	       +
   3752				     графического режима
   3753				     ; 40х25).
   3754				     ;	  Для второго	варианта в регистре BH		       +
   3755				     задается "1", а в регистре
   3756				     ; BL - номер цветовой	палитры (0 или 1).
   3757				     ;	  Палитра 0 состоит из зеленого	(1), красного  +
   3758				     (2) и желтого (3)
   3759				     ; цветов, палитра 1 -	из голубого (1),		       +
   3760				     фиолетового (2)	и белого	(3).
   3761				     ; При работе с видеомонитором цвета палитры   +
   3762				     заменяются соответству-
   3763				     ; ющими градациями цвета.
   3764				     ;	  Результатом выполнения функции является  +
   3765				     установка	цветовой       )
   3766				     ; палитры в регистре выбора цвета (3D9).
   3767				     ;
   3768				     ;	  AH=12	 - записать точку.	Функция определяет    +
   3769				     относительный
   3770				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3771				     должна быть записана
   3772				     ; точка с заданными	координатами.
   3773				     ;	  Для выполнения функции необходимо задать +
   3774				     следующие	параметры:    ,
   3775				     ;	  DX - строка;
   3776				     ;	  CX - колонка;
   3777				     ;	  AL - цвет	выводимой точки. Если	разряд 7	       +
   3778				     регистра AL уста-	 3)
   3779				     ; новлен в "1", то выполняется	операция XOR над    +
   3780				     значением	точки
   3781				     ; из буфера и значением точки из регистра	AL.
   3782				     ;
   3783				     ;	  AH=13	- считать точку. Функция определяет       +
   3784				     относительный
   3785				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3786				     должна быть считана
   3787				     ; точка с заданными	координатами.
   3788				     ;	  Перед выполнением программы в регистрах   +
   3789				     задаются те же	парамет-
   3790				     ; ры, что и для функции AH=12.
   3791				     ;	 После выполнения программы в регистре	AL     +
   3792				     находится	значение
   3793				     ; считанной точки.
   3794				     ;
   3795				     ;	  AH=14	- записать телетайп. Функция выводит     +
   3796				     символ в буфер
   3797				     ; ЭЛИ с одновременной установкой позиции	       +
   3798				     курсора и передвижением
   3799				     ; курсора на экране.
   3800				     ;	  После записи символа в последнюю позицию  +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 77
1840v4.asm



   3801				     строки выполняется
   3802				     ; автоматический переход на	новую строку.       +
   3803				     Если страница экрана
   3804				     ; заполнена, выполняется перемещение на одну +
   3805				     строку вверх. Осво-
   3806				     ; бодившаяся строка заполняется	значением     +
   3807				     атрибута символа для
   3808				     ; алфавитно-цифрового режима или нулями -	для +
   3809				     графики.
   3810				     ;	  После записи очередного символа курсор     +
   3811				     устанавливается
   3812				     ; в следующую позицию.
   3813				     ;	  Для выполнения программы необходимо	       +
   3814				     задать следующие параметры:
   3815				     ;	  AL - код выводимого символа;
   3816				     ;	  BL - цвет	переднего плана (для графического +
   3817				     режима).
   3818				     ;	  Программа обрабатывает следующие	       +
   3819				     служебные	символы:
   3820				     ;	  0BH -	сдвиг курсора на одну	позицию (без	       +
   3821				     очистки);
   3822				     ;	  0DH -	перемещение курсора в начало строки;
   3823				     ;	  0AH -	перемещение курсора на следующую	       +
   3824				     строку;
   3825				     ;	  07H -	звуковой сигнал.
   3826				     ;
   3827				     ;	  AH=15	- получить текущее состояние ЭЛИ.	       +
   3828				     Функция считывает
   3829				     ; текущее состояние ЭЛИ	из памяти и размещает+
   3830				     его в следующих
   3831				     ; регистрах;
   3832				     ;	  AH - количество колонок (40 или 80);
   3833				     ;	  AL - текущий режим (0-7).	Значения режимов	те   +
   3834				     же, что и для
   3835				     ; функции AH=0;
   3836				     ;	  BH - номер активной страницы.
   3837				     ;
   3838				     ;	 AH=17 - загрузить знакогенератор		       +
   3839				     пользователя. Функция дает
   3840				     ; возможность пользователю загружать	       +
   3841				     знакогенератор любым, необ-
   3842				     ; ходимым ему алфавитом.
   3843				     ;	  Для выполнения программы необходимо	       +
   3844				     задать следующие параметры:
   3845				     ;	  ES:BP	- адрес таблицы, сформированной	       +
   3846				     пользователем;
   3847				     ;	  CX	- количество передаваемых	символов;
   3848				     ;	  BL	- код символа, начиная	с которого	       +
   3849				     загружается таблица
   3850				     ; пользователя;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 78
1840v4.asm



   3851				     ;	  BH - количество байт на знакоместо;
   3852				     ;	  DL - идентификатор таблицы пользователя;
   3853				     ;	  AL - режим:
   3854				     ;		       AL=0   -	 загрузить знакогенератор
   3855				     ;		       AL=1   -	 выдать идентификатор таблицы
   3856				     ;		       AL=3   -	 загрузить вторую половину      +
   3857				     знакогенератора:
   3858				     ;				 BL=0 -	загрузить вторую		       +
   3859				     половину знакогене
   3860				     ;				 ратора из ПЗУ кодовой таблицы+
   3861				     с	русским
   3862				     ;				 алфавитом,
   3863				     ;				 BL=1 -	загрузить вторую		       +
   3864				     половину знакогене
   3865				     ;				 ратора из ПЗУ стандартной       +
   3866				     кодовой таблицей
   3867				     ;				 ASCII (USA)
   3868				     ;	 На выходе:
   3869				     ;	     AH	  -  количество байт на	знакоместо
   3870				     ;	     AL	  -  идентификатор	таблицы пользователя
   3871				     ;	     CF=1   -	операция завершена успешно
   3872				     ;
   3873				     ;	  AH=19	- переслать цепочку символов. Функция   +
   3874				     позволяет	пере-
   3875				     ; сылать символы четырьмя способами,	тип	       +
   3876				     которых задается в
   3877				     ; регистре	AL:
   3878				     ;	  AL=0 - символ, символ, символ, ...
   3879				     ; В регистре BL задается атрибут, курсор не       +
   3880				     движется;
   3881				     ;	  AL=1 - символ, символ, символ, ...
   3882				     ; В регистре BL задается атрибут, курсор	       +
   3883				     движется;
   3884				     ;	  AL=2H	- символ,	атрибут,	символ, атрибут, ...
   3885				     ; Курсор не движется;
   3886				     ;	  AL=3H	- символ,	атрибут,	символ, атрибут, ...
   3887				     ; Курсор движется.
   3888				     ;	   Кроме того необходимо задать в регистрах:
   3889				     ;	  ES:BP	- начальный адрес	цепочки символов;
   3890				     ;	  CX	- количество символов;
   3891				     ;	  DH,DL	- строку и колонку для	начала записи;
   3892				     ;	  BH	- номер страницы.
   3893				     ;-----------------------------------------------------------
   3894
   3895					     assume cs:code,ds:data,es:video_ram
   3896
   3897	F045			     m1	     label   word	     ; таблица функций адаптера  +
   3898				     ЭЛИ
   3899	F045  F0FCr			     dw	     offset  set_mode
   3900	F047  F1CFr			     dw	     offset  set_ctype
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 79
1840v4.asm



   3901	F049  F1F0r			     dw	     offset  set_cpos
   3902	F04B  F21Ar			     dw	     offset  read_cursor
   3903	F04D  F7A9r			     dw	     offset  read_lpen
   3904	F04F  F230r			     dw	     offset  act_disp_page
   3905	F051  F29Cr			     dw	     offset  scroll_up
   3906	F053  F341r			     dw	     offset  scroll_down
   3907	F055  F37Dr			     dw	     offset  read_ac_current
   3908	F057  F3C3r			     dw	     offset  write_ac_current
   3909	F059  F3F6r			     dw	     offset  write_c_current
   3910	F05B  F254r			     dw	     offset  set_color
   3911	F05D  F438r			     dw	     offset  write_dot
   3912	F05F  F427r			     dw	     offset  read_dot
   3913	F061  F966r			     dw	     offset  write_tty2
   3914	F063  F27Ar			     dw	     offset  video_state
   3915	      =0020		     m1l     equ     20h
   3916
   3917	F065			     video_io proc   near
   3918	F065  FB			     sti		 ; установить	признак		       +
   3919				     разрешения прерывания
   3920	F066  FC			     cld
   3921	F067  06			     push    es
   3922	F068  1E			     push    ds
   3923	F069  52			     push    dx
   3924	F06A  51			     push    cx
   3925	F06B  53			     push    bx
   3926	F06C  56			     push    si
   3927	F06D  57			     push    di
   3928	F06E  50			     push    ax		     ; сохранить значение AX
   3929	F06F  8A C4			     mov     al,ah	     ; переслать AH в	AL
   3930	F071  32 E4			     xor     ah,ah	     ; обнулить	старший байт
   3931	F073  D1 E0			     sal     ax,1	     ; умножить	на 2
   3932	F075  8B F0			     mov     si,ax	     ; поместить в SI
   3933	F077  3D 0020			     cmp     ax,m1l	     ; проверка	длины таблицы      +
   3934				     функций
   3935	F07A  72 04			     jb	     m2		     ; адаптера	ЭЛИ
   3936	F07C  58			     pop     ax		     ; восстановить	AX
   3937	F07D  E9 0147			     jmp     video_return    ; выход, если AX неверно
   3938	F080  B8 0040		     m2:     mov     ax,dat
   3939	F083  8E D8			     mov     ds,ax
   3940	F085  B8 B800			     mov     ax,0b800h	     ; сегмент для цветного	       +
   3941				     адаптера
   3942	F088  8B 3E 0010r		     mov     di,equip_flag   ; получить	тип адаптера
   3943	F08C  81 E7 0030		     and     di,30h	     ; выделить	биты режима ;	db 81h,+
   3944				     0E7h,30h,00h  ; ###Gleb###
   3945	F090  83 FF 30			     cmp     di,30h	     ; есть	установка ч/б	       +
   3946				     адаптера ?
   3947	F093  75 03			     jne     m3
   3948	F095  B8 B000			     mov     ax,0b000h	     ; уст адреса буфера	для ч/б   +
   3949				     адаптера
   3950	F098  8E C0		     m3:     mov     es,ax
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 80
1840v4.asm



   3951	F09A  58			     pop     ax		     ; восстановить	значение
   3952	F09B  8A 26 0049r		     mov     ah,crt_mode     ; получить	текущий режим в AH
   3953	F09F  2E: FF A4	F045r		     jmp   cs:m1[si]
   3954	F0A4			     video_io	     endp
   3955				     ;-------------------------
   3956				     ; set mode
   3957
   3958				     ;	 Эта	программа устанавливает режим работы  +
   3959				     адаптера ЭЛИ
   3960				     ;
   3961				     ;	 ВХОД
   3962				     ;		(AL) - содержит	значение режима.
   3963				     ;
   3964				     ;--------------------------
   3965
   3966				     ;	 Таблицы	параметров ЭЛИ
   3967
   3968	F0A4			     video_parms label	     byte
   3969
   3970				     ;	 Таблица	инициализации
   3971
   3972	F0A4  38 28 2D 0A 1F 06	19	     db	     38h,28h,2dh,0ah,1fh,6,19h	 ; уст для 40х25
   3973
   3974	F0AB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3975	F0B0  00 00 00 00		     db	     0,0,0,0
   3976	      =0010		     m4	     equ     10h
   3977
   3978	F0B4  71 50 5A 0A 1F 06	19	     db	     71h,50h,5ah,0ah,1fh,6,19h	 ; уст для 80х25
   3979
   3980	F0BB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3981	F0C0  00 00 00 00		     db	     0,0,0,0
   3982
   3983	F0C4  38 28 2D 0A 7F 06	64	     db	     38h,28h,2dh,0ah,7fh,6,64h	 ; уст для графики
   3984
   3985	F0CB  70 02 01 06 07		     db	     70h,2,1,6,7
   3986	F0D0  00 00 00 00		     db	     0,0,0,0
   3987
   3988	F0D4  62 50 50 0F 19 06	19	     db	     62h,50h,50h,0fh,19h,6,19h	 ; уст для 80х25	ч/б	       +
   3989				     адаптера
   3990
   3991	F0DB  19 02 0D 0B 0C		     db	     19h,2,0dh,0bh,0ch
   3992	F0E0  00 00 00 00		     db	     0,0,0,0
   3993
   3994	F0E4			     m5	     label   word	     ; таблица для			       +
   3995				     восстановления длины
   3996	F0E4  0800			     dw	     2048
   3997	F0E6  1000			     dw	     4096
   3998	F0E8  4000			     dw	     16384
   3999	F0EA  4000			     dw	     16384
   4000
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 81
1840v4.asm



   4001				     ;	 Колонки
   4002	F0EC			     m6	     label   byte
   4003	F0EC  28 28 50 50 28 28	50+	     db	     40,40,80,80,40,40,80,80
   4004	      50
   4005
   4006
   4007				     ;--- c_reg_tab
   4008	F0F4			     m7	     label   byte	     ; таблица установки режима
   4009	F0F4  2C 28 2D 29 2A 2E	1E+	     db	     2ch,28h,2dh,29h,2ah,2eh,1eh,29h
   4010	      29
   4011
   4012
   4013	F0FC			     set_mode proc   near
   4014	F0FC  BA 03D4			     mov     dx,03d4h	     ; адрес цветного адаптера
   4015	F0FF  B3 00			     mov     bl,0     ;	уст значение	для цветного	       +
   4016				     адаптера
   4017	F101  83 FF 30			     cmp     di,30h	     ; установлен ч/б адаптер ?
   4018	F104  75 07			     jne     m8		     ; переход, если	указан	       +
   4019				     цветной
   4020	F106  B0 07			     mov     al,7	     ; указать ч/б режим
   4021	F108  BA 03B4			     mov     dx,03b4h	     ; адрес для ч/б адаптера
   4022	F10B  FE C3			     inc     bl		     ; установить режим для ч/б    +
   4023				     адаптера
   4024	F10D  8A E0		     m8:     mov     ah,al	     ; сохранить режим в	AH
   4025	F10F  A2 0049r			     mov     crt_mode,al
   4026	F112  89 16 0063r		     mov     addr_6845,dx    ; сохранить адрес		       +
   4027				     управляющего порта
   4028								     ; для активного дисплея
   4029	F116  1E			     push    ds
   4030	F117  50			     push    ax		     ; сохранить режим
   4031	F118  52			     push    dx		     ; сохранить значение порта  +
   4032				     вывода
   4033	F119  83 C2 04			     add     dx,4	     ; указать адрес регистра      +
   4034				     управления
   4035	F11C  8A C3			     mov     al,bl	     ; получить	режим для	       +
   4036				     адаптера
   4037	F11E  EE			     out     dx,al	     ; сброс экрана
   4038	F11F  5A			     pop     dx		     ; восстановить	DX
   4039	F120  2B C0			     sub     ax,ax
   4040	F122  8E D8			     mov     ds,ax	     ; установить адрес таблицы  +
   4041				     векторов
   4042					     assume  ds:abs0
   4043	F124  C5 1E 0074r		     lds     bx,parm_ptr ; получить значение		       +
   4044				     параметров адаптера ЭЛИ
   4045	F128  58			     pop     ax		     ; восстановить	AX
   4046					     assume  ds:code
   4047	F129  B9 0010			     mov     cx,m4	; установить длину таблицы       +
   4048				     параметров
   4049	F12C  80 FC 02			     cmp     ah,2	     ; определение режима
   4050	F12F  72 10			     jc	     m9		     ; режим 0 или 1 ?
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 82
1840v4.asm



   4051	F131  03 D9			     add     bx,cx	     ; уст начало таблицы	       +
   4052				     параметров
   4053	F133  80 FC 04			     cmp     ah,4
   4054	F136  72 09			     jc	     m9		     ; режим 2 или 3
   4055	F138  03 D9			     add     bx,cx	     ; начало таблицы для графики
   4056	F13A  80 FC 07			     cmp     ah,7
   4057	F13D  72 02			     jc	     m9		     ; режимы 4, 5 или	6 ?
   4058	F13F  03 D9			     add     bx,cx	     ; уст начало таблицы для ч/б +
   4059				     адаптера
   4060
   4061				     ;	 BX указывает на строку таблицы			       +
   4062				     инициализации
   4063
   4064	F141			     m9:			     ; OUT_INIT
   4065	F141  50			     push    ax		     ; сохранить режим в	AH
   4066	F142  32 E4			     xor     ah,ah	     ;
   4067
   4068				     ;	 Цикл таблицы, устанавливающий адреса	       +
   4069				     регистров	и выводящий значения
   4070				     ; из таблицы
   4071
   4072	F144			     m10:
   4073	F144  8A C4			     mov     al,ah	     ;
   4074	F146  EE			     out     dx,al
   4075	F147  42			     inc     dx		     ; указать адрес порта
   4076	F148  FE C4			     inc     ah		     ;
   4077	F14A  8A 07			     mov     al,byte ptr [bx]	; получить значение	       +
   4078				     таблицы
   4079	F14C  EE			     out     dx,al	     ; послать строку из	таблицы +
   4080				     в	порт
   4081	F14D  43			     inc     bx		     ; +1 к адресу таблицы
   4082	F14E  4A			     dec     dx		     ; -1 из адреса порта
   4083	F14F  E2 F3			     loop    m10	     ; передана	вся таблица ?
   4084	F151  58			     pop     ax		     ; вернуть режимы
   4085	F152  1F			     pop     ds		     ; вернуть сегмент
   4086					     assume  ds:data
   4087
   4088				     ;	 Инициализация буфера дисплея
   4089
   4090	F153  33 FF			     xor     di,di	     ; DI=0
   4091	F155  89 3E 004Er		     mov     crt_start,di    ; сохранить начальный адрес
   4092	F159  C6 06 0062r 00		     mov     active_page,0   ; установить активную	       +
   4093				     страницу
   4094	F15E  B9 2000			     mov     cx,8192	     ; количество слов в	цветном +
   4095				     адаптере
   4096	F161  80 FC 04			     cmp     ah,4	     ; опрос графики
   4097	F164  72 0C			     jc	     m12	     ; нет инициализации графики
   4098	F166  80 FC 07			     cmp     ah,7	     ; опрос ч/б	адаптера
   4099	F169  74 04			     je	     m11	     ; инициализация ч/б	адаптера
   4100	F16B  33 C0			     xor     ax,ax	     ; для графического режима
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 83
1840v4.asm



   4101	F16D  EB 06			     jmp     short m13	     ; очистить	буфер
   4102	F16F			     m11:			     ; инициализация ч/б	адаптера
   4103	F16F  B9 0800			     mov     cx,2048	     ; об'ем буфера ч/б адаптера
   4104	F172			     m12:
   4105	F172  B8 0720			     mov     ax,' '+7*256    ; заполнить характеристики +
   4106				     для альфа
   4107	F175			     m13:			     ; очистить	буфер
   4108	F175  F3> AB			     rep     stosw	     ; заполнить область буфера  +
   4109				     пробелами
   4110
   4111				     ;	 Формирование порта управления режимом
   4112
   4113	F177  C7 06 0060r 0067		     mov     cursor_mode,67h   ; установить режим	       +
   4114				     текущего курсора (ERROR - MUS BE 607h)
   4115	F17D  A0 0049r			     mov     al,crt_mode     ; получить	режим в регистре +
   4116				     AX
   4117	F180  32 E4			     xor     ah,ah
   4118	F182  8B F0			     mov     si,ax	     ; таблица указателей режима
   4119	F184  8B 16 0063r		     mov     dx,addr_6845    ; подготовить адрес порта    +
   4120				     для вывода
   4121	F188  83 C2 04			     add     dx,4
   4122	F18B  2E: 8A 84	F0F4r		     mov al,cs:m7[si]
   4123	F190  EE			     out     dx,al
   4124	F191  A2 0065r			     mov     crt_mode_set,al
   4125
   4126				     ;	 Форморование количества колонок
   4127
   4128	F194  2E: 8A 84	F0ECr		     mov al,cs:m6[si]
   4129	F199  32 E4			     xor     ah,ah
   4130	F19B  A3 004Ar			     mov     crt_cols,ax     ; коичество колонок на	       +
   4131				     экране
   4132
   4133				     ;	 Установить позицию курсора
   4134
   4135	F19E  81 E6 000E		     and     si,0eh	     ; db 81h,0E6h,0Eh,00h   ; ###Gleb###
   4136	F1A2  2E: 8B 8C	F0E4r		     mov cx,cs:m5[si]  ; длина для очистки
   4137	F1A7  89 0E 004Cr		     mov     crt_len,cx
   4138	F1AB  B9 0008			     mov     cx,8	     ; очистить	все позиции	       +
   4139				     курсора
   4140	F1AE  BF 0050r			     mov     di,offset cursor_posn
   4141	F1B1  1E			     push    ds		     ; восстановить	сегмент
   4142	F1B2  07			     pop     es
   4143	F1B3  33 C0			     xor     ax,ax
   4144	F1B5  F3> AB			     rep     stosw	     ; заполнить нулями
   4145
   4146				     ;	 Установка регистра сканирования
   4147
   4148	F1B7  42			     inc     dx		     ; уст порт сканирования	по   +
   4149				     умолчанию
   4150	F1B8  B0 30			     mov     al,30h	     ; значение	30H для всех	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 84
1840v4.asm



   4151				     режимов,
   4152								     ; исключая	640х200
   4153	F1BA  80 3E 0049r 06		     cmp     crt_mode,6	     ; режим ч/б	640х200
   4154	F1BF  75 02			     jnz     m14	     ; если	не 640х200
   4155	F1C1  B0 3F			     mov     al,3fh	     ; если	640х200, то поместить в 3FH
   4156	F1C3  EE		     m14:    out     dx,al	     ; вывод правильного	       +
   4157				     значения в порт 3D9
   4158	F1C4  A2 0066r			     mov     crt_pallette,al   ; сохранить значение для    +
   4159				     использования
   4160
   4161				     ;	 Нормальный возврат
   4162
   4163	F1C7			     video_return:
   4164	F1C7  5F			     pop     di
   4165	F1C8  5E			     pop     si
   4166	F1C9  5B			     pop     bx
   4167	F1CA			     m15:
   4168	F1CA  59			     pop     cx		     ; восстановление регистров
   4169	F1CB  5A			     pop     dx
   4170	F1CC  1F			     pop     ds
   4171	F1CD  07			     pop     es
   4172	F1CE  CF			     iret		     ; возврат из прерывания
   4173	F1CF			     set_mode	     endp
   4174				     ;--------------------
   4175				     ; set_ctype
   4176				     ;
   4177				     ;	 Эта	программа устанавливает размер	       +
   4178				     курсора и управление им
   4179				     ;
   4180				     ;	 ВХОД
   4181				     ;		(CX) - содержит	размер курсора. (CH -	       +
   4182				     начальная	граница,
   4183				     ;		       CL - конечная граница)
   4184				     ;
   4185				     ;--------------------
   4186	F1CF			     set_ctype proc  near
   4187	F1CF  B4 0A			     mov     ah,10	     ; установить регистр 6845	для +
   4188				     курсора
   4189	F1D1  89 0E 0060r		     mov     cursor_mode,cx   ;	сохранить в области	       +
   4190				     данных
   4191	F1D5  E8 0002			     call    m16	     ; вывод регистра CX
   4192	F1D8  EB ED			     jmp     short video_return
   4193
   4194	F1DA			     m16:
   4195	F1DA  8B 16 0063r		     mov     dx,addr_6845    ; адрес регистра
   4196	F1DE  8A C4			     mov     al,ah	     ; получить	значение
   4197	F1E0  EE			     out     dx,al	     ; установить регистр
   4198	F1E1  42			     inc     dx		     ; регистр данных
   4199	F1E2  8A C5			     mov     al,ch	     ; данные
   4200	F1E4  EE			     out     dx,al
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 85
1840v4.asm



   4201	F1E5  4A			     dec     dx
   4202	F1E6  8A C4			     mov     al,ah
   4203	F1E8  FE C0			     inc     al		     ; указать другой регистр      +
   4204				     данных
   4205	F1EA  EE			     out     dx,al	     ; установить второй регистр
   4206	F1EB  42			     inc     dx
   4207	F1EC  8A C1			     mov     al,cl	     ; второе значение данных
   4208	F1EE  EE			     out     dx,al
   4209	F1EF  C3			     ret		     ; возврат
   4210	F1F0			     set_ctype	     endp
   4211				     ;----------------------------
   4212				     ; set_cpos
   4213				     ;
   4214				     ;	 Установить текущую позицию курсора
   4215				     ;
   4216				     ;	 ВХОД
   4217				     ;		DX - строка, колонка,
   4218				     ;		BH - номер	страницы.
   4219				     ;
   4220				     ;-----------------------------
   4221	F1F0			     set_cpos proc   near
   4222	F1F0  8A CF			     mov     cl,bh
   4223	F1F2  32 ED			     xor     ch,ch	     ; установить счетчик
   4224	F1F4  D1 E1			     sal     cx,1	     ; сдвиг слова
   4225	F1F6  8B F1			     mov     si,cx
   4226	F1F8  89 94 0050r		     mov word ptr [si +	offset cursor_posn],dx	;сохранить	       +
   4227				     указатель
   4228	F1FC  38 3E 0062r		     cmp     active_page,bh
   4229	F200  75 05			     jnz     m17
   4230	F202  8B C2			     mov     ax,dx	     ; получить	строку/колонку в +
   4231				     AX
   4232	F204  E8 0002			     call    m18	     ; установить курсор
   4233	F207			     m17:
   4234	F207  EB BE			     jmp     short video_return	 ; возврат
   4235	F209			     set_cpos	     endp
   4236
   4237				     ;	 Установить позицию курсора, AX	содержит       +
   4238				     строку/колонку
   4239
   4240	F209			     m18     proc    near
   4241	F209  E8 007F			     call    position
   4242	F20C  8B C8			     mov     cx,ax
   4243	F20E  03 0E 004Er		     add     cx,crt_start    ; сложить с начальным	       +
   4244				     адресом страницы
   4245	F212  D1 F9			     sar     cx,1	     ; делить на 2
   4246	F214  B4 0E			     mov     ah,14
   4247	F216  E8 FFC1			     call    m16
   4248	F219  C3			     ret
   4249	F21A			     m18     endp
   4250				     ;---------------------------
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 86
1840v4.asm



   4251				     ; read_cursor
   4252				     ;
   4253				     ;	 Считать	текущее положение курсора
   4254				     ;
   4255				     ;	 Эта	программа восстанавливает текущее       +
   4256				     положение	курсора
   4257				     ;
   4258				     ;	 ВХОД
   4259				     ;		BH - номер	страницы
   4260				     ;
   4261				     ;	 ВЫХОД
   4262				     ;		DX - строка/колонка текущей	позиции	       +
   4263				     курсора,
   4264				     ;		CX - размер курсора и управление им
   4265				     ;
   4266				     ;---------------------------
   4267	F21A			     read_cursor proc near
   4268	F21A  8A DF			     mov     bl,bh
   4269	F21C  32 FF			     xor     bh,bh
   4270	F21E  D1 E3			     sal     bx,1
   4271	F220  8B 97 0050r		     mov dx,word ptr [bx+offset	cursor_posn]
   4272	F224  8B 0E 0060r		     mov     cx,cursor_mode
   4273	F228  5F			     pop     di		     ; восстановить	регистры
   4274	F229  5E			     pop     si
   4275	F22A  5B			     pop     bx
   4276	F22B  58			     pop     ax
   4277	F22C  58			     pop     ax
   4278	F22D  1F			     pop     ds
   4279	F22E  07			     pop     es
   4280	F22F  CF			     iret
   4281	F230			     read_cursor     endp
   4282				     ;-----------------------------
   4283				     ; act_disp_page
   4284				     ;
   4285				     ;	  Эта программа устанавливает активную	       +
   4286				     страницу буфера адаптера ЭЛИ
   4287				     ;
   4288				     ;	 ВХОД
   4289				     ;		AL - страница.
   4290				     ;
   4291				     ;	 ВЫХОД
   4292				     ;		Выполняется сброс контроллера для	       +
   4293				     установки	новой страницы.
   4294				     ;
   4295				     ;-----------------------------
   4296	F230			     act_disp_page proc	     near
   4297	F230  A2 0062r			     mov     active_page,al  ; сохранить значение	       +
   4298				     активной страницы
   4299	F233  8B 0E 004Cr		     mov     cx,crt_len	     ; получить	длину области      +
   4300				     буфера
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 87
1840v4.asm



   4301	F237  98			     cbw		     ; преобразовать AL
   4302	F238  50			     push    ax		     ; сохранить значение	       +
   4303				     страницы
   4304	F239  F7 E1			     mul     cx
   4305	F23B  A3 004Er			     mov     crt_start,ax    ; сохранить начальный адрес
   4306								     ; для следующего требования
   4307	F23E  8B C8			     mov     cx,ax	     ; переслать начальный адрес+
   4308				     в	CX
   4309	F240  D1 F9			     sar     cx,1	     ; делить на 2
   4310	F242  B4 0C			     mov     ah,12
   4311	F244  E8 FF93			     call    m16
   4312	F247  5B			     pop     bx		     ; восстановить	значение       +
   4313				     страницы
   4314	F248  D1 E3			     sal     bx,1
   4315	F24A  8B 87 0050r		     mov ax,word ptr [bx+offset	cursor_posn]   ; получить курсор
   4316	F24E  E8 FFB8			     call    m18	     ; установить позицию	       +
   4317				     курсора
   4318	F251  E9 FF73			     jmp     video_return
   4319	F254			     act_disp_page   endp
   4320				     ;------------------------------
   4321				     ; set color
   4322				     ;
   4323				     ;	 Эта	программа устанавливает цветовую	       +
   4324				     палитру.
   4325				     ;
   4326				     ;	 ВХОД
   4327				     ;		BH=0
   4328				     ;		     BL	- значение пяти младших бит,	       +
   4329				     используемых для выбора
   4330				     ;			  цветовой палитры (цвет заднего     +
   4331				     плана	для цветной
   4332				     ;			  графики 320х200 или цвет каймы для    +
   4333				     цветного 40х25)
   4334				     ;		BH=1
   4335				     ;		     BL	- номер цветовой палитры
   4336				     ;			  BL=0 - зеленый(1), красный(2), желтый(3),
   4337				     ;			  BL=1 - голубой(1), фиолетовый(2), белый+
   4338				     (3)
   4339				     ;
   4340				     ;	 ВЫХОД
   4341				     ;		Установленная цветовая палитра в	       +
   4342				     порту	3D9.
   4343				     ;------------------------------
   4344	F254			     set_color proc  near
   4345	F254  8B 16 0063r		     mov     dx,addr_6845    ; порт	для палитры
   4346	F258  83 C2 05			     add     dx,5	     ; установить порт
   4347	F25B  A0 0066r			     mov     al,crt_pallette   ; получить текущее	       +
   4348				     значение палитры
   4349	F25E  0A FF			     or	     bh,bh	     ; цвет	0 ?
   4350	F260  75 0E			     jnz     m20	     ; вывод цвета 1
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 88
1840v4.asm



   4351
   4352				     ;	 Обработка цветовой палитры 0
   4353
   4354	F262  24 E0			     and     al,0e0h	     ; сбросить	5 младших бит
   4355	F264  80 E3 1F			     and     bl,01fh	     ; сбросить	3 старших бита
   4356	F267  0A C3			     or	     al,bl
   4357	F269			     m19:
   4358	F269  EE			     out     dx,al	      ;	вывод выбранного	цвета в  +
   4359				     порт 3D9
   4360	F26A  A2 0066r			     mov     crt_pallette,al  ;	сохранить значение цвета
   4361	F26D  E9 FF57			     jmp     video_return
   4362
   4363				     ;	 Обработка цветовой палитры 1
   4364
   4365	F270			     m20:
   4366	F270  24 DF			     and     al,0dfh	     ;
   4367	F272  D0 EB			     shr     bl,1	     ; проверить младший бит	BL
   4368	F274  73 F3			     jnc     m19
   4369	F276  0C 20			     or	     al,20h	     ;
   4370	F278  EB EF			     jmp     short m19	     ; переход
   4371	F27A			     set_color	     endp
   4372				     ;--------------------------
   4373				     ; video state
   4374				     ;
   4375				     ;	 Эта	программа получает текущее состояние  +
   4376				     ЭЛИ в AX.
   4377				     ;
   4378				     ;		AH - количество колонок,
   4379				     ;		AL - текущий режим,
   4380				     ;		BH - номер	активной страницы.
   4381				     ;
   4382				     ;---------------------------
   4383	F27A			     video_state proc	     near
   4384	F27A  8A 26 004Ar		     mov     ah,byte ptr crt_cols   ; получить количество    +
   4385				     колонок
   4386	F27E  A0 0049r			     mov     al,crt_mode	     ; текущий режим
   4387	F281  8A 3E 0062r		     mov     bh,active_page  ; получить	текущую активную+
   4388				     страницу
   4389	F285  5F			     pop     di		     ; восстановить	регистры
   4390	F286  5E			     pop     si
   4391	F287  59			     pop     cx
   4392	F288  E9 FF3F			     jmp     m15	     ; возврат к программе
   4393	F28B			     video_state     endp
   4394				     ;---------------------------
   4395				     ; position
   4396				     ;
   4397				     ;	 Эта	программа вычисляет адрес буфера	       +
   4398				     символа в режиме альфа.
   4399				     ;
   4400				     ;	 ВХОД
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 89
1840v4.asm



   4401				     ;		AX - номер	строки, номер колонки,
   4402				     ;
   4403				     ;	 ВЫХОД
   4404				     ;		AX - смещение символа с	координатами (AH,  +
   4405				     AL) относительно
   4406				     ;		     начала страницы. Смещение		       +
   4407				     измеряется в байтах.
   4408				     ;
   4409				     ;----------------------------
   4410	F28B			     position proc   near
   4411	F28B  53			     push    bx		     ; сохранить регистр
   4412	F28C  8B D8			     mov     bx,ax
   4413	F28E  8A C4			     mov     al,ah	     ; строки в AL
   4414	F290  F6 26 004Ar		     mul     byte ptr crt_cols
   4415	F294  32 FF			     xor     bh,bh
   4416	F296  03 C3			     add     ax,bx	     ; добавить	к значению	       +
   4417				     колонки
   4418	F298  D1 E0			     sal     ax,1	     ; * 2 для байтов атрибута
   4419	F29A  5B			     pop     bx
   4420	F29B  C3			     ret
   4421	F29C			     position	     endp
   4422				     ;-------------------------------
   4423				     ;scroll up
   4424				     ;
   4425				     ;	 Эта	программа перемещает	блок символов      +
   4426				     вверх	по экрану.
   4427				     ;
   4428				     ;	 ВХОД
   4429				     ;		AH - текуший режим,
   4430				     ;		AL - количество перемещаемых строк
   4431				     ;		CX - координаты левого верхнего	угла       +
   4432				     блока
   4433				     ;		     (строка, колонка),
   4434				     ;		DX - координаты правого нижнего	угла
   4435				     ;		BH - атрибут символа пробела (для	       +
   4436				     опробеливания	освобожда-
   4437				     ;		     емых строк),
   4438				     ;
   4439				     ;	 ВЫХОД
   4440				     ;		Модифицированный буфер дисплея.
   4441				     ;
   4442				     ;-----------------------------------
   4443					     assume cs:code,ds:data,es:data
   4444	F29C			     scroll_up proc  near
   4445	F29C  8A D8			     mov     bl,al	 ; сохранить количество	       +
   4446				     перемещаемых строк
   4447	F29E  80 FC 04			     cmp     ah,4	     ; проверка	графического       +
   4448				     режима
   4449	F2A1  72 08			     jc	     n1
   4450	F2A3  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 90
1840v4.asm



   4451	F2A6  74 03			     je	     n1
   4452	F2A8  E9 01F3			     jmp     graphics_up
   4453	F2AB			     n1:
   4454	F2AB  53			     push    bx		     ; сохранить полный атрибут  +
   4455				     в	BH
   4456	F2AC  8B C1			     mov     ax,cx	     ; координаты левого	       +
   4457				     верхнего угла
   4458	F2AE  E8 0039			     call    scroll_position
   4459	F2B1  74 33			     jz	     n7
   4460	F2B3  03 F0			     add     si,ax
   4461	F2B5  8A E6			     mov     ah,dh	     ; строка
   4462	F2B7  2A E3			     sub     ah,bl
   4463	F2B9			     n2:
   4464	F2B9  E8 0075			     call    n10	     ; сдвинуть	одну строку
   4465	F2BC  03 F5			     add     si,bp
   4466	F2BE  03 FD			     add     di,bp	     ; указать на следующую	       +
   4467				     строку в блоке
   4468	F2C0  FE CC			     dec     ah		     ; счетчик строк для	сдвига
   4469	F2C2  75 F5			     jnz     n2		     ; цикл	строки
   4470	F2C4			     n3:			     ; очистка входа
   4471	F2C4  58			     pop     ax		     ; восстановить	атрибут в AH
   4472	F2C5  B0 20			     mov     al,' '	     ; заполнить пробелами
   4473	F2C7			     n4:			     ; очистка счетчика
   4474	F2C7  E8 0070			     call    n11	     ; очистка строки
   4475	F2CA  03 FD			     add     di,bp	     ; указать следующую строку
   4476	F2CC  FE CB			     dec     bl		     ; счетчик строк для	сдвига
   4477	F2CE  75 F7			     jnz     n4		     ; очистка счетчика
   4478	F2D0			     n5:			     ; конец сдвига
   4479	F2D0  B8 0040			     mov     ax,dat
   4480	F2D3  8E D8			     mov     ds,ax
   4481	F2D5  80 3E 0049r 07		     cmp     crt_mode,7	     ; ч/б адаптер ?
   4482	F2DA  74 07			     je	     n6		     ; если	да - пропуск режима     +
   4483				     сброса
   4484	F2DC  A0 0065r			     mov     al,crt_mode_set
   4485	F2DF  BA 03D8			     mov     dx,03d8h	     ; установить порт цветного  +
   4486				     адаптера
   4487	F2E2  EE			     out     dx,al
   4488	F2E3			     n6:
   4489	F2E3  E9 FEE1			     jmp     video_return
   4490	F2E6			     n7:
   4491	F2E6  8A DE			     mov     bl,dh
   4492	F2E8  EB DA			     jmp     short n3	     ; очистить
   4493	F2EA			     scroll_up	     endp
   4494
   4495				     ;	 Обработка сдвига
   4496
   4497	F2EA			     scroll_position proc    near
   4498	F2EA  80 3E 0049r 02		     cmp     crt_mode,2
   4499	F2EF  72 19			     jb	     n9		     ; обработать 80х25 отдельно
   4500	F2F1  80 3E 0049r 03		     cmp     crt_mode,3
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 91
1840v4.asm



   4501	F2F6  77 12			     ja	     n9
   4502
   4503				     ;	 Сдиг для цветного адаптера в режиме 80х25
   4504
   4505	F2F8  52			     push    dx
   4506	F2F9  BA 03DA			     mov     dx,3dah	     ; обработка цветного	       +
   4507				     адаптера
   4508	F2FC  50			     push    ax
   4509	F2FD			     n8:			     ; ожидание	доступности	       +
   4510				     дисплея
   4511	F2FD  EC			     in	     al,dx
   4512	F2FE  A8 08			     test    al,8
   4513	F300  74 FB			     jz	     n8		     ; ожидание	доступности	       +
   4514				     дисплея
   4515	F302  B0 25			     mov     al,25h
   4516	F304  BA 03D8			     mov     dx,03d8h
   4517	F307  EE			     out     dx,al	     ; выключить ЭЛИ
   4518	F308  58			     pop     ax
   4519	F309  5A			     pop     dx
   4520	F30A  E8 FF7E		     n9:     call    position
   4521	F30D  03 06 004Er		     add     ax,crt_start    ; смещение	активной	       +
   4522				     страницы
   4523	F311  8B F8			     mov     di,ax	     ; для адреса сдвига
   4524	F313  8B F0			     mov     si,ax
   4525	F315  2B D1			     sub     dx,cx	     ; DX=строка
   4526	F317  FE C6			     inc     dh
   4527	F319  FE C2			     inc     dl		     ; прибавление к началу
   4528	F31B  32 ED			     xor     ch,ch	     ; установить старший байт    +
   4529				     счетчика в 0
   4530	F31D  8B 2E 004Ar		     mov     bp,crt_cols     ; получить	число колонок      +
   4531				     дисплея
   4532	F321  03 ED			     add     bp,bp	     ; увеличить на 2 байт	       +
   4533				     атрибута
   4534	F323  8A C3			     mov     al,bl	     ; получить	счетчик строки
   4535	F325  F6 26 004Ar		     mul     byte ptr crt_cols	 ; определить	смещение из  +
   4536				     адреса,
   4537	F329  03 C0			     add     ax,ax     ; умноженного	на 2,	для байта      +
   4538				     атрибута
   4539	F32B  06			     push    es	     ; установить адресацию для	       +
   4540				     области буфера
   4541	F32C  1F			     pop     ds
   4542	F32D  80 FB 00			     cmp     bl,0	     ; 0 означает очистку блока
   4543	F330  C3			     ret		     ; возврат с установкой	       +
   4544				     флажков
   4545	F331			     scroll_position endp
   4546
   4547				     ;	 Перемещение	строки
   4548
   4549	F331			     n10     proc    near
   4550	F331  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 92
1840v4.asm



   4551				     передачи
   4552	F333  56			     push    si
   4553	F334  57			     push    di		     ; сохранить начальный адрес
   4554	F335  F3> A5			     rep     movsw	     ; передать	эту строку на       +
   4555				     экран
   4556	F337  5F			     pop     di
   4557	F338  5E			     pop     si		     ; восстановить	адресацию
   4558	F339  C3			     ret
   4559	F33A			     n10     endp
   4560
   4561				     ;	 очистка	строки
   4562
   4563	F33A			     n11     proc    near
   4564	F33A  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4565				     очистки
   4566	F33C  57			     push    di
   4567	F33D  F3> AB			     rep     stosw	     ; запомнить полный знак
   4568	F33F  5F			     pop     di
   4569	F340  C3			     ret
   4570	F341			     n11     endp
   4571				     ;------------------------
   4572				     ; scroll_down
   4573				     ;
   4574				     ;	 Эта	программа перемещает	блок символов      +
   4575				     вниз по
   4576				     ; экрану, заполняя верхние строки пробелом с  +
   4577				     заданным атрибутом
   4578				     ;
   4579				     ;	 ВХОД
   4580				     ;		AH - текущий режим,
   4581				     ;		AL - количество строк,
   4582				     ;		CX - верхний левый угол	блока,
   4583				     ;		DX - правый нижний угол	блока,
   4584				     ;		BH - атрибут символа-заполнителя	       +
   4585				     (пробела),
   4586				     ;
   4587				     ;-------------------------
   4588	F341			     scroll_down proc near
   4589	F341  FD			     std		     ; уст направление сдвига      +
   4590				     вниз
   4591	F342  8A D8			     mov     bl,al	     ; количество строк в BL
   4592	F344  80 FC 04			     cmp     ah,4	     ; проверка	графики
   4593	F347  72 08			     jc	     n12
   4594	F349  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4595	F34C  74 03			     je	     n12
   4596	F34E  E9 01A6			     jmp     graphics_down
   4597	F351			     n12:
   4598	F351  53			     push    bx		     ; сохранить атрибут в BH
   4599	F352  8B C2			     mov     ax,dx	     ; нижний правый угол
   4600	F354  E8 FF93			     call    scroll_position
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 93
1840v4.asm



   4601	F357  74 20			     jz	     n16
   4602	F359  2B F0			     sub     si,ax	     ; SI для адресации
   4603	F35B  8A E6			     mov     ah,dh
   4604	F35D  2A E3			     sub     ah,bl	     ; передать	количество строк
   4605	F35F			     n13:
   4606	F35F  E8 FFCF			     call    n10	     ; передать	одну строку
   4607	F362  2B F5			     sub     si,bp
   4608	F364  2B FD			     sub     di,bp
   4609	F366  FE CC			     dec     ah
   4610	F368  75 F5			     jnz     n13
   4611	F36A			     n14:
   4612	F36A  58			     pop     ax		     ; восстановить	атрибут в AH
   4613	F36B  B0 20			     mov     al,' '
   4614	F36D			     n15:
   4615	F36D  E8 FFCA			     call    n11	     ; очистка одной строки
   4616	F370  2B FD			     sub     di,bp	     ; перейти к следующей строке
   4617	F372  FE CB			     dec     bl
   4618	F374  75 F7			     jnz     n15
   4619	F376  E9 FF57			     jmp     n5		     ; конец сдвига
   4620	F379			     n16:
   4621	F379  8A DE			     mov     bl,dh
   4622	F37B  EB ED			     jmp     short n14
   4623	F37D			     scroll_down  endp
   4624				     ;--------------------
   4625				     ; read_ac_current
   4626				     ;
   4627				     ;	 Эта	программа считывает атрибут и	код	       +
   4628				     символа, находящегося в теку-
   4629				     ; щем положении курсора
   4630				     ;
   4631				     ;	 ВХОД
   4632				     ;		AH - текущий режим,
   4633				     ;		BH - номер	страницы (только для режима     +
   4634				     альфа),
   4635				     ;
   4636				     ;	 ВЫХОД
   4637				     ;		AL - код символа,
   4638				     ;		AH - атрибут символа.
   4639				     ;
   4640				     ;---------------------
   4641					     assume cs:code,ds:data,es:data
   4642	F37D			     read_ac_current proc near
   4643	F37D  80 FC 04			     cmp     ah,4	     ; это графика ?
   4644	F380  72 08			     jc	     p1
   4645	F382  80 FC 07			     cmp     ah,7	     ; ч/б адаптер ?
   4646	F385  74 03			     je	     p1
   4647	F387  E9 02A9			     jmp     graphics_read
   4648	F38A			     p1:			     ;
   4649	F38A  E8 001A			     call    find_position
   4650	F38D  8B F3			     mov     si,bx	     ; установить адресацию в SI
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 94
1840v4.asm



   4651
   4652
   4653	F38F  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4654	F393  83 C2 06			     add     dx,6	     ; порт	состояния
   4655	F396  06			     push    es
   4656	F397  1F			     pop     ds		     ; получить	сегмент
   4657	F398			     p2:
   4658	F398  EC			     in	     al,dx	     ; получить	состояние
   4659	F399  A8 01			     test    al,1
   4660	F39B  75 FB			     jnz     p2		     ; ожидание
   4661	F39D  FA			     cli		; сброс признака разрешения     +
   4662				     прерывания
   4663	F39E			     p3:
   4664	F39E  EC			     in	     al,dx	     ; получить	состояние
   4665	F39F  A8 01			     test    al,1
   4666	F3A1  74 FB			     jz	     p3		     ; ожидание
   4667	F3A3  AD			     lodsw		     ; получить	символ/атрибут
   4668	F3A4  E9 FE20			     jmp     video_return
   4669	F3A7			     read_ac_current endp
   4670
   4671	F3A7			     find_position proc	near
   4672	F3A7  8A CF			     mov     cl,bh	     ; поместить страницу в CX
   4673	F3A9  32 ED			     xor     ch,ch
   4674	F3AB  8B F1			     mov     si,cx	     ; передать	в SI индекс,	       +
   4675				     умноженный на 2
   4676	F3AD  D1 E6			     sal     si,1	     ; для слова смещения
   4677	F3AF  8B 84 0050r		     mov ax,word ptr [si+offset	cursor_posn]   ; получить	       +
   4678				     строку/ко-
   4679								     ; лонку этой страницы
   4680	F3B3  33 DB			     xor     bx,bx	     ; установить начальный	       +
   4681				     адрес	в 0
   4682	F3B5  E3 06			     jcxz    p5
   4683	F3B7			     p4:
   4684	F3B7  03 1E 004Cr		     add     bx,crt_len	     ; длина буфера
   4685	F3BB  E2 FA			     loop    p4
   4686	F3BD			     p5:
   4687	F3BD  E8 FECB			     call    position
   4688	F3C0  03 D8			     add     bx,ax
   4689	F3C2  C3			     ret
   4690	F3C3			     find_position   endp
   4691				     ;---------------------
   4692				     ;write_ac_current
   4693				     ;
   4694				     ;	 Эта	программа записывает	атрибут и код       +
   4695				     символа в текущую позицию
   4696				     ; курсора
   4697				     ;
   4698				     ;	 ВХОД
   4699				     ;		AH - текущий режим,
   4700				     ;		BH - номер	страницы,
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 95
1840v4.asm



   4701				     ;		CX - счетчик (количество повторений	       +
   4702				     символов),
   4703				     ;		AL - код символа,
   4704				     ;		BL - атрибут символа (для режимов альфа)  +
   4705				     или цвет символа
   4706				     ;		     для графики.
   4707				     ;
   4708				     ;----------------------
   4709	F3C3			     write_ac_current proc near
   4710	F3C3  80 FC 04			     cmp     ah,4	     ; это графика ?
   4711	F3C6  72 08			     jc	     p6
   4712	F3C8  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4713	F3CB  74 03			     je	     p6
   4714	F3CD  E9 01B1			     jmp     graphics_write
   4715	F3D0			     p6:
   4716	F3D0  8A E3			     mov     ah,bl	     ; получить	атрибут в AH
   4717	F3D2  50			     push    ax		     ; хранить
   4718	F3D3  51			     push    cx		     ; хранить счетчик
   4719	F3D4  E8 FFD0			     call    find_position
   4720	F3D7  8B FB			     mov     di,bx	     ; адрес в DI
   4721	F3D9  59			     pop     cx		     ; вернуть счетчик
   4722	F3DA  5B			     pop     bx		     ; и символ
   4723	F3DB			     p7:			     ; цикл	записи
   4724
   4725
   4726	F3DB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4727	F3DF  83 C2 06			     add     dx,6	     ; указать порт состояния
   4728	F3E2			     p8:
   4729	F3E2  EC			     in	     al,dx	     ; получить	состояние
   4730	F3E3  A8 01			     test    al,1
   4731	F3E5  75 FB			     jnz     p8		     ; ожидать
   4732	F3E7  FA			     cli		  ; сброс признака	разрешения   +
   4733				     прерывания
   4734	F3E8			     p9:
   4735	F3E8  EC			     in	     al,dx	     ; получить	состояние
   4736	F3E9  A8 01			     test    al,1
   4737	F3EB  74 FB			     jz	     p9		     ; ожидать
   4738	F3ED  8B C3			     mov     ax,bx
   4739	F3EF  AB			     stosw		     ; записать	символ и	атрибут
   4740	F3F0  FB			     sti		     ; уст признак разрешения      +
   4741				     прерывания
   4742	F3F1  E2 E8			     loop    p7
   4743	F3F3  E9 FDD1			     jmp     video_return
   4744	F3F6			     write_ac_current  endp
   4745				     ;---------------------
   4746				     ;write_c_current
   4747				     ;
   4748				     ;	 Эта	программа записывает	символ в	текущую +
   4749				     позицию курсора.
   4750				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 96
1840v4.asm



   4751				     ;	 ВХОД
   4752				     ;		BH - номер	страницы (только для альфа       +
   4753				     режимов),
   4754				     ;		CX - счетчик (количество повторений	       +
   4755				     символа),
   4756				     ;		AL - код символа,
   4757				     ;
   4758				     ;-----------------------
   4759	F3F6			     write_c_current proc near
   4760	F3F6  80 FC 04			     cmp     ah,4	     ; это графика ?
   4761	F3F9  72 08			     jc	     p10
   4762	F3FB  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4763	F3FE  74 03			     je	     p10
   4764	F400  E9 017E			     jmp     graphics_write
   4765	F403			     p10:
   4766	F403  50			     push    ax		     ; сохранить в стеке
   4767	F404  51			     push    cx		     ; сохранить количество	       +
   4768				     повторений
   4769	F405  E8 FF9F			     call    find_position
   4770	F408  8B FB			     mov     di,bx	     ; адрес в DI
   4771	F40A  59			     pop     cx		     ; вернуть количество	       +
   4772				     повторений
   4773	F40B  5B			     pop     bx		     ; BL - код символа
   4774	F40C			     p11:
   4775
   4776
   4777	F40C  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4778	F410  83 C2 06			     add     dx,6	     ; указать порт состояния
   4779	F413			     p12:
   4780	F413  EC			     in	     al,dx	     ; получить	состояние
   4781	F414  A8 01			     test    al,1
   4782	F416  75 FB			     jnz     p12	     ; ожидать
   4783	F418  FA			     cli		     ; сброс признака разрешения+
   4784				     прерывания
   4785	F419			     p13:
   4786	F419  EC			     in	     al,dx	     ; получить	состояние
   4787	F41A  A8 01			     test    al,1
   4788	F41C  74 FB			     jz	     p13	     ; ожидание
   4789	F41E  8A C3			     mov     al,bl	     ; восстановить	символ
   4790	F420  AA			     stosb		     ; записать	символ
   4791	F421  47			     inc     di
   4792	F422  E2 E8			     loop    p11	     ; цикл
   4793	F424  E9 FDA0			     jmp     video_return
   4794	F427			     write_c_current endp
   4795				     ;---------------------
   4796				     ; read dot	- write	dot
   4797				     ;
   4798				     ;	 Эта	программа считывает/записывает точку.
   4799				     ;
   4800				     ;	 ВХОД
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 97
1840v4.asm



   4801				     ;		DX - строка (0-199),
   4802				     ;		CX - колонка (0-639),
   4803				     ;		AL - цвет выводимой точки.
   4804				     ;		     Если бит 7=1, то выполняется операция
   4805				     ;		     XOR над	значением точки из буфера	       +
   4806				     дисплея и значением
   4807				     ;		     точки	из регистра AL (при записи	       +
   4808				     точки).
   4809				     ;
   4810				     ;	 ВЫХОД
   4811				     ;		AL - значение считанной точки
   4812				     ;
   4813				     ;----------------------
   4814					     assume cs:code,ds:data,es:data
   4815	F427			     read_dot proc   near
   4816	F427  E8 0031			     call    r3		     ; определить положение	       +
   4817				     точки
   4818	F42A  26: 8A 04			     mov     al,es:[si]	     ; получить	байт
   4819	F42D  22 C4			     and     al,ah	     ; размаскировать другие       +
   4820				     биты в байте
   4821	F42F  D2 E0			     shl     al,cl	     ;
   4822	F431  8A CE			     mov     cl,dh	     ; получить	число бит	       +
   4823				     результата
   4824	F433  D2 C0			     rol     al,cl
   4825	F435  E9 FD8F			     jmp     video_return    ; выход из прерывания
   4826	F438			     read_dot	     endp
   4827
   4828	F438			     write_dot proc  near
   4829	F438  50			     push    ax		     ; сохранить значение точки
   4830	F439  50			     push    ax		     ; еще раз
   4831	F43A  E8 001E			     call    r3		     ; определить положение	       +
   4832				     точки
   4833	F43D  D2 E8			     shr     al,cl	     ; сдвиг для установки бит     +
   4834				     при выводе
   4835	F43F  22 C4			     and     al,ah	     ; сбросить	другие биты
   4836	F441  26: 8A 0C			     mov     cl,es:[si]	     ; получить	текущий байт
   4837	F444  5B			     pop     bx
   4838	F445  F6 C3 80			     test    bl,80h
   4839	F448  75 0D			     jnz     r2
   4840	F44A  F6 D4			     not     ah	       ; установить маску для		       +
   4841				     передачи указанных бит
   4842	F44C  22 CC			     and     cl,ah
   4843	F44E  0A C1			     or	     al,cl
   4844	F450			     r1:
   4845	F450  26: 88 04			     mov es:[si],al	     ; восстановить	байт в памяти
   4846	F453  58			     pop     ax
   4847	F454  E9 FD70			     jmp     video_return    ; к выходу из программы
   4848	F457			     r2:
   4849	F457  32 C1			     xor     al,cl	     ; исключающее ИЛИ над	       +
   4850				     значениями точки
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 98
1840v4.asm



   4851	F459  EB F5			     jmp     short r1	     ; конец записи
   4852	F45B			     write_dot	     endp
   4853
   4854				     ;-------------------------------------
   4855				     ;
   4856				     ;	 Эта	программа определяет	относительный     +
   4857				     адрес	байта (внутри буфера
   4858				     ; дисплея),	из которого должна быть		       +
   4859				     считана/записана точка,с заданными
   4860				     ; координатами.
   4861				     ;
   4862				     ;	 ВХОД
   4863				     ;		DX - строка (0-199),
   4864				     ;		CX - колонка (0-639).
   4865				     ;
   4866				     ;	 ВЫХОД
   4867				     ;		SI - относительный	адрес байта,		       +
   4868				     содержащего точку внутри
   4869				     ;		     буфера дисплея,
   4870				     ;		AH - маска	для выделения значения	       +
   4871				     заданной точки внутри байта
   4872				     ;		CL - константа	сдвига маски	в AH в крайнюю+
   4873				     левую	позицию,
   4874				     ;		DH - число	бит,	определяющих значение      +
   4875				     точки.
   4876				     ;
   4877				     ;--------------------------------------
   4878
   4879	F45B			     r3	     proc    near
   4880	F45B  53			     push    bx		     ; сохранить BX
   4881	F45C  50			     push    ax		     ; сохранить AL
   4882
   4883				     ;	 Вычисление первого байта	указанной строки+
   4884				     умножением на 40.
   4885				     ; Наименьший бит строки	определяет		       +
   4886				     четно/нечетную 80-байтовую строку.
   4887
   4888	F45D  B0 28			     mov     al,40
   4889	F45F  52			     push    dx		     ; сохранить значение строки
   4890	F460  80 E2 FE			     and     dl,0feh	     ; сброс четно/нечетного	бита
   4891	F463  F6 E2			     mul     dl	  ; AX содержит	адрес первого байта   +
   4892				     указанной	строки
   4893	F465  5A			     pop     dx		     ; восстановить	его
   4894	F466  F6 C2 01			     test    dl,1	     ; проверить			       +
   4895				     четность/нечетность
   4896	F469  74 03			     jz	     r4		     ; переход,если строка четная
   4897	F46B  05 2000			     add     ax,2000h	     ; смещение	для нахождения    +
   4898				     нечетных строк
   4899	F46E			     r4:			     ; четная строка
   4900	F46E  8B F0			     mov     si,ax	     ; передать	указатель в SI
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 99
1840v4.asm



   4901	F470  58			     pop     ax		     ; восстановить	значение AL
   4902	F471  8B D1			     mov     dx,cx	     ; значение	колонки в DX
   4903
   4904				     ;	 Определение	действительных графических    +
   4905				     режимов
   4906				     ;
   4907				     ;	 Установка регистров согласно	режимaм
   4908				     ;
   4909				     ;	       BH - количество бит, определяющее точку,
   4910				     ;	       BL - константа выделения точки из левых   +
   4911				     бит байта,
   4912				     ;	       CH - константа для выделения из номера     +
   4913				     колонки номера позиции
   4914				     ;		    первого бита, определяющего	точку в  +
   4915				     байте, т.е.	получение
   4916				     ;		    остатка от	деления номера на 8 (для     +
   4917				     режима 640х200) или
   4918				     ;		    номера на 4	(для	режима 320х200),
   4919				     ;	       CL - константа сдвига (для выполнения       +
   4920				     деления на 8 или на 4).
   4921
   4922	F473  BB 02C0			     mov     bx,2c0h
   4923	F476  B9 0302			     mov     cx,302h	     ; установка параметров
   4924	F479  80 3E 0049r 06		     cmp     crt_mode,6
   4925	F47E  72 06			     jc	     r5		     ;
   4926	F480  BB 0180			     mov     bx,180h
   4927	F483  B9 0703			     mov     cx,703h	     ; уст параметры для		       +
   4928				     старшего регистра
   4929
   4930				     ;	 Определение	бита смещения в байте	по маске
   4931	F486			     r5:
   4932	F486  22 EA			     and     ch,dl	     ;
   4933
   4934				     ;	 Определение	байта смещения в колонке
   4935
   4936	F488  D3 EA			     shr     dx,cl	     ; сдвиг для коррекции
   4937	F48A  03 F2			     add     si,dx	     ; получить	указатель
   4938	F48C  8A F7			     mov     dh,bh   ; получить	указатель битов	       +
   4939				     результата в DH
   4940
   4941				     ;	 Умножение BH (количество бит в байте) на	CH     +
   4942				     (бит смещения)
   4943
   4944	F48E  2A C9			     sub     cl,cl
   4945	F490			     r6:
   4946	F490  D0 C8			     ror     al,1    ; левое крайнее значение в AL	для +
   4947				     записи
   4948	F492  02 CD			     add     cl,ch	     ; прибавить значение бита    +
   4949				     смещения
   4950	F494  FE CF			     dec     bh		     ; счетчик контроля
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 100
1840v4.asm



   4951	F496  75 F8			     jnz     r6	     ; на выходе CL содержит счетчик    +
   4952				     сдвига для
   4953								     ; восстановления
   4954	F498  8A E3			     mov     ah,bl	     ; получить	маску в AH
   4955	F49A  D2 EC			     shr     ah,cl	     ; передать	маску в ячейку
   4956	F49C  5B			     pop     bx		     ; восстановить	регистр
   4957	F49D  C3			     ret		     ; возврат с восстановлением
   4958	F49E			     r3	     endp
   4959
   4960				     ;----------------------------------------
   4961				     ;
   4962				     ;
   4963				     ;	  Программа перемещает блок символов вверх +
   4964				     в	режиме графики
   4965				     ;
   4966				     ;-----------------------------------------
   4967
   4968	F49E			     graphics_up proc near
   4969	F49E  8A D8			     mov     bl,al	     ; сохранить количество	       +
   4970				     символов
   4971	F4A0  8B C1			     mov     ax,cx	     ; получить	верхний левый      +
   4972				     угол в AX
   4973
   4974
   4975	F4A2  E8 026A			     call    graph_posn
   4976	F4A5  8B F8			     mov     di,ax	     ; сохранить результат
   4977
   4978				     ;	 Определить размеры блока
   4979
   4980	F4A7  2B D1			     sub     dx,cx
   4981	F4A9  81 C2 0101		     add     dx,101h
   4982	F4AD  D0 E6			     sal     dh,1
   4983	F4AF  D0 E6			     sal     dh,1
   4984
   4985	F4B1  80 3E 0049r 06		     cmp     crt_mode,6
   4986	F4B6  73 04			     jnc     r7
   4987
   4988	F4B8  D0 E2			     sal     dl,1
   4989	F4BA  D1 E7			     sal     di,1	     ;
   4990
   4991				     ;	 Определение	адреса источника	в буфере
   4992	F4BC			     r7:
   4993	F4BC  06			     push    es
   4994	F4BD  1F			     pop     ds
   4995	F4BE  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   4996				     счетчика
   4997	F4C0  D0 E3			     sal     bl,1	     ; умножение числа строк	на 4
   4998	F4C2  D0 E3			     sal     bl,1
   4999	F4C4  74 2D			     jz	     r11	     ; если	0, занести пробелы
   5000	F4C6  8A C3			     mov     al,bl	     ; получить	число строк в AL
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 101
1840v4.asm



   5001	F4C8  B4 50			     mov     ah,80	     ; 80 байт/строк
   5002	F4CA  F6 E4			     mul     ah		     ; определить смещение	       +
   5003				     источника
   5004	F4CC  8B F7			     mov     si,di	     ; установить источник
   5005	F4CE  03 F0			     add     si,ax	     ; сложить источник с ним
   5006	F4D0  8A E6			     mov     ah,dh	     ; количество строк
   5007	F4D2  2A E3			     sub     ah,bl	     ; определить число		       +
   5008				     перемещений
   5009
   5010	F4D4			     r8:
   5011	F4D4  E8 0080			     call    r17	     ; перемещение одной строки
   5012	F4D7  81 EE 1FB0		     sub     si,2000h-80     ; перемещение в следующую    +
   5013				     строку
   5014	F4DB  81 EF 1FB0		     sub     di,2000h-80
   5015	F4DF  FE CC			     dec     ah		     ; количество строк для	       +
   5016				     перемещения
   5017	F4E1  75 F1			     jnz     r8	     ; продолжать, пока все строки не +
   5018				     переместятся
   5019
   5020				     ;	 Заполнение освобожденных строк
   5021	F4E3			     r9:
   5022	F4E3  8A C7			     mov     al,bh
   5023	F4E5			     r10:
   5024	F4E5  E8 0088			     call    r18	     ; очистить	эту строку
   5025	F4E8  81 EF 1FB0		     sub     di,2000h-80     ; указать на следующую
   5026	F4EC  FE CB			     dec     bl		     ; количество строк для	       +
   5027				     заполнения
   5028	F4EE  75 F5			     jnz     r10	     ; цикл	очистки
   5029	F4F0  E9 FCD4			     jmp     video_return    ; к выходу из программы
   5030
   5031	F4F3			     r11:
   5032	F4F3  8A DE			     mov     bl,dh	     ; установить количество       +
   5033				     пробелов
   5034	F4F5  EB EC			     jmp     short r9	     ; очистить
   5035	F4F7			     graphics_up     endp
   5036
   5037				     ;---------------------------------
   5038				     ;
   5039				     ;	 Программа перемещает блок символов вниз в +
   5040				     режиме графики
   5041				     ;
   5042				     ;----------------------------------
   5043
   5044	F4F7			     graphics_down proc	     near
   5045	F4F7  FD			     std		     ; установить направление
   5046	F4F8  8A D8			     mov     bl,al	     ; сохранить количество	       +
   5047				     строк
   5048	F4FA  8B C2			     mov     ax,dx	     ; получить	нижнюю правую      +
   5049				     позицию в AX
   5050
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 102
1840v4.asm



   5051
   5052	F4FC  E8 0210			     call    graph_posn
   5053	F4FF  8B F8			     mov     di,ax	     ; сохранить результат
   5054
   5055				     ;	 Определение	размера блока
   5056
   5057	F501  2B D1			     sub     dx,cx
   5058	F503  81 C2 0101		     add     dx,101h
   5059	F507  D0 E6			     sal     dh,1
   5060	F509  D0 E6			     sal     dh,1
   5061
   5062
   5063	F50B  80 3E 0049r 06		     cmp     crt_mode,6
   5064	F510  73 05			     jnc     r12
   5065
   5066	F512  D0 E2			     sal     dl,1
   5067	F514  D1 E7			     sal     di,1
   5068	F516  47			     inc     di
   5069
   5070				     ;	 Определение	адреса источника	в буфере
   5071	F517			     r12:
   5072	F517  06			     push    es
   5073	F518  1F			     pop     ds
   5074	F519  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   5075				     счетчика
   5076	F51B  81 C7 00F0		     add     di,240	     ; указать последнюю строку
   5077	F51F  D0 E3			     sal     bl,1	     ; умножить	количество строк+
   5078				     на 4
   5079	F521  D0 E3			     sal     bl,1
   5080	F523  74 2E			     jz	     r16	     ; если	0, заполнить пробелом
   5081	F525  8A C3			     mov     al,bl	     ; получить	количество строк+
   5082				     в	AL
   5083	F527  B4 50			     mov     ah,80	     ; 80 байт/строк
   5084	F529  F6 E4			     mul     ah		     ; определить смещение	       +
   5085				     источника
   5086	F52B  8B F7			     mov     si,di	     ; установить источник
   5087	F52D  2B F0			     sub     si,ax	     ; вычесть смещение
   5088	F52F  8A E6			     mov     ah,dh	     ; количество строк
   5089	F531  2A E3			     sub     ah,bl	     ; определить число для	       +
   5090				     перемещения
   5091
   5092	F533			     r13:
   5093	F533  E8 0021			     call    r17	     ; переместить одну строку
   5094	F536  81 EE 2050		     sub     si,2000h+80     ; установить следующую	       +
   5095				     строку
   5096	F53A  81 EF 2050		     sub     di,2000h+80
   5097	F53E  FE CC			     dec     ah		     ; количество строк для	       +
   5098				     перемещения
   5099	F540  75 F1			     jnz     r13	     ; продолжать, пока все не      +
   5100				     переместятся
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 103
1840v4.asm



   5101
   5102				     ;	 Заполнение освобожденных строк
   5103	F542			     r14:
   5104	F542  8A C7			     mov     al,bh	     ; атрибут заполнения
   5105	F544			     r15:
   5106	F544  E8 0029			     call    r18	     ; очистить	строку
   5107	F547  81 EF 2050		     sub     di,2000h+80     ; указать следующую строку
   5108	F54B  FE CB			     dec     bl		     ; число строк для заполнения
   5109	F54D  75 F5			     jnz     r15
   5110	F54F  FC			     cld		     ; сброс признака		       +
   5111				     направления
   5112	F550  E9 FC74			     jmp     video_return    ; к выходу из программы
   5113
   5114	F553			     r16:
   5115	F553  8A DE			     mov     bl,dh
   5116	F555  EB EB			     jmp     short r14	     ; очистить
   5117	F557			     graphics_down endp
   5118
   5119				     ;	 Программа перемещения одной строки
   5120
   5121	F557			     r17     proc    near
   5122	F557  8A CA			     mov     cl,dl	     ; число байт в строке
   5123	F559  56			     push    si
   5124	F55A  57			     push    di		     ; хранить указатели
   5125	F55B  F3> A4			     rep     movsb	     ; переместить четное поле
   5126	F55D  5F			     pop     di
   5127	F55E  5E			     pop     si
   5128	F55F  81 C6 2000		     add     si,2000h
   5129	F563  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5130	F567  56			     push    si
   5131	F568  57			     push    di		     ; сохранить указатели
   5132	F569  8A CA			     mov     cl,dl	     ; возврат счвтчика
   5133	F56B  F3> A4			     rep     movsb	     ; передать	нечетное поле
   5134	F56D  5F			     pop     di
   5135	F56E  5E			     pop     si		     ; возврат указателей
   5136	F56F  C3			     ret		     ; возврат к программе
   5137	F570			     r17     endp
   5138
   5139				     ;	 Заполнение пробелами строки
   5140
   5141	F570			     r18     proc    near
   5142	F570  8A CA			     mov     cl,dl	     ; число байт в поле
   5143	F572  57			     push    di		     ; хранить указатель
   5144	F573  F3> AA			     rep     stosb	     ; запомнить новое значение
   5145	F575  5F			     pop     di		     ; вернуть указатель
   5146	F576  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5147	F57A  57			     push    di
   5148	F57B  8A CA			     mov     cl,dl
   5149	F57D  F3> AA			     rep     stosb	     ; заполнить нечетное поле
   5150	F57F  5F			     pop     di
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 104
1840v4.asm



   5151	F580  C3			     ret		     ; возврат к программе
   5152	F581			     r18     endp
   5153
   5154				     ;--------------------------------------
   5155				     ;
   5156				     ;	graphics_write
   5157				     ;
   5158				     ;	 Эта	программа записывает	символ в	режиме   +
   5159				     графики
   5160				     ;
   5161				     ;	 ВХОД
   5162				     ;		AL - код символа,
   5163				     ;		BL - атрибут цвета,	который используется+
   5164				     в	качестве цвета
   5165				     ;		     переднего	плана (цвет символа). Если +
   5166				     бит 7 BL=1, то
   5167				     ;		     выполняется операция XOR над	байтом в+
   5168				     буфере и байтом
   5169				     ;		     в	генераторе символов,
   5170				     ;		CX - счетчик повторений символа
   5171				     ;
   5172				     ;----------------------------------------
   5173
   5174					     assume cs:code,ds:data,es:data
   5175	F581			     graphics_write proc near
   5176	F581  B4 00			     mov     ah,0	     ; AH=0
   5177	F583  50			     push    ax		     ; сохранить значение кода    +
   5178				     символа
   5179
   5180				     ;	 Определение	позиции в области буфера	       +
   5181				     засылкой туда кода	точек
   5182
   5183	F584  E8 0185			     call    s26	     ; найти ячейку в области       +
   5184				     буфера
   5185	F587  8B F8			     mov     di,ax	     ; указатель области в DI
   5186
   5187				     ;	 Определение	области для получения кода      +
   5188				     точки
   5189
   5190	F589  58			     pop     ax		     ; восстановить	код точки
   5191	F58A  3C 80			     cmp     al,80h	     ; во второй половине ?
   5192	F58C  73 06			     jae     s1		     ; да
   5193
   5194				     ;	 Изображение	есть в первой половине памяти
   5195
   5196	F58E  BE FA6Er			     mov     si, offset	crt_char_gen  ;	смещение изображения
   5197	F591  0E			     push    cs		     ; хранить сегмент в	стеке
   5198	F592  EB 0F			     jmp     short s2	     ; определить режим
   5199
   5200				     ;	 Изображение	есть во второй части памяти
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 105
1840v4.asm



   5201
   5202	F594			     s1:
   5203	F594  2C 80			     sub     al,80h	     ; 0 во вторую половину
   5204	F596  1E			     push    ds		     ; хранить указатель данных
   5205	F597  2B F6			     sub     si,si
   5206	F599  8E DE			     mov     ds,si	     ; установить адресацию
   5207					     assume  ds:abs0
   5208	F59B  C5 36 007Cr		     lds     si,ext_ptr	     ; получить	смещение
   5209	F59F  8C DA			     mov     dx,ds	     ; получить	сегмент
   5210					     assume  ds:data
   5211	F5A1  1F			     pop     ds		     ; восстановить	сегмент	       +
   5212				     данных
   5213	F5A2  52			     push    dx		     ; хранить сегмент в	стеке
   5214
   5215				     ;	 Опеделение графического режима операции
   5216
   5217	F5A3			     s2:			     ; определение режима
   5218	F5A3  D1 E0			     sal     ax,1	     ; умножить	указатель кода    +
   5219				     на 8
   5220	F5A5  D1 E0			     sal     ax,1
   5221	F5A7  D1 E0			     sal     ax,1
   5222	F5A9  03 F0			     add     si,ax	     ; SI содержит смещение
   5223	F5AB  80 3E 0049r 06		     cmp     crt_mode,6
   5224	F5B0  1F			     pop     ds		     ; восстановить	указатель     +
   5225				     таблицы
   5226	F5B1  72 2C			     jc	     s7	     ; проверка	для средней		       +
   5227				     разрешающей способности
   5228
   5229				     ;	 Высокая	разрешающая способность
   5230	F5B3			     s3:
   5231	F5B3  57			     push    di		     ; сохранить указатель	       +
   5232				     области
   5233	F5B4  56			     push    si		     ; сохранить указатель кода
   5234	F5B5  B6 04			     mov     dh,4	     ; количество циклов
   5235	F5B7			     s4:
   5236	F5B7  AC			     lodsb		     ; выборка четного байта
   5237	F5B8  F6 C3 80			     test    bl,80h
   5238	F5BB  75 16			     jnz     s6
   5239	F5BD  AA			     stosb
   5240	F5BE  AC			     lodsb
   5241	F5BF			     s5:
   5242	F5BF  26: 88 85	1FFF		     mov es:[di+1fffh],al    ; запомнить во второй части
   5243	F5C4  83 C7 4F			     add     di,79	     ; передать	следующую строку
   5244	F5C7  FE CE			     dec     dh		     ; выполнить цикл
   5245	F5C9  75 EC			     jnz     s4
   5246	F5CB  5E			     pop     si
   5247	F5CC  5F			     pop     di		     ; восстановить	указатель     +
   5248				     области
   5249	F5CD  47			     inc     di	     ; указать на следующую позицию   +
   5250				     символа
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 106
1840v4.asm



   5251	F5CE  E2 E3			     loop    s3		     ; записать	последующие	       +
   5252				     символы
   5253	F5D0  E9 FBF4			     jmp     video_return
   5254
   5255	F5D3			     s6:
   5256	F5D3  26: 32 05			     xor al,es:[di]
   5257	F5D6  AA			     stosb		     ; запомнить код
   5258	F5D7  AC			     lodsb		     ; выборка нечетного символа
   5259	F5D8  26: 32 85	1FFF		     xor  al,es:[di+1fffh]
   5260	F5DD  EB E0			     jmp     s5		     ; повторить
   5261
   5262				     ;	 Средняя	разрешающая способность записи
   5263	F5DF			     s7:
   5264	F5DF  8A D3			     mov     dl,bl	     ; сохранить старший бит	       +
   5265				     цвета
   5266	F5E1  D1 E7			     sal     di,1    ; умножить	на 2,	т.к. два		       +
   5267				     байта/символа
   5268	F5E3  E8 00D1			     call    s19	     ; расширение BL до полного     +
   5269				     слова	цвета
   5270	F5E6			     s8:
   5271	F5E6  57			     push    di
   5272	F5E7  56			     push    si
   5273	F5E8  B6 04			     mov     dh,4	     ; число циклов
   5274	F5EA			     s9:
   5275	F5EA  AC			     lodsb		     ; получить	код точки
   5276	F5EB  E8 00DE			     call    s21	     ; продублировать
   5277	F5EE  23 C3			     and     ax,bx	     ; окрашивание в заданный      +
   5278				     цвет
   5279	F5F0  F6 C2 80			     test    dl,80h
   5280	F5F3  74 07			     jz	     s10
   5281	F5F5  26: 32 25			     xor     ah,es:[di]	     ; выполнить функцию XOR со      +
   5282				     "старым"
   5283	F5F8  26: 32 45	01		     xor     al,es:[di+1]    ; и "новым" цветами
   5284	F5FC  26: 88 25		     s10:    mov  es:[di],ah	     ; запомнить первый байт
   5285	F5FF  26: 88 45	01		     mov es:[di+1],al	     ; запомнить второй байт
   5286	F603  AC			     lodsb		     ; получить	код точки
   5287	F604  E8 00C5			     call    s21
   5288	F607  23 C3			     and     ax,bx	     ; окрашивание нечетного       +
   5289				     байта
   5290	F609  F6 C2 80			     test    dl,80h
   5291	F60C  74 0A			     jz	 s11
   5292	F60E  26: 32 A5	2000		     xor     ah,es:[di+2000h]	; из первой половины
   5293	F613  26: 32 85	2001		     xor     al,es:[di+2001h]	; и из второй половины
   5294	F618  26: 88 A5	2000	     s11:    mov     es:[di+2000h],ah
   5295	F61D  26: 88 85	2001		     mov     es:[di+2001h],al	; запомнить вторую часть   +
   5296				     буфера
   5297	F622  83 C7 50			     add     di,80	     ; указать следующую ячейку
   5298	F625  FE CE			     dec     dh
   5299	F627  75 C1			     jnz     s9		     ; повторить
   5300	F629  5E			     pop     si
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 107
1840v4.asm



   5301	F62A  5F			     pop     di
   5302	F62B  83 C7 02			     add     di,2	     ; переход к следующему	       +
   5303				     символу
   5304	F62E  E2 B6			     loop    s8		     ; режим записи
   5305	F630  E9 FB94			     jmp     video_return
   5306	F633			     graphics_write  endp
   5307				     ;-------------------------------------
   5308				     ;graphics_read
   5309				     ;
   5310				     ;	 Программа считывает символ в режиме	       +
   5311				     графики
   5312				     ;
   5313				     ;-------------------------------------
   5314	F633			     graphics_read   proc    near
   5315	F633  E8 00D6			     call    s26
   5316	F636  8B F0			     mov     si,ax	     ; сохранить в SI
   5317	F638  83 EC 08			     sub     sp,8	     ; зарезервировать в стеке 8  +
   5318				     байт для
   5319								     ; записи символа из	буфера   +
   5320				     дисплея
   5321	F63B  8B EC			     mov     bp,sp	     ; указатель для хранения      +
   5322				     области
   5323
   5324				     ;	 Определение	режима графики
   5325
   5326	F63D  80 3E 0049r 06		     cmp     crt_mode,6
   5327	F642  06			     push    es
   5328	F643  1F			     pop     ds		     ; указать сегмент
   5329	F644  72 1A			     jc	     s13	     ; средняя разрешающая	       +
   5330				     способность
   5331
   5332				     ;	Высокая разрешающая способность для	       +
   5333				     считавания
   5334
   5335	F646  B6 04			     mov     dh,4
   5336	F648			     s12:
   5337	F648  8A 04			     mov     al,byte ptr [si]	; получить первый	байт
   5338	F64A  88 46 00			     mov byte ptr [bp],al	; запомнить в	памяти
   5339	F64D  45			     inc     bp
   5340	F64E  8A 84 2000		     mov al,byte ptr [si+2000h]	  ; получить младший байт
   5341	F652  88 46 00			     mov byte ptr [bp],al
   5342	F655  45			     inc     bp
   5343	F656  83 C6 50			     add     si,80	     ; переход на следующую	       +
   5344				     четную строку
   5345	F659  FE CE			     dec     dh
   5346	F65B  75 EB			     jnz     s12	     ; повторить
   5347	F65D  EB 17			     jmp     short s15	     ; переход к хранению кодов   +
   5348				     точек
   5349	F65F  90			     nop
   5350
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 108
1840v4.asm



   5351				     ;	 Средняя	разрешающая способность для	       +
   5352				     считывания
   5353	F660			     s13:
   5354	F660  D1 E6			     sal     si,1      ; смещение умножить на	2, т.к. 2    +
   5355				     байта/символа
   5356	F662  B6 04			     mov     dh,4
   5357	F664			     s14:
   5358	F664  E8 0088			     call    s23
   5359	F667  81 C6 2000		     add     si,2000h
   5360	F66B  E8 0081			     call    s23
   5361	F66E  81 EE 1FB0		     sub     si,2000h-80
   5362	F672  FE CE			     dec     dh
   5363	F674  75 EE			     jnz     s14	     ; повторить
   5364
   5365				     ;	 Сохранить
   5366	F676			     s15:
   5367	F676  BF FA6Er			     mov     di,offset crt_char_gen   ;	смещение
   5368	F679  0E			     push    cs
   5369	F67A  07			     pop     es
   5370	F67B  83 ED 08			     sub     bp,8	     ; восстановить	начальный     +
   5371				     адрес
   5372	F67E  8B F5			     mov     si,bp
   5373	F680  FC			     cld		     ; установить направление
   5374	F681  B0 00			     mov     al,0
   5375	F683			     s16:
   5376	F683  16			     push    ss
   5377	F684  1F			     pop     ds
   5378	F685  BA 0080			     mov     dx,128	     ; количество символов
   5379	F688			     s17:
   5380	F688  56			     push    si
   5381	F689  57			     push    di
   5382	F68A  B9 0008			     mov     cx,8	     ; количество байт в	символе
   5383	F68D  F3> A6			     repe    cmpsb	     ; сравнить
   5384	F68F  5F			     pop     di
   5385	F690  5E			     pop     si
   5386	F691  74 1E			     jz	     s18	     ; если	признак = 0,символы      +
   5387				     сравнились
   5388	F693  FE C0			     inc     al		     ; не сравнились
   5389	F695  83 C7 08			     add     di,8	     ; следующий код точки
   5390	F698  4A			     dec     dx		     ; - 1 из	счетчика
   5391	F699  75 ED			     jnz     s17	     ; повторить
   5392
   5393
   5394	F69B  3C 00			     cmp     al,0
   5395	F69D  74 12			     je	     s18    ; переход, если все сканировано,  +
   5396				     но символ
   5397							    ; не найден
   5398	F69F  2B C0			     sub     ax,ax
   5399	F6A1  8E D8			     mov     ds,ax	     ; установить адресацию	       +
   5400				     вектора
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 109
1840v4.asm



   5401					     assume  ds:abs0
   5402	F6A3  C4 3E 007Cr		     les     di,ext_ptr
   5403	F6A7  8C C0			     mov     ax,es
   5404	F6A9  0B C7			     or	     ax,di
   5405	F6AB  74 04			     jz	     s18
   5406	F6AD  B0 80			     mov     al,128	     ; начало второй части
   5407	F6AF  EB D2			     jmp     short s16	     ; вернуться и повторить
   5408					     assume  ds:data
   5409
   5410	F6B1			     s18:
   5411	F6B1  83 C4 08			     add     sp,8
   5412	F6B4  E9 FB10			     jmp     video_return
   5413	F6B7			     graphics_read   endp
   5414
   5415				     ;---------------------------------
   5416				     ;
   5417				     ;	 Эта	программа заполняет регистр BX	двумя     +
   5418				     младшими битами
   5419				     ; регистра	BL.
   5420				     ;
   5421				     ;	 ВХОД
   5422				     ;		BL - используемый цвет (младшие два бита).
   5423				     ;
   5424				     ;	 ВЫХОД
   5425				     ;		BX - используемый цвет (восемь		       +
   5426				     повторений двух битов цвета).
   5427				     ;
   5428				     ;---------------------------------
   5429	F6B7			     s19     proc    near
   5430	F6B7  80 E3 03			     and     bl,3	     ; выделить	биты цвета
   5431	F6BA  8A C3			     mov     al,bl	     ; переписать в AL
   5432	F6BC  51			     push    cx		     ; сохранить регистр
   5433	F6BD  B9 0003			     mov     cx,3	     ; количество повторений
   5434	F6C0			     s20:
   5435	F6C0  D0 E0			     sal     al,1
   5436	F6C2  D0 E0			     sal     al,1	     ; сдвиг влево на 2
   5437	F6C4  0A D8			     or	     bl,al	     ; в BL накапливается		       +
   5438				     результат
   5439	F6C6  E2 F8			     loop    s20	     ; цикл
   5440	F6C8  8A FB			     mov     bh,bl	     ; заполнить
   5441	F6CA  59			     pop     cx
   5442	F6CB  C3			     ret		     ; все выполнено
   5443	F6CC			     s19     endp
   5444				     ;--------------------------------------
   5445				     ;
   5446				     ;	 Эта	программа берет байт в AL и	удваивает     +
   5447				     все биты, превращая
   5448				     ; 8 бит	в 16 бит. Результат помещается в AX.
   5449				     ;--------------------------------------
   5450	F6CC			     s21     proc    near
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 110
1840v4.asm



   5451	F6CC  52			     push    dx		     ; сохранить регистры
   5452	F6CD  51			     push    cx
   5453	F6CE  53			     push    bx
   5454	F6CF  BA 0000			     mov     dx,0	     ; результат удвоения
   5455	F6D2  B9 0001			     mov     cx,1	     ; маска
   5456	F6D5			     s22:
   5457	F6D5  8B D8			     mov     bx,ax
   5458	F6D7  23 D9			     and     bx,cx	     ; выделение бита
   5459	F6D9  0B D3			     or	     dx,bx	     ; накапливание	результата
   5460	F6DB  D1 E0			     shl     ax,1
   5461	F6DD  D1 E1			     shl     cx,1	     ; сдвинуть	базу и маску на 1
   5462	F6DF  8B D8			     mov     bx,ax
   5463	F6E1  23 D9			     and     bx,cx
   5464	F6E3  0B D3			     or	     dx,bx
   5465	F6E5  D1 E1			     shl     cx,1    ; сдиг	маски, для выделения	       +
   5466				     следующего бита
   5467	F6E7  73 EC			     jnc     s22
   5468	F6E9  8B C2			     mov     ax,dx
   5469	F6EB  5B			     pop     bx		     ; восстановить	регистры
   5470	F6EC  59			     pop     cx
   5471	F6ED  5A			     pop     dx
   5472	F6EE  C3			     ret		     ; к выходу из прерывания
   5473	F6EF			     s21     endp
   5474
   5475				     ;----------------------------------
   5476				     ;
   5477				     ;	 Эта	программа преобразовывает		       +
   5478				     двух-битовое представление	точки
   5479				     ; (C1,C0) в однобитовое
   5480				     ; (C1,C0) к однобитовому.
   5481				     ;
   5482				     ;----------------------------------
   5483	F6EF			     s23     proc    near
   5484	F6EF  8A 24			     mov     ah,byte ptr [si]	; получить первый	байт
   5485	F6F1  8A 44 01			     mov     al,byte ptr [si+1]	  ; получить второй байт
   5486	F6F4  B9 C000			     mov     cx,0c000h	     ; 2 бита маски
   5487	F6F7  B2 00			     mov     dl,0	     ; регистр результата
   5488	F6F9			     s24:
   5489	F6F9  85 C1			     test    ax,cx	     ; проверка	2 младших бит	AX на+
   5490				     0
   5491	F6FB  F8			     clc		     ; сбросить	признак переноса+
   5492				     CF
   5493	F6FC  74 01			     jz	     s25	     ; переход если 0
   5494	F6FE  F9			     stc		     ; нет -	установить CF
   5495	F6FF  D0 D2		     s25:    rcl     dl,1	     ; циклический сдвиг
   5496	F701  D1 E9			     shr     cx,1
   5497	F703  D1 E9			     shr     cx,1
   5498	F705  73 F2			     jnc     s24	     ; повторить, если CF=1
   5499	F707  88 56 00			     mov byte ptr [bp],dl    ; запомнить результат
   5500	F70A  45			     inc     bp
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 111
1840v4.asm



   5501	F70B  C3			     ret		     ; к выходу из прерывания
   5502	F70C			     s23     endp
   5503
   5504				     ;---------------------------------------
   5505				     ;
   5506				     ;	 Эта	программа определает	положение	       +
   5507				     курсора относительно	мяти и
   5508				     ; начала буфера в режиме графики			       +
   5509				     /символ
   5510				     ;
   5511				     ;	 ВЫХОД
   5512				     ;		AX  содержит смещение курсора
   5513				     ;
   5514				     ;-----------------------------------------
   5515	F70C			     s26     proc    near
   5516	F70C  A1 0050r			     mov     ax,cursor_posn  ; получить	текущее		       +
   5517				     положение	курсора
   5518	F70F			     graph_posn	     label   near
   5519	F70F  53			     push    bx		     ; сохранить регистр
   5520	F710  8B D8			     mov     bx,ax	     ; сохранить текущее	       +
   5521				     положение	курсора
   5522	F712  8A C4			     mov     al,ah	     ; строка
   5523	F714  F6 26 004Ar		     mul     byte ptr crt_cols	 ; умножить на байт/колонку
   5524	F718  D1 E0			     shl     ax,1	     ; умножить	на 4
   5525	F71A  D1 E0			     shl     ax,1
   5526	F71C  2A FF			     sub     bh,bh	     ; выделить	значение колонки
   5527	F71E  03 C3			     add     ax,bx	     ; определить смещение
   5528	F720  5B			     pop     bx
   5529	F721  C3			     ret		     ; к выходу из прерывания
   5530	F722			     s26     endp
   5531
   5532				     ;----------------------------------------
   5533				     ;
   5534				     ;	 Записать телетайп (INT	10H, AH=14)
   5535				     ;
   5536				     ;	 Эта	программа выводит символ в буфер ЭЛИ с +
   5537				     одновременной	уста-
   5538				     ; новкой позиции курсора и передвижением	       +
   5539				     курсора на экране.
   5540				     ;	 После записи символа	в последнюю позицию   +
   5541				     строки выполняется ав-
   5542				     ; томатический	переход на новую строку. Если  +
   5543				     страница экрана за-
   5544				     ; полнена (позиция курсора 24,79/39),	выполняется +
   5545				     перемещение экрана
   5546				     ; на одну строку вверх. Освободившаяся строка+
   5547				     заполняется значением
   5548				     ; атрибута	символа (для алфавитно-цифрового   +
   5549				     режима). Для графики цвет=00
   5550				     ; После записи очередного символа курсор	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 112
1840v4.asm



   5551				     установлен в следующую	позицию.
   5552				     ;
   5553				     ;	 ВХОД
   5554				     ;		AL - код выводимого символа,
   5555				     ;		BL - цвет переднего плана для графики.
   5556				     ;
   5557				     ;----------------------------------------
   5558
   5559					     assume  cs:code,ds:data
   5560	F722			     write_tty	     proc    near
   5561	F722  50			     push    ax		     ; сохранить регистры
   5562	F723  50			     push    ax
   5563	F724  B4 03			     mov     ah,3
   5564	F726  CD 10			     int     10h	     ; считать положение	       +
   5565				     текущего курсора
   5566	F728  58			     pop     ax		     ; восстановить	символ
   5567
   5568				     ;	 DX содержит текущую позицию курсора
   5569
   5570	F729  3C 08			     cmp     al,8	     ; есть	возврат на одну	       +
   5571				     позицию ?
   5572	F72B  74 59			     je	     u8		     ; возврат на одну позицию
   5573	F72D  3C 0D			     cmp     al,0dh	     ; есть	возврат каретки ?
   5574	F72F  74 5E			     je	     u9		     ; возврат каретки
   5575	F731  3C 0A			     cmp     al,0ah	     ; есть	граница поля	?
   5576	F733  74 5E			     je	     u10	     ; граница поля
   5577	F735  3C 07			     cmp     al,07h	     ; звуковой	сигнал ?
   5578	F737  74 61			     je	     u11	     ; звуковой	сигнал
   5579
   5580				     ;	 Запись символа на экран
   5581
   5582	F739  8A 3E 0062r		     mov     bh,active_page
   5583	F73D  B4 0A			     mov     ah,10	     ; запись символа без	       +
   5584				     атрибута
   5585	F73F  B9 0001			     mov     cx,1
   5586	F742  CD 10			     int     10h
   5587
   5588				     ;	 Положение курсора для следующего символа
   5589
   5590	F744  FE C2			     inc     dl
   5591	F746  3A 16 004Ar		     cmp     dl,byte ptr crt_cols
   5592	F74A  75 36			     jnz     u7		     ; переход к установке	       +
   5593				     курсора
   5594	F74C  B2 00			     mov     dl,0
   5595	F74E  80 FE 18			     cmp     dh,24	     ; проверка	граничной строки
   5596	F751  75 2D			     jnz     u6		     ; установить курсор
   5597
   5598				     ;	 Сдвиг экрана
   5599	F753			     u1:
   5600
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 113
1840v4.asm



   5601	F753  B4 02			     mov     ah,2
   5602	F755  B7 00			     mov     bh,0
   5603	F757  CD 10			     int     10h	     ; установить курсор
   5604
   5605
   5606	F759  A0 0049r			     mov     al,crt_mode     ; получить	текущий режим
   5607	F75C  3C 04			     cmp     al,4
   5608	F75E  72 06			     jc	     u2		     ; считывание курсора
   5609	F760  3C 07			     cmp     al,7
   5610	F762  B7 00			     mov     bh,0	     ; цвет	заднего плана
   5611	F764  75 06			     jne     u3
   5612
   5613	F766			     u2:			     ; считывание курсора
   5614	F766  B4 08			     mov     ah,8
   5615	F768  CD 10			     int     10h	; считать символ/атрибут	       +
   5616				     текущего курсора
   5617	F76A  8A FC			     mov     bh,ah	     ; запомнить в BH
   5618
   5619				     ;	 Перемещение	экрана на одну строку	вверх
   5620
   5621	F76C			     u3:
   5622	F76C  B8 0601			     mov     ax,601h
   5623	F76F  B9 0000			     mov     cx,0	     ; верхний левый угол
   5624	F772  B6 18			     mov     dh,24	     ; координаты нижнего	       +
   5625				     правого
   5626	F774  8A 16 004Ar		     mov     dl,byte ptr crt_cols    ; угла
   5627	F778  FE CA			     dec     dl
   5628	F77A			     u4:
   5629	F77A  CD 10			     int     10h
   5630
   5631				     ;	 Выход из прерывания
   5632
   5633	F77C			     u5:
   5634	F77C  58			     pop     ax		     ; восстановить	символ
   5635	F77D  E9 FA47			     jmp     video_return    ; возврат к программе
   5636
   5637	F780			     u6:			     ; установить курсор
   5638	F780  FE C6			     inc     dh		     ; следующая строка
   5639	F782			     u7:			     ; установить курсор
   5640	F782  B4 02			     mov     ah,2
   5641	F784  EB F4			     jmp     short u4	     ; установить новый курсор
   5642
   5643				     ;	 Сдвиг курсора на	одну позицию	влево
   5644
   5645	F786			     u8:
   5646	F786  80 FA 00			     cmp     dl,0
   5647	F789  74 F7			     je	     u7		     ; установить курсор
   5648	F78B  FE CA			     dec     dl		     ; нет -	снова его передать
   5649	F78D  EB F3			     jmp     short u7
   5650
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 114
1840v4.asm



   5651				     ;	 Перемещение	курсора в начало строки
   5652
   5653	F78F			     u9:
   5654	F78F  B2 00			     mov     dl,0
   5655	F791  EB EF			     jmp     short u7	     ; установить курсор
   5656
   5657				     ;	 Перемещение	курсора на следующую строку
   5658
   5659	F793			     u10:
   5660	F793  80 FE 18			     cmp     dh,24	     ; последняя строка экрана
   5661	F796  75 E8			     jne     u6		     ; да - сдвиг экрана
   5662	F798  EB B9			     jmp     short u1	     ; нет -	снова установить	       +
   5663				     курсор
   5664
   5665				     ;	 Звуковой сигнал
   5666
   5667	F79A			     u11:
   5668	F79A  B3 02			     mov     bl,2	     ; уст длительность		       +
   5669				     звукового	сигнала
   5670	F79C  E8 EE0A			     call    beep	     ; звук
   5671	F79F  EB DB			     jmp     short u5	     ; возврат
   5672	F7A1			     write_tty	     endp
   5673
   5674				     ;
   5675				     ;----------------------------------------
   5676				     ;
   5677				     ;	 Эта	программа считывает положение	       +
   5678				     светового	пера.
   5679				     ; Проверяется переключатель и триггер	       +
   5680				     светового	пера. Если бит 1 ре-
   5681				     ; гистра состояния (порт 3DA)=1, то триггер	       +
   5682				     установлен. Если бит 2 порта
   5683				     ; 3DA=0, то установлен	переключатель.
   5684				     ;	 Порты 3BD	и 3DC используются	для установки и   +
   5685				     сброса триггера и пере-
   5686				     ; ключателя светового пера.
   5687				     ;	 В регистрах R16 и R17 контроллера содержится  +
   5688				     адрес	координат пера
   5689				     ; относительно	начала буфера дисплея.
   5690				     ;	 Если триггер и переключатель установлены, +
   5691				     то программа определяет
   5692				     ; положение светового пера, в противном	       +
   5693				     случае, возврат без выдачи
   5694				     ; информации.
   5695				     ;
   5696				     ;	 В ППЭВМ ЕС1841	функция не поддерживается
   5697				     ;-------------------------------------------------
   5698
   5699
   5700
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 115
1840v4.asm



   5701
   5702					     assume  cs:code,ds:data
   5703
   5704				     ;	 Таблица	поправок для	получения		       +
   5705				     фактических координат светового пера
   5706
   5707	F7A1			     v1	     label   byte
   5708	F7A1  03 03 05 05 03 03	03+	     db	     3,3,5,5,3,3,3,4
   5709	      04
   5710
   5711	F7A9			     read_lpen	     proc    near
   5712
   5713
   5714	F7A9  B4 00			     mov     ah,0	     ; код возврата,	если перо не +
   5715				     включено
   5716	F7AB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес 6845
   5717	F7AF  83 C2 06			     add     dx,6	     ; указать регистр состояния
   5718	F7B2  EC			     in	     al,dx	     ; получить	регистр		       +
   5719				     состояния
   5720	F7B3  A8 04			     test    al,4	     ; проверить переключатель   +
   5721				     светового	пера
   5722	F7B5  75 78			     jnz     v6		     ; не установлено, возврат
   5723
   5724				     ;	 Проверка триггера светового пера
   5725
   5726	F7B7  A8 02			     test    al,2	     ; проверить триггер	       +
   5727				     светового	пера
   5728	F7B9  74 7E			     jz	     v7		     ; возврат без сброса	       +
   5729				     триггера
   5730
   5731				     ;	 Триггер	был установлен, считать значение в+
   5732				     AH
   5733
   5734	F7BB  B4 10			     mov     ah,16	     ; уст регистры светового      +
   5735				     пера 6845
   5736
   5737				     ;	 Ввод регистров, указанных AH и			       +
   5738				     преобразование в строки колонки в DX
   5739
   5740	F7BD  8B 16 0063r		     mov     dx,addr_6845
   5741	F7C1  8A C4			     mov     al,ah
   5742	F7C3  EE			     out     dx,al	     ; вывести в порт
   5743	F7C4  42			     inc     dx
   5744	F7C5  EC			     in	     al,dx	     ; получить	значение из порта
   5745	F7C6  8A E8			     mov     ch,al	     ; сохранить его в CX
   5746	F7C8  4A			     dec     dx		     ; регистр адреса
   5747	F7C9  FE C4			     inc     ah
   5748	F7CB  8A C4			     mov     al,ah	     ; второй регистр данных
   5749	F7CD  EE			     out     dx,al
   5750	F7CE  42			     inc     dx
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 116
1840v4.asm



   5751	F7CF  EC			     in	     al,dx	     ; получить	второе значение  +
   5752				     данных
   5753	F7D0  8A E5			     mov     ah,ch	     ; AX содержит координаты	       +
   5754				     светового	пера
   5755
   5756
   5757	F7D2  8A 1E 0049r		     mov     bl,crt_mode
   5758	F7D6  2A FF			     sub     bh,bh	     ; выделить	значение режима  +
   5759				     в	BX
   5760	F7D8  2E: 8A 9F	F7A1r		     mov     bl,cs:v1[bx]    ; значение	поправки
   5761	F7DD  2B C3			     sub     ax,bx
   5762	F7DF  2B 06 004Er		     sub     ax,crt_start
   5763
   5764	F7E3  79 03			     jns     v2
   5765	F7E5  B8 0000			     mov     ax,0	     ; поместить 0
   5766
   5767				     ;	 Определить режим
   5768
   5769	F7E8			     v2:
   5770	F7E8  B1 03			     mov     cl,3	     ; установить счетчик
   5771	F7EA  80 3E 0049r 04		     cmp     crt_mode,4	     ; определить, режим	графики +
   5772				     или
   5773								     ; альфа
   5774	F7EF  72 2A			     jb	     v4		     ; альфа-перо
   5775	F7F1  80 3E 0049r 07		     cmp     crt_mode,7
   5776	F7F6  74 23			     je	     v4		     ; альфа-перо
   5777
   5778				     ;	 Графический	режим
   5779
   5780	F7F8  B2 28			     mov     dl,40	     ; делитель	для графики
   5781	F7FA  F6 F2			     div     dl	     ; определение строки (AL)	и	       +
   5782				     колонки (AH)
   5783								     ; пределы AL 0-99, AH 0-39
   5784
   5785				     ;	 Определение	положения строки	для графики
   5786
   5787	F7FC  8A E8			     mov     ch,al	     ; сохранить значение строки+
   5788				     в	CH
   5789	F7FE  02 ED			     add     ch,ch	     ; умножить	на 2			       +
   5790				     четно/нечетное поле
   5791	F800  8A DC			     mov     bl,ah	     ; значение	колонки в BX
   5792	F802  2A FF			     sub     bh,bh	     ; умножить	на 8 для среднего +
   5793				     результата
   5794	F804  80 3E 0049r 06		     cmp     crt_mode,6	     ; определить среднюю или      +
   5795				     наивысшую
   5796								     ; разрешающую способность
   5797	F809  75 04			     jne     v3		     ; не наивысшая разрешающая  +
   5798				     способность
   5799	F80B  B1 04			     mov     cl,4     ;	сдвинуть значение наивысшей   +
   5800				     разрешающей
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 117
1840v4.asm



   5801							      ;	способности
   5802	F80D  D0 E4			     sal     ah,1    ; сдвиг на 1 разряд влево	       +
   5803				     значения колонки
   5804	F80F			     v3:			     ; не наивысшая разрешающая  +
   5805				     способность
   5806	F80F  D3 E3			     shl     bx,cl   ; умножить	на 16	для наивысшей      +
   5807				     разрешающей
   5808							     ; способности
   5809
   5810				     ;	 Определение	положения символа для альфа
   5811
   5812	F811  8A D4			     mov     dl,ah	     ; значение	колонки для	       +
   5813				     возврата
   5814	F813  8A F0			     mov     dh,al	     ; значение	строки
   5815	F815  D0 EE			     shr     dh,1	     ; делить на 4
   5816	F817  D0 EE			     shr     dh,1	     ; для значения в пределах 0-24
   5817	F819  EB 12			     jmp     short v5	     ; возврат светового пера
   5818
   5819				     ;	 Режим альфа светового пера
   5820
   5821	F81B			     v4:			     ; альфа светового пера
   5822	F81B  F6 36 004Ar		     div     byte ptr crt_cols	; строка,	колонка
   5823	F81F  8A F0			     mov     dh,al	     ; строка в DH
   5824	F821  8A D4			     mov     dl,ah	     ; колонка в DL
   5825	F823  D2 E0			     sal     al,cl	     ; умножение строк на 8
   5826	F825  8A E8			     mov     ch,al
   5827	F827  8A DC			     mov     bl,ah
   5828	F829  32 FF			     xor     bh,bh
   5829	F82B  D3 E3			     sal     bx,cl
   5830	F82D			     v5:
   5831	F82D  B4 01			     mov     ah,1	     ; указать, что все		       +
   5832				     установлено
   5833	F82F			     v6:
   5834	F82F  52			     push    dx		     ; сохранить значение	       +
   5835				     возврата
   5836	F830  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   5837	F834  83 C2 07			     add     dx,7
   5838	F837  EE			     out     dx,al	     ; вывод
   5839	F838  5A			     pop     dx		     ; восстановить	значение
   5840	F839			     v7:
   5841	F839  5F			     pop     di		      ;	восстановить регистры
   5842	F83A  5E			     pop     si
   5843	F83B  1F			     pop     ds
   5844	F83C  1F			     pop     ds
   5845	F83D  1F			     pop     ds
   5846	F83E  1F			     pop     ds
   5847	F83F  07			     pop     es
   5848	F840  CF			     iret
   5849	F841			     read_lpen	     endp
   5850
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 118
1840v4.asm



   5851				     ;--- int 12 ------------------------------------
   5852				     ;
   5853				     ;	  Программа определения размера памяти.
   5854				     ;
   5855				     ;	  Эта программа передает в	регистр AX об'ем    +
   5856				     памяти в Кбайтах.
   5857				     ;
   5858				     ;-----------------------------------------
   5859
   5860					     assume  cs:code,ds:data
   5861	F841			     memory_size_determine   proc    far
   5862	F841  FB			     sti		     ; установить бит разрешения+
   5863				     прерывания
   5864	F842  1E			     push    ds		     ; сохранить сегмент
   5865	F843  B8 0040			     mov     ax,dat	     ; установить адресацию
   5866	F846  8E D8			     mov     ds,ax
   5867	F848  A1 0013r			     mov     ax,memory_size  ; получить	значение размера+
   5868				     памяти
   5869	F84B  1F			     pop     ds		     ; восстановить	сегмент
   5870	F84C  CF			     iret		     ; возврат из прерывания
   5871	F84D			     memory_size_determine   endp
   5872
   5873				     ;--- int 11-------------------------------
   5874				     ;
   5875				     ;	  Программа определения состава		       +
   5876				     оборудования.
   5877				     ;
   5878				     ;	 Эта	программа передает в регистр AX	       +
   5879				     конфигурацию системы.
   5880				     ;
   5881				     ;	 Разряды	регистра AX имеют следующее	       +
   5882				     значение:
   5883				     ;	 0	 - загрузка системы с НГМД;
   5884				     ;	 5,4	 - тип подключенного ЭЛИ и режим его       +
   5885				     работы:
   5886				     ;		   00 -	не используется;
   5887				     ;		   01 -	40х25,	черно-белый режим цветного      +
   5888				     графического
   5889				     ;			ЭЛИ;
   5890				     ;		   10 -	80х25,	черно-белый режим цветного      +
   5891				     графического
   5892				     ;			ЭЛИ;
   5893				     ;		   11 -	80х25,	черно-белый режим		       +
   5894				     монохромного ЭЛИ.
   5895				     ;	 7,6	 - количество	НГМД;
   5896				     ;	 11,10,9 - количество	адаптеров стыка С2;
   5897				     ;	 12	 - адаптер игр;
   5898				     ;	 15,14	 - количество	печатающих устройств.
   5899				     ;	 Разряды	6 и 7 устанавливаются только в том   +
   5900				     случае, если
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 119
1840v4.asm



   5901				     ; разряд 0 установлен в "1".
   5902				     ;
   5903				     ;----------------------------------------------
   5904
   5905					     assume  cs:code,ds:data
   5906	F84D			     equipment	     proc    far
   5907	F84D  FB			     sti		     ; установить признак	       +
   5908				     разрешения прерывания
   5909	F84E  1E			     push    ds		     ; сохранить сегмент
   5910	F84F  B8 0040			     mov     ax,dat	     ; установить адресацию
   5911	F852  8E D8			     mov     ds,ax
   5912	F854  A1 0010r			     mov     ax,equip_flag   ; получить	конфигурацию       +
   5913				     системы
   5914	F857  1F			     pop     ds		     ; восстановить	сегмент
   5915	F858  CF			     iret		     ; возврат из прерывания
   5916	F859			     equipment	     endp
   5917
   5918				     ;****************************************
   5919				     ;
   5920				     ;	 Загрузка знакогенератора
   5921				     ;
   5922				     ;****************************************
   5923
   5924	F859			     bct     proc    near
   5925	F859  B8 DC00			     mov     ax,0dc00h
   5926	F85C  8E C0			     mov     es,ax
   5927	F85E  B9 1400			     mov     cx,1400h
   5928	F861  BA 03B8			     mov     dx,3b8h
   5929	F864  33 C0			     xor     ax,ax
   5930	F866  EE			     out     dx,al
   5931	F867  33 FF			     xor     di,di
   5932	F869  FC			     cld
   5933	F86A  F3> AB			     rep     stosw
   5934	F86C  BE FA6Er		     bct3:   mov     si,offset crt_char_gen
   5935	F86F  33 FF			     xor     di,di
   5936	F871  33 C0			     xor     ax,ax
   5937	F873  B1 80			     mov     cl,128
   5938	F875			     bct1:
   5939	F875  B3 08			     mov     bl,8
   5940	F877  2E: 8A 04		     bct2:   mov     al,cs:[si]
   5941	F87A  46			     inc     si
   5942	F87B  26: 89 05			     mov     word ptr es:[di],ax
   5943	F87E  47			     inc     di
   5944	F87F  47			     inc     di
   5945	F880  FE CB			     dec     bl
   5946	F882  75 F3			     jnz     bct2
   5947	F884  83 C7 10			     add     di,10h
   5948	F887  FE C9			     dec     cl
   5949	F889  75 EA				     jnz     bct1
   5950	F88B  B0 01				     mov     al, 1
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 120
1840v4.asm



   5951	F88D  EE				     out     dx, al
   5952	F88E  B8 B800				     mov     ax, 0B800h
   5953	F891  8E C0				     mov     es, ax
   5954	F893  B0 01				     mov     al, 1
   5955	F895  BA 03DF				     mov     dx, 3DFh
   5956	F898  EE				     out     dx, al
   5957	F899  BA 03D8				     mov     dx, 3D8h
   5958	F89C  EC				     in	     al, dx
   5959	F89D  8A D8				     mov     bl, al
   5960	F89F  B0 00				     mov     al, 0
   5961	F8A1  EE				     out     dx, al
   5962	F8A2  33 FF				     xor     di, di
   5963	F8A4  B9 0400				     mov     cx, 1024
   5964	F8A7  33 C0				     xor     ax, ax
   5965	F8A9  FC				     cld
   5966	F8AA  F3> AB				     repe stosw
   5967	F8AC  BE FA6Er				     mov     si, offset	crt_char_gen
   5968	F8AF  B9 0400				     mov     cx, 1024
   5969	F8B2  33 FF				     xor     di, di
   5970
   5971	F8B4			     bct4:
   5972	F8B4  2E: 8A 04				     mov     al, cs:[si]
   5973	F8B7  26: 88 05				     mov     es:[di], al
   5974	F8BA  46				     inc     si
   5975	F8BB  47				     inc     di
   5976	F8BC  E2 F6				     loop    bct4
   5977	F8BE  B0 00				     mov     al, 0
   5978	F8C0  BA 03DF				     mov     dx, 3DFh
   5979	F8C3  EE				     out     dx, al
   5980	F8C4  BA 03D8				     mov     dx, 3D8h
   5981	F8C7  8A C3				     mov     al, bl
   5982	F8C9  EE				     out     dx, al
   5983	F8CA  C3				     ret
   5984	F8CB			     bct     endp
   5985
   5986				     ;
   5987				     ;	 Таблица	кодов русских маленьких букв	       +
   5988				     (строчных)
   5989				     ;
   5990	F8CB			     rust    label   byte
   5991	F8CB  1B 31 32 33 34 35	36+	     db	     1bh,'1234567890-='
   5992	      37 38 39 30 2D 3D
   5993
   5994
   5995	F8D8  08 09			     db	     08h,09h
   5996	F8DA  D9 E6 E3 DA D5 DD	D3+	     db	     0d9h,0e6h,0e3h,0dah,0d5h,0ddh,0d3h,0e8h
   5997	      E8
   5998
   5999	F8E2  E9 D7 D6 ED 0D FF	E4+	     db	     0e9h,0d7h,0d6h,0edh,0dh,-1,0e4h,0ebh
   6000	      EB
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 121
1840v4.asm



   6001
   6002	F8EA  D2 D0 DF E0 DE DB	D4+	     db	     0d2h,0d0h,0dfh,0e0h,0deh,0dbh,0d4h,';:'
   6003	      3B 3A
   6004
   6005	F8F3  D1 EE 5C EF E7 E1	DC+	     db	     0d1h,0eeh,5ch,0efh,0e7h,0e1h,0dch,0d8h
   6006	      D8
   6007
   6008	F8FB  E2 EC 2C 2E 2F E5	2A	     db	     0e2h,0ech,',./',0e5h,'*'
   6009
   6010	F902  FF 20 EA			     db	     -1,' ',0eah
   6011
   6012
   6013	F905			     k30     label   byte
   6014	F905  52 4F 50 51 4B 4C	4D	     db	     82,79,80,81,75,76,77
   6015
   6016	F90C  47 48 49			     db	     71,72,73
   6017				     ;---
   6018	F90F  10 11 12 13 14 15	16+	     db	     16,17,18,19,20,21,22,23
   6019	      17
   6020
   6021	F917  18 19 1E 1F 20 21	22+	     db	     24,25,30,31,32,33,34,35
   6022	      23
   6023
   6024	F91F  24 25 26 2C 2D 2E	2F+	     db	     36,37,38,44,45,46,47,48
   6025	      30
   6026
   6027	F927  31 32			     db	     49,50
   6028
   6029				     ;	     Временный	обработчик прерываний стыка С2
   6030
   6031	F929			     rs232_io:
   6032	F929  B8 61F0				     mov     ax, 61F0h
   6033	F92C  CF				     iret
   6034
   6035	F92D			     ex_memory:
   6036	F92D  F9				     stc
   6037	F92E  B4 86				     mov     ah, 86h
   6038	F930  CA 0002				     retf    2
   6039
   6040				     ;---
   6041	F933  F6 06 0017r 03	     k89:    test    kb_flag,left_shift+right_shift
   6042	F938  74 11			     jz	     k80
   6043	F93A  3C F0			     cmp     al,0f0h
   6044	F93C  74 23			     je	     k89a
   6045	F93E  3C B0			     cmp     al,0b0h
   6046	F940  72 06			     jb	     k81
   6047	F942  3C CF			     cmp     al,0cfh
   6048	F944  77 02			     ja	     k81
   6049	F946  04 20			     add     al,20h
   6050	F948  E9 EE94		     k81:    jmp     k61
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 122
1840v4.asm



   6051	F94B  3C F1		     k80:    cmp     al,0f1h
   6052	F94D  74 0D			     je	     k89b
   6053	F94F  3C D0			     cmp     al,0d0h
   6054	F951  72 F5			     jb	     k81
   6055	F953  3C FE			     cmp     al,0feh
   6056	F955  77 F1			     ja	     k81
   6057	F957  2C 20			     sub     al,20h
   6058	F959  E9 EE83			     jmp     k61
   6059	F95C  2C 01		     k89b:   sub     al,01h
   6060	F95E  E9 EE7E			     jmp     k61
   6061	F961  04 01		     k89a:   add     al,01h
   6062	F963  E9 EE79			     jmp     k61
   6063
   6064	F966			     write_tty2:
   6065	F966  8A 3E 0062r			     mov     bh, ds:active_page
   6066	F96A  E9 FDB5				     jmp     write_tty
   6067
   6068	F96D			     f19a:
   6069	F96D  42				     inc     dx
   6070	F96E  B0 08				     mov     al, 8
   6071	F970  EE				     out     dx, al
   6072	F971  BA 03FE				     mov     dx, 3FEh
   6073	F974  EE				     out     dx, al
   6074	F975  B0 A4				     mov     al, 0A4h
   6075	F977  E6 21				     out     inta01, al
   6076	F979  8B C6				     mov     ax, si
   6077	F97B  B1 03				     mov     cl, 3
   6078	F97D  E9 EBDC				     jmp     f19b
   6079
   6080	F980			     f20a:
   6081	F980  B0 80				     mov     al, 80h
   6082	F982  E6 A0				     out     0A0h, al
   6083	F984  B0 BC				     mov     al, 0BCh
   6084	F986  E6 21				     out     21h, al
   6085	F988  E9 EBE9				     jmp     f20b
   6086				     ;
   6087	F98B  50		     dummm_return:   push    ax
   6088	F98C  B0 20				     mov     al,20h
   6089	F98E  E6 20				     out     20h,al
   6090	F990  58				     pop     ax
   6091	F991  CF				     iret
   6092
   6093	F992  DC*(00)				     db	220 dup(0)
   6094
   6095				     ;**************************************
   6096				     ;
   6097				     ;	 Знакогенератор графический 320х200 и 640х200
   6098				     ;
   6099				     ;***************************************
   6100
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 123
1840v4.asm



   6101
   6102
   6103	FA6E			     crt_char_gen  label  byte
   6104	FA6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;d_00
   6105	      00
   6106
   6107	FA76  7E 81 A5 81 BD 99	81+	     db	     07eh,081h,0a5h,081h,0bdh,099h,081h,07eh ;d_01
   6108	      7E
   6109
   6110	FA7E  7E FF DB FF C3 E7	FF+	     db	     07eh,0ffh,0dbh,0ffh,0c3h,0e7h,0ffh,07eh ;d_02
   6111	      7E
   6112
   6113	FA86  6C FE FE FE 7C 38	10+	     db	     06ch,0feh,0feh,0feh,07ch,038h,010h,000h ;d_03
   6114	      00
   6115
   6116	FA8E  10 38 7C FE 7C 38	10+	     db	     010h,038h,07ch,0feh,07ch,038h,010h,000h ;d_04
   6117	      00
   6118
   6119	FA96  38 7C 38 FE FE 7C	38+	     db	     038h,07ch,038h,0feh,0feh,07ch,038h,07ch ;d_05
   6120	      7C
   6121
   6122	FA9E  10 10 38 7C FE 7C	38+	     db	     010h,010h,038h,07ch,0feh,07ch,038h,07ch ;d_06
   6123	      7C
   6124
   6125	FAA6  00 00 18 3C 3C 18	00+	     db	     000h,000h,018h,03ch,03ch,018h,000h,000h ;d_07
   6126	      00
   6127
   6128	FAAE  FF FF E7 C3 C3 E7	FF+	     db	     0ffh,0ffh,0e7h,0c3h,0c3h,0e7h,0ffh,0ffh ;d_08
   6129	      FF
   6130
   6131	FAB6  00 3C 66 42 42 66	3C+	     db	     000h,03ch,066h,042h,042h,066h,03ch,000h ;d_09
   6132	      00
   6133
   6134	FABE  FF C3 99 BD BD 99	C3+	     db	     0ffh,0c3h,099h,0bdh,0bdh,099h,0c3h,0ffh ;d_0a
   6135	      FF
   6136
   6137	FAC6  0F 07 0F 7D CC CC	CC+	     db	     00fh,007h,00fh,07dh,0cch,0cch,0cch,078h ;d_0b
   6138	      78
   6139
   6140	FACE  3C 66 66 66 3C 18	7E+	     db	     03ch,066h,066h,066h,03ch,018h,07eh,018h ;d_0c
   6141	      18
   6142
   6143	FAD6  3F 33 3F 30 30 70	F0+	     db	     03fh,033h,03fh,030h,030h,070h,0f0h,0e0h ;d_0d
   6144	      E0
   6145
   6146	FADE  7F 63 7F 63 63 67	E6+	     db	     07fh,063h,07fh,063h,063h,067h,0e6h,0c0h ;d_0e
   6147	      C0
   6148
   6149	FAE6  99 5A 3C E7 E7 3C	5A+	     db	     099h,05ah,03ch,0e7h,0e7h,03ch,05ah,099h ;d_0f
   6150	      99
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 124
1840v4.asm



   6151
   6152
   6153	FAEE  80 E0 F8 FE F8 E0	80+	     db	     080h,0e0h,0f8h,0feh,0f8h,0e0h,080h,000h ;d_10
   6154	      00
   6155
   6156	FAF6  02 0E 3E FE 3E 0E	02+	     db	     002h,00eh,03eh,0feh,03eh,00eh,002h,000h ;d_11
   6157	      00
   6158
   6159	FAFE  18 3C 7E 18 18 7E	3C+	     db	     018h,03ch,07eh,018h,018h,07eh,03ch,018h ;d_12
   6160	      18
   6161
   6162	FB06  66 66 66 66 66 00	66+	     db	     066h,066h,066h,066h,066h,000h,066h,000h ;d_13
   6163	      00
   6164
   6165	FB0E  7F DB DB 7B 1B 1B	1B+	     db	     07fh,0dbh,0dbh,07bh,01bh,01bh,01bh,000h ;d_14
   6166	      00
   6167
   6168	FB16  3E 63 38 6C 6C 38	CC+	     db	     03eh,063h,038h,06ch,06ch,038h,0cch,078h ;d_15
   6169	      78
   6170
   6171	FB1E  00 00 00 00 7E 7E	7E+	     db	     000h,000h,000h,000h,07eh,07eh,07eh,000h ;d_16
   6172	      00
   6173
   6174	FB26  18 3C 7E 18 7E 3C	18+	     db	     018h,03ch,07eh,018h,07eh,03ch,018h,0ffh ;d_17
   6175	      FF
   6176
   6177	FB2E  18 3C 7E 18 18 18	18+	     db	     018h,03ch,07eh,018h,018h,018h,018h,000h ;d_18
   6178	      00
   6179
   6180	FB36  18 18 18 18 7E 3C	18+	     db	     018h,018h,018h,018h,07eh,03ch,018h,000h ;d_19
   6181	      00
   6182
   6183	FB3E  00 18 0C FE 0C 18	00+	     db	     000h,018h,00ch,0feh,00ch,018h,000h,000h ;d_1a
   6184	      00
   6185
   6186	FB46  00 30 60 FE 60 30	00+	     db	     000h,030h,060h,0feh,060h,030h,000h,000h ;d_1b
   6187	      00
   6188
   6189	FB4E  00 00 C0 C0 C0 FE	00+	     db	     000h,000h,0c0h,0c0h,0c0h,0feh,000h,000h ;d_1c
   6190	      00
   6191
   6192	FB56  00 24 66 FF 66 24	00+	     db	     000h,024h,066h,0ffh,066h,024h,000h,000h ;d_1d
   6193	      00
   6194
   6195	FB5E  00 18 3C 7E FF FF	00+	     db	     000h,018h,03ch,07eh,0ffh,0ffh,000h,000h ;d_1e
   6196	      00
   6197
   6198	FB66  00 FF FF 7E 3C 18	00+	     db	     000h,0ffh,0ffh,07eh,03ch,018h,000h,000h ;d_1f
   6199	      00
   6200
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 125
1840v4.asm



   6201
   6202	FB6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;sp d_20
   6203	      00
   6204
   6205	FB76  30 78 78 30 30 00	30+	     db	     030h,078h,078h,030h,030h,000h,030h,000h ;!	d_21
   6206	      00
   6207
   6208	FB7E  6C 6C 6C 00 00 00	00+	     db	     06ch,06ch,06ch,000h,000h,000h,000h,000h ;"d_22
   6209	      00
   6210
   6211	FB86  6C 6C FE 6C FE 6C	6C+	     db	     06ch,06ch,0feh,06ch,0feh,06ch,06ch,000h ;#	d_23
   6212	      00
   6213
   6214	FB8E  30 7C C0 78 0C F8	30+	     db	     030h,07ch,0c0h,078h,00ch,0f8h,030h,000h ;$	d_24
   6215	      00
   6216
   6217	FB96  00 C6 CC 18 30 66	C6+	     db	     000h,0c6h,0cch,018h,030h,066h,0c6h,000h ;per cent d_25
   6218	      00
   6219
   6220	FB9E  38 6C 38 76 DC CC	76+	     db	     038h,06ch,038h,076h,0dch,0cch,076h,000h ;&	d_26
   6221	      00
   6222
   6223	FBA6  60 60 C0 00 00 00	00+	     db	     060h,060h,0c0h,000h,000h,000h,000h,000h ;'	d_27
   6224	      00
   6225
   6226	FBAE  18 30 60 60 60 30	18+	     db	     018h,030h,060h,060h,060h,030h,018h,000h ;(	d_28
   6227	      00
   6228
   6229	FBB6  60 30 18 18 18 30	60+	     db	     060h,030h,018h,018h,018h,030h,060h,000h ;)	d_29
   6230	      00
   6231
   6232	FBBE  00 66 3C FF 3C 66	00+	     db	     000h,066h,03ch,0ffh,03ch,066h,000h,000h ;*	d_2a
   6233	      00
   6234
   6235	FBC6  00 30 30 FC 30 30	00+	     db	     000h,030h,030h,0fch,030h,030h,000h,000h ;+	d_2b
   6236	      00
   6237
   6238	FBCE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,060h ;,	d_2c
   6239	      60
   6240
   6241	FBD6  00 00 00 FC 00 00	00+	     db	     000h,000h,000h,0fch,000h,000h,000h,000h ;-	d_2d
   6242	      00
   6243
   6244	FBDE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,000h ;.	d_2e
   6245	      00
   6246
   6247	FBE6  06 0C 18 30 60 C0	80+	     db	     006h,00ch,018h,030h,060h,0c0h,080h,000h ;/	d_2f
   6248	      00
   6249
   6250
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 126
1840v4.asm



   6251	FBEE  7C C6 CE DE F6 E6	7C+	     db	     07ch,0c6h,0ceh,0deh,0f6h,0e6h,07ch,000h ;0	d_30
   6252	      00
   6253
   6254	FBF6  30 70 30 30 30 30	FC+	     db	     030h,070h,030h,030h,030h,030h,0fch,000h ;1	d_31
   6255	      00
   6256
   6257	FBFE  78 CC 0C 38 60 CC	FC+	     db	     078h,0cch,00ch,038h,060h,0cch,0fch,000h ;2	d_32
   6258	      00
   6259
   6260	FC06  78 CC 0C 38 0C CC	78+	     db	     078h,0cch,00ch,038h,00ch,0cch,078h,000h ;3	d_33
   6261	      00
   6262
   6263	FC0E  1C 3C 6C CC FE 0C	1E+	     db	     01ch,03ch,06ch,0cch,0feh,00ch,01eh,000h ;4	d_34
   6264	      00
   6265
   6266	FC16  FC C0 F8 0C 0C CC	78+	     db	     0fch,0c0h,0f8h,00ch,00ch,0cch,078h,000h ;5	d_35
   6267	      00
   6268
   6269	FC1E  38 60 C0 F8 CC CC	78+	     db	     038h,060h,0c0h,0f8h,0cch,0cch,078h,000h ;6	d_36
   6270	      00
   6271
   6272	FC26  FC CC 0C 18 30 30	30+	     db	     0fch,0cch,00ch,018h,030h,030h,030h,000h ;7	d_37
   6273	      00
   6274
   6275	FC2E  78 CC CC 78 CC CC	78+	     db	     078h,0cch,0cch,078h,0cch,0cch,078h,000h ;8	d_38
   6276	      00
   6277
   6278	FC36  78 CC CC 7C 0C 18	70+	     db	     078h,0cch,0cch,07ch,00ch,018h,070h,000h ;9	d_39
   6279	      00
   6280
   6281	FC3E  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,000h ;:	d_3a
   6282	      00
   6283
   6284	FC46  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,060h ;;	d_3b
   6285	      60
   6286
   6287	FC4E  18 30 60 C0 60 30	18+	     db	     018h,030h,060h,0c0h,060h,030h,018h,000h ;<	d_3c
   6288	      00
   6289
   6290	FC56  00 00 FC 00 00 FC	00+	     db	     000h,000h,0fch,000h,000h,0fch,000h,000h ;=	d_3d
   6291	      00
   6292
   6293	FC5E  60 30 18 0C 18 30	60+	     db	     060h,030h,018h,00ch,018h,030h,060h,000h ;>	d_3e
   6294	      00
   6295
   6296	FC66  78 CC 0C 18 30 00	30+	     db	     078h,0cch,00ch,018h,030h,000h,030h,000h ;?	d_3f
   6297	      00
   6298
   6299
   6300	FC6E  7C C6 DE DE DE C0	78+	     db	     07ch,0c6h,0deh,0deh,0deh,0c0h,078h,000h ;@	d_40
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 127
1840v4.asm



   6301	      00
   6302
   6303	FC76  30 78 CC CC FC CC	CC+	     db	     030h,078h,0cch,0cch,0fch,0cch,0cch,000h ;A	d_41
   6304	      00
   6305
   6306	FC7E  FC 66 66 7C 66 66	FC+	     db	     0fch,066h,066h,07ch,066h,066h,0fch,000h ;B	d_42
   6307	      00
   6308
   6309	FC86  3C 66 C0 C0 C0 66	3C+	     db	     03ch,066h,0c0h,0c0h,0c0h,066h,03ch,000h ;C	d_43
   6310	      00
   6311
   6312	FC8E  F8 6C 66 66 66 6C	F8+	     db	     0f8h,06ch,066h,066h,066h,06ch,0f8h,000h ;D	d_44
   6313	      00
   6314
   6315	FC96  FE 62 68 78 68 62	FE+	     db	     0feh,062h,068h,078h,068h,062h,0feh,000h ;E	d_45
   6316	      00
   6317
   6318	FC9E  FE 62 68 78 68 60	F0+	     db	     0feh,062h,068h,078h,068h,060h,0f0h,000h ;F	d_46
   6319	      00
   6320
   6321	FCA6  3C 66 C0 C0 CE 66	3E+	     db	     03ch,066h,0c0h,0c0h,0ceh,066h,03eh,000h ;G	d_47
   6322	      00
   6323
   6324	FCAE  CC CC CC FC CC CC	CC+	     db	     0cch,0cch,0cch,0fch,0cch,0cch,0cch,000h ;H	d_48
   6325	      00
   6326
   6327	FCB6  78 30 30 30 30 30	78+	     db	     078h,030h,030h,030h,030h,030h,078h,000h ;I	d_49
   6328	      00
   6329
   6330	FCBE  1E 0C 0C 0C CC CC	78+	     db	     01eh,00ch,00ch,00ch,0cch,0cch,078h,000h ;J	d_4a
   6331	      00
   6332
   6333	FCC6  E6 66 6C 78 6C 66	E6+	     db	     0e6h,066h,06ch,078h,06ch,066h,0e6h,000h ;K	d_4b
   6334	      00
   6335
   6336	FCCE  F0 60 60 60 62 66	FE+	     db	     0f0h,060h,060h,060h,062h,066h,0feh,000h ;L	d_4c
   6337	      00
   6338
   6339	FCD6  C6 EE FE FE D6 C6	C6+	     db	     0c6h,0eeh,0feh,0feh,0d6h,0c6h,0c6h,000h ;M	d_4d
   6340	      00
   6341
   6342	FCDE  C6 E6 F6 DE CE C6	C6+	     db	     0c6h,0e6h,0f6h,0deh,0ceh,0c6h,0c6h,000h ;N	d_4e
   6343	      00
   6344
   6345	FCE6  38 6C C6 C6 C6 6C	38+	     db	     038h,06ch,0c6h,0c6h,0c6h,06ch,038h,000h ;O	d_4f
   6346	      00
   6347
   6348
   6349	FCEE  FC 66 66 7C 60 60	F0+	     db	     0fch,066h,066h,07ch,060h,060h,0f0h,000h ;P	d_50
   6350	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 128
1840v4.asm



   6351
   6352	FCF6  78 CC CC CC DC 78	1C+	     db	     078h,0cch,0cch,0cch,0dch,078h,01ch,000h ;Q	d_51
   6353	      00
   6354
   6355	FCFE  FC 66 66 7C 6C 66	E6+	     db	     0fch,066h,066h,07ch,06ch,066h,0e6h,000h ;R	d_52
   6356	      00
   6357
   6358	FD06  78 CC E0 70 1C CC	78+	     db	     078h,0cch,0e0h,070h,01ch,0cch,078h,000h ;S	d_53
   6359	      00
   6360
   6361	FD0E  FC B4 30 30 30 30	78+	     db	     0fch,0b4h,030h,030h,030h,030h,078h,000h ;T	d_54
   6362	      00
   6363
   6364	FD16  CC CC CC CC CC CC	FC+	     db	     0cch,0cch,0cch,0cch,0cch,0cch,0fch,000h ;U	d_55
   6365	      00
   6366
   6367	FD1E  CC CC CC CC CC 78	30+	     db	     0cch,0cch,0cch,0cch,0cch,078h,030h,000h ;V	d_56
   6368	      00
   6369
   6370	FD26  C6 C6 C6 D6 FE EE	C6+	     db	     0c6h,0c6h,0c6h,0d6h,0feh,0eeh,0c6h,000h ;W	d_57
   6371	      00
   6372
   6373	FD2E  C6 C6 6C 38 38 6C	C6+	     db	     0c6h,0c6h,06ch,038h,038h,06ch,0c6h,000h ;X	d_58
   6374	      00
   6375
   6376	FD36  CC CC CC 78 30 30	78+	     db	     0cch,0cch,0cch,078h,030h,030h,078h,000h ;Y	d_59
   6377	      00
   6378
   6379	FD3E  FE C6 8C 18 32 66	FE+	     db	     0feh,0c6h,08ch,018h,032h,066h,0feh,000h ;Z	d_5a
   6380	      00
   6381
   6382	FD46  78 60 60 60 60 60	78+	     db	     078h,060h,060h,060h,060h,060h,078h,000h ;(	d_5b
   6383	      00
   6384
   6385	FD4E  C0 60 30 18 0C 06	02+	     db	     0c0h,060h,030h,018h,00ch,006h,002h,000h ;backslash
   6386	      00
   6387
   6388	FD56  78 18 18 18 18 18	78+	     db	     078h,018h,018h,018h,018h,018h,078h,000h ;)	d_5d
   6389	      00
   6390
   6391	FD5E  10 38 6C C6 00 00	00+	     db	     010h,038h,06ch,0c6h,000h,000h,000h,000h ;cimpqumflex
   6392	      00
   6393
   6394	FD66  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,0ffh ;_	d_5f
   6395	      FF
   6396
   6397
   6398	FD6E  30 30 18 00 00 00	00+	     db	     030h,030h,018h,000h,000h,000h,000h,000h ;	d_60
   6399	      00
   6400
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 129
1840v4.asm



   6401	FD76  00 00 78 0C 7C CC	76+	     db	     000h,000h,078h,00ch,07ch,0cch,076h,000h ;lower case a
   6402	      00
   6403
   6404	FD7E  E0 60 60 7C 66 66	DC+	     db	     0e0h,060h,060h,07ch,066h,066h,0dch,000h ;b	d_62
   6405	      00
   6406
   6407	FD86  00 00 78 CC C0 CC	78+	     db	     000h,000h,078h,0cch,0c0h,0cch,078h,000h ;c	d_63
   6408	      00
   6409
   6410	FD8E  1C 0C 0C 7C CC CC	76+	     db	     01ch,00ch,00ch,07ch,0cch,0cch,076h,000h ;d	d_64
   6411	      00
   6412
   6413	FD96  00 00 78 CC FC C0	78+	     db	     000h,000h,078h,0cch,0fch,0c0h,078h,000h ;e	d_65
   6414	      00
   6415
   6416	FD9E  38 6C 60 F0 60 60	F0+	     db	     038h,06ch,060h,0f0h,060h,060h,0f0h,000h ;f	d_66
   6417	      00
   6418
   6419	FDA6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,0f8h ;g	d_67
   6420	      F8
   6421
   6422	FDAE  E0 60 6C 76 66 66	E6+	     db	     0e0h,060h,06ch,076h,066h,066h,0e6h,000h ;h	d_68
   6423	      00
   6424
   6425	FDB6  30 00 70 30 30 30	78+	     db	     030h,000h,070h,030h,030h,030h,078h,000h ;i	d_69
   6426	      00
   6427
   6428	FDBE  0C 00 0C 0C 0C CC	CC+	     db	     00ch,000h,00ch,00ch,00ch,0cch,0cch,078h ;j	d_6a
   6429	      78
   6430
   6431	FDC6  E0 60 66 6C 78 6C	E6+	     db	     0e0h,060h,066h,06ch,078h,06ch,0e6h,000h ;k	d_6b
   6432	      00
   6433
   6434	FDCE  70 30 30 30 30 30	78+	     db	     070h,030h,030h,030h,030h,030h,078h,000h ;l	d_6c
   6435	      00
   6436
   6437	FDD6  00 00 CC FE FE D6	C6+	     db	     000h,000h,0cch,0feh,0feh,0d6h,0c6h,000h ;m	d_6d
   6438	      00
   6439
   6440	FDDE  00 00 F8 CC CC CC	CC+	     db	     000h,000h,0f8h,0cch,0cch,0cch,0cch,000h ;n	d_6e
   6441	      00
   6442
   6443	FDE6  00 00 78 CC CC CC	78+	     db	     000h,000h,078h,0cch,0cch,0cch,078h,000h ;o	d_6f
   6444	      00
   6445
   6446
   6447	FDEE  00 00 DC 66 66 7C	60+	     db	     000h,000h,0dch,066h,066h,07ch,060h,0f0h ;p	d_70
   6448	      F0
   6449
   6450	FDF6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,01eh ;q	d_71
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 130
1840v4.asm



   6451	      1E
   6452
   6453	FDFE  00 00 DC 76 66 60	F0+	     db	     000h,000h,0dch,076h,066h,060h,0f0h,000h ;r	d_72
   6454	      00
   6455
   6456	FE06  00 00 7C C0 78 0C	F8+	     db	     000h,000h,07ch,0c0h,078h,00ch,0f8h,000h ;s	d_73
   6457	      00
   6458
   6459	FE0E  10 30 7C 30 30 34	18+	     db	     010h,030h,07ch,030h,030h,034h,018h,000h ;t	d_74
   6460	      00
   6461
   6462	FE16  00 00 CC CC CC CC	76+	     db	     000h,000h,0cch,0cch,0cch,0cch,076h,000h ;u	d_75
   6463	      00
   6464
   6465	FE1E  00 00 CC CC CC 78	30+	     db	     000h,000h,0cch,0cch,0cch,078h,030h,000h ;v	d_76
   6466	      00
   6467
   6468	FE26  00 00 C6 D6 FE FE	6C+	     db	     000h,000h,0c6h,0d6h,0feh,0feh,06ch,000h ;w	d_77
   6469	      00
   6470
   6471	FE2E  00 00 C6 6C 38 6C	C6+	     db	     000h,000h,0c6h,06ch,038h,06ch,0c6h,000h ;x	d_78
   6472	      00
   6473
   6474	FE36  00 00 CC CC CC 7C	0C+	     db	     000h,000h,0cch,0cch,0cch,07ch,00ch,0f8h ;y	d_79
   6475	      F8
   6476
   6477	FE3E  00 00 FC 98 30 64	FC+	     db	     000h,000h,0fch,098h,030h,064h,0fch,000h ;z	d_7a
   6478	      00
   6479
   6480	FE46  1C 30 30 E0 30 30	1C+	     db	     01ch,030h,030h,0e0h,030h,030h,01ch,000h ;	d_7b
   6481	      00
   6482
   6483	FE4E  18 18 18 00 18 18	18+	     db	     018h,018h,018h,000h,018h,018h,018h,000h ;	d_7c
   6484	      00
   6485
   6486	FE56  E0 30 30 1C 30 30	E0+	     db	     0e0h,030h,030h,01ch,030h,030h,0e0h,000h ;	d_7d
   6487	      00
   6488
   6489	FE5E  76 DC 00 00 00 00	00+	     db	     076h,0dch,000h,000h,000h,000h,000h,000h ;	d_7e
   6490	      00
   6491
   6492	FE66  00 10 38 6C C6 C6	FE+	     db	     000h,010h,038h,06ch,0c6h,0c6h,0feh,000h ;delta d_7f
   6493	      00
   6494
   6495
   6496				     ;---int 1a-------------------------------
   6497				     ;
   6498				     ;	 Программа установки-считывания времени     +
   6499				     суток
   6500				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 131
1840v4.asm



   6501				     ;	 Эта	программа обеспечивает выполнение       +
   6502				     двух функций, код которых
   6503				     ; задается	в регистре AH:
   6504				     ;	 AH=0 -	считать текущее состояние часов. После+
   6505				     выполнения коман-
   6506				     ; ды регистры CX	и DX содержат старшую и младшую+
   6507				     части	счетчика.
   6508				     ;	 Если регистр AL содержит "0", то счет	идет в    +
   6509				     течение одних
   6510				     ; суток, при любом другом значении счет	       +
   6511				     переходит	на следующие
   6512				     ; сутки;
   6513				     ;
   6514				     ;	 AH=1 -	записать текущее	состояние часов.	       +
   6515				     Регистры CX и DX
   6516				     ; содержат	старшую и младшую части счетчика.
   6517				     ;
   6518				     ;------------------------------------------
   6519					     assume  cs:code,ds:data
   6520	FE6E			     time_of_day     proc    far
   6521	FE6E  FB			     sti	     ; уст признак разрешения	       +
   6522				     прерывания
   6523	FE6F  1E			     push    ds	     ; сохранить сегмент
   6524	FE70  50			     push    ax	     ; сохранить параметры
   6525	FE71  B8 0040			     mov     ax,dat
   6526	FE74  8E D8			     mov     ds,ax
   6527	FE76  58			     pop     ax
   6528	FE77  0A E4			     or	     ah,ah   ; AH=0 ?
   6529	FE79  74 07			     jz	     t2	 ; да, переход	к считыванию		       +
   6530				     текущего состояния
   6531	FE7B  FE CC			     dec     ah	     ; AH=1 ?
   6532	FE7D  74 16			     jz	     t3	 ; да, переход	к установке текущего +
   6533				     состояния
   6534
   6535	FE7F			     t1:     ; Возврат из программы
   6536
   6537	FE7F  FB			     sti	     ; уст признак разрешения	       +
   6538				     прерывания
   6539	FE80  1F			     pop     ds	     ; возврат сегмента
   6540	FE81  CF			     iret	     ; возврат к программе,вызвавшей +
   6541				     процедуру
   6542
   6543	FE82			     t2:     ; Считать текущее состояния	часов
   6544
   6545	FE82  FA			     cli	     ; сбросить	признак разрешения    +
   6546				     прерывания
   6547	FE83  A0 0070r			     mov     al,timer_ofl  ; считать в AL флажок перехода+
   6548				     на сле-
   6549	FE86  C6 06 0070r 00		     mov     timer_ofl,0   ; дующие сутки и	сбросить его+
   6550				     в	памяти
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 132
1840v4.asm



   6551	FE8B  8B 0E 006Er		     mov     cx,timer_high	     ; установить старшую и  +
   6552				     младшую
   6553	FE8F  8B 16 006Cr		     mov     dx,timer_low	     ; части счетчика
   6554	FE93  EB EA			     jmp     short t1
   6555
   6556	FE95			     t3:     ; Установить текущее состояние часов
   6557
   6558	FE95  FA			     cli	     ; сброс признака разрешения	       +
   6559				     прерывания
   6560	FE96  89 16 006Cr		     mov     timer_low,dx	     ; установить младшую и  +
   6561				     старшую
   6562	FE9A  89 0E 006Er		     mov     timer_high,cx	     ; части счетчика
   6563	FE9E  C6 06 0070r 00		     mov     timer_ofl,0     ; сброс флажка перехода	       +
   6564				     через	сутки
   6565	FEA3  EB DA			     jmp     short t1	     ; возврат из программы	       +
   6566				     отсчета времени
   6567	FEA5			     time_of_day     endp
   6568
   6569				     ;-------int 08-------------------
   6570				     ;
   6571				     ;	 Программа обработки прерывания таймера     +
   6572				     КР580ВИ53 (INT	8H) об-
   6573				     ; рабатывает прерывания, аппаратурно	       +
   6574				     возникающие от нулевого канала
   6575				     ; таймера, на вход которого подаются сигналы  +
   6576				     с	частотой 1,228 МГц,
   6577				     ; делящиеся на 56263 для обеспечения 18,2		       +
   6578				     прерываний в секунду.
   6579				     ;	 При	обработке прерывания	корректируется   +
   6580				     программный счетчик,
   6581				     ; хранящийся в памяти по адресу 0046CH (младшая   +
   6582				     часть	счетчика) и
   6583				     ; адресу 0047EH (старшая часть счетчика)	и	       +
   6584				     используемый для уста-
   6585				     ; новки времени суток.
   6586				     ;	 В функции программы входит коррекция	       +
   6587				     счетчика, управляющего
   6588				     ; двигателем НГМД. После обнуления счетчика   +
   6589				     двигатель	выключается.
   6590				     ;	 Вектор 1CH дает возможность пользователю     +
   6591				     входить в заданную
   6592				     ; программу с частотой прерывания таймера (18.2+
   6593				     прерываний в секун-
   6594				     ; ду). Для этого	в таблице векторов прерываний+
   6595				     по адресу 007CH
   6596				     ; необходимо задать адрес пользовательской   +
   6597				     программы.
   6598				     ;
   6599				     ;---------------------------------------------------
   6600
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 133
1840v4.asm



   6601	FEA5			     timer_int	     proc    far
   6602	FEA5  FB			     sti	     ; уст признак разрешения	       +
   6603				     прерывания
   6604	FEA6  1E			     push    ds
   6605	FEA7  50			     push    ax
   6606	FEA8  52			     push    dx
   6607	FEA9  B8 0040			     mov     ax,dat
   6608	FEAC  8E D8			     mov     ds,ax
   6609	FEAE  FF 06 006Cr		     inc     timer_low	  ; +1 к старшей части счетчика
   6610	FEB2  75 04			     jnz     t4
   6611	FEB4  FF 06 006Er		     inc     timer_high	  ; +1 к старшей части счетчика
   6612
   6613	FEB8			     t4:     ; Опрос счетчика = 24	часам
   6614
   6615	FEB8  83 3E 006Er 18		     cmp     timer_high,018h
   6616	FEBD  75 19			     jnz     t5
   6617	FEBF  81 3E 006Cr 00B0		     cmp     timer_low,0b0h
   6618	FEC5  75 11			     jnz     t5
   6619
   6620				     ;	 Таймер исчерпал 24 часа
   6621
   6622	FEC7  C7 06 006Er 0000		     mov     timer_high,0   ; сброс старшей	и младшей      +
   6623				     частей
   6624	FECD  C7 06 006Cr 0000		     mov     timer_low,0    ; счетчика и установка	       +
   6625				     флажка пере-
   6626	FED3  C6 06 0070r 01		     mov     timer_ofl,1    ; хода счета на следующие      +
   6627				     сутки
   6628
   6629				     ;	 Выключение мотора НГМД, если счетчик	       +
   6630				     управления мотором
   6631				     ; исчерпан
   6632
   6633	FED8			     t5:
   6634	FED8  FE 0E 0040r		     dec     motor_count
   6635	FEDC  75 0B			     jnz     t6		     ; переход, если	счетчик не    +
   6636				     установлен
   6637	FEDE  80 26 003Fr F0		     and     motor_status,0f0h
   6638	FEE3  B0 0C			     mov     al,0ch
   6639	FEE5  BA 03F2			     mov     dx,03f2h
   6640	FEE8  EE			     out     dx,al	     ; выключить мотор
   6641
   6642	FEE9			     t6:
   6643	FEE9  CD 1C			     int     1ch     ; передача	управления программе+
   6644				     пользователя
   6645	FEEB  B0 20			     mov     al,eoi
   6646	FEED  E6 20			     out     020h,al	    ; конец прерывания
   6647	FEEF  5A			     pop     dx
   6648	FEF0  58			     pop     ax
   6649	FEF1  1F			     pop     ds
   6650	FEF2  CF			     iret		     ; возврат из прерывания
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 134
1840v4.asm



   6651	FEF3			     timer_int	     endp
   6652				     ;---------------------------------
   6653				     ;
   6654				     ;	 Эти	вектора передаются в область		       +
   6655				     прерывания 8086 во время
   6656				     ; включения питания.
   6657				     ;
   6658				     ;---------------------------------
   6659	FEF3			     vector_table    label   word    ; таблица векторов		       +
   6660				     прерываний
   6661
   6662	FEF3  FEA5r			     dw	     offset timer_int	     ; прерывание 8
   6663	FEF5  F000			     dw	     cod
   6664
   6665	FEF7  E987r			     dw	     offset kb_int	     ; прерывание 9
   6666	FEF9  F000			     dw	     cod
   6667
   6668	FEFB  FF53r			     dw	     offset dummy_return     ; прерывание А
   6669	FEFD  F000			     dw	     cod
   6670	FEFF  F98Br			     dw	     offset dummm_return     ; прерывание B
   6671	FF01  F000			     dw	     cod
   6672	FF03  F98Br			     dw	     offset dummm_return     ; прерывание C
   6673	FF05  F000			     dw	     cod
   6674	FF07  FF53r			     dw	     offset dummy_return     ; прерывание D
   6675	FF09  F000			     dw	     cod
   6676	FF0B  EF57r			     dw	     offset disk_int	     ; прерывание E
   6677	FF0D  F000			     dw	     cod
   6678
   6679	FF0F  FF53r			     dw	     offset dummy_return     ; прерывание F
   6680	FF11  F000			     dw	     cod
   6681	FF13  F065r			     dw	     offset video_io	     ; прерывание 10H
   6682	FF15  F000			     dw	     cod
   6683
   6684	FF17  F84Dr			     dw	     offset equipment	     ; прерывание 11H
   6685	FF19  F000			     dw	     cod
   6686
   6687	FF1B  F841r			     dw	     offset memory_size_determine    ; прерывание 12H
   6688	FF1D  F000			     dw	     cod
   6689
   6690	FF1F  EC59r			     dw	     offset diskette_io	     ; прерывание 13H
   6691	FF21  F000			     dw	     cod
   6692
   6693	FF23  F929r			     dw	     offset rs232_io	     ; прерывание  14H
   6694	FF25  F000			     dw	     cod
   6695
   6696	FF27  F92Dr			     dw	     offset ex_memory	     ; int 15h
   6697	FF29  F000			     dw	     cod
   6698
   6699	FF2B  E82Er			     dw	     offset keyboard_io	     ; прерывание 16H
   6700	FF2D  F000			     dw	     cod
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 135
1840v4.asm



   6701
   6702	FF2F  EFD2r			     dw	     offset printer_io	     ; прерывание 17H
   6703	FF31  F000			     dw	     cod
   6704
   6705	FF33  0000				     dw	0		     ; прерывание 18H
   6706	FF35  F600				     dw	0F600h		     ; ROM BASIC ???
   6707
   6708	FF37  E6F7r			     dw	     offset boot_strap	     ; прерывание 19H
   6709	FF39  F000			     dw	     cod
   6710
   6711	FF3B  FE6Er			     dw	     time_of_day     ; прерывание 1АH - время суток
   6712	FF3D  F000			     dw	     cod
   6713
   6714	FF3F  FF53r			     dw	     dummy_return    ; прерывание 1BH	- прерывание +
   6715				     клавиатуры
   6716	FF41  F000			     dw	     cod
   6717
   6718	FF43  FF53r			     dw	     dummy_return    ; прерывание 1C - прерывание  +
   6719				     таймера
   6720	FF45  F000			     dw	     cod
   6721
   6722	FF47  F0A4r			     dw	     video_parms     ; прерывание 1D - параметры    +
   6723				     видео
   6724	FF49  F000			     dw	     cod
   6725
   6726	FF4B  EFC7r			     dw	     offset  disk_base	 ;прерывание 1EH - параметры+
   6727				     НГМД
   6728	FF4D  F000			     dw	     cod
   6729
   6730	FF4F  0000			     dw	     0		     ; 1FH - адрес	таблицы пользова-
   6731	FF51  0000			     dw	     0		     ; тельского			       +
   6732				     дополнительного знакогенератора
   6733
   6734	FF53			     dummy_return:
   6735	FF53  CF			     iret
   6736
   6737				     ;---int 5----------------------
   6738				     ;
   6739				     ;	 Программа вывода на печать содержимого      +
   6740				     буфера ЭЛИ вызывается
   6741				     ; одновременным нажатием клавиши ПЕЧ и	       +
   6742				     клавиши переключения регист-
   6743				     ; ров. Позиция курсора сохраняется до	       +
   6744				     завершения процедуры обработки
   6745				     ; прерывания. Повторное	нажатие названных      +
   6746				     клавиш во время обработки
   6747				     ; прерывания игнорируется.
   6748				     ;	 При	выполнении программы	в постоянно	       +
   6749				     распределенной рабочей
   6750				     ; области памяти по	адресу 0500H			       +
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 136
1840v4.asm



   6751				     устанавливается следующая
   6752				     ; информация:
   6753				     ;	 0    -	содержимое буфера ЭЛИ еще	не выведено  +
   6754				     на печать,	либо
   6755				     ; вывод уже завершен;
   6756				     ;	 1    -	в процессе вывода содержимого	буфера   +
   6757				     ЭЛИ на печать;
   6758				     ;	 255  -	при печати обнаружена ошибка.
   6759				     ;-----------------------------------------------------
   6760
   6761					     assume  cs:code,ds:xxdata
   6762
   6763	FF54			     print_screen    proc    far
   6764	FF54  FB			     sti		  ; уст признак разрешения	       +
   6765				     прерывания
   6766	FF55  1E			     push    ds
   6767	FF56  50			     push    ax
   6768	FF57  53			     push    bx
   6769	FF58  51			     push    cx	  ; будет использоваться заглавная +
   6770				     буква	для курсора
   6771	FF59  52			     push    dx	  ; будет содержать текущее	       +
   6772				     положение	курсора
   6773	FF5A  B8 0050			     mov     ax,xxdat	     ; адрес 50
   6774	FF5D  8E D8			     mov     ds,ax
   6775	FF5F  80 3E 0000r 01		     cmp     status_byte,1   ; печать готова ?
   6776	FF64  74 5F			     jz	     exit	     ; переход, если	печать	       +
   6777				     готова
   6778	FF66  C6 06 0000r 01		     mov     status_byte,1   ;
   6779	FF6B  B4 0F			     mov     ah,15	     ; требуется текущий режим    +
   6780				     экрана
   6781	FF6D  CD 10			     int     10h	     ; AL - режим,	AH - число		       +
   6782				     строк/колонок
   6783								     ; BH - страница,выведенная на +
   6784				     экран
   6785
   6786
   6787				     ;*************************************8
   6788				     ;
   6789				     ;	 В этом месте:
   6790				     ;			 AX - колонка, строка,
   6791				     ;			 BH - номер отображаемой страницы.
   6792				     ;
   6793				     ;	 Стек содержит DS, AX, BX, CX, DX.
   6794				     ;
   6795				     ;			 AL - режим
   6796				     ;
   6797				     ;**************************************
   6798
   6799	FF6F  8A CC			     mov     cl,ah
   6800	FF71  B5 19			     mov     ch,25
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 137
1840v4.asm



   6801	FF73  E8 0055			     call    crlf
   6802	FF76  51			     push    cx
   6803	FF77  B4 03			     mov     ah,3
   6804	FF79  CD 10			     int     10h
   6805	FF7B  59			     pop     cx
   6806	FF7C  52			     push    dx
   6807	FF7D  33 D2			     xor     dx,dx
   6808
   6809				     ;**************************************
   6810				     ;
   6811				     ;	  Считывание знака, находящегося в текущей  +
   6812				     позиции курсора
   6813				     ; и вывод на печать
   6814				     ;
   6815				     ;**************************************
   6816
   6817	FF7F  B4 02		     pri10:  mov     ah,2
   6818	FF81  CD 10			     int     10h
   6819	FF83  B4 08			     mov     ah,8
   6820	FF85  CD 10			     int     10h
   6821	FF87  0A C0			     or	     al,al
   6822	FF89  75 02			     jnz     pri15
   6823	FF8B  B0 20			     mov     al,' '
   6824	FF8D			     pri15:
   6825	FF8D  52			     push    dx
   6826	FF8E  33 D2			     xor     dx,dx
   6827	FF90  32 E4			     xor     ah,ah
   6828	FF92  CD 17			     int     17h
   6829	FF94  5A			     pop     dx
   6830	FF95  F6 C4 25			     test    ah,25h
   6831	FF98  75 21			     jnz     err10
   6832	FF9A  FE C2			     inc     dl
   6833	FF9C  3A CA			     cmp     cl,dl
   6834	FF9E  75 DF			     jnz     pri10
   6835	FFA0  32 D2			     xor     dl,dl
   6836	FFA2  8A E2			     mov     ah,dl
   6837	FFA4  52			     push    dx
   6838	FFA5  E8 0023			     call    crlf
   6839	FFA8  5A			     pop     dx
   6840	FFA9  FE C6			     inc     dh
   6841	FFAB  3A EE			     cmp     ch,dh
   6842	FFAD  75 D0			     jnz     pri10
   6843	FFAF  5A			     pop     dx
   6844	FFB0  B4 02			     mov     ah,2
   6845	FFB2  CD 10			     int     10h
   6846	FFB4  C6 06 0000r 00		     mov     status_byte,0
   6847	FFB9  EB 0A			     jmp     short exit
   6848	FFBB  5A		     err10:  pop     dx
   6849	FFBC  B4 02			     mov     ah,2
   6850	FFBE  CD 10			     int     10h
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 138
1840v4.asm



   6851	FFC0  C6 06 0000r FF		     mov     status_byte,0ffh
   6852
   6853	FFC5  5A		     exit:   pop     dx
   6854	FFC6  59			     pop     cx
   6855	FFC7  5B			     pop     bx
   6856	FFC8  58			     pop     ax
   6857	FFC9  1F			     pop     ds
   6858	FFCA  CF			     iret
   6859	FFCB			     print_screen    endp
   6860
   6861				     ;	 Возврат	каретки
   6862
   6863	FFCB			     crlf    proc    near
   6864	FFCB  33 D2			     xor     dx,dx
   6865	FFCD  32 E4			     xor     ah,ah
   6866	FFCF  B0 0A			     mov     al,12q
   6867	FFD1  CD 17			     int     17h
   6868	FFD3  32 E4			     xor     ah,ah
   6869	FFD5  B0 0D			     mov     al,15q
   6870	FFD7  CD 17			     int     17h
   6871	FFD9  C3			     ret
   6872	FFDA			     crlf    endp
   6873
   6874	FFDA  16*(00)				     db	22 dup(0)
   6875
   6876				     ;--------------------------------------
   6877				     ;
   6878				     ;	 Включение питания
   6879				     ;
   6880				     ;--------------------------------------
   6881
   6882				     ;vector segment at	0ffffh
   6883
   6884				     ;	 Переход	по включению	питания
   6885
   6886	FFF0  EA		     POST:	     db	     0eah	     ; db    0eah,5bh,0e0h,00h,0f0h  ; jmp reset
   6887	FFF1  E05Br F000			     dw	     offset reset, cod	     ; ###Gleb###
   6888
   6889	FFF5  30 34 2F 32 34 2F	38+		     db	'04/24/81'
   6890	      31
   6891
   6892	FFFD  00 00				     db	   0, 0
   6893
   6894	FFFF  00				     db	   0 ;
   6895				     ;vector ends
   6896
   6897
   6898
   6899
   6900
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 139
1840v4.asm



   6901
   6902	0000			     code    ends
   6903					     end     POST
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 140
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "10-04-21"
??FILENAME			  Text	 "1840v4  "
??TIME				  Text	 "23:43:16"
??VERSION			  Number 0500
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 1840V4
@WORDSIZE			  Text	 2
A5700051COPR_IB			  Byte	 CODE:E000
ACTIVE_PAGE			  Byte	 DATA:0062
ACT_DISP_PAGE			  Near16 CODE:F230
ADDR_6845			  Word	 DATA:0063
ALT_INPUT			  Byte	 DATA:0019
ALT_KEY				  Number 0038
ALT_SHIFT			  Number 0008
ASCII_TBL			  Byte	 CODE:E41D
B1				  Near16 CODE:EFF5
B2				  Near16 CODE:EFFB
B3				  Near16 CODE:F002
B4				  Near16 CODE:F017
B5				  Near16 CODE:F01F
B6				  Near16 CODE:F020
B7				  Near16 CODE:F02B
B8				  Near16 CODE:F033
B9				  Near16 CODE:F03D
BAD_ADDR_MARK			  Number 0002
BAD_CMD				  Number 0001
BAD_CRC				  Number 0010
BAD_DMA				  Number 0008
BAD_NEC				  Number 0020
BAD_SEEK			  Number 0040
BCT				  Near16 CODE:F859
BCT1				  Near16 CODE:F875
BCT2				  Near16 CODE:F877
BCT3				  Near16 CODE:F86C
BCT4				  Near16 CODE:F8B4
BEEP				  Near16 CODE:E5A9
BIOS_BREAK			  Byte	 DATA:0071
BOOT_LOCN			  Far16	 ABS0:7C00
BOOT_STRAP			  Near16 CODE:E6F7
BOOT_VEC			  Dword	 ABS0:0064
BUFFER_END			  Word	 DATA:0082
BUFFER_HEAD			  Word	 DATA:001A
BUFFER_START			  Word	 DATA:0080
BUFFER_TAIL			  Word	 DATA:001C
C1				  Word	 CODE:E016
C10				  Near16 CODE:E0B1
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 141
Symbol Table



C11				  Near16 CODE:E0D9
C12				  Near16 CODE:E0EB
C13				  Near16 CODE:E0FC
C14				  Near16 CODE:E102
C15				  Near16 CODE:E110
C16				  Near16 CODE:E11C
C17				  Near16 CODE:E126
C18				  Near16 CODE:E136
C19				  Near16 CODE:E178
C20				  Near16 CODE:E17D
C21				  Near16 CODE:E18C
C22				  Near16 CODE:E1CB
C23				  Near16 CODE:E1D7
C25				  Near16 CODE:E1E5
C2A				  Near16 CODE:E02A
C2B				  Near16 CODE:E02C
C3				  Near16 CODE:E030
C3A				  Near16 CODE:E045
C7X				  Near16 CODE:E05A
C8				  Near16 CODE:E08E
C9				  Near16 CODE:E0AB
CA3				  Near16 CODE:E1E0
CAPS_KEY			  Number 0056
CAPS_SHIFT			  Number 0040
CAPS_STATE			  Number 0040
CAW				  Word	 CODE:E018
CHK_STAT_2			  Near16 CODE:EF0F
CMD_BLOCK			  Byte	 DATA:0042
CMD_PORT			  Number 0063
COD				  Number F000
CONTROL_BYTE			  Byte	 DATA:0076
CRLF				  Near16 CODE:FFCB
CRT_CHAR_GEN			  Byte	 CODE:FA6E
CRT_COLS			  Word	 DATA:004A
CRT_LEN				  Word	 DATA:004C
CRT_MODE			  Byte	 DATA:0049
CRT_MODE_SET			  Byte	 DATA:0065
CRT_PALLETTE			  Byte	 DATA:0066
CRT_START			  Word	 DATA:004E
CSI				  Word	 ABS0:04D0
CTL_KEY				  Number 001D
CTL_SHIFT			  Number 0004
CURSOR_MODE			  Word	 DATA:0060
CURSOR_POSN			  Word	 DATA:0050
D1				  Byte	 CODE:E20B
D10				  Near16 CODE:E29E
D11				  Near16 CODE:E2A8
D12				  Near16 CODE:E2C4
D13				  Near16 CODE:E2CE
D14				  Near16 CODE:E2D8
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 142
Symbol Table



D1L				  Number 000E
D2				  Byte	 CODE:E219
D2L				  Number 000E
D3				  Near16 CODE:E255
D4				  Near16 CODE:E267
D5				  Near16 CODE:E269
D6				  Near16 CODE:E26F
D7				  Near16 CODE:E277
D8				  Near16 CODE:E289
D9				  Near16 CODE:E292
DAL				  Near16 CODE:E4E9
DAT				  Number 0040
DECIMAL_LOOP			  Near16 CODE:E653
DEL_KEY				  Number 0053
DISKETTE_IO			  Far16	 CODE:EC59
DISKETTE_PARM			  Dword	 ABS0:0078
DISKETTE_STATUS			  Byte	 DATA:0041
DISKW_STATUS			  Byte	 DATA:0074
DISK_BASE			  Byte	 CODE:EFC7
DISK_FORMAT			  Near16 CODE:ED1B
DISK_INT			  Far16	 CODE:EF57
DISK_POINTER			  Dword	 ABS0:0078
DISK_READ			  Near16 CODE:ED0E
DISK_RESET			  Near16 CODE:ECB9
DISK_STATUS			  Near16 CODE:ED0A
DISK_VECTOR			  Dword	 ABS0:0100
DISK_VERF			  Near16 CODE:ED17
DISK_WRITE			  Near16 CODE:ED41
DMA				  Number 0000
DMA08				  Number 0008
DMA_BOUNDARY			  Number 0009
DMA_SETUP			  Near16 CODE:EEC9
DUMMM_RETURN			  Near16 CODE:F98B
DUMMY_RETURN			  Near16 CODE:FF53
E1				  Byte	 CODE:E2DA
E10				  Near16 CODE:E369
E11				  Near16 CODE:E387
E12				  Near16 CODE:E389
E13				  Near16 CODE:E38B
E14				  Near16 CODE:E394
E15				  Near16 CODE:E396
E16				  Near16 CODE:E39F
E17				  Near16 CODE:E3A7
E18				  Near16 CODE:E3AD
E19				  Near16 CODE:E3B2
E190				  Near16 CODE:E613
E1L				  Number 0004
E20A				  Near16 CODE:E622
E20B				  Near16 CODE:E627
E20C				  Near16 CODE:E637
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 143
Symbol Table



E21A				  Near16 CODE:E689
E22				  Near16 CODE:E3FF
E3				  Near16 CODE:E301
E300				  Byte	 CODE:E69F
E3A				  Near16 CODE:E30C
E7				  Near16 CODE:E31A
E8				  Near16 CODE:E32A
E9				  Near16 CODE:E34C
EOI				  Number 0020
EQUIPMENT			  Far16	 CODE:F84D
EQUIP_FLAG			  Word	 DATA:0010
EQ_FL				  Byte	 ABS0:0410
ERR01				  Near16 CODE:E0AF
ERR10				  Near16 CODE:FFBB
ERROR_BEEP			  Near16 CODE:E768
ERR_BEEP			  Near16 CODE:E580
ERR_WAIT			  Near16 CODE:E4E0
EXIT				  Near16 CODE:FFC5
EXT_PTR				  Dword	 ABS0:007C
EX_MEMORY			  Near16 CODE:F92D
F1				  Byte	 CODE:E411
F10				  Near16 CODE:E490
F11				  Near16 CODE:E4A5
F12				  Near16 CODE:E4A7
F13				  Near16 CODE:E4BD
F14				  Near16 CODE:E4C6
F15				  Near16 CODE:E4CC
F16				  Near16 CODE:E502
F17				  Near16 CODE:E516
F18				  Near16 CODE:E542
F19				  Near16 CODE:E559
F19A				  Near16 CODE:F96D
F19B				  Near16 CODE:E55C
F1L				  Number 0004
F2				  Byte	 CODE:E415
F20				  Near16 CODE:E570
F20A				  Near16 CODE:F980
F20B				  Near16 CODE:E574
F21				  Near16 CODE:E57A
F23				  Near16 CODE:E57D
F2L				  Number 0003
F3				  Byte	 CODE:E418
F39				  Byte	 CODE:E6A6
F3L				  Number 0003
F4				  Word	 CODE:E41B
F4E				  Word	 CODE:E41D
F5				  Near16 CODE:E44A
F6				  Near16 CODE:E462
F7				  Near16 CODE:E46B
FIND_POSITION			  Near16 CODE:F3A7
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 144
Symbol Table



G1				  Near16 CODE:E58C
G10				  Near16 CODE:E5EC
G12				  Near16 CODE:E5FC
G2				  Near16 CODE:E591
G3				  Near16 CODE:E597
G4				  Near16 CODE:E59C
G5				  Near16 CODE:E5A2
G6				  Near16 CODE:E5A4
G7				  Near16 CODE:E5C0
G8				  Near16 CODE:E5D2
G9				  Near16 CODE:E5E5
GET_PARM			  Near16 CODE:EE51
GRAPHICS_DOWN			  Near16 CODE:F4F7
GRAPHICS_READ			  Near16 CODE:F633
GRAPHICS_UP			  Near16 CODE:F49E
GRAPHICS_WRITE			  Near16 CODE:F581
GRAPH_POSN			  Near16 CODE:F70F
H1				  Near16 CODE:E707
H2				  Near16 CODE:E722
H3				  Near16 CODE:E727
H4				  Near16 CODE:E72A
HDISK_INT			  Dword	 ABS0:0034
HD_ERROR			  Byte	 DATA:0042
HF_NUM				  Byte	 DATA:0075
HF_TBL_VEC			  Dword	 ABS0:0104
HOLD_STATE			  Number 0008
IDNPOL				  Word	 DATA:0090
INF_KEY				  Number 0059
INS_KEY				  Number 0052
INS_SHIFT			  Number 0080
INS_STATE			  Number 0080
INT5_PTR			  Word	 ABS0:0014
INTA00				  Number 0020
INTA01				  Number 0021
INT_ADDR			  Word	 ABS0:0020
INT_FLAG			  Number 0080
INT_PTR				  Dword	 ABS0:0020
INV_KEY_L			  Number 0058
INV_KEY_R			  Number 005A
INV_SHIFT			  Number 0004
IO_RAM_SIZE			  Word	 DATA:0015
IO_ROM_INIT			  Word	 DATA:0067
IO_ROM_SEG			  Word	 DATA:0069
J1				  Near16 CODE:EC87
J10				  Near16 CODE:ED29
J11				  Near16 CODE:ED57
J12				  Near16 CODE:EDA0
J13				  Near16 CODE:EDA4
J14				  Near16 CODE:EDAA
J15				  Near16 CODE:EDD4
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 145
Symbol Table



J16				  Near16 CODE:EDF9
J17				  Near16 CODE:EE00
J18				  Near16 CODE:EE3D
J19				  Near16 CODE:EE3F
J2				  Near16 CODE:ECAB
J20				  Near16 CODE:EE46
J21				  Near16 CODE:EE47
J22				  Near16 CODE:EE4B
J23				  Near16 CODE:E736
J24				  Near16 CODE:E73D
J25				  Near16 CODE:E747
J26				  Near16 CODE:E749
J27				  Near16 CODE:E752
J28				  Near16 CODE:EE95
J29				  Near16 CODE:EEB9
J3				  Near16 CODE:ECB3
J30				  Near16 CODE:EEC0
J300				  Near16 CODE:EEAB
J31				  Near16 CODE:EEC6
J32				  Near16 CODE:EEC8
J33				  Near16 CODE:EEDE
J34				  Near16 CODE:EF28
J35				  Near16 CODE:EF29
J36				  Near16 CODE:EF37
J37				  Near16 CODE:EF4A
J38				  Near16 CODE:EF74
J39				  Near16 CODE:EF79
J4				  Near16 CODE:ECD2
J40				  Near16 CODE:EF85
J40A				  Near16 CODE:EF8A
J41				  Near16 CODE:EF8F
J42				  Near16 CODE:EF96
J43				  Near16 CODE:EF9E
J44				  Near16 CODE:EFAC
J45				  Near16 CODE:EFC4
J5				  Near16 CODE:ECD4
J6				  Near16 CODE:ECD6
J7				  Near16 CODE:ECF8
J8				  Near16 CODE:ED09
J9				  Near16 CODE:ED10
K1				  Near16 CODE:E845
K10				  Byte	 CODE:E8DC
K11				  Byte	 CODE:E916
K12				  Byte	 CODE:E950
K13				  Byte	 CODE:E95A
K14				  Byte	 CODE:E964
K15				  Byte	 CODE:E971
K16				  Near16 CODE:E9AF
K17				  Near16 CODE:E9D9
K18				  Near16 CODE:EA4B
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 146
Symbol Table



K19				  Near16 CODE:EA60
K2				  Near16 CODE:E85E
K20				  Near16 CODE:EA6E
K21				  Near16 CODE:EA74
K22				  Near16 CODE:EA7B
K23				  Near16 CODE:EA9F
K24				  Near16 CODE:EAC3
K25				  Near16 CODE:EACC
K26				  Near16 CODE:EAEB
K26A				  Near16 CODE:EA48
K27				  Near16 CODE:EAF0
K28				  Near16 CODE:EAFF
K29				  Near16 CODE:EB09
K3				  Near16 CODE:E86F
K30				  Byte	 CODE:F905
K300				  Near16 CODE:EA1D
K301				  Near16 CODE:EA22
K302				  Near16 CODE:EA37
K303				  Near16 CODE:EA93
K304				  Near16 CODE:EAAF
K307				  Near16 CODE:EAF9
K31				  Near16 CODE:EB1F
K32				  Near16 CODE:EB28
K33				  Near16 CODE:EB44
K34				  Near16 CODE:EB55
K35				  Near16 CODE:EB65
K36				  Near16 CODE:EB69
K37				  Near16 CODE:EB6B
K38				  Near16 CODE:EB75
K39				  Near16 CODE:EB98
K4				  Near16 CODE:E75B
K40				  Near16 CODE:EBB3
K400				  Near16 CODE:EA06
K401				  Near16 CODE:EA0E
K406				  Near16 CODE:E9C2
K406B				  Near16 CODE:EADB
K407				  Near16 CODE:E9D6
K41				  Near16 CODE:EBBD
K42				  Near16 CODE:EBC7
K43				  Near16 CODE:EBD1
K44				  Near16 CODE:EBD7
K45				  Near16 CODE:EBEF
K46				  Near16 CODE:EBFC
K47				  Near16 CODE:EC06
K48				  Near16 CODE:EC19
K49				  Near16 CODE:EC27
K5				  Near16 CODE:E767
K50				  Near16 CODE:EC37
K51				  Near16 CODE:EC3D
K52				  Near16 CODE:EC43
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 147
Symbol Table



K53				  Near16 CODE:EC4A
K54				  Near16 CODE:E78D
K54A				  Near16 CODE:EBEC
K55				  Near16 CODE:E796
K56				  Near16 CODE:E7A0
K57				  Near16 CODE:E7A4
K58				  Near16 CODE:E7AD
K59				  Near16 CODE:E7D2
K6				  Byte	 CODE:E875
K60				  Near16 CODE:E7D5
K61				  Near16 CODE:E7DF
K62				  Near16 CODE:E7FC
K63				  Near16 CODE:E802
K64				  Near16 CODE:E804
K65				  Near16 CODE:E771
K66				  Near16 CODE:E778
K67				  Near16 CODE:E781
K6L				  Number 000C
K7				  Byte	 CODE:E881
K8				  Byte	 CODE:E889
K80				  Near16 CODE:F94B
K81				  Near16 CODE:F948
K88				  Near16 CODE:E7BE
K89				  Near16 CODE:F933
K89A				  Near16 CODE:F961
K89B				  Near16 CODE:F95C
K9				  Byte	 CODE:E8C3
K98				  Near16 CODE:EC13
K99				  Near16 CODE:E7F7
KBDINT				  Number 0002
KBD_IN				  Number 0060
KBD_RESET			  Near16 CODE:E5CB
KB_BUFFER			  Word	 DATA:001E
KB_BUFFER_END			  Word	 DATA:003E
KB_CTL				  Number 0061
KB_DAT				  Number 0060
KB_FLAG				  Byte	 DATA:0017
KB_FLAG_1			  Byte	 DATA:0018
KB_INT				  Far16	 CODE:E987
KB_OK				  Near16 CODE:E66C
KEYBOARD_IO			  Far16	 CODE:E82E
LAST_VAL			  Byte	 DATA:006B
LAT				  Number 0002
LAT_KEY				  Number 0057
LAT_SHIFT			  Number 0001
LEFT_KEY			  Number 0054
LEFT_SHIFT			  Number 0002
M1				  Word	 CODE:F045
M10				  Near16 CODE:F144
M11				  Near16 CODE:F16F
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 148
Symbol Table



M12				  Near16 CODE:F172
M13				  Near16 CODE:F175
M14				  Near16 CODE:F1C3
M15				  Near16 CODE:F1CA
M16				  Near16 CODE:F1DA
M17				  Near16 CODE:F207
M18				  Near16 CODE:F209
M19				  Near16 CODE:F269
M1L				  Number 0020
M2				  Near16 CODE:F080
M20				  Near16 CODE:F270
M3				  Near16 CODE:F098
M4				  Number 0010
M5				  Word	 CODE:F0E4
M6				  Byte	 CODE:F0EC
M7				  Byte	 CODE:F0F4
M8				  Near16 CODE:F10D
M9				  Near16 CODE:F141
MAX_PERIOD			  Number 0540
MEMORY_SIZE			  Word	 DATA:0013
MEMORY_SIZE_DETERMINE		  Far16	 CODE:F841
MEM_SIZ				  Word	 ABS0:0413
MFG_TST				  Byte	 DATA:0012
MIN_PERIOD			  Number 0410
MOTOR_COUNT			  Byte	 DATA:0040
MOTOR_STATUS			  Byte	 DATA:003F
MOTOR_WAIT			  Number 0025
N1				  Near16 CODE:F2AB
N10				  Near16 CODE:F331
N11				  Near16 CODE:F33A
N12				  Near16 CODE:F351
N13				  Near16 CODE:F35F
N14				  Near16 CODE:F36A
N15				  Near16 CODE:F36D
N16				  Near16 CODE:F379
N2				  Near16 CODE:F2B9
N3				  Near16 CODE:F2C4
N4				  Near16 CODE:F2C7
N5				  Near16 CODE:F2D0
N6				  Near16 CODE:F2E3
N7				  Near16 CODE:F2E6
N8				  Near16 CODE:F2FD
N9				  Near16 CODE:F30A
NEC_OP				  Near16 CODE:EE64
NEC_OUTPUT			  Near16 CODE:E72F
NEC_STATUS			  Byte	 DATA:0042
NMI_INT				  Near16 CODE:E2B5
NMI_PTR				  Word	 ABS0:0008
NUM_KEY				  Number 0045
NUM_SHIFT			  Number 0020
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 149
Symbol Table



NUM_STATE			  Number 0020
NUM_TRANS			  Near16 CODE:EFB0
ORG_VECTOR			  Dword	 ABS0:004C
OSH				  Near16 CODE:E3D4
P1				  Near16 CODE:F38A
P10				  Near16 CODE:F403
P11				  Near16 CODE:F40C
P12				  Near16 CODE:F413
P13				  Near16 CODE:F419
P2				  Near16 CODE:F398
P3				  Near16 CODE:F39E
P4				  Near16 CODE:F3B7
P5				  Near16 CODE:F3BD
P6				  Near16 CODE:F3D0
P7				  Near16 CODE:F3DB
P8				  Near16 CODE:F3E2
P9				  Near16 CODE:F3E8
PARM_PTR			  Dword	 ABS0:0074
PORT_A				  Number 0060
PORT_B				  Number 0061
PORT_C				  Number 0062
PORT_OFF			  Byte	 DATA:0077
POSITION			  Near16 CODE:F28B
POST				  Near16 CODE:FFF0
PRI10				  Near16 CODE:FF7F
PRI15				  Near16 CODE:FF8D
PRINTER_BASE			  Word	 DATA:0008
PRINTER_IO			  Far16	 CODE:EFD2
PRINT_SCREEN			  Far16	 CODE:FF54
PRT_DEC_LOOP			  Near16 CODE:E660
PRT_HEX				  Near16 CODE:E698
PRT_SIZ				  Near16 CODE:E64C
P_MSG				  Near16 CODE:E5F5
R1				  Near16 CODE:F450
R10				  Near16 CODE:F4E5
R11				  Near16 CODE:F4F3
R12				  Near16 CODE:F517
R13				  Near16 CODE:F533
R14				  Near16 CODE:F542
R15				  Near16 CODE:F544
R16				  Near16 CODE:F553
R17				  Near16 CODE:F557
R18				  Near16 CODE:F570
R2				  Near16 CODE:F457
R3				  Near16 CODE:F45B
R4				  Near16 CODE:F46E
R5				  Near16 CODE:F486
R6				  Near16 CODE:F490
R7				  Near16 CODE:F4BC
R8				  Near16 CODE:F4D4
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 150
Symbol Table



R9				  Near16 CODE:F4E3
READ_AC_CURRENT			  Near16 CODE:F37D
READ_CURSOR			  Near16 CODE:F21A
READ_DOT			  Near16 CODE:F427
READ_LPEN			  Near16 CODE:F7A9
RECORD_NOT_FND			  Number 0004
REGEN				  Byte	 VIDEO_RAM:0000
REGENW				  Word	 VIDEO_RAM:0000
RESET				  Near16 CODE:E05B
RESET_FLAG			  Word	 DATA:0072
RESULTS				  Near16 CODE:EF6B
RES_FL				  Word	 ABS0:0472
RIGHT_KEY			  Number 0055
RIGHT_SHIFT			  Number 0001
ROS				  Near16 CODE:E0DB
RS232_BASE			  Word	 DATA:0000
RS232_IO			  Near16 CODE:F929
RUST				  Byte	 CODE:F8CB
RUST2				  Byte	 CODE:E6BD
RUS_KEY				  Number 005B
RW_OPN				  Near16 CODE:ED4D
S1				  Near16 CODE:F594
S10				  Near16 CODE:F5FC
S11				  Near16 CODE:F618
S12				  Near16 CODE:F648
S13				  Near16 CODE:F660
S14				  Near16 CODE:F664
S15				  Near16 CODE:F676
S16				  Near16 CODE:F683
S17				  Near16 CODE:F688
S18				  Near16 CODE:F6B1
S19				  Near16 CODE:F6B7
S2				  Near16 CODE:F5A3
S20				  Near16 CODE:F6C0
S21				  Near16 CODE:F6CC
S22				  Near16 CODE:F6D5
S23				  Near16 CODE:F6EF
S24				  Near16 CODE:F6F9
S25				  Near16 CODE:F6FF
S26				  Near16 CODE:F70C
S3				  Near16 CODE:F5B3
S4				  Near16 CODE:F5B7
S5				  Near16 CODE:F5BF
S6				  Near16 CODE:F5D3
S7				  Near16 CODE:F5DF
S8				  Near16 CODE:F5E6
S9				  Near16 CODE:F5EA
SCROLL_DOWN			  Near16 CODE:F341
SCROLL_KEY			  Number 0046
SCROLL_POSITION			  Near16 CODE:F2EA
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 151
Symbol Table



SCROLL_SHIFT			  Number 0010
SCROLL_STATE			  Number 0010
SCROLL_UP			  Near16 CODE:F29C
SEEK				  Near16 CODE:EE67
SEEK_STATUS			  Byte	 DATA:003E
SET_COLOR			  Near16 CODE:F254
SET_CPOS			  Near16 CODE:F1F0
SET_CTYPE			  Near16 CODE:F1CF
SET_MODE			  Near16 CODE:F0FC
SP_TEST				  Near16 CODE:E5D8
STA				  Number 0030
START				  Near16 CODE:E05B
STATUS_BYTE			  Byte	 XXDATA:0000
STAT_OFFSET			  Byte	 DATA:007C
STGTST				  Near16 CODE:E01A
STGTST_CNT			  Near16 CODE:E01D
STG_LOC0			  Byte	 ABS0:0000
T1				  Near16 CODE:FE7F
T2				  Near16 CODE:FE82
T3				  Near16 CODE:FE95
T4				  Near16 CODE:FEB8
T5				  Near16 CODE:FED8
T6				  Near16 CODE:FEE9
TABL				  Word	 DATA:00E0
TABL1				  Word	 ABS0:04E0
TIMER				  Number 0040
TIMERO				  Number 0040
TIMER_HIGH			  Word	 DATA:006E
TIMER_INT			  Far16	 CODE:FEA5
TIMER_LOW			  Word	 DATA:006C
TIMER_OFL			  Byte	 DATA:0070
TIME_OF_DAY			  Far16	 CODE:FE6E
TIME_OUT			  Number 0080
TIM_CTL				  Number 0043
TMINT				  Number 0001
TMP_TOS				  Word	 DATA:3FF0
TOS				  Word	 STAC:0100
TST12				  Near16 CODE:E42D
TST6				  Near16 CODE:E227
TST8				  Near16 CODE:E2DE
U1				  Near16 CODE:F753
U10				  Near16 CODE:F793
U11				  Near16 CODE:F79A
U2				  Near16 CODE:F766
U3				  Near16 CODE:F76C
U4				  Near16 CODE:F77A
U5				  Near16 CODE:F77C
U6				  Near16 CODE:F780
U7				  Near16 CODE:F782
U8				  Near16 CODE:F786
Turbo Assembler	 Version 5.0	    10-04-21 23:43:16	    Page 152
Symbol Table



U9				  Near16 CODE:F78F
V1				  Byte	 CODE:F7A1
V2				  Near16 CODE:F7E8
V3				  Near16 CODE:F80F
V4				  Near16 CODE:F81B
V5				  Near16 CODE:F82D
V6				  Near16 CODE:F82F
V7				  Near16 CODE:F839
VECTOR_TABLE			  Word	 CODE:FEF3
VIDEO_INT			  Word	 ABS0:0040
VIDEO_IO			  Near16 CODE:F065
VIDEO_PARMS			  Byte	 CODE:F0A4
VIDEO_RA			  Number B800
VIDEO_RETURN			  Near16 CODE:F1C7
VIDEO_STATE			  Near16 CODE:F27A
WAIT_INT			  Near16 CODE:EF30
WRITE_AC_CURRENT		  Near16 CODE:F3C3
WRITE_C_CURRENT			  Near16 CODE:F3F6
WRITE_DOT			  Near16 CODE:F438
WRITE_PROTECT			  Number 0003
WRITE_TTY			  Near16 CODE:F722
WRITE_TTY2			  Near16 CODE:F966
X1				  Near16 CODE:ED8B
X2				  Near16 CODE:ED87
XLAT_PRINT_COD			  Near16 CODE:E402
XXDAT				  Number 0050
ZB				  Byte	 ABS0:0000
ZW				  Word	 ABS0:0000

Groups & Segments		  Bit Size Align  Combine Class

ABS0				  16  7C00 Para	  none
CODE				  16  00010000 Para   none
DATA				  16  3FF0 Para	  none
STAC				  16  0100 Para	  Stack
VIDEO_RAM			  16  4000 Para	  none
XXDATA				  16  0001 Para	  none

Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 1
1840v4.asm



      1				     ;This source code made by Gleb Larionov, Prague.
      2				     ;Changed by Leonid	Yadrennikov, Tyumen.
      3				     ;v1 - 05.10.2021 -	ros_checksum removed, ES1841 memory switching-on added
      4				     ;___________________
      5				     ; v4 - ??/??/???? (Other version than 24/04/1981) новая клавиатура
      6				     ;	БАЗОВАЯ СИСТЕМА ВВОДА/ВЫВОДА (БСУВВ)
      7				     ;___________________
      8	      =0060		     port_a  equ     60h
      9	      =F000		     cod     equ     0f000h
     10	      =0040		     dat     equ     0040h
     11	      =0030		     sta     equ     0030h
     12	      =0050		     xxdat   equ     0050h
     13	      =B800		     video_ra equ    0b800h
     14	      =0061		     port_b  equ     61h
     15	      =0062		     port_c  equ     62h
     16	      =0063		     cmd_port equ    63h
     17	      =0020		     inta00  equ     20h
     18	      =0021		     inta01  equ     21h
     19	      =0020		     eoi     equ     20h
     20	      =0040		     timer   equ     40h
     21	      =0043		     tim_ctl equ     43h
     22	      =0040		     timero  equ     40h
     23	      =0001		     tmint   equ     01
     24	      =0008		     dma08   equ     08
     25	      =0000		     dma     equ     00
     26	      =0540		     max_period	equ  540h
     27	      =0410		     min_period	equ  410h
     28	      =0060		     kbd_in  equ     60h
     29	      =0002		     kbdint  equ     02
     30	      =0060		     kb_dat  equ     60h
     31	      =0061		     kb_ctl  equ     61h
     32				     ;_______________
     33				     ;	Расположение прерываний 8086
     34				     ;_________________________
     35	0000			     abs0    segment para
     36	0000			     zb	     label   byte
     37	0000			     zw	     label   word
     38	0000			     stg_loc0 label  byte
     39					     org     2*4
     40	0008			     nmi_ptr label   word
     41					     org     5*4
     42	0014			     int5_ptr label  word
     43					     org     8*4
     44	0020			     int_addr label  word
     45	0020			     int_ptr label   dword
     46					     org     0dh*4
     47	0034			     hdisk_int	label  dword
     48					     org     10h*4
     49	0040			     video_int label word
     50					     org     13h*4
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 2
1840v4.asm



     51	004C			     org_vector	 label	dword
     52					     org     19h*4
     53	0064			     boot_vec  label  dword
     54					     org     1dh*4
     55	0074			     parm_ptr label  dword
     56					     org     01eh*4
     57	0078			     disk_pointer label	dword
     58	0078			     diskette_parm  label  dword
     59					     org     01fh*4
     60	007C			     ext_ptr label   dword
     61					     org     040h*4
     62	0100			     disk_vector  label	 dword
     63					     org     041h*4
     64
     65	0104			     hf_tbl_vec	 label	dword
     66					     org     410h
     67	0410			     eq_fl   label   byte
     68
     69					     org     413h
     70	0413			     mem_siz label   word
     71					     org     472h
     72	0472			     res_fl  label   word
     73					     org     4d0h
     74	04D0			     csi     label   word
     75					     org     4e0h
     76	04E0			     tabl1   label   word
     77					     org     7c00h
     78	7C00			     boot_locn label far
     79	7C00			     abs0    ends
     80
     81				     ;______________________
     82				     ;	Использование стека только во	время	       +
     83				     инициализации
     84				     ;______________________
     85	0000			     stac    segment para stack
     86	0000  80*(????)			     dw	     128 dup(?)
     87
     88
     89
     90	0100			     tos     label   word
     91	0100			     stac    ends
     92
     93				     ;______________________
     94				     ;	Область данных ПЗУ
     95				     ;____________________
     96	0000			     data segment    para
     97	0000  04*(????)		     rs232_base	dw 4 dup(?)
     98
     99
    100
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 3
1840v4.asm



    101	0008  04*(????)		     printer_base dw 4 dup(?)
    102
    103
    104
    105	0010  ????		     equip_flag	dw ?
    106	0012  ??		     mfg_tst db	     ?
    107	0013  ????		     memory_size dw  ?
    108	0015  ????		     io_ram_size dw  ?
    109				     ;_______________
    110				     ;	Область данных клавиатуры
    111				     ;_________________
    112	0017  ??		     kb_flag db	     ?
    113
    114				     ;	Размещение флажков в kb_flag
    115
    116	      =0080		     ins_state equ   80h
    117	      =0040		     caps_state	equ  40h
    118	      =0020		     num_state equ   20h
    119	      =0010		     scroll_state equ 10h
    120	      =0008		     alt_shift equ   08h
    121	      =0004		     ctl_shift equ   04h
    122	      =0002		     left_shift	equ  02h
    123	      =0001		     right_shift equ 01h
    124
    125	0018  ??		     kb_flag_1 db    ?
    126
    127	      =0080		     ins_shift equ   80h
    128	      =0040		     caps_shift	equ  40h
    129	      =0020		     num_shift equ   20h
    130	      =0010		     scroll_shift equ 10h
    131	      =0008		     hold_state	equ  08h
    132	      =0004		     inv_shift equ   04h
    133	      =0002		     lat	     equ     02h
    134	      =0001		     lat_shift	     equ     01h
    135
    136
    137
    138	0019  ??		     alt_input db    ?
    139	001A  ????		     buffer_head dw  ?
    140	001C  ????		     buffer_tail dw  ?
    141	001E  10*(????)		     kb_buffer dw    16	dup(?)
    142
    143
    144
    145	003E			     kb_buffer_end label word
    146
    147				     ;	head=tail указывает на заполнение буфера
    148
    149	      =0045		     num_key equ     69
    150	      =0046		     scroll_key	equ  70
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 4
1840v4.asm



    151	      =0038		     alt_key equ     56
    152	      =001D		     ctl_key equ     29
    153	      =0056		     caps_key equ    86
    154	      =0054		     left_key equ    84
    155	      =0055		     right_key equ   85
    156	      =0052		     ins_key equ     82
    157	      =0053		     del_key equ     83
    158	      =0059		     inf_key   equ   89
    159	      =0058		     inv_key_l	equ  88
    160	      =005A		     inv_key_r equ   90
    161	      =005B		     rus_key	equ  91
    162	      =0057		     lat_key equ     87
    163
    164				     ;____________________
    165				     ;	Область данных НГМД
    166				     ;____________________
    167	003E  ??		     seek_status db  ?
    168				     ;
    169				     ;
    170	      =0080		     int_flag equ    080h
    171	003F  ??		     motor_status db ?
    172				     ;
    173				     ;
    174	0040  ??		     motor_count db  ?
    175	      =0025		     motor_wait	equ  37
    176
    177				     ;
    178	0041  ??		     diskette_status db	?
    179	      =0080		     time_out equ    80h
    180	      =0040		     bad_seek equ    40h
    181	      =0020		     bad_nec  equ    20h
    182	      =0010		     bad_crc  equ    10h
    183	      =0009		     dma_boundary equ 09h
    184	      =0008		     bad_dma  equ    08h
    185	      =0004		     record_not_fnd equ	04h
    186	      =0003		     write_protect equ 03h
    187	      =0002		     bad_addr_mark equ 02h
    188	      =0001		     bad_cmd equ     01h
    189
    190	0042			     cmd_block	label  byte
    191	0042			     hd_error  label  byte
    192	0042  07*(??)		     nec_status	db   7 dup(?)
    193
    194
    195
    196
    197				     ;_____________________
    198				     ;	Область данных ЭЛИ
    199				     ;_____________________
    200	0049  ??		     crt_mode db     ?
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 5
1840v4.asm



    201	004A  ????		     crt_cols dw     ?
    202	004C  ????		     crt_len  dw     ?
    203	004E  ????		     crt_start dw    ?
    204	0050  08*(????)		     cursor_posn dw  8 dup(?)
    205
    206
    207
    208	0060  ????		     cursor_mode dw  ?
    209	0062  ??		     active_page db  ?
    210	0063  ????		     addr_6845 dw    ?
    211	0065  ??		     crt_mode_set db ?
    212	0066  ??		     crt_pallette db ?
    213
    214				     ;___________________
    215				     ;	Область данных НМД
    216				     ;___________________
    217	0067  ????		     io_rom_init dw  ?
    218	0069  ????		     io_rom_seg	dw   ?
    219	006B  ??		     last_val db     ?
    220
    221				     ;___________________
    222				     ;	Область данных таймера
    223				     ;___________________
    224	006C  ????		     timer_low dw    ?
    225	006E  ????		     timer_high	dw   ?
    226	0070  ??		     timer_ofl db    ?
    227				     ;___________________
    228				     ;	Область данных системы
    229				     ;___________________
    230	0071  ??		     bios_break	db   ?
    231	0072  ????		     reset_flag	dw   ?
    232	0074  ??		     diskw_status  db  ?
    233	0075  ??		     hf_num  db	  ?
    234	0076  ??		     control_byte  db  ?
    235	0077  ??		     port_off  db  ?
    236						     org     7ch
    237	007C			     stat_offset     label   byte ; смещение для хранения	       +
    238				     состояний	модема
    239
    240					     org     80h
    241	0080  ????		     buffer_start    dw	     ?
    242	0082  ????		     buffer_end	     dw	     ?
    243					     org     0090h
    244	0090  ????		     idnpol  dw	     ?
    245					     org     0e0h
    246	00E0			     tabl    label   word
    247
    248					     org     3ff0h
    249	3FF0			     tmp_tos label   word
    250				     ;
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 6
1840v4.asm



    251	3FF0			     data    ends
    252
    253				     ;___________________
    254				     ;	Область расширения данных
    255				     ;_________________________________
    256	0000			     xxdata segment  para
    257	0000  ??		     status_byte db  ?
    258	0001			     xxdata  ends
    259
    260				     ;_________________
    261				     ;	Буфер ЭЛИ
    262				     ;___________________
    263	0000			     video_ram segment para
    264	0000			     regen   label   byte
    265	0000			     regenw  label   word
    266	0000  4000*(??)			     db	     16384 dup(?)
    267
    268
    269
    270	4000			     video_ram ends
    271				     ;____________________
    272				     ;	Основной массив в ПЗУ	(сегмент	code)
    273				     ;____________________
    274
    275	0000			     code segment para
    276
    277						     org 0E000h
    278
    279	E000  35 37 30 30 30 35	31+  a5700051Copr_Ib db	'5700051 copr. ibm 1981'
    280	      20 63 6F 70 72 2E	20+
    281	      69 62 6D 20 31 39	38+
    282	      31
    283	E016  E0D9r		     c1		     dw	offset c11	     ; адрес    возврата
    284	E018  E1E6r		     caw	     dw	offset ca3
    285					     assume cs:code,ss:code,es:abs0,ds:data
    286
    287	E01A			     stgtst:
    288	E01A  B9 4000				     mov     cx,4000h
    289
    290	E01D			     stgtst_cnt	     proc    near
    291	E01D  FC				     cld
    292	E01E  8B D9				     mov     bx, cx
    293	E020  B8 FFFF				     mov     ax, 0FFFFh
    294	E023  BA AA55				     mov     dx, 0AA55h
    295	E026  2B FF				     sub     di, di
    296	E028  F3> AA				     repe stosb
    297
    298	E02A			     c2a:
    299	E02A  4F				     dec     di
    300	E02B  FD				     std
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 7
1840v4.asm



    301
    302	E02C			     c2b:
    303	E02C  8B F7				     mov     si, di
    304	E02E  8B CB				     mov     cx, bx
    305
    306	E030			     c3:
    307	E030  AC				     lodsb
    308	E031  32 C4				     xor     al, ah
    309	E033  75 25				     jnz     c7x
    310	E035  E4 62				     in	     al, 62h
    311	E037  24 40				     and     al, 40h
    312	E039  B0 00				     mov     al, 0
    313	E03B  75 1D				     jnz     c7x
    314	E03D  80 FC 00				     cmp     ah, 0
    315	E040  74 03				     jz	     c3a
    316	E042  8A C2				     mov     al, dl
    317	E044  AA				     stosb
    318
    319	E045			     c3a:
    320	E045  E2 E9				     loop    c3
    321	E047  80 FC 00				     cmp     ah, 0
    322	E04A  74 0E				     jz	     c7x
    323	E04C  8A E0				     mov     ah, al
    324	E04E  86 F2				     xchg    dh, dl
    325	E050  FC				     cld
    326	E051  47				     inc     di
    327	E052  74 D8				     jz	     c2b
    328	E054  4F				     dec     di
    329	E055  BA 0001				     mov     dx, 1
    330	E058  EB D0				     jmp     short c2a
    331
    332	E05A			     c7x:
    333	E05A  C3				     retn
    334	E05B			     stgtst_cnt	     endp
    335
    336
    337				     ;____________________
    338				     ;	Сброс системы - фаза 1
    339				     ;____________________
    340				     ;_____________________
    341				     ;	Проверка 16К памяти
    342				     ;_____________________
    343				     ;___________________
    344				     ;	ТЕСТ.01
    345				     ;	     Тест процессора 8086. Осуществляет	       +
    346				     проверку регистра
    347				     ;	     признаков, команд перехода и		       +
    348				     считывания-записи
    349				     ;	     общих	и сегментных	регистров.
    350				     ;_____________________________________
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 8
1840v4.asm



    351	E05B			     reset   label   near
    352	E05B  FA		     start:  cli		     ; сброс признака разрешения+
    353				     прерывания
    354	E05C  B4 D5			     mov     ah,0d5h	     ;уст признаки SF,CF,ZF,AF
    355	E05E  9E			     sahf
    356	E05F  73 4E			     jnc     err01	     ;CF=0,в программу ошибок
    357	E061  75 4C			     jnz     err01	     ;ZF=0,в программу ошибок
    358	E063  7B 4A			     jnp     err01	     ;PF=0,в программу ошибок
    359	E065  79 48			     jns     err01	     ;SF=0,в программу ошибок
    360	E067  9F			     lahf		     ;загрузить признаки в AH
    361	E068  B1 05			     mov     cl,5	     ;загрузить счетчик
    362	E06A  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    363	E06C  73 41			     jnc     err01	     ;признак AF=0
    364	E06E  B0 40			     mov     al,40h	     ;уст признак переполнения
    365	E070  D0 E0			     shl     al,1	     ;уст для контроля
    366	E072  71 3B			     jno     err01	     ;признак OF	не уст
    367	E074  32 E4			     xor     ah,ah	     ;уст AH=0
    368	E076  9E			     sahf		     ;уст в	исходное состояние SF,+
    369				     CF,ZF,PF
    370	E077  72 36			     jc	     err01	     ;признак CF=1
    371	E079  74 34			     jz	     err01	     ;признак ZF=1
    372	E07B  78 32			     js	     err01	     ;признак SF=1
    373	E07D  7A 30			     jp	     err01	     ;признак PF=1
    374	E07F  9F			     lahf		     ;загрузить признаки в AH
    375	E080  B1 05			     mov     cl,5	     ;загрузить счетчик
    376	E082  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    377	E084  72 29			     jc	     err01	     ;признак IF=1
    378	E086  D0 E4			     shl     ah,1	     ;контроль,	что OF сброшен
    379	E088  70 25			     jo	     err01
    380	E08A  B8 FFFF			     mov     ax,0ffffh	     ;уст эталона в AX
    381	E08D  F9			     stc
    382	E08E  8E D8		     c8:     mov     ds,ax	     ;запись во	все регистры
    383	E090  8C DB			     mov     bx,ds
    384	E092  8E C3			     mov     es,bx
    385	E094  8C C1			     mov     cx,es
    386	E096  8E D1			     mov     ss,cx
    387	E098  8C D2			     mov     dx,ss
    388	E09A  8B E2			     mov     sp,dx
    389	E09C  8B EC			     mov     bp,sp
    390	E09E  8B F5			     mov     si,bp
    391	E0A0  8B FE			     mov     di,si
    392	E0A2  73 07			     jnc     c9
    393	E0A4  33 C7			     xor     ax,di	     ;проверка всех	регистров
    394								     ;эталонами "FFFF", "0000"
    395	E0A6  75 07			     jnz     err01
    396	E0A8  F8			     clc
    397	E0A9  73 E3			     jnc     c8
    398	E0AB			     c9:
    399	E0AB  0B C7			     or	     ax,di	     ;нулевым шаблоном все	       +
    400				     регистры проверены ?
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 9
1840v4.asm



    401	E0AD  74 02			     jz	     c10	     ;ДА - переход к следующему    +
    402				     тесту
    403	E0AF  EB AA		     err01:  jmp   short  start
    404				     ;_______________________
    405				     ; ТЕСТ.02
    406				     ;_______________________
    407	E0B1			     c10:
    408	E0B1  B0 00			     mov     al,0	     ;запретить прерывaния NMI
    409	E0B3  E6 A0			     out     0a0h,al
    410	E0B5  E6 83			     out     83h,al	     ;инициализация регистрa       +
    411				     страниц ПДП
    412	E0B7  B0 99			     mov     al,99h	     ;уст A,C -ввод, B -	вывод
    413	E0B9  E6 63			    out	     cmd_port,al	     ;запись в регистр	       +
    414				     режима
    415									     ;трехканального порта
    416	E0BB  B0 FC			     mov     al,0fch		     ;блокировка контроля    +
    417				     по четности
    418	E0BD  E6 61			     out     port_b,al
    419	E0BF  2A C0			     sub     al,al
    420	E0C1  BA 03D8			     mov     dx,3d8h
    421	E0C4  EE			     out     dx,al	     ;блокировка цветного ЭЛИ
    422	E0C5  FE C0			     inc     al
    423	E0C7  BA 03B8			     mov     dx,3b8h
    424	E0CA  EE			     out     dx,al	     ;блокировка черно-белого     +
    425				     ЭЛИ
    426	E0CB  B8 F000			     mov     ax,cod	     ;уст сегментного регистра SS
    427	E0CE  8E D0			     mov     ss,ax
    428	E0D0  BB E000			     mov     bx,0e000h		     ;уст начального адреса +
    429				     памяти
    430	E0D3  BC E016r			     mov     sp,offset c1	     ;уст адреса возврата
    431	E0D6  EB 03			     jmp     short ros
    432	E0D8  90				     nop
    433	E0D9  75 D4		     c11:    jne     err01
    434				     ;------------------------
    435				     ;	ТЕСТ.03
    436				     ;	 Осуществляет проверку, инициализацию и      +
    437				     запуск ПДП и
    438				     ; таймера 1	для регенерации памяти
    439				     ;_________________________
    440				     ;	 Блокировка контроллера ПДП
    441
    442	E0DB  B0 04		     ros:    mov     al,04
    443	E0DD  E6 08			     out     dma08,al
    444
    445				     ;	 Проверка правильности функционирования
    446				     ;	 таймера	1
    447
    448	E0DF  B0 54			     mov     al,54h	     ;выбор таймера	1,LSB, режим 2
    449	E0E1  E6 43			     out     timer+3,al
    450	E0E3  2B C9			     sub     cx,cx
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 10
1840v4.asm



    451	E0E5  8A D9			     mov     bl,cl
    452	E0E7  8A C1			     mov     al,cl	     ;уст начального счетчика     +
    453				     таймера в 0
    454	E0E9  E6 41			     out     timer+1,al
    455	E0EB			     c12:
    456	E0EB  B0 40			     mov     al,40h
    457	E0ED  E6 43			     out     timer+3,al
    458	E0EF  E4 41			     in	     al,timer+1	     ;считывание счетчика	       +
    459				     таймера 1
    460	E0F1  0A D8			     or	     bl,al	     ;все биты таймера включены ?
    461	E0F3  80 FB FF			     cmp     bl,0ffh	     ;ДА - сравнение	с FF
    462	E0F6  74 04			     je	     c13	     ;биты таймера сброшены
    463	E0F8  E2 F1			     loop    c12	     ;биты таймера установлены
    464	E0FA  EB B3			     jmp     short err01     ;сбой таймера 1, останов	       +
    465				     системы
    466	E0FC			     c13:
    467	E0FC  8A C3			     mov     al,bl	     ;уст счетчика таймера 1
    468	E0FE  2B C9			     sub     cx,cx
    469	E100  E6 41			     out     timer+1,al
    470	E102			     c14:	     ;цикл таймера
    471	E102  B0 40			     mov     al,40h
    472	E104  E6 43			     out     timer+3,al
    473	E106  E4 41			     in	     al,timer+1		     ;считывание счетчика    +
    474				     таймера 1
    475	E108  22 D8			     and     bl,al
    476	E10A  74 04			     jz	     c15
    477	E10C  E2 F4			     loop    c14	     ;цикл таймера
    478	E10E  EB 9F			     jmp     short err01
    479
    480				     ;	 Инициализация таймера 1
    481
    482	E110			     c15:
    483	E110  B0 54			     mov     al,54h
    484	E112  E6 43			     out     timer+3,al	     ;запись в регистр режима      +
    485				     таймера
    486	E114  B0 07			     mov     al,7    ;уст коэффициента деления для    +
    487				     регенерации
    488	E116  E6 41			     out     timer+1,al	     ;запись в счетчик таймера 1
    489	E118  E6 0D			     out     dma+0dh,al	     ;послать гашение ПДП
    490
    491				     ;	 Цикл проверки регистров ПДП
    492
    493	E11A  B0 FF			     mov     al,0ffh	     ;запись шаблона FF во все       +
    494				     регистры
    495	E11C  8A D8		     c16:    mov     bl,al	     ;сохранить шаблон для	       +
    496				     сравнения
    497	E11E  8A F8			     mov     bh,al
    498	E120  B9 0008			     mov     cx,8	     ;уст цикла	счетчика
    499	E123  BA 0000			     mov     dx,dma	     ;уст адреса регистра порта  +
    500				     ввода/вывода
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 11
1840v4.asm



    501	E126  EE		     c17:    out     dx,al	     ;запись  шаблона в регистр
    502	E127  EE			     out     dx,al	     ;старшие 16	бит регистра
    503	E128  B8 0101			     mov     ax,0101h	     ;изменение AX перед		       +
    504				     считыванием
    505	E12B  EC			     in	     al,dx
    506	E12C  8A E0			     mov     ah,al	     ;сохранить младшие	16 бит      +
    507				     регистра
    508	E12E  EC			     in	     al,dx
    509	E12F  3B D8			     cmp     bx,ax	     ;считан тот же шаблон ?
    510	E131  74 03			     je	     c18	     ;ДА - проверка следующего     +
    511				     регистра
    512	E133  E9 FF79			     jmp     err01	     ;НЕТ - ошибка
    513	E136			     c18:			     ;выбор следующего регистра +
    514				     ПДП
    515	E136  42			     inc     dx		     ;установка адреса		       +
    516				     следующего
    517								     ;регистра ПДП
    518	E137  E2 ED			     loop    c17	     ;запись шаблона для	       +
    519				     следующего регистра
    520	E139  F6 D0			     not     al		       ;уст шаблона в 0
    521	E13B  74 DF			     jz	     c16
    522
    523				     ;	 Инициализация и запуск ПДП
    524
    525	E13D  B0 FF			     mov     al,0ffh	     ;уст счетчика 64K для	       +
    526				     регенерации
    527	E13F  E6 01			     out     dma+1,al
    528	E141  E6 01			     out     dma+1,al
    529	E143  B0 58			     mov     al,058h	     ;уст режим	ПДП,	счетчик 0,      +
    530				     считывание
    531	E145  E6 0B			     out     dma+0bh,al	     ;запись в регистр режима ПДП
    532	E147  B0 00			     mov     al,0	     ;доступность контроллера    +
    533				     ПДП
    534	E149  E6 08			     out     dma+8,al	     ;уст регистр команд ПДП
    535	E14B  E6 0A			     out     dma+10,al	     ;доступность канала 0 для     +
    536				     регенерации
    537	E14D  B0 41			     mov     al,41h	     ;уст режим	дла канала 1
    538	E14F  E6 0B			     out     dma+0bh,al
    539	E151  B0 42			     mov     al,42h	     ;уст режим	для канала 2
    540	E153  E6 0B			     out     dma+0bh,al
    541	E155  B0 43			     mov     al,43h	     ;уст режим	для канала 3
    542	E157  E6 0B			     out     dma+0bh,al
    543				     ;======================================RCgoff begin
    544				     ;-----------------turn ES1841 memory on, if present
    545	E159  BA 02B0				     mov dx,2b0h
    546	E15C  B0 0C				     mov al,0ch			     ;0b0000.1100 - turn RD,WD on, no  +
    547				     reconfig
    548	E15E  EE				     out dx,al
    549				     ;======================================RCgoffg end
    550	E15F  B8 0040				     mov     ax, dat
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 12
1840v4.asm



    551	E162  8E D8				     mov     ds, ax
    552
    553	E164  8B 1E 0072r			     mov     bx, ds:reset_flag
    554	E168  2B C0				     sub     ax, ax
    555	E16A  8E C0				     mov     es, ax
    556	E16C  8E D8				     mov     ds, ax
    557	E16E  E4 62				     in	     al, port_c
    558	E170  24 0F				     and     al, 0Fh
    559	E172  FE C0				     inc     al
    560	E174  02 C0				     add     al, al
    561	E176  BA 0000				     mov     dx, 0
    562	E179  8A E0				     mov     ah, al
    563	E17B  B0 00				     mov     al, 0
    564	E17D  FC				     cld
    565
    566	E17E			     c19:
    567	E17E  2B FF				     sub     di, di
    568	E180  B9 0000				     mov     cx, 0
    569
    570	E183			     c20:
    571	E183  AA				     stosb
    572	E184  E2 FD				     loop    c20
    573	E186  81 C2 1000			     add     dx, 4096
    574	E18A  8E C2				     mov     es, dx
    575	E18C  FE CC				     dec     ah
    576	E18E  74 02				     jz	     c21
    577	E190  EB EC				     jmp     short c19
    578				     ;____________________
    579				     ;	 Инициализация контроллера
    580				     ;	 прерываний 8259
    581				     ;____________________
    582	E192			     c21:
    583	E192  B0 13			     mov     al,13h	     ;ICW1 - EDGE, SNGL, ICW4
    584	E194  E6 20			     out     inta00,al
    585	E196  B0 08			     mov     al,8	     ;УСТ ICW2 - прерывание типа 8(8-F)
    586	E198  E6 21			     out     inta01,al
    587	E19A  B0 09			     mov     al,9	     ;уст ICW4 - BUFFERD , режим 8086
    588	E19C  E6 21			     out     inta01,al
    589	E19E  2B C0				     sub     ax, ax
    590	E1A0  8E C0				     mov     es, ax
    591	E1A2  BE 0040				     mov     si, dat
    592	E1A5  8E DE				     mov     ds, si
    593
    594	E1A7  89 1E 0072r			     mov     ds:reset_flag, bx
    595	E1AB  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
    596	E1B1  74 38				     jz	     c25
    597	E1B3  8E D8				     mov     ds, ax
    598	E1B5  BC 3FF0r				     mov     sp, offset	tmp_tos
    599	E1B8  8E D0				     mov     ss, ax
    600	E1BA  8B F8				     mov     di, ax
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 13
1840v4.asm



    601	E1BC  BB 0024				     mov     bx, 9*4	     ; int 9 (KBD)
    602	E1BF  C7 07 E2A8r			     mov     word ptr [bx], offset d11
    603	E1C3  43				     inc     bx
    604	E1C4  43				     inc     bx
    605	E1C5  8C 0F				     mov     [bx], cs
    606	E1C7  E8 0401				     call    kbd_reset
    607	E1CA  80 FB 65				     cmp     bl, 65h	     ; Manufacturing test mode - viz document  +
    608				     in	BIOS root or http://www.vcfed.org/forum/archive/index.php/t-12377.html
    609	E1CD  75 0E				     jnz     c23
    610	E1CF  B2 FF				     mov     dl, 0FFh
    611
    612	E1D1			     c22:
    613	E1D1  E8 0404				     call    sp_test
    614	E1D4  8A C3				     mov     al, bl
    615	E1D6  AA				     stosb
    616	E1D7  FE CA				     dec     dl
    617	E1D9  75 F6				     jnz     c22
    618	E1DB  CD 3E				     int     3Eh
    619
    620	E1DD			     c23:
    621	E1DD  0E				     push    cs
    622	E1DE  17				     pop     ss
    623						     assume ss:code
    624	E1DF  FA				     cli
    625	E1E0  BC E018r				     mov     sp, offset	caw  ; [caw] = offset ca3 (next	jmp -> indirect+
    626				     call)
    627	E1E3  E9 FE34				     jmp     stgtst
    628
    629	E1E6			     ca3:
    630	E1E6  74 03				     jz	     c25
    631	E1E8  E9 FEC4				     jmp     err01
    632
    633				     ;	 Установка сегмента стека	и SP
    634
    635	E1EB			     c25:
    636	E1EB  B8 0030			     mov     ax,sta	     ;получить величину	стека
    637	E1EE  8E D0			     mov     ss,ax	     ;уст стек
    638	E1F0  BC 0100r			     mov     sp,offset tos   ;стек готов
    639
    640				     ;	 Установка указателя вектора прерывания NMI
    641
    642	E1F3  26: C7 06	0008r	  +	     mov     es:nmi_ptr,offset nmi_int
    643	      E2B5r
    644	E1FA  26: C7 06	000Ar F000	     mov     es:nmi_ptr+2,cod
    645	E201  EB 24			     jmp     short tst6	     ;переход к	следующему тесту
    646
    647				     ;ros_checksum proc	 near
    648				     ;	     mov     cx,8192	     ;число байт для сложения
    649				     ;	     xor     al,al
    650				     ;c26:   add     al,cs:[bx]
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 14
1840v4.asm



    651				     ;	     inc     bx		     ;указание следующего байта
    652				     ;	     loop    c26	     ;сложить все байты в модуле +
    653				     ROS
    654				     ;	     or	     al,al	     ;сумма = 0 ?
    655				     ;	     ret
    656				     ;ros_checksum endp
    657					     org     0e20bh
    658				     ;______________________
    659				     ;	 Начальный тест надежности
    660				     ;______________________
    661					     assume  cs:code,es:abs0
    662
    663	E20B  70 61 72 69 74 79	20+  d1		     db	'parity	check 2'
    664	      63 68 65 63 6B 20	32
    665
    666
    667	      =000E		     d1l     equ     14
    668	E219  70 61 72 69 74 79	20+  d2		     db	'parity	check 1'
    669	      63 68 65 63 6B 20	31
    670
    671
    672	      =000E		     d2l     equ     14
    673				     ;______________________
    674				     ;	 ТЕСТ.06
    675				     ;	      Тест контроллера прерываний
    676				     ;	      8259
    677				     ;_______________________
    678	E227			     tst6:
    679	E227  2B C0			     sub     ax,ax	     ;уст регистра ES
    680	E229  8E C0			     mov     es,ax
    681
    682				     ;-----уст вектора прерываний 5
    683
    684	E22B  26: C7 06	0014r	  +	     mov     es:int5_ptr,offset	print_screen   ; печать экрана
    685	      FF54r
    686	E232  26: C7 06	0016r F000	     mov     es:int5_ptr+2,cod
    687
    688				     ;	 Проверка регистра масок прерываний (IMR)
    689
    690	E239  FA			     cli		     ;сброс признака разрешения +
    691				     прерываний
    692	E23A  B0 00			     mov     al,0	     ;уст IMR в 0
    693	E23C  E6 21			     out     inta01,al
    694	E23E  E4 21			     in	     al,inta01	     ;считывание IMR
    695	E240  0A C0			     or	     al,al	     ;IMR=0 ?
    696	E242  75 2B			     jnz     d6		     ;IMR не 0,в программу ошибок
    697	E244  B0 FF			     mov     al,0ffh	     ;недоступность прерываний
    698	E246  E6 21			     out     inta01,al	     ;запись в IMR
    699	E248  E4 21			     in	     al,inta01	     ;считывание IMR
    700	E24A  04 01			     add     al,1	     ;все биты IMR установлены ?
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 15
1840v4.asm



    701	E24C  75 21			     jnz     d6		     ;НЕТ - в программу ошибок
    702
    703				     ;	 Контроль ожидания прерывания
    704
    705	E24E  FC			     cld		     ; уст признак направления
    706	E24F  B9 0008			     mov     cx,8
    707	E252  BF 0020r			     mov     di,offset int_ptr	     ; уст адресацию таблицы
    708	E255			     d3:
    709	E255  B8 E2A8r			     mov     ax,offset d11   ; установить адрес		       +
    710				     процедуры	прерываний
    711	E258  AB			     stosw
    712	E259  B8 F000			     mov     ax,cod  ; получить	адрес сегмента	       +
    713				     процедуры
    714	E25C  AB			     stosw
    715	E25D  83 C3 04			     add     bx,4    ;уст BX	для указания	следующего   +
    716				     значения
    717	E260  E2 F3			     loop    d3
    718
    719				     ;	 Прерывания размаскированы
    720
    721	E262  32 E4			     xor     ah,ah	     ;очистить регистр AH
    722	E264  FB			     sti		     ; установка признака	       +
    723				     разрешения прерывания
    724	E265  2B C9			     sub     cx,cx	     ; ожидание	1 сек любого	       +
    725				     прерывания,
    726	E267  E2 FE		     d4:     loop    d4		     ; которое может произойти
    727	E269  E2 FE		     d5:     loop    d5
    728	E26B  0A E4			     or	     ah,ah	     ; прерывание возникло ?
    729	E26D  74 08			     jz	     d7		     ; нет -	к следующему	тесту
    730	E26F  BA 0101		     d6:     mov     dx,101h	     ; уст длительности		       +
    731				     звукового	сигнала
    732	E272  E8 030B			     call    err_beep	     ; идти	в программу		       +
    733				     звукового	сигнала
    734	E275  FA			     cli
    735	E276  F4			     hlt		     ; останов системы
    736				     ;__________________
    737				     ;	 ТЕСТ.07
    738				     ;	      Проверка таймера 8253
    739				     ;___________________
    740	E277			     d7:
    741	E277  B4 00			     mov     ah,0	     ; сброс признака прерывания+
    742				     таймера
    743	E279  32 ED			     xor     ch,ch	     ; очистить	регистр CH
    744	E27B  B0 FE			     mov     al,0feh   ; маскировать	все прерывания,   +
    745				     кроме	LVL 0
    746	E27D  E6 21			     out     inta01,al	     ; запись IMR
    747	E27F  B0 10			     mov     al,00010000b    ; выбрать TIM 0, LSD, режим 0,	BINARY
    748	E281  E6 43			     out     tim_ctl,al	 ;записать регистр режима	       +
    749				     управления таймера
    750	E283  B1 16			     mov     cl,16h	     ; уст счетчик программного  +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 16
1840v4.asm



    751				     цикла
    752	E285  8A C1			     mov     al,cl	     ; установить счетчик	       +
    753				     таймера 0
    754	E287  E6 40			     out     timero,al	     ; записать	счетчик таймера 0
    755	E289  F6 C4 FF		     d8:     test    ah,0ffh	     ; прерывание таймера 0	       +
    756				     произошло	?
    757	E28C  75 04			     jnz     d9		     ; да - таймер считал	медленно
    758	E28E  E2 F9			     loop    d8		     ; ожидание	прерывания	       +
    759				     определенное время
    760	E290  EB DD			     jmp     short d6	;прерывание таймера 0 не	       +
    761				     произошло	- ошибка
    762	E292  B1 12		     d9:     mov     cl,18	     ; уст счетчик программного  +
    763				     цикла
    764	E294  B0 FF			     mov     al,0ffh	     ; записать	счетчик таймера 0
    765	E296  E6 40			     out     timero,al
    766	E298  B4 00			     mov     ah,0	     ; сброс признака,		       +
    767				     полученного прерывания
    768	E29A  B0 FE			     mov     al,0feh	     ; недоступность прерываний +
    769				     таймера 0
    770	E29C  E6 21			     out     inta01,al
    771	E29E  F6 C4 FF		     d10:    test    ah,0ffh	     ; прерывание таймера 0	       +
    772				     произошло	?
    773	E2A1  75 CC			     jnz     d6		     ; да - таймер считает быстро
    774	E2A3  E2 F9			     loop    d10	     ; ожидание	прерывания	       +
    775				     определенное время
    776	E2A5  EB 37			     jmp     short tst8		     ; переход к следующему  +
    777				     тесту
    778	E2A7  90			     nop
    779				     ;____________________
    780				     ;	 Программа обслуживания
    781				     ;	 временного прерывания
    782				     ;____________________
    783	E2A8			     d11     proc    near
    784	E2A8  B4 01			     mov     ah,1
    785	E2AA  50			     push    ax		     ; хранить регистр AX
    786	E2AB  B0 FF			     mov     al,0ffh	     ; размаскировать все	       +
    787				     прерывания
    788	E2AD  E6 21			     out     inta01,al
    789	E2AF  B0 20			     mov     al,eoi
    790	E2B1  E6 20			     out     inta00,al
    791	E2B3  58			     pop     ax		     ; восстановить	регистр AX
    792	E2B4  CF			     iret
    793	E2B5			     d11     endp
    794
    795	E2B5			     nmi_int proc    near
    796	E2B5  50			     push    ax		     ; хранить регистр AX
    797	E2B6  E4 62			     in	     al,port_c
    798	E2B8  A8 40			     test    al,40h	     ; ошибка паритета при	       +
    799				     вводе/выводе ?
    800	E2BA  74 08			     jz	     d12	     ; да - признак сбрасывается  +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 17
1840v4.asm



    801				     в	0
    802	E2BC  BE E20Br			     mov     si,offset d1    ; адрес поля сообщения об     +
    803				     ошибке
    804	E2BF  B9 000E			     mov     cx,d1l	     ; длина поля сообщения об     +
    805				     ошибке
    806	E2C2  EB 0A			     jmp     short d13	     ; отобразить ошибку на	       +
    807				     дисплее
    808	E2C4			     d12:
    809	E2C4  A8 80			     test    al,80h
    810	E2C6  74 10			     jz	     d14
    811	E2C8  BE E219r			     mov     si,offset d2    ; адрес поля сообщения об     +
    812				     ошибке
    813	E2CB  B9 000E			     mov     cx,d2l	     ; длина поля сообщения об     +
    814				     ошибке
    815	E2CE			     d13:
    816	E2CE  B8 0000			     mov     ax,0	     ; инициировать	и установить+
    817				     режим	ЭЛИ
    818	E2D1  CD 10			     int     10h	     ; вызвать процедуру VIDEO_IO
    819	E2D3  E8 031F			     call    p_msg	     ; распечатать ошибку
    820	E2D6  FA			     cli
    821	E2D7  F4			     hlt		     ; останов системы
    822	E2D8			     d14:
    823	E2D8  58			     pop     ax		     ; восстановить	AX
    824	E2D9  CF			     iret
    825	E2DA			     nmi_int endp
    826				     ;____________________
    827				     ;	 Начальный тест надежности
    828				     ;____________________
    829					     assume  cs:code,ds:data
    830
    831	E2DA  20 32 30 31	     e1	     db	     ' 201'
    832	      =0004		     e1l     equ     04h
    833
    834				     ;	 Выполнение программы БСУВВ,
    835				     ;	 генерирующей вектора прерываний
    836
    837	E2DE			     tst8:
    838	E2DE  FC			     cld		     ; установить признак	       +
    839				     направления вперед
    840	E2DF  BF 0040r			     mov     di,offset video_int   ; уст адреса области	       +
    841				     прерываний
    842	E2E2  0E			     push    cs
    843	E2E3  1F			     pop     ds		     ; уст адреса таблицы	       +
    844				     векторов
    845	E2E4  BE FF13r			     mov     si,offset vector_table+20h	 ; смещение VECTOR_TABLE+32
    846	E2E7  B9 0020			     mov     cx,20h
    847	E2EA  F3> A5			     rep     movsw	     ; передать	таблицу векторов+
    848				     в	память
    849
    850				     ;	 Установка таймера 0 в	режим 3
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 18
1840v4.asm



    851
    852	E2EC  B0 FF			     mov     al,0ffh
    853	E2EE  E6 21			     out     inta01,al
    854	E2F0  B0 36			     mov     al,36h	     ; выбор счетчика 0,		       +
    855				     считывания-за-
    856				     ; писи	младшего,затем старшего байта		       +
    857				     счетчика,уст режима 3
    858	E2F2  E6 43			     out     timer+3,al	     ; запись режима таймера
    859	E2F4  B0 C7			     mov     al,0c7h
    860	E2F6  E6 40			     out     timer,al	     ; записать	младшую часть      +
    861				     счетчика
    862	E2F8  B0 DB			     mov     al,0dbh
    863	E2FA  E6 40			     out     timer,al	     ; записать	старшую часть      +
    864				     счетчика
    865
    866
    867					     assume  ds:data
    868	E2FC  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    869	E2FF  8E D8			     mov     ds,ax
    870	E301			     e3:
    871	E301  81 3E 0072r 1234		     cmp     reset_flag,1234h
    872	E307  74 03			     jz	     e3a
    873	E309  E8 154D			     call    bct     ;загрузка знакогенератора Ч/Б    +
    874				     ЭЛИ
    875				     ;_____________________
    876				     ;	 ТЕСТ.08
    877				     ;	      Инициализация и запуск
    878				     ;	      контроллера ЭЛИ
    879				     ;______________________
    880	E30C  E4 60		     e3a:    in	     al,port_a	     ; считывание состояния	       +
    881				     переключателей
    882	E30E  B4 00			     mov     ah,0
    883	E310  A3 0010r			     mov     equip_flag,ax   ; запомнить считанное	       +
    884				     состояние	пере-
    885								     ; ключателей
    886	E313  24 30			     and     al,30h	     ; выделить	переключатели     +
    887				     ЭЛИ
    888	E315  75 03			     jnz     e7		     ; переключатели ЭЛИ	       +
    889				     установлены в 0 ?
    890	E317  E9 0098			     jmp     e19	     ; пропустить тест ЭЛИ
    891	E31A			     e7:
    892	E31A  86 E0			     xchg    ah,al
    893	E31C  80 FC 30			     cmp     ah,30h	     ; адаптер ч/б ?
    894	E31F  74 09			     je	     e8		     ; да - установить режим для   +
    895				     ч/б адаптера
    896	E321  FE C0			     inc     al	      ;	уст цветной режим для		       +
    897				     цветного адаптера
    898	E323  80 FC 20			     cmp     ah,20h	     ; режим 80х25 установлен ?
    899	E326  75 02			     jne     e8		     ; нет -	уст режим для 40х25
    900	E328  B0 03			     mov     al,3	     ; установить режим 80х25
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 19
1840v4.asm



    901	E32A			     e8:
    902	E32A  50			     push    ax		     ; хранить режим ЭЛИ	в стеке
    903	E32B  2A E4			     sub     ah,ah	     ;
    904	E32D  CD 10			     int     10h
    905	E32F  58			     pop     ax
    906	E330  50			     push    ax
    907	E331  BB B000			     mov     bx,0b000h
    908	E334  BA 03B8			     mov     dx,3b8h	     ; регистр режима для ч/б
    909	E337  B9 1000			     mov     cx,4096	     ; счетчик байт для ч/б	       +
    910				     адаптера
    911	E33A  B0 01			     mov     al,1	     ; уст режим для	ч/б адаптера
    912	E33C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер ЭЛИ подключен ?
    913	E33F  74 0B			     je	     e9		     ; переход к проверке буфера +
    914				     ЭЛИ
    915	E341  BB B800			     mov     bx,0b800h
    916	E344  BA 03D8			     mov     dx,3d8h	     ; регистр режима для	       +
    917				     цветного адаптера
    918	E347  B9 4000			     mov     cx,4000h
    919	E34A  FE C8			     dec     al		     ; уст режим в 0 для цветного  +
    920				     адаптера
    921				     ;
    922				     ;	     Проверка буфера ЭЛИ
    923				     ;
    924	E34C			     e9:
    925	E34C  EE			     out     dx,al	     ; блокировка ЭЛИ для	       +
    926				     цветного адаптера
    927	E34D  8E C3			     mov     es,bx
    928	E34F  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    929	E352  8E D8			     mov     ds,ax
    930	E354  81 3E 0072r 1234		     cmp     reset_flag,1234h
    931	E35A  74 0D			     je	     e10
    932	E35C  8E DB			     mov     ds,bx	     ;
    933	E35E  E8 FCBC			     call    stgtst_cnt	     ; переход к проверке памяти
    934	E361  74 06			     je	     e10
    935	E363  BA 0102			     mov     dx,102h
    936	E366  E8 0217			     call    err_beep
    937
    938				     ;___________________________
    939				     ;
    940				     ;	 ТЕСТ.09
    941				     ;	      Осуществляет проверку	формирования       +
    942				     строк	в буфере	ЭЛИ
    943				     ;_________________________
    944	E369			     e10:
    945	E369  58			     pop     ax	  ; получить считанные			       +
    946				     переключатели	ЭЛИ в AH
    947	E36A  50			     push    ax		     ; сохранить их
    948	E36B  B4 00			     mov     ah,0
    949	E36D  CD 10			     int     10h
    950	E36F  B8 7020			     mov     ax,7020h	     ; запись пробелов в	режиме   +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 20
1840v4.asm



    951				     реверса
    952	E372  2B FF			     sub     di,di	     ; установка начала области
    953	E374  B9 0028			     mov     cx,40	     ;
    954	E377  FC			     cld	 ; установить	признак направления  +
    955				     для уменьшения
    956	E378  F3> AB			     rep     stosw	     ; записать	в память
    957				     ;______________________
    958				     ;	  ТЕСТ.10
    959				     ;	       Осуществляет	проверку линий		       +
    960				     интерфейса ЭЛИ
    961				     ;______________________
    962	E37A  58			     pop     ax		     ; получить	считанные	       +
    963				     переключатели
    964	E37B  50			     push    ax		     ; сохранить их
    965	E37C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер подключен ?
    966	E37F  BA 03BA			     mov     dx,03bah	     ; уст адрес порта состояния +
    967				     ч/б дисплея
    968	E382  74 03			     je	     e11	     ; да - переход к	следующей     +
    969				     строке
    970	E384  BA 03DA			     mov     dx,03dah	     ; цветной адаптер подключен
    971				     ;
    972				     ;	     Тест строчной развертки
    973				     ;
    974	E387			     e11:
    975	E387  B4 08			     mov     ah,8
    976	E389			     e12:
    977	E389  2B C9			     sub     cx,cx
    978	E38B  EC		     e13:    in	     al,dx	 ;считывание порта состояния   +
    979				     контроллера СМ607
    980	E38C  22 C4			     and     al,ah	     ; проверка	строки
    981	E38E  75 04			     jnz     e14
    982	E390  E2 F9			     loop    e13
    983	E392  EB 13			     jmp     short e17	     ; переход к сообщению об       +
    984				     ошибке
    985	E394  2B C9		     e14:    sub     cx,cx
    986	E396  EC		     e15:    in	     al,dx     ;считывание порта	состояния     +
    987				     контроллера СМ607
    988	E397  22 C4			     and     al,ah
    989	E399  74 04			     jz	     e16
    990	E39B  E2 F9			     loop    e15
    991	E39D  EB 08			     jmp     short e17
    992				     ;
    993				     ;	     Следующий	строчный импульс
    994				     ;
    995	E39F			     e16:
    996	E39F  B1 03			     mov     cl,3	     ; получить	следующий бит      +
    997				     для контроля
    998	E3A1  D2 EC			     shr     ah,cl
    999	E3A3  75 E4			     jnz     e12
   1000	E3A5  EB 06			     jmp     short e18	     ; отобразить курсор на	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 21
1840v4.asm



   1001				     экране
   1002				     ;
   1003				     ;	     Сообщение	об ошибке конттроллера СМ607
   1004				     ;
   1005	E3A7			     e17:
   1006	E3A7  BA 0103			     mov     dx,103h
   1007	E3AA  E8 01D3			     call    err_beep
   1008				     ;
   1009				     ;	     Отображение курсора на	экране
   1010				     ;
   1011	E3AD			     e18:
   1012	E3AD  58			     pop     ax		     ; получить	считанные	       +
   1013				     переключатели	в AH
   1014	E3AE  B4 00			     mov     ah,0	     ; установить режим
   1015	E3B0  CD 10			     int     10h
   1016				     ;______________________
   1017				     ;	 ТЕСТ.11
   1018				     ;	      Дополнительный тест памяти
   1019				     ;______________________
   1020					     assume  ds:data
   1021	E3B2			     e19:
   1022	E3B2  B8 0040			     mov     ax,dat
   1023	E3B5  8E D8			     mov     ds,ax
   1024	E3B7  E4 62				     in	     al, port_c
   1025	E3B9  24 0F				     and     al, 0Fh
   1026	E3BB  FE C0				     inc     al
   1027	E3BD  B4 80				     mov     ah, 80h
   1028	E3BF  F6 E4				     mul     ah
   1029	E3C1  A3 0015r				     mov     ds:io_ram_size, ax	; Reserved in original IBM PC
   1030	E3C4  8B D0				     mov     dx, ax
   1031	E3C6  A3 0013r				     mov     ds:memory_size, ax
   1032	E3C9  81 3E 0072r 1234		     cmp     reset_flag,1234h
   1033	E3CF  74 2E			     je	     e22
   1034
   1035				     ;	 Проверка любой действительной памяти
   1036				     ;	 на считывание и запись
   1037
   1038	E3D1  E9 023F			     jmp     e190
   1039
   1040				     ;	 Печать адреса и эталона, если
   1041				     ;	 произошла ошибка данных
   1042
   1043
   1044	E3D4			     osh:
   1045	E3D4  8A E8			     mov     ch,al	     ;
   1046	E3D6  8A C6			     mov     al,dh	     ; получить	измененный адрес
   1047	E3D8  B1 04			     mov     cl,4
   1048	E3DA  D2 E8			     shr     al,cl	     ;
   1049	E3DC  E8 0023			     call    xlat_print_cod  ; преобразование и печать    +
   1050				     кода
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 22
1840v4.asm



   1051	E3DF  8A C6			     mov     al,dh
   1052	E3E1  24 0F			     and     al,0fh
   1053	E3E3  E8 001C			     call    xlat_print_cod  ; преобразование и печать    +
   1054				     кода
   1055	E3E6  8A C5			     mov     al,ch	     ; получить	следующий шаблон
   1056	E3E8  B1 04			     mov     cl,4
   1057	E3EA  D2 E8			     shr     al,cl
   1058	E3EC  E8 0013			     call    xlat_print_cod  ; преобразование и печать    +
   1059				     кода
   1060	E3EF  8A C5			     mov     al,ch	     ;
   1061	E3F1  24 0F			     and     al,0fh	     ;
   1062	E3F3  E8 000C			     call    xlat_print_cod  ; преобразование и печать    +
   1063				     кода
   1064	E3F6  BE E2DAr			     mov     si,offset e1    ; установить адрес поля	       +
   1065				     сообщения
   1066								     ; об ошибке
   1067	E3F9  B9 0004			     mov     cx,e1l	     ; получить	счетчик поля	       +
   1068				     сообщения	об ошибке
   1069	E3FC  E8 01F6			     call    p_msg	     ; печать ошибки
   1070	E3FF			     e22:
   1071	E3FF  EB 2C			     jmp     short tst12	     ; переход к следующему  +
   1072				     тесту
   1073	E401  90			     nop
   1074				     ;_____________________
   1075				     ;
   1076				     ;	 Процедура вывода на экран сообщения об       +
   1077				     ошибке в коде ASCII
   1078				     ;
   1079				     ;_______________________
   1080
   1081	E402			     xlat_print_cod proc near
   1082	E402  1E			     push    ds		     ; сохранить DS
   1083	E403  0E			     push    cs
   1084	E404  1F			     pop     ds
   1085	E405  BB E41Dr			     mov     bx,offset f4e   ; адрес таблицы кодов ASCII
   1086	E408  D7			     xlatb
   1087	E409  B4 0E			     mov     ah,14
   1088	E40B  B7 00			     mov     bh,0
   1089	E40D  CD 10			     int     10h
   1090	E40F  1F			     pop     ds
   1091	E410  C3			     ret
   1092	E411			     xlat_print_cod endp
   1093				     ;______________________
   1094				     ;	 Сброс системы - фаза 4
   1095				     ;______________________
   1096				     ;
   1097				     ;	 Коды сообщений об ошибках
   1098				     ;_______________________
   1099
   1100					     assume  cs:code,ds:data
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 23
1840v4.asm



   1101	E411  20 33 30 31	     f1	     db	     ' 301'
   1102	      =0004		     f1l     equ     4h		     ; сообщение клавиатуры
   1103	E415  31 33 31		     f2	     db	     '131'
   1104	      =0003		     f2l     equ     3h		     ; сообщение кассеты
   1105	E418  36 30 31		     f3	     db	     '601'
   1106	      =0003		     f3l     equ     3h		     ; сообщение НГМД
   1107
   1108	E41B			     f4	     label   word
   1109	E41B  0378			     dw	     378h
   1110	E41D			     f4e     label   word
   1111	E41D  30 31 32 33 34 35	36+  ascii_tbl db    '0123456789abcdef'
   1112	      37 38 39 61 62 63	64+
   1113	      65 66
   1114
   1115
   1116				     ;______________________
   1117				     ;	 ТЕСТ.12
   1118				     ;	 Тест клавиатуры
   1119				     ;______________________
   1120	E42D			     tst12:
   1121
   1122	E42D  B8 0040			     mov     ax,dat
   1123	E430  8E D8			     mov     ds,ax
   1124	E432  E8 0196			     call    kbd_reset	     ; Сброс клавиатуры
   1125	E435  B0 4D			     mov     al,4dh	     ; доступность клавиатуры
   1126	E437  E6 61			     out     port_b,al
   1127	E439  E3 27			     jcxz    f6		     ; нет -	печать ошибки
   1128	E43B  80 FB AA			     cmp     bl,0aah	     ; код сканирования 'AA' ?
   1129	E43E  75 22			     jne     f6		     ; нет -	печать ошибки
   1130
   1131				     ;	 Поиск "залипших" клавиш
   1132
   1133	E440  B0 CC			     mov     al,0cch	   ; сброс	клавиатуры, уст	       +
   1134				     синхронизации
   1135	E442  E6 61			     out     port_b,al
   1136	E444  B0 4C			     mov     al,4ch	   ; доступность клавиатуры
   1137	E446  E6 61			     out     port_b,al
   1138	E448  2B C9			     sub     cx,cx
   1139				     ;
   1140				     ;	     Ожидание прерывания клавиатуры
   1141				     ;
   1142	E44A			     f5:
   1143	E44A  E2 FE			     loop    f5		     ; задержка
   1144	E44C  E4 60			     in	     al,kbd_in	     ; получение кода		       +
   1145				     сканирования
   1146	E44E  3C 00			     cmp     al,0	     ; код сканирования равен 0 ?
   1147	E450  74 19			     je	     f7		     ; да - продолжение		       +
   1148				     тестирования
   1149	E452  8A E8			     mov     ch,al	     ; сохранить код		       +
   1150				     сканирования
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 24
1840v4.asm



   1151	E454  B1 04			     mov     cl,4
   1152	E456  D2 E8			     shr     al,cl
   1153	E458  E8 FFA7			     call    xlat_print_cod  ; преобразование и печать
   1154	E45B  8A C5			     mov     al,ch	     ; восстановить	код		       +
   1155				     сканирования
   1156	E45D  24 0F			     and     al,0fh	     ; выделить	младший байт
   1157	E45F  E8 FFA0			     call    xlat_print_cod  ; преобразование и печать
   1158	E462  BE E411r		     f6:     mov     si,offset f1    ; получить	адрес поля	       +
   1159				     сообщения	об
   1160								     ; ошибке
   1161	E465  B9 0004			     mov     cx,f1l	      ;	длина поля сообщения об    +
   1162				     ошибке
   1163	E468  E8 018A			     call    p_msg	      ;	вывод сообщения об ошибке+
   1164				     на экран
   1165
   1166				     ;	 Установка таблицы векторов прерываний
   1167
   1168	E46B			     f7:
   1169	E46B  2B C0			     sub     ax,ax
   1170	E46D  8E C0			     mov     es,ax
   1171	E46F  B9 0030			     mov     cx,24*2	     ; получить	счетчик векторов
   1172	E472  0E			     push    cs
   1173	E473  1F			     pop     ds
   1174	E474  BE FEF3r			     mov     si,offset vector_table   ;	адрес таблицы	       +
   1175				     векторов
   1176	E477  BF 0020r			     mov     di,offset int_ptr
   1177	E47A  FC			     cld
   1178	E47B  F3> A5			     rep     movsw
   1179				     ;______________________
   1180				     ;	 ТЕСТ.14
   1181				     ;	 Осуществляет проверку НГМД
   1182				     ;______________________
   1183	E47D  B8 0040			     mov     ax,dat	     ; уст. регистр DS
   1184	E480  8E D8			     mov     ds,ax
   1185	E482  B0 FC			     mov     al,0fch  ;	доступность прерываний	       +
   1186				     таймера и клавиатуры
   1187	E484  E6 21			     out     inta01,al
   1188	E486  A0 0010r			     mov     al,byte ptr equip_flag  ; получить	состояние     +
   1189				     переклю-
   1190									     ; чателей
   1191	E489  A8 01			     test    al,01h	     ; первоначальная загрузка с+
   1192				     НГМД ?
   1193	E48B  75 03			     jnz     f10	     ; да - проверка управления    +
   1194				     НГМД
   1195	E48D  E9 00ED			     jmp     f23
   1196	E490			     f10:
   1197	E490  B0 BC			     mov     al,0bch	     ; доступность прерываний с  +
   1198				     НГМД,
   1199	E492  E6 21			     out     inta01,al	     ; клавиатуры и таймера
   1200	E494  B4 00			     mov     ah,0	     ; сброс контроллера НГМД
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 25
1840v4.asm



   1201	E496  CD 13			     int     13h	     ; переход к сбросу НГМД
   1202	E498  F6 C4 FF			     test    ah,0ffh	     ; состояние верно ?
   1203	E49B  75 20			     jnz     f13	     ; нет -	сбой устройства
   1204
   1205				     ;	 Включить мотор устройства 0
   1206
   1207	E49D  BA 03F2			     mov     dx,03f2h	     ; получить	адрес адаптера    +
   1208				     НГМД
   1209	E4A0  B0 1C			     mov     al,1ch	     ; включить	мотор
   1210	E4A2  EE			     out     dx,al
   1211	E4A3  2B C9			     sub     cx,cx
   1212
   1213				     ;	  Ожидание включения мотора НГМД
   1214
   1215	E4A5			     f11:
   1216	E4A5  E2 FE			     loop    f11
   1217	E4A7			     f12:			     ; ожидание	мотора 1
   1218	E4A7  E2 FE			     loop    f12
   1219	E4A9  33 D2			     xor     dx,dx
   1220	E4AB  B5 01			     mov     ch,1	     ; выбор первой дорожки
   1221	E4AD  88 16 003Er		     mov seek_status,dl
   1222	E4B1  E8 09B3			     call    seek	     ; переход к рекалибровке      +
   1223				     НГМД
   1224	E4B4  72 07			     jc	     f13	     ; перейти в программу ошибок
   1225	E4B6  B5 22			     mov     ch,34	     ; выбор 34 дорожки
   1226	E4B8  E8 09AC			     call    seek
   1227	E4BB  73 09			     jnc     f14	     ; выключить мотор
   1228
   1229				     ;	  Ошибки НГМД
   1230
   1231	E4BD			     f13:
   1232	E4BD  BE E418r			     mov     si,offset f3    ; получить	адрес поля	       +
   1233				     сообщения	об
   1234								     ; ошибке
   1235	E4C0  B9 0003			     mov     cx,f3l	     ; установить счетчик
   1236	E4C3  E8 012F			     call    p_msg	     ; идти	в программу ошибок
   1237
   1238				     ;	 Выключить мотор устройства 0
   1239
   1240	E4C6			     f14:
   1241	E4C6  B0 0C			     mov     al,0ch	     ; выключить мотор		       +
   1242				     устройства 0
   1243	E4C8  BA 03F2			     mov     dx,03f2h	     ; уст адрес порта		       +
   1244				     управления НГМД
   1245	E4CB  EE			     out     dx,al
   1246
   1247				     ;	 Установка печати и базового адреса
   1248				     ;	 адаптера стыка С2, если устройства		       +
   1249				     подключены
   1250
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 26
1840v4.asm



   1251	E4CC			     f15:
   1252	E4CC  83 FD 00			     cmp     bp,0000h
   1253	E4CF  74 18			     jz	     dal
   1254	E4D1  BA 0003			     mov     dx,3
   1255	E4D4  E8 00A9			     call    err_beep
   1256	E4D7  BE E6A6r			     mov     si,offset f39
   1257	E4DA  B9 0017				     mov     cx, 23
   1258	E4DD  E8 0115			     call    p_msg
   1259	E4E0			     err_wait:
   1260	E4E0  B4 00			     mov     ah,0
   1261	E4E2  CD 16			     int     16h
   1262	E4E4  80 FC 3B			     cmp     ah,3bh
   1263	E4E7  75 F7			     jnz     err_wait
   1264	E4E9  2A E4		     dal:    sub     ah,ah
   1265	E4EB  A0 0049r			     mov     al,crt_mode
   1266	E4EE  CD 10			     int     10h
   1267	E4F0  C7 06 001Ar 001Er			     mov     ds:buffer_head, offset kb_buffer ;	ERROR -	Must be	approx.+
   1268				     6 lines upper, before int 16h
   1269	E4F6  C7 06 001Cr 001Er			     mov     ds:buffer_tail, offset kb_buffer ;	ERROR -	Must be	approx.+
   1270				     6 lines upper, before int 16h
   1271	E4FC  BD E41Br			     mov     bp,offset f4    ; таблица PRT_SRC
   1272	E4FF  BE 0000			     mov     si,0
   1273	E502			     f16:
   1274	E502  2E: 8B 56	00		     mov     dx,cs:[bp]	     ; получить	базовый адрес      +
   1275				     печати
   1276	E506  B0 AA			     mov     al,0aah	     ; записать	данные в	порт А
   1277	E508  EE			     out     dx,al
   1278	E509  2A C0			     sub     al,al
   1279	E50B  EC			     in	     al,dx	     ; считывание порта А
   1280	E50C  3C AA			     cmp     al,0aah	     ; шаблон данных тот	же
   1281	E50E  75 06			     jne     f17	 ; нет - проверка следующего      +
   1282				     устройства печати
   1283	E510  89 94 0008r		     mov     word ptr printer_base[si],dx  ;да-уст	базовый	       +
   1284				     адрес
   1285	E514  46			     inc     si		     ; вычисление следующего       +
   1286				     слова
   1287	E515  46			     inc     si
   1288	E516			     f17:
   1289	E516  45			     inc     bp		     ; указать следующий базовый+
   1290				     адрес
   1291	E517  45			     inc     bp
   1292	E518  81 FD E41Dr		     cmp     bp,offset f4e   ; все возможные адреса	       +
   1293				     проверены	?
   1294	E51C  75 E4			     jne     f16	     ; нет, к проверке следующего+
   1295				     адреса печати
   1296	E51E  BB 0000			     mov     bx,0
   1297	E521  BA 03FF			     mov     dx,3ffh	     ; проверка	подключения	       +
   1298				     адаптера 1	стыка С2
   1299	E524  B0 8A			     mov     al,8ah
   1300	E526  EE			     out     dx,al
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 27
1840v4.asm



   1301	E527  BA 02FF			     mov     dx,2ffh
   1302	E52A  EE			     out     dx,al
   1303	E52B  BA 03FC			     mov     dx,3fch
   1304	E52E  B0 AA			     mov     al,0aah
   1305	E530  EE			     out     dx,al
   1306	E531  42			     inc     dx
   1307	E532  33 C0				     xor     ax, ax
   1308	E534  EE				     out     dx, al
   1309	E535  EC			     in	     al,dx
   1310	E536  3C AA			     cmp     al,0aah
   1311	E538  75 08			     jnz     f18
   1312	E53A  C7 87 0000r 03F8		     mov  word ptr rs232_base[bx],3f8h	; уст адрес адаптера 1
   1313	E540  43			     inc     bx
   1314	E541  43			     inc     bx
   1315	E542  BA 02FC		     f18:    mov     dx,2fch	     ; проверка	подключения	       +
   1316				     адаптера 2	стыка С2
   1317	E545  B0 AA			     mov     al,0aah
   1318	E547  EE			     out     dx,al
   1319	E548  42			     inc     dx
   1320	E549  33 C0				     xor     ax, ax
   1321	E54B  EE				     out     dx, al
   1322	E54C  EC			     in	     al,dx
   1323	E54D  3C AA			     cmp     al,0aah
   1324	E54F  75 08			     jnz     f19
   1325	E551  C7 87 0000r 02F8		     mov  word ptr rs232_base[bx],2f8h	 ; уст адрес адаптера 2
   1326	E557  43			     inc     bx
   1327	E558  43			     inc     bx
   1328
   1329
   1330
   1331				     ;_____Установка EQUIP_FLAG для	инди-
   1332				     ;	   кации номера печати
   1333
   1334	E559			     f19:
   1335	E559  E9 1411				     jmp     f19a
   1336
   1337	E55C			     f19b:
   1338	E55C  D2 C8			     ror     al,cl
   1339	E55E  0A C3			     or	     al,bl
   1340	E560  A2 0011r			     mov     byte ptr equip_flag+1,al
   1341	E563  BA 0201			     mov     dx,201h
   1342	E566  EC			     in	     al,dx
   1343	E567  A8 0F			     test    al,0fh
   1344	E569  75 05			     jnz     f20			; проверка адаптера    +
   1345				     игр
   1346	E56B  80 0E 0011r 10		     or	     byte ptr equip_flag+1,16
   1347	E570			     f20:
   1348	E570  E9 140D				     jmp     f20a
   1349	E573  90				     nop
   1350
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 28
1840v4.asm



   1351	E574			     f20b:
   1352	E574  BA 0001				     mov     dx, 1
   1353	E577  E8 0006			     call    err_beep	     ; переход к подпрограмме      +
   1354				     звукового	сигнала
   1355	E57A			     f21:
   1356	E57A  E9 017A				     jmp     boot_strap
   1357
   1358	E57D			     f23:
   1359	E57D  E9 FF4C			     jmp     f15
   1360
   1361				     ;	  Установка длительности звукового сигнала
   1362
   1363					     assume  cs:code,ds:data
   1364	E580			     err_beep proc   near
   1365	E580  9C			     pushf		     ; сохранить признаки
   1366	E581  FA			     cli		     ; сброс признака разрешения+
   1367				     прерывания
   1368	E582  1E			     push    ds		     ; сохранить DS
   1369	E583  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
   1370	E586  8E D8			     mov     ds,ax
   1371	E588  0A F6			     or	     dh,dh
   1372	E58A  74 0B			     jz	     g3
   1373	E58C			     g1:			      ;	длинный звуковой	сигнал
   1374	E58C  B3 06			     mov     bl,6	      ;	счетчик для звуковых	       +
   1375				     сигналов
   1376	E58E  E8 0018			     call    beep	      ;	выполнить звуковой сигнал
   1377	E591  E2 FE		     g2:     loop    g2		      ;	задержка между звуковыми +
   1378				     сигналами
   1379	E593  FE CE			     dec     dh
   1380	E595  75 F5			     jnz     g1
   1381	E597			     g3:			      ;	короткий звуковой сигнал
   1382	E597  B3 01			     mov     bl,1   ; счетчик для короткого		       +
   1383				     звукового	сигнала
   1384	E599  E8 000D			     call    beep	     ; выполнить звуковой сигнал
   1385	E59C  E2 FE		     g4:     loop    g4		     ; задержка	между звуковыми  +
   1386				     сигналами
   1387	E59E  FE CA			     dec     dl		     ;
   1388	E5A0  75 F5			     jnz     g3		     ; выполнить
   1389	E5A2  E2 FE		     g5:     loop    g5		     ; длинная задержка перед      +
   1390				     возвратом
   1391	E5A4  E2 FE		     g6:     loop    g6
   1392	E5A6  1F			     pop     ds		     ; восстановление DS
   1393	E5A7  9D			     popf		; восстановление			       +
   1394				     первоначальных признаков
   1395	E5A8  C3			     ret		     ; возврат к программе
   1396	E5A9			     err_beep	     endp
   1397
   1398				     ;	 Подпрограмма звукового сигнала
   1399
   1400	E5A9			     beep    proc    near
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 29
1840v4.asm



   1401	E5A9  B0 B6			     mov     al,10110110b    ; таймер 2,младший и	старший +
   1402				     счет-
   1403								     ; чики, двоичный счет
   1404	E5AB  E6 43			     out     timer+3,al	     ; записать	в регистр режима
   1405	E5AD  B8 045E			     mov     ax,45eh	     ; делитель
   1406	E5B0  E6 42			     out     timer+2,al	     ; записать	младший счетчик
   1407	E5B2  8A C4			     mov     al,ah
   1408	E5B4  E6 42			     out     timer+2,al	     ; записать	старший счетчик
   1409	E5B6  E4 61			     in	     al,port_b	     ; получить	текущее		       +
   1410				     состояние	порта
   1411	E5B8  8A E0			     mov     ah,al	     ; сохранить это состояние
   1412	E5BA  0C 03			     or	     al,03	     ; включить	звук
   1413	E5BC  E6 61			     out     port_b,al
   1414	E5BE  2B C9			     sub     cx,cx	     ; установить счетчик	       +
   1415				     ожидания
   1416	E5C0  E2 FE		     g7:     loop    g7		     ; задержка	перед		       +
   1417				     выключением
   1418	E5C2  FE CB			     dec     bl		     ; задержка	счетчика	       +
   1419				     закончена	?
   1420	E5C4  75 FA			     jnz     g7	     ; нет -	продолжение подачи	       +
   1421				     звукового	сигнала
   1422	E5C6  8A C4			     mov     al,ah	     ; восстановить	значение       +
   1423				     порта
   1424	E5C8  E6 61			     out     port_b,al
   1425	E5CA  C3			     ret		     ; возврат к программе
   1426	E5CB			     beep    endp
   1427				     ;_____________________
   1428				     ;	 Эта	процедура вызывает программный
   1429				     ;	 сброс клавиатуры
   1430				     ;_____________________
   1431	E5CB			     kbd_reset proc  near
   1432	E5CB  B0 0C			     mov     al,0ch	; установить низкий уровень     +
   1433				     синхронизации
   1434	E5CD  E6 61			     out     port_b,al	     ; записать	порт B
   1435	E5CF  B9 7530			     mov     cx,30000	     ; время длительности	       +
   1436				     низкого уровня
   1437	E5D2  E2 FE		     g8:     loop    g8
   1438	E5D4  B0 CC			     mov     al,0cch	     ; уст CLK
   1439	E5D6  E6 61			     out     port_b,al
   1440	E5D8			     sp_test:
   1441	E5D8  B0 4C			     mov     al,4ch	     ; уст высокий уровень	       +
   1442				     синхронизации
   1443	E5DA  E6 61			     out     port_b,al
   1444	E5DC  B0 FD			     mov     al,0fdh	     ; разрешить прерывания	       +
   1445				     клавиатуры
   1446	E5DE  E6 21			     out     inta01,al	     ; записать	регистр масок
   1447	E5E0  FB			     sti		     ; уст признака разрешения    +
   1448				     прерывания
   1449	E5E1  B4 00			     mov     ah,0
   1450	E5E3  2B C9			     sub     cx,cx	     ; уст счетчика ожидания	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 30
1840v4.asm



   1451				     прерываний
   1452	E5E5  F6 C4 FF		     g9:     test    ah,0ffh	     ; прерывание клавиатуры       +
   1453				     возникло ?
   1454	E5E8  75 02			     jnz     g10   ;  да - считывание возвращенного   +
   1455				     кода сканирования
   1456	E5EA  E2 F9			     loop    g9		     ; нет -	цикл ожидания
   1457	E5EC  E4 60		     g10:    in	     al,port_a	 ; считать код сканирования      +
   1458				     клавиатуры
   1459	E5EE  8A D8			     mov     bl,al	     ; сохранить этот код
   1460	E5F0  B0 CC			     mov     al,0cch	     ; очистка клавиатуры
   1461	E5F2  E6 61			     out     port_b,al
   1462	E5F4  C3			     ret		     ; возврат к программе
   1463	E5F5			     kbd_reset	     endp
   1464				     ;_____________________
   1465				     ;	 Эта	программа выводит на экран дисплея
   1466				     ;	 сообщения об ошибках
   1467				     ;
   1468				     ;	   Необходимые условия:
   1469				     ;	 SI = адрес поля сообщения об ошибке
   1470				     ;	 CX = длина поля сообщения об ошибке
   1471				     ;	 Максимальный размер передаваемой
   1472				     ;	 информации -	36 знаков
   1473				     ;
   1474				     ;______________________
   1475	E5F5			     p_msg   proc    near
   1476	E5F5  B8 0040			     mov     ax,dat
   1477	E5F8  8E D8			     mov     ds,ax
   1478	E5FA  8B EE			     mov     bp,si
   1479	E5FC			     g12:
   1480	E5FC  2E: 8A 04			     mov     al,cs:[si]	     ; поместить знак в AL
   1481	E5FF  46			     inc     si		     ; указать следующий знак
   1482	E600  B7 00			     mov     bh,0	     ; установить страницу
   1483	E602  B4 0E			     mov     ah,14	     ; уст функцию записи знака
   1484	E604  CD 10			     int     10h	     ; и записать знак
   1485	E606  E2 F4			     loop    g12     ; продолжать до записи всего       +
   1486				     сообщения
   1487	E608  B8 0E0D			     mov     ax,0e0dh	; переместить курсор в начало  +
   1488				     строки
   1489	E60B  CD 10			     int     10h
   1490	E60D  B8 0E0A			     mov     ax,0e0ah  ; переместить	курсор на	       +
   1491				     следующую	строку
   1492	E610  CD 10			     int     10h
   1493	E612  C3			     ret
   1494	E613			     p_msg   endp
   1495
   1496
   1497	E613			     e190:
   1498	E613  1E				     push    ds
   1499	E614  B8 0010				     mov     ax, 16
   1500	E617  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 31
1840v4.asm



   1501	E61D  75 03				     jnz     e20a
   1502	E61F  E9 FDDD				     jmp     e22
   1503
   1504	E622			     e20a:
   1505	E622  B8 0010				     mov     ax, 16
   1506	E625  EB 25				     jmp     short prt_siz
   1507
   1508	E627			     e20b:
   1509	E627  8B 1E 0013r			     mov     bx, ds:memory_size
   1510	E62B  83 EB 10				     sub     bx, 16
   1511	E62E  B1 04				     mov     cl, 4
   1512	E630  D3 EB				     shr     bx, cl
   1513	E632  8B CB				     mov     cx, bx
   1514	E634  BB 0400				     mov     bx, 400h
   1515
   1516	E637			     e20c:
   1517	E637  8E DB				     mov     ds, bx
   1518
   1519	E639  8E C3				     mov     es, bx
   1520	E63B  81 C3 0400			     add     bx, 400h
   1521	E63F  52				     push    dx
   1522	E640  51				     push    cx
   1523	E641  53				     push    bx
   1524	E642  50				     push    ax
   1525	E643  E8 F9D4				     call    stgtst
   1526	E646  75 41				     jnz     e21a
   1527	E648  58				     pop     ax
   1528	E649  05 0010				     add     ax, 16
   1529
   1530	E64C			     prt_siz:
   1531	E64C  50				     push    ax
   1532	E64D  BB 000A				     mov     bx, 10
   1533	E650  B9 0003				     mov     cx, 3
   1534
   1535	E653			     decimal_loop:
   1536	E653  33 D2				     xor     dx, dx
   1537	E655  F7 F3				     div     bx
   1538	E657  80 CA 30				     or	     dl, 30h
   1539	E65A  52				     push    dx
   1540	E65B  E2 F6				     loop    decimal_loop
   1541	E65D  B9 0003				     mov     cx, 3
   1542
   1543	E660			     prt_dec_loop:
   1544	E660  58				     pop     ax
   1545	E661  E8 0034				     call    prt_hex
   1546	E664  E2 FA				     loop    prt_dec_loop
   1547	E666  B9 0007				     mov     cx, 7
   1548	E669  BE E69Fr				     mov     si, offset	e300 ; " Kb OK\r"
   1549
   1550	E66C			     kb_ok:
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 32
1840v4.asm



   1551	E66C  2E: 8A 04				     mov     al, cs:[si]
   1552	E66F  46				     inc     si
   1553	E670  E8 0025				     call    prt_hex
   1554	E673  E2 F7				     loop    kb_ok
   1555	E675  58				     pop     ax
   1556	E676  3D 0010				     cmp     ax, 16
   1557	E679  74 AC				     jz	     e20b
   1558	E67B  5B				     pop     bx
   1559	E67C  59				     pop     cx
   1560	E67D  5A				     pop     dx
   1561	E67E  E2 B7				     loop    e20c
   1562	E680  B0 0A				     mov     al, 10
   1563	E682  E8 0013				     call    prt_hex
   1564	E685  1F				     pop     ds
   1565
   1566	E686  E9 FD76				     jmp     e22
   1567
   1568	E689			     e21a:
   1569	E689  5B				     pop     bx
   1570	E68A  83 C4 06				     add     sp, 6
   1571	E68D  8C DA				     mov     dx, ds
   1572	E68F  1F				     pop     ds
   1573	E690  1E				     push    ds
   1574	E691  89 1E 0013r			     mov     ds:memory_size, bx
   1575	E695  E9 FD3C				     jmp     osh
   1576
   1577	E698			     prt_hex	     proc near
   1578	E698  B4 0E				     mov     ah, 14
   1579	E69A  B7 00				     mov     bh, 0
   1580	E69C  CD 10				     int     10h
   1581	E69E  C3				     retn
   1582	E69F			     prt_hex	     endp
   1583
   1584	E69F  20 4B 62 20 4F 4B	0D   e300	     db	' Kb OK',0Dh
   1585	E6A6  45 52 52 4F 52 20	28+  f39	     db	'ERROR (RESUME="F1" KEY)'
   1586	      52 45 53 55 4D 45	3D+
   1587	      22 46 31 22 20 4B	45+
   1588	      59 29
   1589
   1590				     ;	 Таблица	кодов русских больших букв	       +
   1591				     (заглавных)
   1592
   1593	E6BD			     rust2   label   byte
   1594	E6BD  1B 21 40 23 24 25	5E+	     db	     1bh,'!@#$',37,05eh,'&*()_+'
   1595	      26 2A 28 29 5F 2B
   1596
   1597
   1598	E6CA  08 00			     db	     08h,0
   1599	E6CC  B9 C6 C3 BA B5 BD	B3+	     db	     0b9h,0c6h,0c3h,0bah,0b5h,0bdh,0b3h,0c8h
   1600	      C8
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 33
1840v4.asm



   1601
   1602	E6D4  C9 B7 B6 CD 0D FF	C4+	     db	     0c9h,0b7h,0b6h,0cdh,0dh,-1,0c4h,0cbh
   1603	      CB
   1604
   1605	E6DC  B2 B0 BF C0 BE BB	B4+	     db	     0b2h,0b0h,0bfh,0c0h,0beh,0bbh,0b4h,27h
   1606	      27
   1607
   1608	E6E4  22 B1 CE 7C CF C7	C1+	     db	     '"',0b1h,0ceh,7ch,0cfh,0c7h,0c1h,0bch,0b8h
   1609	      BC B8
   1610
   1611	E6ED  C2 CC 3C 3E 3F C5	00+	     db	     0c2h,0cch,'<>?',0c5h,000,-1,' ',0cah
   1612	      FF 20 CA
   1613
   1614
   1615
   1616
   1617				     ;___int 19_____________
   1618				     ;	 Программа загрузки системы с НГМД
   1619				     ;
   1620				     ; Программа считывает содержимое дорожки 0     +
   1621				     сектора 1 в
   1622				     ; ячейку boot_locn (адрес 7C00,сегмент 0)
   1623				     ;	 Если НГМД отсутствует или произошла	       +
   1624				     аппаратная ошибка,
   1625				     ; устанавливается прерывание типа INT	18H,	       +
   1626				     которое вызывает
   1627				     ; выполнение программ тестирования и	       +
   1628				     инициализации
   1629				     ; системы
   1630				     ;
   1631				     ;_________________________
   1632					     assume  cs:code,ds:data
   1633	E6F7			     boot_strap	proc near
   1634
   1635	E6F7  FB			     sti		   ; установить признак	       +
   1636				     разрешения прерывания
   1637	E6F8  B8 0040			     mov     ax,dat	   ; установить адресацию
   1638	E6FB  8E D8			     mov     ds,ax
   1639	E6FD  A1 0010r			     mov     ax,equip_flag ; получить состояние	       +
   1640				     переключателей
   1641	E700  A8 01			     test    al,1	   ; опрос	первоначальной	       +
   1642				     загрузки
   1643	E702  74 23			     jz	     h3
   1644
   1645				     ;	 Система	загружается с НГМД
   1646				     ;	 CX содержит счетчик повторений
   1647
   1648	E704  B9 0004			     mov     cx,4	     ; установить счетчик	       +
   1649				     повторений
   1650	E707			     h1:			     ; первоначальная загрузка
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 34
1840v4.asm



   1651	E707  51			     push    cx		     ; сохранить счетчик	       +
   1652				     повторений
   1653	E708  B4 00			     mov     ah,0	     ; сброс НГМД
   1654	E70A  CD 13			     int     13h
   1655	E70C  72 14			     jc	     h2		     ; если	ошибка,повторить
   1656	E70E  B4 02			     mov     ah,2	     ; считать сектор 1
   1657	E710  BB 0000			     mov     bx,0	     ;
   1658	E713  8E C3			     mov     es,bx
   1659	E715  BB 7C00r			     mov     bx,offset boot_locn
   1660	E718  BA 0000			     mov     dx,0	     ;
   1661	E71B  B9 0001			     mov     cx,1	     ; сектор 1 ,	дорожка 0
   1662	E71E  B0 01			     mov     al,1	     ; считывание первого	       +
   1663				     сектора
   1664	E720  CD 13			     int     13h
   1665	E722  59		     h2:     pop     cx		     ; восстановить	счетчик	       +
   1666				     повторений
   1667	E723  73 05			     jnc     h4		     ; уст CF при	безуспешном	       +
   1668				     считывании
   1669	E725  E2 E0			     loop    h1		     ; цикл	повторения
   1670
   1671				     ;	 Загрузка с НГМД недоступна
   1672
   1673	E727			     h3:			     ; кассета
   1674	E727  E9 F985			     jmp     err01   ; отсутствует дискет загрузки
   1675
   1676				     ;	 Загрузка завершилась успешно
   1677
   1678	E72A			     h4:				     ;
   1679	E72A  EA 00007C00sr			     jmp far ptr boot_locn   ; db 0EAh,	00h, 7Ch, 00h, 00h   ;	       +
   1680				     (0000:7C00)   ; ###Gleb###
   1681
   1682	E72F			     boot_strap	     endp
   1683				     ;--------------------
   1684				     ;	 Эта	программа посылает байт в	контроллер   +
   1685				     адаптера НГМД
   1686				     ; после проверки корректности управления и    +
   1687				     готовности
   1688				     ; контроллера.
   1689				     ;	 Программа ожидает байт состояния		       +
   1690				     определенное время
   1691				     ; и проверяет готовность НГМД к работе.
   1692				     ;
   1693				     ;	 ВВОД   (AH) - выводимый байт
   1694				     ;
   1695				     ;	 ВЫВОД  CY=0 - успешно,
   1696				     ;		CY=1 - не успешно.Состояние
   1697				     ;		НГМД анализируется.
   1698				     ;-----------------------
   1699	E72F			     nec_output	proc near
   1700	E72F  52			     push    dx		     ; сохранить регистры
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 35
1840v4.asm



   1701	E730  51			     push    cx
   1702	E731  BA 03F4			     mov     dx,03f4h	     ; состояние порта
   1703	E734  33 C9			     xor     cx,cx	     ; счетчик времени вывода
   1704	E736			     j23:
   1705	E736  EC			     in	     al,dx	     ; получить	состояние
   1706	E737  A8 40			     test    al,040h	     ; проверка	управляющих бит
   1707	E739  74 0C			     jz	     j25	     ; биты	управления		       +
   1708				     нормальные
   1709	E73B  E2 F9			     loop    j23
   1710	E73D			     j24:
   1711	E73D  80 0E 0041r 80		     or	     diskette_status,time_out
   1712	E742  59			     pop     cx
   1713	E743  5A			     pop     dx	     ; установить код ошибки	и	       +
   1714				     восстановить регистры
   1715	E744  58			     pop     ax		     ; адрес возврата
   1716	E745  F9			     stc		     ;
   1717	E746  C3			     ret
   1718
   1719	E747			     j25:
   1720	E747  33 C9			     xor     cx,cx	     ; обнуление счетчика
   1721	E749			     j26:
   1722	E749  EC			     in	     al,dx	     ; получить	состояние
   1723	E74A  A8 80			     test    al,080h	     ; проверка	готовности
   1724	E74C  75 04			     jnz     j27	     ; да - идти на выход
   1725	E74E  E2 F9			     loop    j26	     ; повторить
   1726	E750  EB EB			     jmp     short j24	     ; ошибка состояния
   1727	E752			     j27:			     ; выход
   1728	E752  8A C4			     mov     al,ah	     ; получить	байт
   1729	E754  BA 03F5			     mov     dx,03f5h	     ; переслать байт данных	в     +
   1730				     порт
   1731	E757  EE			     out     dx,al
   1732	E758  59			     pop     cx		     ; восстановить	регистры
   1733	E759  5A			     pop     dx
   1734	E75A  C3			     ret		     ;
   1735	E75B			     nec_output	     endp
   1736
   1737				     ;___int 16_________________
   1738				     ;
   1739				     ;	 Программа поддержки клавиатуры
   1740				     ;
   1741				     ;	 Эта	программа считывает в регистр
   1742				     ; AX код сканирования клавиши и код
   1743				     ; ASCII из буфера клавиатуры.
   1744				     ;
   1745				     ;	 Программа выполняет три функции, код
   1746				     ; которых задается в регистре AH:
   1747				     ;
   1748				     ;	  AH=0 - считать	следующий символ
   1749				     ;		  из буфера.При выходе	код
   1750				     ;		  сканирования в AH,код
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 36
1840v4.asm



   1751				     ;		  ASCII	в AL.
   1752				     ;	 AH=1 -	установить ZF, если код
   1753				     ;		  ASCII	прочитан:
   1754				     ;
   1755				     ;		  ZF=0 - буфер заполнен,
   1756				     ;		  ZF=1 - буфер пустой.
   1757				     ;	 При	выходе в	AX помещен адрес вершины	       +
   1758				     буфера клавиатуры.
   1759				     ;	 AH=2 -	возврат текущего	состояния в регистр AL
   1760				     ;		   из	постоянно распределенной	области +
   1761				     памяти с
   1762				     ;		адресом 00417H.
   1763				     ;
   1764				     ;	 При	выполнении программ клавиатуры	       +
   1765				     используются флажки,
   1766				     ; которые устанавливаются в	постоянно	       +
   1767				     распределенной области
   1768				     ; памяти по адресам	00417H и 00418H и имеют значение:
   1769				     ;	 00417H
   1770				     ;	       0 - правое	переключение регистра;
   1771				     ;	       1 - левое переключение регистра;
   1772				     ;		  2 - УПР;
   1773				     ;	       3 - ДОП;
   1774				     ;	       4 - ФСД;
   1775				     ;	       5 - ЦИФ;
   1776				     ;	       6 - ФПБ;
   1777				     ;	       7 - ВСТ;
   1778				     ;	 00418H
   1779				     ;	       0 - состояние клавиши ЛАТ между нажатием+
   1780				     и	отжатием;
   1781				     ;	       1 - ЛАТ;
   1782				     ;	       2 - Р/Л;
   1783				     ;	       3 - пауза;
   1784				     ;	       4 - ФСД;
   1785				     ;	       5 - ЦИФ;
   1786				     ;	       6 - ФПБ;
   1787				     ;	       7 - ВСТ.
   1788				     ;
   1789				     ;	 Флажки, соответствующие разрядам 4-7	       +
   1790				     постоянно	распределенной
   1791				     ; области памяти с адресом 00417H,			       +
   1792				     устанавливаются по нажатию
   1793				     ; клавиш ВСТ, ФПБ, ЦИФ, ФСД и сохраняют свои      +
   1794				     значения до сле-
   1795				     ; дующего нажатия соответствующей клавиши.
   1796				     ; Одноименные флажки, соответствующие	       +
   1797				     разрядам 4-7 постоянно
   1798				     ; распределенной области памяти	с адресом      +
   1799				     00418H, и	флажки
   1800				     ; ДОП, УПР, левое переключение регистра,	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 37
1840v4.asm



   1801				     правое переключение
   1802				     ; регистра, Р/Л устанавливаются по нажатию      +
   1803				     клавиш и сбрасываются
   1804				     ; по отжатию.
   1805				     ;
   1806				     ;------------------------------
   1807					     assume  cs:code,ds:data
   1808
   1809
   1810	E75B			     k4	     proc    near
   1811	E75B  83 C3 02			     add     bx,2
   1812	E75E  81 FB 003Er		     cmp  bx, offset kb_buffer_end	      ;	конец буфера	?
   1813	E762  75 03			     jne     k5			      ;	нет - продолжить
   1814	E764  BB 001Er			     mov     bx, offset	kb_buffer     ;	да - уст начала буфера
   1815	E767			     k5:
   1816	E767  C3			     ret
   1817	E768			     k4	     endp
   1818
   1819	E768			     error_beep	proc near
   1820	E768  50			     push    ax
   1821	E769  53			     push    bx
   1822	E76A  51			     push    cx
   1823	E76B  BB 00C0			     mov     bx,0c0h
   1824	E76E  E4 61			     in	     al,kb_ctl
   1825	E770  50			     push    ax
   1826	E771			     k65:
   1827	E771  24 FC			     and     al,0fch
   1828	E773  E6 61			     out     kb_ctl,al
   1829	E775  B9 0048			     mov     cx,48h
   1830	E778  E2 FE		     k66:    loop    k66
   1831	E77A  0C 02			     or	     al,2
   1832	E77C  E6 61			     out     kb_ctl,al
   1833	E77E  B9 0048			     mov     cx,48h
   1834	E781  E2 FE		     k67:    loop    k67
   1835	E783  4B			     dec     bx
   1836	E784  75 EB			     jnz     k65
   1837	E786  58			     pop     ax
   1838	E787  E6 61			     out     kb_ctl,al
   1839	E789  59			     pop     cx
   1840	E78A  5B			     pop     bx
   1841	E78B  58			     pop     ax
   1842	E78C  C3			     ret
   1843	E78D			     error_beep	     endp
   1844
   1845				     ;---
   1846
   1847	E78D			     k54:
   1848	E78D  3C 3B			     cmp     al,59
   1849	E78F  72 05			     jb	     k55
   1850	E791  B0 00			     mov     al,0
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 38
1840v4.asm



   1851	E793  EB 0F				     jmp     short k57
   1852	E795  90				     nop
   1853
   1854	E796  BB E8DCr		     k55:    mov     bx,offset k10
   1855	E799  F6 06 0018r 02		     test    kb_flag_1,lat
   1856	E79E  74 57			     jz	     k99
   1857
   1858				     ;---
   1859
   1860	E7A0			     k56:
   1861	E7A0  FE C8			     dec     al
   1862	E7A2  2E: D7			     xlat    cs:k11
   1863
   1864				     ;---
   1865
   1866	E7A4			     k57:
   1867	E7A4  3C FF			     cmp     al,-1
   1868	E7A6  74 2A			     je	     k59
   1869	E7A8  80 FC FF			     cmp     ah,-1
   1870	E7AB  74 25			     je	     k59
   1871				     ;---
   1872
   1873	E7AD			     k58:
   1874	E7AD  F6 06 0017r 40		     test    kb_flag,caps_state
   1875	E7B2  74 2B			     jz	     k61
   1876
   1877				     ;---
   1878	E7B4  F6 06 0018r 02		     test    kb_flag_1,lat
   1879	E7B9  75 03			     jnz     k88
   1880	E7BB  E9 1175			     jmp     k89
   1881	E7BE			     k88:
   1882	E7BE  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   1883	E7C3  74 10			     jz	     k60
   1884
   1885				     ;----------
   1886
   1887	E7C5  3C 41			     cmp     al,'A'
   1888	E7C7  72 16			     jb	     k61
   1889	E7C9  3C 5A			     cmp     al,'Z'
   1890	E7CB  77 12			     ja	     k61
   1891	E7CD  04 20			     add     al,'a'-'A'
   1892	E7CF  EB 0E				     jmp     short k61
   1893	E7D1  90				     nop
   1894
   1895	E7D2			     k59:
   1896	E7D2  E9 0316			     jmp     k26
   1897
   1898
   1899	E7D5			     k60:
   1900	E7D5  3C 61			     cmp     al,'a'
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 39
1840v4.asm



   1901	E7D7  72 06			     jb	     k61
   1902	E7D9  3C 7A			     cmp     al,'z'
   1903	E7DB  77 02			     ja	     k61
   1904	E7DD  2C 20			     sub     al,'a'-'A'
   1905
   1906	E7DF			     k61:
   1907	E7DF  8B 1E 001Cr		     mov     bx,buffer_tail
   1908	E7E3  8B F3			     mov     si,bx
   1909	E7E5  E8 FF73			     call   k4
   1910	E7E8  3B 1E 001Ar		     cmp     bx,buffer_head
   1911	E7EC  74 0E			     je	     k62
   1912	E7EE  89 04			     mov     word ptr [si],ax
   1913	E7F0  89 1E 001Cr		     mov     buffer_tail,bx
   1914	E7F4  E9 02F4			     jmp     k26
   1915	E7F7  BB F8CBr		     k99:    mov     bx,offset rust
   1916	E7FA  EB A4			     jmp k56
   1917
   1918				     ;---
   1919
   1920	E7FC			     k62:
   1921	E7FC  E8 FF69			     call    error_beep
   1922	E7FF  E9 02E9			     jmp     k26
   1923
   1924				     ;---
   1925
   1926	E802			     k63:
   1927	E802  2C 3B			     sub     al,59
   1928	E804			     k64:
   1929	E804  2E: D7			     xlat    cs:k9
   1930	E806  8A E0			     mov     ah,al
   1931	E808  B0 00			     mov     al,0
   1932	E80A  EB 98				     jmp     short k57
   1933	E80C  22*(00)				     db	34 dup(0)
   1934
   1935				     ;---
   1936
   1937	E82E			     keyboard_io proc	     far
   1938	E82E  FB			     sti		     ;
   1939	E82F  1E			     push    ds
   1940	E830  53			     push    bx
   1941	E831  BB 0040			     mov     bx,dat
   1942	E834  8E DB			     mov     ds,bx	     ; установить сегмент данных
   1943	E836  0A E4			     or	     ah,ah	     ; AH=0
   1944	E838  74 0B			     jz	     k1		  ; переход к считыванию	       +
   1945				     следующего символа
   1946	E83A  FE CC			     dec     ah		     ; AH=1
   1947	E83C  74 20			     jz	     k2		  ; переход к считыванию кода    +
   1948				     ASCII
   1949	E83E  FE CC			     dec     ah			  ; AH=2
   1950	E840  74 2D			     jz	     k3		  ; переход к получению байта    +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 40
1840v4.asm



   1951				     состояния
   1952	E842  5B			     pop     bx			  ; восстановить регистр
   1953	E843  1F			     pop     ds
   1954	E844  CF			     iret
   1955
   1956				     ;	 Считывание кода сканирования	и кода ASCII из +
   1957				     буфера клавиатуры
   1958				     ;
   1959	E845			     k1:
   1960	E845  FB			     sti	     ; уст признака разрешения	       +
   1961				     прерывания
   1962	E846  90			     nop		     ; задержка
   1963	E847  FA			     cli	     ; сброс признака разрешения	       +
   1964				     прерывания
   1965	E848  8B 1E 001Ar		     mov     bx,buffer_head  ; уст вершину буфера по	       +
   1966				     чтению
   1967	E84C  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   1968				     буфера по записи
   1969	E850  74 F3			     jz	     k1
   1970	E852  8B 07			     mov     ax,word ptr [bx] ;	получить код			       +
   1971				     сканирования и код	ASCII
   1972	E854  E8 FF04			     call    k4
   1973	E857  89 1E 001Ar		     mov     buffer_head,bx  ; запомнить вершину буфера  +
   1974				     по чтению
   1975	E85B  5B			     pop     bx		     ; восстановить	регистр
   1976	E85C  1F			     pop     ds		     ; восстановить	сегмент
   1977	E85D  CF			     iret		     ; возврат к программе
   1978
   1979				     ;	 Считать	код ASCII
   1980
   1981	E85E			     k2:
   1982	E85E  FA			     cli	     ; Сброс признака разрешения	       +
   1983				     прерывания
   1984	E85F  8B 1E 001Ar		     mov     bx,buffer_head  ; получить	указатель	       +
   1985				     вершины буфера
   1986								     ; по чтению
   1987	E863  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   1988				     буфера по записи
   1989	E867  8B 07			     mov     ax,word ptr [bx]
   1990	E869  FB			     sti		     ; уст признак разрешения      +
   1991				     прерывания
   1992	E86A  5B			     pop     bx		     ; восстановить	регистр
   1993	E86B  1F			     pop     ds		     ; восстановить	сегмент
   1994	E86C  CA 0002			     ret     2
   1995
   1996				     ;	 Получение младшего байта	состояния	       +
   1997				     (флажков)
   1998
   1999	E86F			     k3:
   2000	E86F  A0 0017r			     mov     al,kb_flag	     ; получить	младший байт	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 41
1840v4.asm



   2001				     состояния	    на
   2002	E872  5B			     pop     bx		     ; восстановить	регистр
   2003	E873  1F			     pop     ds		     ; восстановить	сегмент
   2004	E874  CF			     iret		     ; возврат к программе
   2005	E875			     keyboard_io     endp
   2006
   2007				     ;	 Таблица	кодов сканирования управляющих     +
   2008				     клавиш
   2009
   2010	E875			     k6	     label   byte
   2011	E875  52			     db	     ins_key
   2012	E876  56 45 46 38 1D		     db	     caps_key,num_key,scroll_key,alt_key,ctl_key
   2013	E87B  54 55			     db	     left_key,right_key
   2014	E87D  58			     db	     inv_key_l
   2015	E87E  5A 57 5B			     db	     inv_key_r,lat_key,rus_key
   2016	      =000C		     k6l     equ     0ch
   2017
   2018				     ;	 Таблица	масок нажатых управляющих клавиш
   2019
   2020	E881			     k7	     label   byte
   2021	E881  80			     db	     ins_shift
   2022	E882  40 20 10 08 04		     db	     caps_shift,num_shift,scroll_shift,alt_shift,ctl_shift
   2023	E887  02 01			     db	     left_shift,right_shift
   2024
   2025
   2026				     ;	 Таблица	кодов сканирования при нажатой      +
   2027				     клавише УПР для
   2028				     ; кодов сканирования клавиш	меньше 59
   2029
   2030	E889  1B FF 00 FF FF FF	1E+  k8	     db	     27,-1,0,-1,-1,-1,30,-1
   2031	      FF
   2032
   2033	E891  FF FF FF 1F FF 7F	FF+	     db	     -1,-1,-1,31,-1,127,-1,17
   2034	      11
   2035
   2036	E899  17 05 12 14 19 15	09+	     db	     23,5,18,20,25,21,9,15
   2037	      0F
   2038
   2039	E8A1  10 1B 1D 0A FF 01	13	     db	     16,27,29,10,-1,1,19
   2040
   2041	E8A8  04 06 07 08 0A 0B	0C+	     db	     4,6,7,8,10,11,12,-1,-1
   2042	      FF FF
   2043
   2044	E8B1  FF FF 1C 1A 18 03	16+	     db	     -1,-1,28,26,24,3,22,2
   2045	      02
   2046
   2047	E8B9  0E 0D FF FF FF FF	FF+	     db	     14,13,-1,-1,-1,-1,-1,-1
   2048	      FF
   2049
   2050	E8C1  20 FF			     db	     ' ',-1
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 42
1840v4.asm



   2051
   2052				     ;	 Таблица	кодов сканирования при нажатой      +
   2053				     клавише УПР для
   2054				     ; кодов сканирования клавиш	больше 59
   2055	E8C3			     k9	     label   byte
   2056	E8C3  5E 5F 60 61 62 63	64+	     db	     94,95,96,97,98,99,100,101
   2057	      65
   2058
   2059	E8CB  66 67 FF FF 77 FF	84+	     db	     102,103,-1,-1,119,-1,132,-1
   2060	      FF
   2061
   2062	E8D3  73 FF 74 FF 75 FF	76+	     db	     115,-1,116,-1,117,-1,118,-1
   2063	      FF
   2064
   2065	E8DB  FF			     db	     -1
   2066
   2067				     ;	 Таблица	кодов ASCII нижнего	регистра	       +
   2068				     клавиатуры
   2069
   2070	E8DC			     k10     label   byte
   2071	E8DC  1B 31 32 33 34 35	36+	     db	     27,'1234567890-='
   2072	      37 38 39 30 2D 3D
   2073
   2074
   2075	E8E9  08 09			     db	     08h,09h
   2076	E8EB  71 77 65 72 74 79	75+	     db	     'qwertyuiop[]',0dh,-1,'asdfghjkl;:',60h,7eh
   2077	      69 6F 70 5B 5D 0D	FF+
   2078	      61 73 64 66 67 68	6A+
   2079	      6B 6C 3B 3A 60 7E
   2080
   2081
   2082
   2083
   2084	E906  5C 7A 78 63 76 62	6E+	     db	     05ch,'zxcvbnm',',./{'
   2085	      6D 2C 2E 2F 7B
   2086
   2087	E912  2A FF 20 7D		     db	     '*',-1,' }'
   2088
   2089				     ;	 Таблица	кодов ASCII верхнего регистра	       +
   2090				     клавиатуры
   2091
   2092	E916			     k11     label   byte
   2093	E916  1B 21 40 23 24 25	5E+	     db	     27,'!@#$',37,05eh,'&*()_+'
   2094	      26 2A 28 29 5F 2B
   2095
   2096
   2097	E923  08 00			     db	     08h,0
   2098	E925  51 57 45 52 54 59	55+	     db	     'QWERTYUIOP',-1,-1,0dh,-1
   2099	      49 4F 50 FF FF 0D	FF
   2100
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 43
1840v4.asm



   2101
   2102	E933  41 53 44 46 47 48	4A+	     db	     'ASDFGHJKL'
   2103	      4B 4C
   2104
   2105	E93C  27 22 FF FF 7C		     db	     027h,'"',-1,-1,7ch
   2106	E941  5A 58 43 56 42 4E	4D	     db	     'ZXCVBNM'
   2107
   2108	E948  3C 3E 3F FF 00 FF	20+	     db	     '<>?',-1,0,-1,' ',-1
   2109	      FF
   2110
   2111
   2112				     ;	 Таблица	кодов сканирования клавиш Ф11 -	Ф20   +
   2113				     (на верхнем
   2114				     ; регистре	Ф1 - Ф10)
   2115
   2116	E950			     k12     label   byte
   2117	E950  54 55 56 57 58 59	5A	     db	     84,85,86,87,88,89,90
   2118
   2119	E957  5B 5C 5D			     db	     91,92,93
   2120
   2121				     ;	 Таблица	кодов сканирования одновременно   +
   2122				     нажатых клавиш
   2123				     ; ДОП и Ф1 - Ф10
   2124
   2125	E95A			     k13     label byte
   2126	E95A  68 69 6A 6B 6C		     db	     104,105,106,107,108
   2127	E95F  6D 6E 6F 70 71		     db	     109,110,111,112,113
   2128
   2129				     ;	 Таблица	кодов правого				       +
   2130				     пятнадцатиклавишного поля на верхнем
   2131				     ; регистре
   2132
   2133	E964			     k14     label   byte
   2134	E964  37 38 39 2D 34 35	36+	     db	     '789-456+1230.'
   2135	      2B 31 32 33 30 2E
   2136
   2137
   2138
   2139				     ;	 Таблица	кодов правого				       +
   2140				     пятнадцатиклавишного поля на нижнем
   2141				     ; регистре
   2142
   2143	E971			     k15     label byte
   2144	E971  47 48 49 FF 4B FF	4D	     db	     71,72,73,-1,75,-1,77
   2145
   2146	E978  FF 4F 50 51 52 53		     db	     -1,79,80,81,82,83
   2147
   2148	E97E  09*(00)				     db	9 dup(0)
   2149
   2150				     ;----INT 9--------------------------
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 44
1840v4.asm



   2151				     ;
   2152				     ;	  Программа обработки	прерывания		       +
   2153				     клавиатуры
   2154				     ;
   2155				     ; Программа считывает код сканирования	       +
   2156				     клавиши в регистр AL.
   2157				     ; Единичное состояние разряда 7 в коде	       +
   2158				     сканирования означает,
   2159				     ; что клавиша отжата.
   2160				     ;	 В результате выполнения программы в	       +
   2161				     регистре AX формируется
   2162				     ; слово, старший байт которого (AH) содержит      +
   2163				     код сканирования,
   2164				     ; а младший (AL) -	код ASCII. Эта информация	       +
   2165				     помещается в буфер
   2166				     ; клавиатуры. После	заполнения буфера	       +
   2167				     подается звуковой сигнал.
   2168				     ;
   2169				     ;-----------------------------------
   2170
   2171	E987			     kb_int proc far
   2172	E987  FB			     sti		; установка признака		       +
   2173				     разрешения прерывания
   2174	E988  50			     push    ax
   2175	E989  53			     push    bx
   2176	E98A  51			     push    cx
   2177	E98B  52			     push    dx
   2178	E98C  56			     push    si
   2179	E98D  57			     push    di
   2180	E98E  1E			     push    ds
   2181	E98F  06			     push    es
   2182	E990  FC			     cld		    ; установить признак	       +
   2183				     направления вперед
   2184	E991  B8 0040			     mov     ax,dat	    ; установить адресацию
   2185	E994  8E D8			     mov     ds,ax
   2186	E996  E4 60			     in	     al,kb_dat	    ; считать код сканирования
   2187	E998  50			     push    ax
   2188	E999  E4 61			     in	     al,kb_ctl	    ; считать значение порта 61
   2189	E99B  8A E0			     mov     ah,al	    ; сохранить считанное	       +
   2190				     значение
   2191	E99D  0C 80			     or	     al,80h	    ; установить бит 7 порта 61
   2192	E99F  E6 61			     out     kb_ctl,al	    ; для работы с клавиатурой
   2193	E9A1  86 E0			     xchg    ah,al	    ; восстановить значение	       +
   2194				     порта	61
   2195	E9A3  E6 61			     out     kb_ctl,al
   2196	E9A5  58			     pop     ax		    ; восстановить код		       +
   2197				     сканирования
   2198	E9A6  8A E0			     mov     ah,al	    ; и сохранить его в AH
   2199
   2200				     ;---
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 45
1840v4.asm



   2201
   2202	E9A8  3C FF			     cmp     al,0ffh  ;	сравнение с кодом заполнения  +
   2203				     буфера
   2204							      ;	клавиатуры
   2205	E9AA  75 03			     jnz     k16	     ; продолжить
   2206	E9AC  E9 FE4D			     jmp     k62     ; переход на звуковой сигнал по  +
   2207				     заполнению
   2208							     ; буфера клавиатуры
   2209
   2210	E9AF			     k16:
   2211	E9AF  24 7F			     and     al,07fh	     ; сброс бита отжатия клавиши
   2212	E9B1  0E			     push    cs
   2213	E9B2  07			     pop     es
   2214	E9B3  BF E875r			     mov     di,offset k6  ; установить адрес таблицы    +
   2215				     сканирования
   2216								   ; управляющих клавиш
   2217	E9B6  B9 000C			     mov     cx,k6l
   2218	E9B9  F2> AE			     repne scasb     ; сравнение полученного кода      +
   2219				     ска-
   2220							     ; нирования с содержимым таблицы
   2221	E9BB  8A C4			     mov     al,ah	     ; запомнить код		       +
   2222				     сканирования
   2223	E9BD  74 1A			     je	     k17	     ; переход по совпадению
   2224	E9BF  E9 010A			     jmp     k25	     ; переход по несовпадению
   2225	E9C2			     k406:
   2226	E9C2  F6 06 0018r 02		     test    kb_flag_1,lat
   2227	E9C7  75 7F			     jnz     k26a
   2228	E9C9  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2229	E9CE  B8 5CF1			     mov     ax,5cf1h
   2230	E9D1  74 03			     jz	     k407
   2231	E9D3  B8 5CF0			     mov     ax,5cf0h
   2232
   2233				     ;	 Получение маски нажатой управляющей	       +
   2234				     клавиши
   2235
   2236	E9D6			     k407:
   2237	E9D6  E9 FDCB			     jmp     k57
   2238
   2239	E9D9  81 EF E876r	     k17:    sub     di,offset k6+1
   2240	E9DD  83 FF 08			     cmp     di,8
   2241	E9E0  72 3B			     jb	     k300
   2242	E9E2  B4 06			     mov     ah,6
   2243	E9E4  83 FF 0A			     cmp     di,0ah
   2244	E9E7  72 39			     jb	     k301
   2245	E9E9  A8 80			     test    al,80h
   2246	E9EB  74 5B			     jz	     k26a
   2247	E9ED  80 26 0018r FC		     and     kb_flag_1,not lat+lat_shift
   2248	E9F2  83 FF 0B			     cmp     di,0bh
   2249	E9F5  74 17			     je	     k401
   2250	E9F7  F6 06 0018r 04		     test    kb_flag_1,inv_shift
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 46
1840v4.asm



   2251	E9FC  74 08			     jz	     k400
   2252	E9FE  80 0E 0018r 01		     or	     kb_flag_1,lat_shift
   2253	EA03  EB 43				     jmp     short k26a
   2254	EA05  90				     nop
   2255	EA06  80 0E 0018r 03	     k400:   or	     kb_flag_1,lat+lat_shift
   2256	EA0B  EB 3B				     jmp     short k26a
   2257	EA0D  90				     nop
   2258	EA0E  F6 06 0018r 04	     k401:   test    kb_flag_1,inv_shift
   2259	EA13  74 33			     jz	     k26a
   2260	EA15  80 0E 0018r 02		     or	     kb_flag_1,lat
   2261	EA1A  EB 2C				     jmp     short k26a
   2262	EA1C  90				     nop
   2263	EA1D  2E: 8A A5	E881r	     k300:   mov     ah,cs:k7[di]
   2264	EA22			     k301:
   2265	EA22  A8 80			     test    al,80h	     ; клавиша отжата ?
   2266	EA24  75 79			     jnz     k23     ; переход, если	клавиша отжата
   2267
   2268				     ;	 Управляющая	клавиша нажата
   2269
   2270	EA26  80 FC 10			     cmp     ah,scroll_shift ; нажата управляющая	       +
   2271				     клавиша с
   2272								     ;	запоминанием ?
   2273	EA29  73 20			     jae     k18	     ; переход, если	да
   2274
   2275				     ;---
   2276	EA2B  80 FC 06			     cmp     ah,6
   2277	EA2E  74 07			     je	     k302
   2278
   2279	EA30  08 26 0017r		     or	     kb_flag,ah	     ; установка масок		       +
   2280				     управляющих клавиш
   2281								     ; без запоминания
   2282	EA34  E9 00B4			     jmp     k26	     ; к выходу из прерывания
   2283	EA37  80 0E 0018r 06	     k302:   or	     kb_flag_1,inv_shift+lat
   2284	EA3C  F6 06 0018r 01		     test    kb_flag_1,lat_shift
   2285	EA41  74 05			     jz	     k26a
   2286	EA43  80 26 0018r FD		     and     kb_flag_1,not lat
   2287	EA48			     k26a:
   2288	EA48  E9 00A0			     jmp     k26
   2289
   2290				     ;	 Опрос нажатия клавиши с запоминанием
   2291
   2292	EA4B			     k18:
   2293	EA4B  F6 06 0017r 04		     test    kb_flag,ctl_shift	       ; опрос клавиши УПР
   2294	EA50  75 7A			     jnz     k25
   2295	EA52  3C 52			     cmp     al,ins_key		       ; опрос клавиши ВСТ
   2296	EA54  75 25			     jnz     k22
   2297	EA56  F6 06 0017r 08		     test    kb_flag,alt_shift	       ; опрос клавиши ДОП
   2298	EA5B  74 03			     jz	     k19
   2299	EA5D  EB 6D				     jmp     short k25
   2300	EA5F  90				     nop
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 47
1840v4.asm



   2301	EA60  F6 06 0017r 20	     k19:    test    kb_flag,num_state	; опрос клавиши ЦИФ
   2302	EA65  75 0D			     jnz     k21
   2303	EA67  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift ; опрос клавиш	       +
   2304				     левого
   2305								  ; и правого переключения	       +
   2306				     регистров
   2307	EA6C  74 0D			     jz	     k22
   2308
   2309	EA6E			     k20:
   2310	EA6E  B8 5230			     mov     ax,5230h
   2311	EA71  E9 FD30			     jmp     k57	   ; установка	кода нуля
   2312	EA74			     k21:
   2313	EA74  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2314	EA79  74 F3			     jz	     k20
   2315
   2316	EA7B			     k22:
   2317	EA7B  84 26 0018r		     test    ah,kb_flag_1
   2318	EA7F  75 6A			     jnz     k26
   2319	EA81  08 26 0018r		     or	     kb_flag_1,ah
   2320	EA85  30 26 0017r		     xor     kb_flag,ah
   2321	EA89  3C 52			     cmp     al,ins_key
   2322	EA8B  75 5E			     jne     k26
   2323	EA8D  B8 5200			     mov     ax,ins_key*256
   2324	EA90  E9 FD11			     jmp     k57
   2325
   2326	EA93			     k303:
   2327	EA93  80 26 0018r FB		     and     kb_flag_1,not inv_shift
   2328	EA98  80 36 0018r 02		     xor     kb_flag_1,lat
   2329	EA9D  EB 10			     jmp     short k304
   2330
   2331				     ;	 Управляющая	клавиша отжата
   2332
   2333	EA9F			     k23:
   2334
   2335	EA9F  80 FC 10			     cmp     ah,scroll_shift
   2336	EAA2  73 1F			     jae     k24
   2337	EAA4  F6 D4			     not     ah
   2338	EAA6  80 FC F9			     cmp     ah,0f9h
   2339	EAA9  74 E8			     je	     k303
   2340	EAAB  20 26 0017r		     and     kb_flag,ah
   2341	EAAF			     k304:
   2342	EAAF  3C B8			     cmp     al,alt_key+80h
   2343	EAB1  75 38			     jne     k26
   2344
   2345				     ;---
   2346
   2347	EAB3  A0 0019r			     mov     al,alt_input
   2348	EAB6  B4 00			     mov     ah,0
   2349	EAB8  88 26 0019r		     mov     alt_input,ah
   2350	EABC  3C 00			     cmp     al,0
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 48
1840v4.asm



   2351	EABE  74 2B			     je	     k26
   2352	EAC0  E9 FCEA			     jmp     k58
   2353
   2354	EAC3			     k24:
   2355	EAC3  F6 D4			     not     ah
   2356	EAC5  20 26 0018r		     and     kb_flag_1,ah
   2357	EAC9  EB 20				     jmp     short k26
   2358	EACB  90				     nop
   2359
   2360	EACC			     k25:
   2361	EACC  3C 80			     cmp     al,80h
   2362	EACE  73 1B			     jae     k26
   2363	EAD0  3C 59			     cmp     al,inf_key
   2364	EAD2  74 25			     je	     k307
   2365	EAD4  3C 5C			     cmp     al,92
   2366	EAD6  75 03			     jne     k406b
   2367	EAD8  E9 FEE7			     jmp     k406
   2368	EADB			     k406b:
   2369	EADB  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2370	EAE0  74 1D			     jz	     k28
   2371	EAE2  3C 45			     cmp     al,num_key
   2372	EAE4  74 05			     je	     k26
   2373	EAE6  80 26 0018r F7		     and     kb_flag_1,not hold_state
   2374
   2375	EAEB			     k26:
   2376	EAEB  FA			     cli
   2377	EAEC  B0 20			     mov     al,eoi
   2378	EAEE  E6 20			     out     020h,al
   2379	EAF0			     k27:
   2380	EAF0  07			     pop     es
   2381	EAF1  1F			     pop     ds
   2382	EAF2  5F			     pop     di
   2383	EAF3  5E			     pop     si
   2384	EAF4  5A			     pop     dx
   2385	EAF5  59			     pop     cx
   2386	EAF6  5B			     pop     bx
   2387	EAF7  58			     pop     ax
   2388	EAF8  CF			     iret
   2389
   2390	EAF9  B8 A000		     k307:   mov     ax,0a000h
   2391	EAFC  E9 FCA5			     jmp     k57
   2392
   2393
   2394				     ;---
   2395
   2396	EAFF			     k28:
   2397	EAFF  F6 06 0017r 08		     test    kb_flag,alt_shift
   2398	EB04  75 03			     jnz     k29
   2399	EB06  EB 6D				     jmp     short k38
   2400	EB08  90				     nop
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 49
1840v4.asm



   2401
   2402				     ;---
   2403
   2404	EB09			     k29:
   2405	EB09  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2406	EB0E  74 0F			     jz	     k31
   2407	EB10  3C 53			     cmp     al,del_key
   2408	EB12  75 0B			     jne     k31
   2409
   2410				     ;---
   2411
   2412	EB14  C7 06 0072r 1234		     mov     reset_flag,1234h
   2413	EB1A  EA			     db	     0eah		     ;	     db	     0eah,5bh,0e0h,00h,0f0h  ; +
   2414				     jmp far ptr start
   2415	EB1B  E05Br F000		     dw	     offset start, cod	     ;	     ###Gleb###
   2416
   2417				     ;---
   2418
   2419
   2420
   2421
   2422	EB1F			     k31:
   2423	EB1F  3C 39			     cmp     al,57
   2424	EB21  75 05			     jne     k32
   2425	EB23  B0 20			     mov     al,' '
   2426	EB25  E9 FC7C			     jmp     k57
   2427
   2428				     ;---
   2429
   2430	EB28			     k32:
   2431	EB28  BF F905r			     mov     di,offset k30
   2432	EB2B  B9 000A			     mov     cx,10
   2433	EB2E  F2> AE				     repne scasb
   2434	EB30  75 12			     jne     k33
   2435	EB32  81 EF F906r		     sub     di,offset k30+1
   2436	EB36  A0 0019r			     mov     al,alt_input
   2437	EB39  B4 0A			     mov     ah,10
   2438	EB3B  F6 E4			     mul     ah
   2439	EB3D  03 C7			     add     ax,di
   2440	EB3F  A2 0019r			     mov     alt_input,al
   2441	EB42  EB A7				     jmp     short k26
   2442
   2443				     ;---
   2444
   2445	EB44			     k33:
   2446	EB44  C6 06 0019r 00		     mov     alt_input,00h
   2447	EB49  B9 001A			     mov     cx,0026
   2448	EB4C  F2> AE				     repne scasb
   2449	EB4E  75 05			     jne     k34
   2450	EB50  B0 00			     mov     al,0
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 50
1840v4.asm



   2451	EB52  E9 FC4F			     jmp     k57
   2452
   2453				     ;---
   2454
   2455	EB55			     k34:
   2456	EB55  3C 02			     cmp     al,2
   2457	EB57  72 0C			     jb	     k35
   2458	EB59  3C 0E			     cmp     al,14
   2459	EB5B  73 08			     jae     k35
   2460	EB5D  80 C4 76			     add     ah,118
   2461	EB60  B0 00			     mov     al,0
   2462	EB62  E9 FC3F			     jmp     k57
   2463
   2464				     ;---
   2465
   2466	EB65			     k35:
   2467	EB65  3C 3B			     cmp     al,59
   2468	EB67  73 02			     jae     k37
   2469	EB69			     k36:
   2470	EB69  EB 80				     jmp     short k26
   2471	EB6B			     k37:
   2472	EB6B  3C 47			     cmp     al,71
   2473	EB6D  73 FA			     jae     k36
   2474	EB6F  BB E95Ar			     mov     bx,offset k13
   2475	EB72  E9 FC8D			     jmp     k63
   2476
   2477				     ;---
   2478
   2479	EB75			     k38:
   2480	EB75  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2481	EB7A  74 5B			     jz	     k44
   2482
   2483				     ;---
   2484				     ;---
   2485
   2486	EB7C  3C 46			     cmp     al,scroll_key
   2487	EB7E  75 18			     jne     k39
   2488	EB80  BB 001Er			     mov     bx,offset kb_buffer
   2489	EB83  89 1E 001Ar		     mov     buffer_head,bx
   2490	EB87  89 1E 001Cr		     mov     buffer_tail,bx
   2491	EB8B  C6 06 0071r 80		     mov     bios_break,80h
   2492	EB90  CD 1B			     int     1bh
   2493	EB92  B8 0000			     mov     ax,0
   2494	EB95  E9 FC0C			     jmp     k57
   2495
   2496	EB98			     k39:
   2497	EB98  3C 45			     cmp     al,num_key
   2498	EB9A  75 21			     jne     k41
   2499	EB9C  80 0E 0018r 08		     or	     kb_flag_1,hold_state
   2500	EBA1  B0 20			     mov     al,eoi
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 51
1840v4.asm



   2501	EBA3  E6 20			     out     020h,al
   2502
   2503				     ;---
   2504
   2505	EBA5  80 3E 0049r 07		     cmp     crt_mode,7
   2506	EBAA  74 07			     je	     k40
   2507	EBAC  BA 03D8			     mov     dx,03d8h
   2508	EBAF  A0 0065r			     mov     al,crt_mode_set
   2509	EBB2  EE			     out     dx,al
   2510	EBB3			     k40:
   2511	EBB3  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2512	EBB8  75 F9			     jnz     k40
   2513	EBBA  E9 FF33			     jmp     k27
   2514	EBBD			     k41:
   2515
   2516				     ;---
   2517
   2518	EBBD  3C 37			     cmp     al,55
   2519	EBBF  75 06			     jne     k42
   2520	EBC1  B8 7200			     mov     ax,114*256
   2521	EBC4  E9 FBDD			     jmp     k57
   2522
   2523				     ;---
   2524
   2525	EBC7			     k42:
   2526	EBC7  BB E889r			     mov     bx,offset k8
   2527	EBCA  3C 3B			     cmp     al,59
   2528	EBCC  73 03			     jae     k43
   2529	EBCE  E9 FBCF			     jmp     k56
   2530	EBD1			     k43:
   2531	EBD1  BB E8C3r			     mov     bx,offset k9
   2532	EBD4  E9 FC2B			     jmp     k63
   2533
   2534				     ;---
   2535
   2536	EBD7			     k44:
   2537
   2538	EBD7  3C 47			     cmp     al,71
   2539	EBD9  73 3E			     jae     k48
   2540	EBDB  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2541	EBE0  74 0A			     jz	     k54a
   2542
   2543				     ;---
   2544
   2545	EBE2  3C 0F			     cmp     al,15
   2546	EBE4  75 09			     jne     k45
   2547	EBE6  B8 0F00			     mov     ax,15*256
   2548	EBE9  E9 FBB8			     jmp     k57
   2549
   2550	EBEC			     k54a:
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 52
1840v4.asm



   2551	EBEC  E9 FB9E			     jmp k54
   2552
   2553	EBEF			     k45:
   2554	EBEF  3C 37			     cmp     al,55
   2555	EBF1  75 09			     jne     k46
   2556
   2557				     ;---
   2558
   2559	EBF3  B0 20			     mov     al,eoi
   2560	EBF5  E6 20			     out     020h,al
   2561	EBF7  CD 05			     int     5h
   2562	EBF9  E9 FEF4			     jmp     k27
   2563
   2564	EBFC			     k46:
   2565	EBFC  3C 3B			     cmp     al,59
   2566	EBFE  72 06			     jb	     k47
   2567	EC00  BB E950r			     mov     bx,offset k12
   2568	EC03  E9 FBFC			     jmp     k63
   2569
   2570	EC06			     k47:
   2571	EC06  F6 06 0018r 02		     test    kb_flag_1,lat
   2572	EC0B  74 06			     jz	     k98
   2573	EC0D  BB E916r			     mov     bx,offset k11
   2574	EC10  E9 FB8D			     jmp      k56
   2575	EC13  BB E6BDr		     k98:    mov     bx,offset rust2
   2576	EC16  E9 FB87			     jmp     k56
   2577
   2578				     ;---
   2579
   2580	EC19			     k48:
   2581	EC19  F6 06 0017r 20		     test    kb_flag,num_state
   2582	EC1E  75 23			     jnz     k52
   2583	EC20  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2584	EC25  75 23			     jnz     k53
   2585
   2586				     ;---
   2587
   2588	EC27			     k49:
   2589
   2590	EC27  3C 4A			     cmp     al,74
   2591	EC29  74 0C			     je	     k50
   2592	EC2B  3C 4E			     cmp     al,78
   2593	EC2D  74 0E			     je	     k51
   2594	EC2F  2C 47			     sub     al,71
   2595	EC31  BB E971r			     mov     bx,offset k15
   2596	EC34  E9 FBCD			     jmp       k64
   2597
   2598	EC37  B8 4A2D		     k50:    mov     ax,74*256+'-'
   2599	EC3A  E9 FB67			     jmp      k57
   2600
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 53
1840v4.asm



   2601	EC3D  B8 4E2B		     k51:    mov     ax,78*256+'+'
   2602	EC40  E9 FB61			     jmp      k57
   2603
   2604				     ;---
   2605
   2606	EC43			     k52:
   2607	EC43  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2608	EC48  75 DD			     jnz     k49
   2609
   2610	EC4A			     k53:
   2611	EC4A  2C 46			     sub     al,70
   2612	EC4C  BB E964r			     mov     bx,offset k14
   2613	EC4F  E9 FB4E			     jmp      k56
   2614	EC52			     kb_int  endp
   2615
   2616	EC52  07*(00)				     db	7 dup(0)
   2617
   2618				     ;--- int 13H---------
   2619				     ;	 Программа обслуживания накопителя на	       +
   2620				     гибком магнитном
   2621				     ; диске выполняет шесть	функций,	код которых  +
   2622				     задается
   2623				     ; в регистре AH:
   2624				     ;	 AH=0 -	сбросить  НГМД;
   2625				     ;	 AH=1 -	считать байт	состояния НГМД. Состояние+
   2626				     соответствует
   2627				     ; последней выполняемой операции и		       +
   2628				     передается в регистр AL из
   2629				     ; постоянно распределенной области		       +
   2630				     оперативной памяти с адресом
   2631				     ; 00441H;
   2632				     ;	  AH=2H	- считать указанный сектор в память;
   2633				     ;	  AH=3H	- записать указанный сектор из	памяти;
   2634				     ;	  AH=4H	- верификация;
   2635				     ;	  AH=5H	- форматизация.
   2636				     ;	  Для выполнения функций записи,		       +
   2637				     считывания, верификации,
   2638				     ; форматизации	в регистрах задается		       +
   2639				     следующая	информация:
   2640				     ;	  DL - номер устройства (0-3, контролируемое      +
   2641				     значение);
   2642				     ;	  DH - номер головки (0-1, неконтролируемое	       +
   2643				     значение);
   2644				     ;	  CH - номер дорожки (0-39,	неконтролируемое       +
   2645				     значение);
   2646				     ;	  CL - номер сектора (1-8, неконтролируемое	       +
   2647				     значение);
   2648				     ;	  AL - количество секторов (1-8,			       +
   2649				     неконтролируемое значение).
   2650				     ;
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 54
1840v4.asm



   2651				     ;	  Для выполнения форматизации необходимо    +
   2652				     сформировать в
   2653				     ; памяти четырехбайтную таблицу	для каждого  +
   2654				     сектора, содержащую
   2655				     ; следующую информацию:
   2656				     ;	  номер дорожки;
   2657				     ;	  номер головки;
   2658				     ;	  номер сектора;
   2659				     ;	  количество байт	в секторе (00 -	128 байт, 01 - 256 +
   2660				     байт,
   2661				     ; 02 - 512	байт, 03 - 1024 байта).
   2662				     ;	  Адрес таблицы задается в	регистрах ES:BX.
   2663				     ;
   2664				     ;	  После выполнения программы в	регистре AH    +
   2665				     находится
   2666				     ; байт	состояния НГМД.
   2667				     ;
   2668				     ;	  Байт состояния НГМД имеет следующее	       +
   2669				     значение:
   2670				     ;	  80 - тайм-аут;
   2671				     ;	  40 - сбой	позиционирования;
   2672				     ;	  20 - сбой	контроллера;
   2673				     ;	  10 - ошибка кода циклического контроля при  +
   2674				     считывании;
   2675				     ;	  09 - переход адреса через сегмент (64К байт);
   2676				     ;	  08 - переполнение;
   2677				     ;	  04 - сектор не найден;
   2678				     ;	  03 - защита записи;
   2679				     ;	  02 - не обнаружен маркер идентификатора       +
   2680				     сектора;
   2681				     ;	  01 - команда отвергнута.
   2682				     ;	  При успешном завершении программы	       +
   2683				     признак CF=0,  в про-
   2684				     ; тивном случае - признак CF=1 (регистр AH	       +
   2685				     содержит код ошибки).
   2686				     ;	  Регистр AL содержит количество реально       +
   2687				     считанных	секторов.
   2688				     ;	  Адрес программы	обслуживания накопителя  +
   2689				     на гибком магнитном
   2690				     ; диске записывается в вектор 40H в процедуре   +
   2691				     сброса по включению
   2692				     ; питания.
   2693				     ;-------------------------
   2694					     assume  cs:code,ds:data,es:data
   2695	EC59			     diskette_io proc	     far
   2696	EC59  FB			     sti		     ; установить признак	       +
   2697				     прерывания
   2698	EC5A  53			     push    bx		     ; сохранить адрес
   2699	EC5B  51			     push    cx
   2700	EC5C  1E			     push    ds		; сохранить сегментное	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 55
1840v4.asm



   2701				     значение регистра
   2702	EC5D  56			     push    si		; сохранить все регистры во      +
   2703				     время	операции
   2704	EC5E  57			     push    di
   2705	EC5F  55			     push    bp
   2706	EC60  52			     push    dx
   2707	EC61  8B EC			     mov     bp,sp	; установить указатель	       +
   2708				     вершины стека
   2709	EC63  BE 0040			     mov     si,dat
   2710	EC66  8E DE			     mov     ds,si	     ; установить область данных
   2711	EC68  E8 001C			     call    j1		     ;
   2712	EC6B  BB 0004			     mov     bx,4	     ; получить	параметры	       +
   2713				     ожидания мотора
   2714	EC6E  E8 01E0			     call    get_parm
   2715	EC71  88 26 0040r		     mov     motor_count,ah  ; уст время отсчета	для	       +
   2716				     мотора
   2717	EC75  8A 26 0041r		     mov     ah,diskette_status	 ; получить состояние	       +
   2718				     операции
   2719	EC79  80 FC 01			     cmp     ah,1	     ; уст признак CF	для		       +
   2720				     индикации
   2721	EC7C  F5			     cmc		     ; успешной	операции
   2722	EC7D  5A			     pop     dx		     ; восстановить	все регистры
   2723	EC7E  5D			     pop     bp
   2724	EC7F  5F			     pop     di
   2725	EC80  5E			     pop     si
   2726	EC81  1F			     pop     ds
   2727	EC82  59			     pop     cx
   2728	EC83  5B			     pop     bx
   2729	EC84  CA 0002			     ret     2
   2730	EC87			     diskette_io     endp
   2731	EC87			     j1	     proc    near
   2732	EC87  8A F0			     mov     dh,al	     ; сохранить количество	       +
   2733				     секторов
   2734	EC89  80 26 003Fr 7F		     and     motor_status,07fh	 ; указать операцию	       +
   2735				     считывания
   2736	EC8E  0A E4			     or	     ah,ah	     ; AH=0
   2737	EC90  74 27			     jz	     disk_reset
   2738	EC92  FE CC			     dec     ah		     ; AH=1
   2739	EC94  74 74			     jz	     disk_status
   2740	EC96  C6 06 0041r 00		     mov     diskette_status,0	 ; сброс состояния
   2741	EC9B  80 FA 04			     cmp     dl,4	     ; проверка	количества	       +
   2742				     устройств
   2743	EC9E  73 13			     jae     j3		     ; переход по ошибке
   2744	ECA0  FE CC			     dec     ah		     ; AH=2
   2745	ECA2  74 6A			     jz	     disk_read
   2746	ECA4  FE CC			     dec     ah		     ; AH=3
   2747	ECA6  75 03			     jnz     j2
   2748	ECA8  E9 0096			     jmp     disk_write
   2749	ECAB			     j2:
   2750	ECAB  FE CC			     dec     ah		     ; AH=4
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 56
1840v4.asm



   2751	ECAD  74 68			     jz	     disk_verf
   2752	ECAF  FE CC			     dec     ah		     ; AH=5
   2753	ECB1  74 68			     jz	     disk_format
   2754	ECB3			     j3:
   2755	ECB3  C6 06 0041r 01		     mov     diskette_status,bad_cmd   ; неверная команда
   2756
   2757	ECB8  C3			     ret		     ; операция	не определена
   2758	ECB9			     j1	     endp
   2759
   2760				     ;	 Сбросить НГМД
   2761
   2762	ECB9			     disk_reset	proc near
   2763	ECB9  BA 03F2			     mov     dx,03f2h
   2764	ECBC  FA			     cli		     ; сброс признака разрешения+
   2765				     прерывания
   2766	ECBD  A0 003Fr			     mov     al,motor_status  ;	какой мотор включен
   2767	ECC0  B1 04			     mov     cl,4	     ; счетчик сдвига
   2768	ECC2  D2 E0			     sal     al,cl
   2769	ECC4  A8 20			     test    al,20h	     ; выбрать соответствующее   +
   2770				     устройство
   2771	ECC6  75 0C			     jnz     j5		     ; переход, если	включен	       +
   2772				     мотор	первого
   2773								     ; устройства
   2774	ECC8  A8 40			     test    al,40h
   2775	ECCA  75 06			     jnz     j4		     ; переход, если	включен	       +
   2776				     мотор	второго
   2777								     ; устройства
   2778	ECCC  A8 80			     test    al,80h
   2779	ECCE  74 06			     jz	     j6		     ; переход, если	включен	       +
   2780				     мотор	нулевого
   2781								     ; устройства
   2782	ECD0  FE C0			     inc     al
   2783	ECD2  FE C0		     j4:     inc     al
   2784	ECD4  FE C0		     j5:     inc     al
   2785	ECD6  0C 08		     j6:     or	     al,8	     ; включить	доступность	       +
   2786				     прерывания
   2787	ECD8  EE			     out     dx,al	     ; сброс адаптера
   2788	ECD9  C6 06 003Er 00		     mov     seek_status,0
   2789	ECDE  C6 06 0041r 00		     mov     diskette_status,0	; уст нормальное		       +
   2790				     состояние	НГМД
   2791	ECE3  0C 04			     or	     al,4	     ; выключить сброс
   2792	ECE5  EE			     out     dx,al
   2793	ECE6  FB			     sti		     ; установить бит разрешения+
   2794				     прерывания
   2795	ECE7  E8 0225			     call    chk_stat_2	     ; выполнить прерывание	       +
   2796				     после	сброса
   2797	ECEA  A0 0042r			     mov     al,nec_status
   2798	ECED  3C C0			     cmp     al,0c0h	; проверка готовности		       +
   2799				     устройства для передачи
   2800	ECEF  74 07			     jz	     j7		     ; устройство готово
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 57
1840v4.asm



   2801	ECF1  80 0E 0041r 20		     or	     diskette_status,bad_nec  ;	уст код ошибки
   2802	ECF6  EB 11			     jmp     short j8
   2803
   2804				     ;	 Послать	команду в контроллер
   2805
   2806	ECF8			     j7:
   2807	ECF8  B4 03			     mov     ah,03h	     ; установить команду
   2808	ECFA  E8 FA32			     call    nec_output	     ; передать	команду
   2809	ECFD  BB 0001			     mov     bx,1	     ; передача	первого байта      +
   2810				     параметров
   2811	ED00  E8 014E			     call    get_parm	     ; в контроллер
   2812	ED03  BB 0003			     mov     bx,3	     ; передача	второго байта      +
   2813				     параметров
   2814	ED06  E8 0148			     call    get_parm	     ; в контроллер
   2815	ED09			     j8:
   2816	ED09  C3			     ret		     ; возврат к прерванной	       +
   2817				     программе
   2818	ED0A			     disk_reset	     endp
   2819
   2820				     ;
   2821				     ; Считать байт состояния НГМД (AH=1)
   2822				     ;
   2823
   2824	ED0A			     disk_status proc near
   2825	ED0A  A0 0041r			     mov     al,diskette_status
   2826	ED0D  C3			     ret
   2827	ED0E			     disk_status     endp
   2828
   2829				     ;	 Считать	указанный сектор	в память	(AH=2)
   2830
   2831	ED0E			     disk_read proc near
   2832	ED0E  B0 46			     mov     al,046h	     ; установить команду
   2833	ED10			     j9:
   2834	ED10  E8 01B6			     call    dma_setup	     ; установить ПДП
   2835	ED13  B4 E6			     mov     ah,0e6h	 ; уст команду считывания	       +
   2836				     контроллера
   2837	ED15  EB 36			     jmp     short rw_opn    ; переход к выполнению	       +
   2838				     операции
   2839	ED17			     disk_read	     endp
   2840
   2841				     ;	 Верификация	(AH=4)
   2842
   2843	ED17			     disk_verf proc near
   2844	ED17  B0 42			     mov     al,042h	     ; установить команду
   2845	ED19  EB F5			     jmp     short j9
   2846	ED1B			     disk_verf	     endp
   2847
   2848				     ;	 Форматизация (AH=5)
   2849
   2850	ED1B			     disk_format proc near
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 58
1840v4.asm



   2851	ED1B  80 0E 003Fr 80		     or	     motor_status,80h  ; индикация операции	       +
   2852				     записи
   2853	ED20  B0 4A			     mov     al,04ah	       ; установить команду
   2854	ED22  E8 01A4			     call    dma_setup	       ; установить ПДП
   2855	ED25  B4 4D			     mov     ah,04dh	       ; установить команду
   2856	ED27  EB 24			     jmp     short rw_opn
   2857	ED29			     j10:
   2858	ED29  BB 0007			     mov     bx,7	       ; получить значение	       +
   2859				     сектора
   2860	ED2C  E8 0122			     call    get_parm
   2861	ED2F  BB 0009			     mov     bx,9	     ; получить	значение дорожки+
   2862				     на секторе
   2863	ED32  E8 011C			     call    get_parm
   2864	ED35  BB 000F			     mov     bx,15	     ; получить	значение длины    +
   2865				     интервала
   2866	ED38  E8 0116			     call    get_parm	     ; для контроллера
   2867	ED3B  BB 0011			     mov     bx,17	     ; получить	полный байт
   2868	ED3E  E9 00B8			     jmp     j16
   2869	ED41			     disk_format     endp
   2870
   2871				     ;	 Записать указанный сектор из памяти (AH=3)
   2872
   2873	ED41			     disk_write	proc near
   2874	ED41  80 0E 003Fr 80		     or	     motor_status,80h	     ; индикация операции     +
   2875				     записи
   2876	ED46  B0 4A			     mov     al,04ah		     ; уст код операции	       +
   2877				     записи
   2878	ED48  E8 017E			     call    dma_setup
   2879	ED4B  B4 C5			     mov     ah,0c5h		     ; команда записи на	НГМД
   2880	ED4D			     disk_write	     endp
   2881
   2882				     ;______________________
   2883				     ; rw_opn
   2884				     ;	 Программа выполнения операций
   2885				     ;	 считывания, записи, верификации
   2886				     ;----------------------
   2887	ED4D			     rw_opn  proc    near
   2888	ED4D  73 08			     jnc     j11	     ; проверка	ошибки ПДП
   2889	ED4F  C6 06 0041r 09		     mov     diskette_status,dma_boundary   ; установить ошибку
   2890	ED54  B0 00			     mov     al,0	     ;
   2891	ED56  C3			     ret		     ; возврат к основной	       +
   2892				     программе
   2893	ED57			     j11:
   2894	ED57  50			     push    ax		     ; сохранить команду
   2895
   2896				     ;	 Включить мотор и	выбрать устройство
   2897
   2898	ED58  51			     push    cx
   2899	ED59  8A CA			     mov     cl,dl	     ; уст номер устройства, как  +
   2900				     счетчик сдвига
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 59
1840v4.asm



   2901	ED5B  B0 01			     mov     al,1	     ; маска для определения	       +
   2902				     мотора устройства
   2903	ED5D  D2 E0			     sal     al,cl	     ; сдвиг
   2904	ED5F  FA			     cli		     ; сбросить	бит разрешения    +
   2905				     прерывания
   2906	ED60  C6 06 0040r FF		     mov     motor_count,0ffh  ; установить счетчик
   2907	ED65  84 06 003Fr		     test    al,motor_status
   2908	ED69  75 3F			     jnz     j14
   2909	ED6B  80 26 003Fr F0		     and     motor_status,0f0h	; выключить все биты	       +
   2910				     мотора
   2911	ED70  08 06 003Fr		     or	     motor_status,al	; включить мотор
   2912	ED74  FB			     sti		     ; установить бит разрешения+
   2913				     прерывания
   2914	ED75  B0 10			     mov     al,10h	     ; бит маски
   2915	ED77  D2 E0			     sal     al,cl	     ; уст бит маски	для		       +
   2916				     доступности мотора
   2917	ED79  0A C2			     or	     al,dl	     ; включить	бит выбора	       +
   2918				     устройства
   2919	ED7B  0C 0C			     or	     al,0ch	     ; нет сброса, доступность     +
   2920				     прерывания ПДП
   2921	ED7D  52			     push    dx
   2922	ED7E  BA 03F2			     mov     dx,03f2h	     ; установить адрес порта
   2923	ED81  EE			     out     dx,al
   2924	ED82  5A			     pop     dx		     ; восстановить	регистры
   2925	ED83  51			     push    cx		     ;задержка для включения       +
   2926				     мотора устройства
   2927	ED84  B9 0003			     mov     cx,3
   2928	ED87  51		     x2:     push    cx
   2929	ED88  B9 0000			     mov     cx,0
   2930	ED8B  E2 FE		     x1:     loop    x1
   2931	ED8D  59			     pop     cx
   2932	ED8E  E2 F7			     loop    x2
   2933	ED90  59			     pop     cx
   2934
   2935				     ;	 Ожидание включения мотора для операции      +
   2936				     записи
   2937
   2938	ED91  F6 06 003Fr 80		     test    motor_status,80h  ; запись ?
   2939	ED96  74 12			     jz	     j14     ; нет -	продолжать без ожидания
   2940	ED98  BB 0014			     mov     bx,20	     ; установить ожидание	       +
   2941				     включения	мотора
   2942	ED9B  E8 00B3			     call    get_parm	     ; получить	параметры
   2943	ED9E  0A E4			     or	     ah,ah
   2944	EDA0			     j12:
   2945	EDA0  74 08			     jz	     j14	     ; выход по окончании	       +
   2946				     времени ожидания
   2947	EDA2  2B C9			     sub     cx,cx	     ; установить счетчик
   2948	EDA4  E2 FE		     j13:    loop    j13	     ; ожидать требуемое время
   2949	EDA6  FE CC			     dec     ah		     ; уменьшеть значение	       +
   2950				     времени
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 60
1840v4.asm



   2951	EDA8  EB F6			     jmp     short j12	     ; повторить цикл
   2952
   2953	EDAA			     j14:
   2954	EDAA  FB			     sti		     ; уст признак разрешения      +
   2955				     прерывания
   2956	EDAB  59			     pop     cx
   2957
   2958				     ;	 Выполнить операцию поиска
   2959
   2960	EDAC  E8 00B8			     call    seek	     ; установить дорожку
   2961	EDAF  58			     pop     ax		     ; восстановить	команду
   2962	EDB0  8A FC			     mov     bh,ah	     ; сохранить команду в BH
   2963	EDB2  B6 00			     mov     dh,0	     ; уст 0	сектор в	случае	       +
   2964				     ошибки
   2965	EDB4  72 4A			     jc	     j17	     ; выход, если ошибка
   2966	EDB6  BE EE00r			     mov     si,offset j17
   2967
   2968	EDB9  56			     push    si
   2969
   2970				     ;	 Послать	параметры в контроллер
   2971
   2972	EDBA  E8 F972			     call    nec_output	     ; передача	команды
   2973	EDBD  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; уст номер головки
   2974	EDC0  D0 E4			     sal     ah,1	     ; сдвиг на 2
   2975	EDC2  D0 E4			     sal     ah,1
   2976	EDC4  80 E4 04			     and     ah,4	     ; выделить	бит
   2977	EDC7  0A E2			     or	     ah,dl	     ; операция	OR с номером	       +
   2978				     устройства
   2979	EDC9  E8 F963			     call    nec_output
   2980
   2981				     ;	 Проверка операции форматизации
   2982
   2983	EDCC  80 FF 4D			     cmp     bh,04dh	     ; форматизация	?
   2984	EDCF  75 03			     jne     j15    ; нет - продолжать			       +
   2985				     запись/считывание/верификацию
   2986	EDD1  E9 FF55			     jmp     j10
   2987
   2988	EDD4  8A E5		     j15:    mov     ah,ch	     ; номер цилиндра
   2989	EDD6  E8 F956			     call    nec_output
   2990	EDD9  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; номер головки
   2991	EDDC  E8 F950			     call    nec_output
   2992	EDDF  8A E1			     mov     ah,cl	     ; номер сектора
   2993	EDE1  E8 F94B			     call    nec_output
   2994	EDE4  BB 0007			     mov     bx,7
   2995	EDE7  E8 0067			     call    get_parm
   2996	EDEA  BB 0009			     mov     bx,9
   2997	EDED  E8 0061			     call    get_parm
   2998	EDF0  BB 000B			     mov     bx,11
   2999	EDF3  E8 005B			     call    get_parm
   3000	EDF6  BB 000D			     mov     bx,13
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 61
1840v4.asm



   3001	EDF9			     j16:
   3002	EDF9  E8 0055			     call    get_parm
   3003	EDFC  5E			     pop     si
   3004
   3005				     ;	 Операция запущена
   3006
   3007	EDFD  E8 0130			     call    wait_int	     ; ожидание	прерывания
   3008	EE00			     j17:
   3009	EE00  72 45			     jc	     j21	     ; поиск ошибки
   3010	EE02  E8 0166			     call    results	     ; получить	состояние	       +
   3011				     контроллера
   3012	EE05  72 3F			     jc	     j20	     ; поиск ошибки
   3013
   3014				     ;	 Проверка  состояния, полученного из	       +
   3015				     контроллера
   3016
   3017	EE07  FC			     cld		     ; установить направление     +
   3018				     коррекции
   3019	EE08  BE 0042r			     mov     si,offset nec_status
   3020	EE0B  AC			     lods    nec_status
   3021	EE0C  24 C0			     and     al,0c0h	     ; проверить нормальное	       +
   3022				     окончание
   3023	EE0E  74 3B			     jz	     j22
   3024	EE10  3C 40			     cmp     al,040h	     ; проверить неверное	       +
   3025				     окончание
   3026	EE12  75 29			     jnz     j18
   3027
   3028				     ;	 Обнаруженно	неверное окончание
   3029
   3030	EE14  AC			     lods    nec_status
   3031	EE15  D0 E0			     sal     al,1
   3032	EE17  B4 04			     mov     ah,record_not_fnd
   3033	EE19  72 24			     jc	     j19
   3034	EE1B  D0 E0			     sal     al,1
   3035	EE1D  D0 E0			     sal     al,1
   3036	EE1F  B4 10			     mov     ah,bad_crc
   3037	EE21  72 1C			     jc	     j19
   3038	EE23  D0 E0			     sal     al,1
   3039	EE25  B4 08			     mov     ah,bad_dma
   3040	EE27  72 16			     jc	     j19
   3041	EE29  D0 E0			     sal     al,1
   3042	EE2B  D0 E0			     sal     al,1
   3043	EE2D  B4 04			     mov     ah,record_not_fnd
   3044	EE2F  72 0E			     jc	     j19
   3045	EE31  D0 E0			     sal     al,1
   3046	EE33  B4 03			     mov     ah,write_protect  ; проверка защиты записи
   3047	EE35  72 08			     jc	     j19
   3048	EE37  D0 E0			     sal     al,1
   3049	EE39  B4 02			     mov     ah,bad_addr_mark
   3050	EE3B  72 02			     jc	     j19
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 62
1840v4.asm



   3051
   3052				     ;	 Контроллер вышел из строя
   3053
   3054	EE3D			     j18:
   3055	EE3D  B4 20			     mov     ah,bad_nec
   3056	EE3F			     j19:
   3057	EE3F  08 26 0041r		     or	     diskette_status,ah
   3058	EE43  E8 016A			     call    num_trans
   3059	EE46			     j20:
   3060	EE46  C3			     ret	     ; возврат к программе, вызвавшей+
   3061				     прерывание
   3062
   3063	EE47			     j21:
   3064	EE47  E8 0121			     call    results	     ; вызов результатов в буфер
   3065	EE4A  C3			     ret
   3066
   3067				     ;	 Операция была успешной
   3068
   3069	EE4B			     j22:
   3070	EE4B  E8 0162			     call    num_trans
   3071	EE4E  32 E4			     xor     ah,ah	     ; нет ошибок
   3072	EE50  C3			     ret
   3073	EE51			     rw_opn  endp
   3074				     ;------------------------
   3075				     ;get_parm
   3076				     ;
   3077				     ;	 ВХОД   BX - индекс байта,деленный
   3078				     ;		     на 2,который будет
   3079				     ;		     выбран,если младший
   3080				     ;		     бит BX установлен,то
   3081				     ;		     байт немедленно пере-
   3082				     ;		     дается контроллеру.
   3083				     ;
   3084				     ;	 ВЫХОД  AH	- байт из	блока.
   3085				     ;-------------------------
   3086	EE51			     get_parm proc   near
   3087	EE51  1E			     push    ds		     ; сохранить сегмент
   3088	EE52  2B C0			     sub     ax,ax	     ; AX=0
   3089	EE54  8E D8			     mov     ds,ax
   3090					     assume  ds:abs0
   3091	EE56  C5 36 0078r		     lds     si,disk_pointer
   3092	EE5A  D1 EB			     shr     bx,1	     ; делить BX на 2, уст флаг для  +
   3093				     выхода
   3094	EE5C  8A A0 0000r		     mov     ah,zb[si+bx]    ; получить	слово
   3095	EE60  1F			     pop     ds		     ; восстановить	сегмент
   3096					     assume  ds:data
   3097	EE61  72 01			     jc	     nec_op	      ;если	флаг установлен,	       +
   3098				     выход
   3099	EE63  C3			     ret	     ; возврат к программе, вызвавшей+
   3100				     прерывание
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 63
1840v4.asm



   3101	EE64  E9 F8C8		     nec_op: jmp     nec_output
   3102	EE67			     get_parm endp
   3103				     ;----------------------------
   3104				     ;	 Позиционирование
   3105				     ;
   3106				     ;	 Эта	программа позиционирует голов-
   3107				     ; ку обозначенного устройства на нуж-
   3108				     ; ную дорожку. Если устройство не
   3109				     ; было	выбрано до тех пор, пока не
   3110				     ; была	сброшена команда,то устройство
   3111				     ; будет рекалибровано.
   3112				     ;
   3113				     ;	 ВВОД
   3114				     ;	     (DL) - номер усройства для
   3115				     ;		    позиционирования,
   3116				     ;	     (CH) - номер дорожки.
   3117				     ;
   3118				     ;	 ВЫВОД
   3119				     ;	      CY=0 - успешно,
   3120				     ;	      CY=1 - сбой (состояние НГМД установить
   3121				     ;		     согласно  AX).
   3122				     ;----------------------------
   3123	EE67			     seek    proc    near
   3124	EE67  B0 01			     mov     al,1	     ; уст маску
   3125	EE69  51			     push    cx
   3126	EE6A  8A CA			     mov     cl,dl	     ; установить номер		       +
   3127				     устройства
   3128	EE6C  D2 C0			     rol     al,cl	     ; циклический сдвиг влево
   3129	EE6E  59			     pop     cx
   3130	EE6F  84 06 003Er		     test    al,seek_status
   3131	EE73  75 20			     jnz     j28
   3132	EE75  08 06 003Er		     or	     seek_status,al
   3133	EE79  B4 07			     mov     ah,07h
   3134	EE7B  E8 F8B1			     call    nec_output
   3135	EE7E  8A E2			     mov     ah,dl
   3136	EE80  E8 F8AC			     call    nec_output
   3137	EE83  E8 0089			     call    chk_stat_2	  ; получить и	обработать	       +
   3138				     прерывание
   3139	EE86  B4 07			     mov     ah,07h	     ; команда рекалибровки
   3140	EE88  E8 F8A4			     call    nec_output
   3141	EE8B  8A E2			     mov     ah,dl
   3142	EE8D  E8 F89F			     call    nec_output
   3143	EE90  E8 007C			     call    chk_stat_2
   3144	EE93  72 33			     jc	     j32	     ; сбой	позиционирования
   3145
   3146
   3147	EE95			     j28:
   3148	EE95  B4 0F			     mov     ah,0fh
   3149	EE97  E8 F895			     call    nec_output
   3150	EE9A  8A E2			     mov     ah,dl	     ; номер устройства
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 64
1840v4.asm



   3151	EE9C  E8 F890			     call    nec_output
   3152	EE9F  8A E5			     mov     ah,ch	     ; номер дорожки
   3153	EEA1  90				     nop
   3154	EEA2  F6 06 0010r 04		     test    byte ptr equip_flag,4
   3155	EEA7  75 02			     jnz     j300
   3156	EEA9  02 E4			     add     ah,ah	     ; удвоение	номера дорожки
   3157	EEAB			     j300:
   3158	EEAB  E8 F881			     call    nec_output
   3159	EEAE  E8 005E			     call    chk_stat_2	     ; получить	конечное	       +
   3160				     прерывание и
   3161								     ; считать состояние
   3162
   3163
   3164	EEB1  9C			     pushf		     ; сохранить значение	       +
   3165				     флажков
   3166	EEB2  BB 0012			     mov     bx,18
   3167	EEB5  E8 FF99			     call    get_parm
   3168	EEB8  51			     push    cx		     ; сохранить регистр
   3169	EEB9			     j29:
   3170	EEB9  B9 0226			     mov     cx,550	     ; организовать	цикл = 1 ms
   3171	EEBC  0A E4			     or	     ah,ah	     ; проверка	окончания	       +
   3172				     времени
   3173	EEBE  74 06			     jz	     j31
   3174	EEC0  E2 FE		     j30:    loop    j30	     ; задержка	1ms
   3175	EEC2  FE CC			     dec     ah		     ; вычитание из счетчика
   3176	EEC4  EB F3			     jmp     short j29	     ; возврат к началу цикла
   3177	EEC6			     j31:
   3178	EEC6  59			     pop     cx		     ; восстановить	состояние
   3179	EEC7  9D			     popf
   3180	EEC8			     j32:			     ; ошибка позиционирования
   3181	EEC8  C3			     ret	     ; возврат к программе, вызвавшей+
   3182				     прерывание
   3183	EEC9			     seek    endp
   3184				     ;-----------------------
   3185				     ; dma_setup
   3186				     ;	 Программа установки ПДП для операций	       +
   3187				     записи,считывания,верифи-
   3188				     ; кации.
   3189				     ;
   3190				     ;	 ВВОД
   3191				     ;
   3192				     ;	     (AL) - байт режима для ПДП,
   3193				     ;	     (ES:BX) - адрес считывания/записи		       +
   3194				     информации.
   3195				     ;
   3196				     ;------------------------
   3197	EEC9			     dma_setup proc  near
   3198	EEC9  51			     push    cx		     ; сохранить регистр
   3199	EECA  E6 0C			     out     dma+12,al
   3200	EECC  E6 0B			     out     dma+11,al	     ; вывод байта состояния
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 65
1840v4.asm



   3201	EECE  8C C0			     mov     ax,es	     ; получить	значение ES
   3202	EED0  B1 04			     mov     cl,4	     ; счетчик для сдвига
   3203	EED2  D3 C0			     rol ax,cl		     ; циклический сдвиг влево
   3204	EED4  8A E8			     mov     ch,al	     ;
   3205	EED6  24 F0			     and     al,0f0h	     ;
   3206	EED8  03 C3			     add     ax,bx
   3207	EEDA  73 02			     jnc     j33
   3208	EEDC  FE C5			     inc     ch		     ; перенос означает,	что	       +
   3209				     старшие 4 бита
   3210								     ; должны быть прибавлены
   3211	EEDE			     j33:
   3212	EEDE  50			     push    ax		     ; сохранить начальный адрес
   3213	EEDF  E6 04			     out     dma+4,al	     ; вывод младшей половины      +
   3214				     адреса
   3215	EEE1  8A C4			     mov     al,ah
   3216	EEE3  E6 04			     out     dma+4,al	     ; вывод старшей половины      +
   3217				     адреса
   3218	EEE5  8A C5			     mov     al,ch	     ; получить	4 старших бита
   3219	EEE7  24 0F			     and     al,0fh
   3220	EEE9  E6 81			     out     081h,al   ; вывод 4 старших бит на регистр+
   3221				     страниц
   3222
   3223				     ;	 Определение	счетчика
   3224
   3225	EEEB  8A E6			     mov     ah,dh	     ; номер сектора
   3226	EEED  2A C0			     sub     al,al	     ;
   3227	EEEF  D1 E8			     shr     ax,1	     ;
   3228	EEF1  50			     push    ax
   3229	EEF2  BB 0006			     mov     bx,6	     ; получить	параметры	       +
   3230				     байт/сектор
   3231	EEF5  E8 FF59			     call    get_parm
   3232	EEF8  8A CC			     mov     cl,ah	     ; счетчик сдига (0=128, 1=256 и т.д)
   3233	EEFA  58			     pop     ax
   3234	EEFB  D3 E0			     shl     ax,cl	     ; сдвиг
   3235	EEFD  48			     dec     ax		     ; -1
   3236	EEFE  50			     push    ax		     ; сохранить значение	       +
   3237				     счетчика
   3238	EEFF  E6 05			     out     dma+5,al	     ; вывести младший байт	       +
   3239				     счетчика
   3240	EF01  8A C4			     mov     al,ah
   3241	EF03  E6 05			     out     dma+5,al	     ; вывести старший байт	       +
   3242				     счетчика
   3243	EF05  59			     pop     cx		     ; восстановить	значение       +
   3244				     счетчика
   3245	EF06  58			     pop     ax		     ; восстановить	значение       +
   3246				     адреса
   3247	EF07  03 C1			     add     ax,cx	     ; проверка	заполнения 64K
   3248	EF09  59			     pop     cx		     ; восстановить	регистр
   3249	EF0A  B0 02			     mov     al,2	     ; режим для 8237
   3250	EF0C  E6 0A			     out     dma+10,al	     ; инициализация канала НГМД
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 66
1840v4.asm



   3251	EF0E  C3			     ret	     ; возврат к программе, вызвавшей+
   3252				     прерывание
   3253	EF0F			     dma_setup	     endp
   3254				     ;-----------------------
   3255				     ;chk_stat_2
   3256				     ;	 Эта	программа обрабатывает прерывания ,     +
   3257				     полученные после
   3258				     ; рекалибровки, позиционирования или сброса  +
   3259				     адаптера. Прерывание
   3260				     ; ожидается, принимается, обрабатывается	и     +
   3261				     результат	выдается программе,
   3262				     ; вызвавшей прерывание.
   3263				     ;
   3264				     ;	 ВЫВОД
   3265				     ;	       CY=0 - успешно,
   3266				     ;	       CY=1 - сбой (ошибка в	состоянии НГМД),
   3267				     ;--------------------------
   3268	EF0F			     chk_stat_2	proc near
   3269	EF0F  E8 001E			     call    wait_int	     ; ожидание	прерывания
   3270	EF12  72 14			     jc	     j34	     ; если	ошибка, то возврат
   3271	EF14  B4 08			     mov     ah,08h	     ; команда получения	       +
   3272				     состояния
   3273	EF16  E8 F816			     call    nec_output
   3274	EF19  E8 004F			     call    results	     ; считать результаты
   3275	EF1C  72 0A			     jc	     j34
   3276	EF1E  A0 0042r			     mov     al,nec_status   ; получить	первый байт	       +
   3277				     состояния
   3278	EF21  24 60			     and     al,060h	     ; выделить	биты
   3279	EF23  3C 60			     cmp     al,060h	     ; проверка
   3280	EF25  74 02			     jz	     j35	; если ошибка, то идти на метку
   3281	EF27  F8			     clc		     ; возврат
   3282	EF28			     j34:
   3283	EF28  C3			     ret	     ; возврат к программе, вызвавшей+
   3284				     прерывание
   3285	EF29			     j35:
   3286	EF29  80 0E 0041r 40		     or	     diskette_status,bad_seek
   3287	EF2E  F9			     stc		     ; ошибка в возвращенном	коде
   3288	EF2F  C3			     ret
   3289	EF30			     chk_stat_2	     endp
   3290				     ;---------------------------------
   3291				     ; wait_int
   3292				     ;	 Эта	программа ожидает прерывание,	которое +
   3293				     возникает	во время
   3294				     ; программы вывода.	Если устройство не	       +
   3295				     готово, ошибка	может быть
   3296				     ; возвращена.
   3297				     ;
   3298				     ;
   3299				     ;	 ВЫВОД
   3300				     ;		   CY=0	- успешно,
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 67
1840v4.asm



   3301				     ;		   CY=1	- сбой(состояние НГМД			       +
   3302				     устанавливается),
   3303				     ;-----------------------------------
   3304	EF30			     wait_int proc   near
   3305	EF30  FB			     sti		     ; установить признак	       +
   3306				     разрешения прерывания
   3307	EF31  53			     push    bx
   3308	EF32  51			     push    cx		     ; сохранить регистр
   3309	EF33  B3 02			     mov     bl,2	     ; количество циклов
   3310	EF35  33 C9			     xor     cx,cx	     ; длителность одного цикла  +
   3311				     ожидания
   3312	EF37			     j36:
   3313	EF37  F6 06 003Er 80		     test    seek_status,int_flag  ; опрос	наличия		       +
   3314				     прерывания
   3315	EF3C  75 0C			     jnz     j37
   3316	EF3E  E2 F7			     loop    j36	     ; возврат к началу цикла
   3317	EF40  FE CB			     dec     bl
   3318	EF42  75 F3			     jnz     j36
   3319	EF44  80 0E 0041r 80		     or	     diskette_status,time_out
   3320	EF49  F9			     stc		     ; возврат при ошибке
   3321	EF4A			     j37:
   3322	EF4A  9C			     pushf		     ; сохранить текущие	       +
   3323				     признаки
   3324	EF4B  80 26 003Er 7F		     and     seek_status,not int_flag
   3325	EF50  9D			     popf		     ; восстановить	признаки
   3326	EF51  59			     pop     cx
   3327	EF52  5B			     pop     bx		     ; восстановить	регистр
   3328	EF53  C3			     ret	     ; возврат к программе, вызвавшей+
   3329				     прерывание
   3330	EF54			     wait_int	     endp
   3331
   3332	EF54  03*(00)				     db	3 dup(0)
   3333
   3334				     ;---------------------------
   3335				     ;disk_int
   3336				     ;	 Эта	программа обрабатывает прерывания       +
   3337				     НГМД
   3338				     ;
   3339				     ;	 ВЫВОД  - признак прерывания			       +
   3340				     устанавливается в SEEK_STATUS.
   3341				     ;---------------------------
   3342	EF57			     disk_int proc   far
   3343	EF57  FB			     sti		     ; установить признак	       +
   3344				     разрешения прерывания
   3345	EF58  1E			     push    ds
   3346	EF59  50			     push    ax
   3347	EF5A  B8 0040			     mov     ax,dat
   3348	EF5D  8E D8			     mov     ds,ax
   3349	EF5F  80 0E 003Er 80		     or	     seek_status,int_flag
   3350	EF64  B0 20			     mov     al,20h	     ; установить конец		       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 68
1840v4.asm



   3351				     прерывания
   3352	EF66  E6 20			     out     20h,al	     ; послать конец прерывания  +
   3353				     в	порт
   3354	EF68  58			     pop     ax
   3355	EF69  1F			     pop     ds
   3356	EF6A  CF			     iret		     ; возврат из прерывания
   3357	EF6B			     disk_int	     endp
   3358				     ;----------------------------
   3359				     ;
   3360				     ;	 Эта	программа считывет все, что контроллер+
   3361				     адаптера НГМД указывает
   3362				     ; программе, следующей за прерыванием.
   3363				     ;
   3364				     ;
   3365				     ;	 ВЫВОД
   3366				     ;		CF=0 - успешно,
   3367				     ;		CF=1 - сбой
   3368				     ;----------------------------
   3369	EF6B			     results proc    near
   3370	EF6B  FC			     cld
   3371	EF6C  BF 0042r			     mov     di,offset nec_status
   3372	EF6F  51			     push    cx		     ; сохранить счетчик
   3373	EF70  52			     push    dx
   3374	EF71  53			     push    bx
   3375	EF72  B3 07			     mov     bl,7	     ; установить длину области  +
   3376				     состояния
   3377
   3378
   3379	EF74			     j38:
   3380	EF74  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3381	EF76  BA 03F4			     mov     dx,03f4h	     ; адрес порта
   3382	EF79			     j39:
   3383	EF79  EC			     in	     al,dx	     ; получить	состояние
   3384	EF7A  A8 80			     test    al,080h	     ; готово ?
   3385	EF7C  75 0C			     jnz     j40a
   3386	EF7E  E2 F9			     loop    j39
   3387	EF80  80 0E 0041r 80		     or	     diskette_status,time_out
   3388	EF85			     j40:			     ; ошибка
   3389	EF85  F9			     stc		     ; возврат по ошибке
   3390	EF86  5B			     pop     bx
   3391	EF87  5A			     pop     dx
   3392	EF88  59			     pop     cx
   3393	EF89  C3			     ret
   3394
   3395				     ;	 Проверка признака направления
   3396
   3397	EF8A  EC		     j40a:   in	     al,dx	     ; получить	регистр		       +
   3398				     состояния
   3399	EF8B  A8 40			     test    al,040h	     ; сбой	позиционирования
   3400	EF8D  75 07			     jnz     j42     ; если	все нормально, считать      +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 69
1840v4.asm



   3401				     состояние
   3402	EF8F			     j41:
   3403	EF8F  80 0E 0041r 20		     or	     diskette_status,bad_nec
   3404	EF94  EB EF			     jmp     short j40	     ; ошибка
   3405
   3406				     ;	 Считывание состояния
   3407
   3408	EF96			     j42:
   3409	EF96  42			     inc     dx		     ; указать порт
   3410	EF97  EC			     in	     al,dx	     ; ввести данные
   3411	EF98  88 05			     mov    byte ptr [di],al  ;	сохранить байт
   3412	EF9A  47			     inc     di		     ; увеличить адрес
   3413	EF9B  B9 000A			     mov     cx,000ah	     ; счетчик
   3414	EF9E  E2 FE		     j43:    loop    j43
   3415	EFA0  4A			     dec     dx
   3416	EFA1  EC			     in	     al,dx	     ; получить	состояние
   3417	EFA2  A8 10			     test    al,010h
   3418	EFA4  74 06			     jz	     j44
   3419	EFA6  FE CB			     dec     bl		     ; -1 из количества циклов
   3420	EFA8  75 CA			     jnz     j38
   3421	EFAA  EB E3			     jmp     short j41	     ; сигнал неверен
   3422
   3423	EFAC			     j44:
   3424	EFAC  5B			     pop     bx		     ; восстановить	регистры
   3425	EFAD  5A			     pop     dx
   3426	EFAE  59			     pop     cx
   3427	EFAF  C3			     ret		     ; возврат из прерывания
   3428	EFB0			     results endp
   3429				     ;-----------------------------
   3430				     ; num_trans
   3431				     ;	 Эта	программа вычисляет количество	       +
   3432				     секторов, которое действительно
   3433				     ; было	записано или	считано с НГМД
   3434				     ;
   3435				     ;	 ВВОД
   3436				     ;	      (CH) - цилиндр,
   3437				     ;	      (CL) - сектор.
   3438				     ;
   3439				     ;	 ВЫВОД
   3440				     ;	      (AL) - количество действительно		       +
   3441				     переданных секторов.
   3442				     ;
   3443				     ;------------------------------
   3444	EFB0			     num_trans proc  near
   3445	EFB0  A0 0045r			     mov     al,nec_status+3  ;	получить последний	       +
   3446				     цилиндр
   3447	EFB3  3A C5			     cmp     al,ch	     ; сравнить	со стартовым
   3448	EFB5  A0 0047r			     mov     al,nec_status+5  ;	получить последний сектор
   3449	EFB8  74 0A			     jz	     j45
   3450	EFBA  BB 0008			     mov     bx,8
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 70
1840v4.asm



   3451	EFBD  E8 FE91			     call    get_parm	     ; получить	значение EOT
   3452	EFC0  8A C4			     mov     al,ah	     ; AH в AL
   3453	EFC2  FE C0			     inc     al		     ; EOT+1
   3454	EFC4  2A C1		     j45:    sub     al,cl	 ; вычисление	стартового	       +
   3455				     номера из конечного
   3456	EFC6  C3			     ret
   3457	EFC7			     num_trans endp
   3458
   3459				     ;-------------------------------
   3460				     ; disk_base
   3461				     ;	 Эта	программа устанавливает параметры,      +
   3462				     требуемые	для операций
   3463				     ; НГМД.
   3464				     ;--------------------------------
   3465
   3466	EFC7			     disk_base label byte
   3467	EFC7  CF			     db	     11001111b	     ;
   3468	EFC8  02			     db	     2		     ;
   3469	EFC9  25			     db	     motor_wait	     ;
   3470	EFCA  02			     db	     2		     ;
   3471	EFCB  08			     db	     8		     ;
   3472	EFCC  2A			     db	     02ah	     ;
   3473	EFCD  FF			     db	     0ffh	     ;
   3474	EFCE  50			     db	     050h	     ;
   3475	EFCF  F6			     db	     0f6h	     ;
   3476	EFD0  19			     db	     25		     ;
   3477	EFD1  04			     db	     4		     ;
   3478				     ;--- int 17-------------------
   3479				     ;	 Программа связи с печатающим устройством
   3480				     ;
   3481				     ;	 Эта	программа выполняет три функции, код    +
   3482				     которых задается
   3483				     ; в регистре AH:
   3484				     ;	 AH=0 -	печать знака, заданного в регистре	AL.    +
   3485				     Если в
   3486				     ; результате выполнения функции	знак не	       +
   3487				     напечатается, то в регистре
   3488				     ; AL устанавливается "1" (тайм-аут);
   3489				     ;	 AH=1 -	инициализация порта печати. После	       +
   3490				     выполнения функции
   3491				     ; в регистре AH находится байт состояния	       +
   3492				     печатающего устройства;
   3493				     ;	 AH=2H - считывание байта состояния		       +
   3494				     печатающего устройства.
   3495				     ;	 В регистре DX	необходимо задать ноль.
   3496				     ;	 Значение разрядов байта состояния	       +
   3497				     печатающего устройства:
   3498				     ;	 0 - тайм-аут;
   3499				     ;	 3 - ошибка ввода-вывода;
   3500				     ;	 4 - выбран (SLCT);
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 71
1840v4.asm



   3501				     ;	 5 - конец	бумаги (PE);
   3502				     ;	 6 - подтверждение;
   3503				     ;	 7 - занято.
   3504				     ;------------------------------
   3505
   3506					     assume  cs:code,ds:data
   3507	EFD2			     printer_io	proc far
   3508	EFD2  FB			     sti		     ; установить признак	       +
   3509				     разрешения прерывания
   3510	EFD3  1E			     push    ds		     ; сохранить сегмент
   3511	EFD4  52			     push    dx
   3512	EFD5  56			     push    si
   3513	EFD6  51			     push    cx
   3514	EFD7  53			     push    bx
   3515	EFD8  BE 0040			     mov     si,dat
   3516	EFDB  8E DE			     mov     ds,si	     ; установить сегмент
   3517	EFDD  8B F2			     mov     si,dx
   3518	EFDF  D1 E6			     shl     si,1
   3519	EFE1  8B 94 0008r		     mov     dx,printer_base[si]  ; получить базовый адрес
   3520									  ; печатающего устройства
   3521	EFE5  0B D2			     or	     dx,dx		; печать подключена ?
   3522	EFE7  74 0C			     jz	     b1			; нет, возврат
   3523	EFE9  0A E4			     or	     ah,ah		; AH=0 ?
   3524	EFEB  74 0E			     jz	     b2			; да,	переход к печати	       +
   3525				     знака
   3526	EFED  FE CC			     dec     ah			; AH=1 ?
   3527	EFEF  74 42			     jz	     b8			; да,	переход к		       +
   3528				     инициализации
   3529	EFF1  FE CC			     dec     ah			; AH=2 ?
   3530	EFF3  74 2A			     jz	     b5		; да,	переход к считыванию	       +
   3531				     байта	состояния
   3532
   3533				     ;	  Выход из программы
   3534
   3535	EFF5			     b1:
   3536	EFF5  5B			     pop     bx		     ; восстановить	регистры
   3537	EFF6  59			     pop     cx
   3538	EFF7  5E			     pop     si
   3539	EFF8  5A			     pop     dx
   3540	EFF9  1F			     pop     ds
   3541	EFFA  CF			     iret
   3542
   3543				     ;	 Печать знака, заданного в	AL
   3544
   3545	EFFB			     b2:
   3546	EFFB  50			     push    ax
   3547	EFFC  B3 0A			     mov     bl,10	     ; количество циклов	       +
   3548				     ожидания
   3549	EFFE  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3550	F000  EE			     out     dx,al	     ; вывести символ в порт
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 72
1840v4.asm



   3551	F001  42			     inc     dx		     ; -1 из адреса порта
   3552	F002			     b3:			     ; ожидание	BUSY
   3553	F002  EC			     in	     al,dx	     ; получить	состояние
   3554	F003  8A E0			     mov     ah,al	     ; переслать состояние в	AH
   3555	F005  A8 80			     test    al,80h	     ; печать занята ?
   3556	F007  75 0E			     jnz     b4		     ; переход, если	да
   3557	F009  E2 F7			     loop    b3		     ; цикл	ожидания закончился ?
   3558	F00B  FE CB			     dec     bl		     ; да, -1	из количества циклов
   3559	F00D  75 F3			     jnz     b3		     ; время ожидания истекло ?
   3560	F00F  80 CC 01			     or	     ah,1	     ; да, уст бит "тайм-аут"
   3561	F012  80 E4 F9			     and     ah,0f9h	     ;
   3562	F015  EB 14			     jmp     short b7
   3563	F017			     b4:			     ; OUT_STROBE
   3564	F017  B0 0D			     mov     al,0dh	     ; установить высокий строб
   3565	F019  42			     inc     dx	     ; стробирование битом 0 порта C    +
   3566				     для 8255
   3567	F01A  EE			     out     dx,al
   3568	F01B  B0 0C			     mov     al,0ch	     ; установить низкий строб
   3569	F01D  EE			     out     dx,al
   3570	F01E  58			     pop     ax		     ;
   3571
   3572				     ;	 Считывание байта состояния печатающего     +
   3573				     устройства
   3574
   3575	F01F			     b5:
   3576	F01F  50			     push    ax		     ; сохранить регистр
   3577	F020			     b6:
   3578	F020  8B 94 0008r		     mov     dx,printer_base[si]  ; получить адрес	печати
   3579	F024  42			     inc     dx
   3580	F025  EC			     in	     al,dx	     ; получить	состояние печати
   3581	F026  8A E0			     mov     ah,al
   3582	F028  80 E4 F8			     and     ah,0f8h
   3583	F02B			     b7:
   3584	F02B  5A			     pop     dx
   3585	F02C  8A C2			     mov     al,dl
   3586	F02E  80 F4 48			     xor     ah,48h
   3587	F031  EB C2			     jmp     short b1	     ; к выходу из программы
   3588
   3589				     ;	 Инициализация порта печатающего		       +
   3590				     устройства
   3591
   3592	F033			     b8:
   3593	F033  50			     push    ax
   3594	F034  83 C2 02			     add     dx,2	     ; указать порт
   3595	F037  B0 08			     mov     al,8
   3596	F039  EE			     out     dx,al
   3597	F03A  B8 03E8			     mov     ax,1000	      ;	время задержки
   3598	F03D			     b9:
   3599	F03D  48			     dec     ax		      ;	цикл задержки
   3600	F03E  75 FD			     jnz     b9
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 73
1840v4.asm



   3601	F040  B0 0C			     mov     al,0ch
   3602	F042  EE			     out     dx,al
   3603	F043  EB DB			     jmp     short b6	 ; переход к считыванию байта   +
   3604				     состояния
   3605	F045			     printer_io	     endp
   3606				     ;--- int 10------------------
   3607				     ;
   3608				     ;	 Программа обработки прерывания ЭЛИ
   3609				     ;
   3610				     ;	 Эта	программа обеспечивает выполнение       +
   3611				     функций обслуживания
   3612				     ; адаптера	ЭЛИ,	код которых задается в	       +
   3613				     регистре AH:
   3614				     ;
   3615				     ;	  AH=0	 - установить	режим работы	адаптера       +
   3616				     ЭЛИ. В	результате
   3617				     ; выполнения функции в регистре AL могут	       +
   3618				     устанавливаться следу-
   3619				     ; ющие	режимы:
   3620				     ;	  0 - 40х25, черно-белый, алфавитно-цифровой;
   3621				     ;	  1 - 40х25, цветной, алфавитно-цифровой;
   3622				     ;	  2 - 80х25, черно-белый, алфавитно-цифровой;
   3623				     ;	  3 - 80х25, цветной, алфавитно-цифровой;
   3624				     ;	  4 - 320х200,	цветной,	графический;
   3625				     ;	  5 - 320х200,	черно-белый, графический;
   3626				     ;	  6 - 640х200,	черно-белый, графический;
   3627				     ;	  7 - 80х25, черно-белый, алфавитно-цифровой.
   3628				     ;	  Режимы 0 - 6 используются для ЭМ адаптера     +
   3629				     ЭЛИ, режим	7
   3630				     ; используется	для монохромного	черно-белого+
   3631				     80х25 адаптера.
   3632				     ;
   3633				     ;	  AH=1	 - установить	размер курсора. Функция    +
   3634				     задает размер кур-
   3635				     ; сора	и управление	им.
   3636				     ;	 Разряды	0 - 4 регистра CL определяют конечную+
   3637				     границу курсора,
   3638				     ; разряды 0	- 4 регистра CH	- начальную границу    +
   3639				     курсора.
   3640				     ;	  Разряды 6 и 5	задают управление курсором:
   3641				     ;	  00 - курсор мерцает с частотой,	задаваемой   +
   3642				     аппаратурно;
   3643				     ;	  01 - курсор отсутствует.
   3644				     ;	  Аппаратурно всегда вызывается мерцание    +
   3645				     курсора с частотой,
   3646				     ; равной 1/16 частоты	кадровой развертки.
   3647				     ;
   3648				     ;	  AH=2	 - установить	текущую позицию курсора.  +
   3649				     Для выполнения
   3650				     ; функции необходимо задать	следующие	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 74
1840v4.asm



   3651				     координаты курсора:
   3652				     ;	  BH - страница;
   3653				     ;	  DX - строка и колонка.
   3654				     ; При графическом режиме регистр BH=0.
   3655				     ;
   3656				     ;	  AH=3	 - считать текущее положение курсора.    +
   3657				     Функция вос-
   3658				     ; станавливает	текущее положение курсора.      +
   3659				     Перед	выполнением
   3660				     ; функции в регистре BH необходимо задать	       +
   3661				     страницу.
   3662				     ;	  После выполнения программы регистры	       +
   3663				     содержат следующую
   3664				     ; информацию:
   3665				     ;	  DH - строка;
   3666				     ;	  DL - колонка;
   3667				     ;	  CX - размер курсора и управление им.
   3668				     ;
   3669				     ;	  AH=5	- установить активную	страницу буфера  +
   3670				     адаптера.
   3671				     ; Функция используется только в			       +
   3672				     алфавитно-цифровом режиме.
   3673				     ; Для ее выполнения	необходимо в	регистре AL    +
   3674				     задать страницу:
   3675				     ;	  0-7 -	для режимов 0	и 1;
   3676				     ;	  0-3 -	для режимов 2	и 3.
   3677				     ;	  Значения режимов те же, что и для функции   +
   3678				     AH=0.
   3679				     ;
   3680				     ;	  AH=6	 - переместить блок символов вверх по    +
   3681				     экрану.
   3682				     ; Функция перемещает символы в пределах	       +
   3683				     заданной области вверх
   3684				     ; по экрану, заполняя нижние	строки пробелами+
   3685				     с	заданным атрибу-
   3686				     ; том.
   3687				     ;	  Для выполнения функции необходимо задать +
   3688				     следующие	пара-
   3689				     ; метры;
   3690				     ;	  AL - количество перемещаемых строк. Для	       +
   3691				     очистки блока AL=0;
   3692				     ;	  CX - координаты левого верхнего угла блока  +
   3693				     (строка,колонка);
   3694				     ;	  DX - координаты правого нижнего угла блока;
   3695				     ;	  BH - атрибут символа пробела.
   3696				     ;
   3697				     ;	  AH=7	 - переместить блок символов вниз.	       +
   3698				     Функция перемещает
   3699				     ; символы в пределах заданной области вниз по+
   3700				     экрану, заполняя
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 75
1840v4.asm



   3701				     ; верхние строки пробелами с заданным	       +
   3702				     атрибутом.
   3703				     ;	  Для выполнения функции необходимо задать +
   3704				     те же параметры,
   3705				     ; что и для	функции AH=6H.
   3706				     ;
   3707				     ;	  AH=8	 - считать атрибут и код символа,	       +
   3708				     находящегося в теку-
   3709				     ; щей позиции курсора. Функция считывает	       +
   3710				     атрибут и код символа
   3711				     ; и помещает их	в регистр AX (AL - код символа, AH - +
   3712				     атрибут
   3713				     ; символа).
   3714				     ;	  Для выполнения функции необходимо в	       +
   3715				     регистре BH задать
   3716				     ; страницу	(только для алфавитно-цифрового     +
   3717				     режима).
   3718				     ;
   3719				     ;	  AH=9	 - записать атрибут и код символа в	       +
   3720				     текущую позицию
   3721				     ; курсора. Функция помещает код символа и	его +
   3722				     атрибут в текущую
   3723				     ; позицию курсора.
   3724				     ;	  Для выполнения функции необходимо задать +
   3725				     следующие	параметры:
   3726				     ;	  BH - отображаемая	страница (только для	       +
   3727				     алфавитно-цифрового
   3728				     ; режима;
   3729				     ;	  CX - количество записываемых символов;
   3730				     ;	  AL - код символа;
   3731				     ;	  BL - атрибут символа для				       +
   3732				     алфавитно-цифрового режима	или
   3733				     ; цвет	знака для графики. При записи точки       +
   3734				     разряд 7 регистра BL=1.    =1
   3735				     ;
   3736				     ;	  AH=10	- записать символ	в текущую позицию       +
   3737				     курсора. Атрибут
   3738				     ; не изменяется.
   3739				     ;	  Для выполнения функции необходимо задать +
   3740				     следующие	параметры:
   3741				     ;	  BH - отображаемая	страница (только для	       +
   3742				     алфавитно-цифрового
   3743				     ; режима);
   3744				     ;	  CX - количество повторений символа;
   3745				     ;	  AL - код записываемого символа.		       +
   3746				     ся
   3747				     ;									   -
   3748				     ;	  AH=11	- установить цветовую	палитру.		       +
   3749				     ь
   3750				     ;	  При выполнении функции используются два   +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 76
1840v4.asm



   3751				     варианта.
   3752				     ;	  Для первого	варианта в регистре BH		       +
   3753				     задается ноль,а в регистре
   3754				     ; BL - значения пяти младших разрядов,		       +
   3755				     используемых для выбора
   3756				     ; цветовой	палитры (цвет заднего	плана для      +
   3757				     цветного графического
   3758				     ; режима 320х200 или цвет каймы	для цветного	       +
   3759				     графического режима
   3760				     ; 40х25).
   3761				     ;	  Для второго	варианта в регистре BH		       +
   3762				     задается "1", а в регистре
   3763				     ; BL - номер цветовой	палитры (0 или 1).
   3764				     ;	  Палитра 0 состоит из зеленого	(1), красного  +
   3765				     (2) и желтого (3)
   3766				     ; цветов, палитра 1 -	из голубого (1),		       +
   3767				     фиолетового (2)	и белого	(3).
   3768				     ; При работе с видеомонитором цвета палитры   +
   3769				     заменяются соответству-
   3770				     ; ющими градациями цвета.
   3771				     ;	  Результатом выполнения функции является  +
   3772				     установка	цветовой       )
   3773				     ; палитры в регистре выбора цвета (3D9).
   3774				     ;
   3775				     ;	  AH=12	 - записать точку.	Функция определяет    +
   3776				     относительный
   3777				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3778				     должна быть записана
   3779				     ; точка с заданными	координатами.
   3780				     ;	  Для выполнения функции необходимо задать +
   3781				     следующие	параметры:    ,
   3782				     ;	  DX - строка;
   3783				     ;	  CX - колонка;
   3784				     ;	  AL - цвет	выводимой точки. Если	разряд 7	       +
   3785				     регистра AL уста-	 3)
   3786				     ; новлен в "1", то выполняется	операция XOR над    +
   3787				     значением	точки
   3788				     ; из буфера и значением точки из регистра	AL.
   3789				     ;
   3790				     ;	  AH=13	- считать точку. Функция определяет       +
   3791				     относительный
   3792				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3793				     должна быть считана
   3794				     ; точка с заданными	координатами.
   3795				     ;	  Перед выполнением программы в регистрах   +
   3796				     задаются те же	парамет-
   3797				     ; ры, что и для функции AH=12.
   3798				     ;	 После выполнения программы в регистре	AL     +
   3799				     находится	значение
   3800				     ; считанной точки.
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 77
1840v4.asm



   3801				     ;
   3802				     ;	  AH=14	- записать телетайп. Функция выводит     +
   3803				     символ в буфер
   3804				     ; ЭЛИ с одновременной установкой позиции	       +
   3805				     курсора и передвижением
   3806				     ; курсора на экране.
   3807				     ;	  После записи символа в последнюю позицию  +
   3808				     строки выполняется
   3809				     ; автоматический переход на	новую строку.       +
   3810				     Если страница экрана
   3811				     ; заполнена, выполняется перемещение на одну +
   3812				     строку вверх. Осво-
   3813				     ; бодившаяся строка заполняется	значением     +
   3814				     атрибута символа для
   3815				     ; алфавитно-цифрового режима или нулями -	для +
   3816				     графики.
   3817				     ;	  После записи очередного символа курсор     +
   3818				     устанавливается
   3819				     ; в следующую позицию.
   3820				     ;	  Для выполнения программы необходимо	       +
   3821				     задать следующие параметры:
   3822				     ;	  AL - код выводимого символа;
   3823				     ;	  BL - цвет	переднего плана (для графического +
   3824				     режима).
   3825				     ;	  Программа обрабатывает следующие	       +
   3826				     служебные	символы:
   3827				     ;	  0BH -	сдвиг курсора на одну	позицию (без	       +
   3828				     очистки);
   3829				     ;	  0DH -	перемещение курсора в начало строки;
   3830				     ;	  0AH -	перемещение курсора на следующую	       +
   3831				     строку;
   3832				     ;	  07H -	звуковой сигнал.
   3833				     ;
   3834				     ;	  AH=15	- получить текущее состояние ЭЛИ.	       +
   3835				     Функция считывает
   3836				     ; текущее состояние ЭЛИ	из памяти и размещает+
   3837				     его в следующих
   3838				     ; регистрах;
   3839				     ;	  AH - количество колонок (40 или 80);
   3840				     ;	  AL - текущий режим (0-7).	Значения режимов	те   +
   3841				     же, что и для
   3842				     ; функции AH=0;
   3843				     ;	  BH - номер активной страницы.
   3844				     ;
   3845				     ;	 AH=17 - загрузить знакогенератор		       +
   3846				     пользователя. Функция дает
   3847				     ; возможность пользователю загружать	       +
   3848				     знакогенератор любым, необ-
   3849				     ; ходимым ему алфавитом.
   3850				     ;	  Для выполнения программы необходимо	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 78
1840v4.asm



   3851				     задать следующие параметры:
   3852				     ;	  ES:BP	- адрес таблицы, сформированной	       +
   3853				     пользователем;
   3854				     ;	  CX	- количество передаваемых	символов;
   3855				     ;	  BL	- код символа, начиная	с которого	       +
   3856				     загружается таблица
   3857				     ; пользователя;
   3858				     ;	  BH - количество байт на знакоместо;
   3859				     ;	  DL - идентификатор таблицы пользователя;
   3860				     ;	  AL - режим:
   3861				     ;		       AL=0   -	 загрузить знакогенератор
   3862				     ;		       AL=1   -	 выдать идентификатор таблицы
   3863				     ;		       AL=3   -	 загрузить вторую половину      +
   3864				     знакогенератора:
   3865				     ;				 BL=0 -	загрузить вторую		       +
   3866				     половину знакогене
   3867				     ;				 ратора из ПЗУ кодовой таблицы+
   3868				     с	русским
   3869				     ;				 алфавитом,
   3870				     ;				 BL=1 -	загрузить вторую		       +
   3871				     половину знакогене
   3872				     ;				 ратора из ПЗУ стандартной       +
   3873				     кодовой таблицей
   3874				     ;				 ASCII (USA)
   3875				     ;	 На выходе:
   3876				     ;	     AH	  -  количество байт на	знакоместо
   3877				     ;	     AL	  -  идентификатор	таблицы пользователя
   3878				     ;	     CF=1   -	операция завершена успешно
   3879				     ;
   3880				     ;	  AH=19	- переслать цепочку символов. Функция   +
   3881				     позволяет	пере-
   3882				     ; сылать символы четырьмя способами,	тип	       +
   3883				     которых задается в
   3884				     ; регистре	AL:
   3885				     ;	  AL=0 - символ, символ, символ, ...
   3886				     ; В регистре BL задается атрибут, курсор не       +
   3887				     движется;
   3888				     ;	  AL=1 - символ, символ, символ, ...
   3889				     ; В регистре BL задается атрибут, курсор	       +
   3890				     движется;
   3891				     ;	  AL=2H	- символ,	атрибут,	символ, атрибут, ...
   3892				     ; Курсор не движется;
   3893				     ;	  AL=3H	- символ,	атрибут,	символ, атрибут, ...
   3894				     ; Курсор движется.
   3895				     ;	   Кроме того необходимо задать в регистрах:
   3896				     ;	  ES:BP	- начальный адрес	цепочки символов;
   3897				     ;	  CX	- количество символов;
   3898				     ;	  DH,DL	- строку и колонку для	начала записи;
   3899				     ;	  BH	- номер страницы.
   3900				     ;-----------------------------------------------------------
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 79
1840v4.asm



   3901
   3902					     assume cs:code,ds:data,es:video_ram
   3903
   3904	F045			     m1	     label   word	     ; таблица функций адаптера  +
   3905				     ЭЛИ
   3906	F045  F0FCr			     dw	     offset  set_mode
   3907	F047  F1CFr			     dw	     offset  set_ctype
   3908	F049  F1F0r			     dw	     offset  set_cpos
   3909	F04B  F21Ar			     dw	     offset  read_cursor
   3910	F04D  F7A9r			     dw	     offset  read_lpen
   3911	F04F  F230r			     dw	     offset  act_disp_page
   3912	F051  F29Cr			     dw	     offset  scroll_up
   3913	F053  F341r			     dw	     offset  scroll_down
   3914	F055  F37Dr			     dw	     offset  read_ac_current
   3915	F057  F3C3r			     dw	     offset  write_ac_current
   3916	F059  F3F6r			     dw	     offset  write_c_current
   3917	F05B  F254r			     dw	     offset  set_color
   3918	F05D  F438r			     dw	     offset  write_dot
   3919	F05F  F427r			     dw	     offset  read_dot
   3920	F061  F966r			     dw	     offset  write_tty2
   3921	F063  F27Ar			     dw	     offset  video_state
   3922	      =0020		     m1l     equ     20h
   3923
   3924	F065			     video_io proc   near
   3925	F065  FB			     sti		 ; установить	признак		       +
   3926				     разрешения прерывания
   3927	F066  FC			     cld
   3928	F067  06			     push    es
   3929	F068  1E			     push    ds
   3930	F069  52			     push    dx
   3931	F06A  51			     push    cx
   3932	F06B  53			     push    bx
   3933	F06C  56			     push    si
   3934	F06D  57			     push    di
   3935	F06E  50			     push    ax		     ; сохранить значение AX
   3936	F06F  8A C4			     mov     al,ah	     ; переслать AH в	AL
   3937	F071  32 E4			     xor     ah,ah	     ; обнулить	старший байт
   3938	F073  D1 E0			     sal     ax,1	     ; умножить	на 2
   3939	F075  8B F0			     mov     si,ax	     ; поместить в SI
   3940	F077  3D 0020			     cmp     ax,m1l	     ; проверка	длины таблицы      +
   3941				     функций
   3942	F07A  72 04			     jb	     m2		     ; адаптера	ЭЛИ
   3943	F07C  58			     pop     ax		     ; восстановить	AX
   3944	F07D  E9 0147			     jmp     video_return    ; выход, если AX неверно
   3945	F080  B8 0040		     m2:     mov     ax,dat
   3946	F083  8E D8			     mov     ds,ax
   3947	F085  B8 B800			     mov     ax,0b800h	     ; сегмент для цветного	       +
   3948				     адаптера
   3949	F088  8B 3E 0010r		     mov     di,equip_flag   ; получить	тип адаптера
   3950	F08C  81 E7 0030		     and     di,30h	     ; выделить	биты режима ;	db 81h,+
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 80
1840v4.asm



   3951				     0E7h,30h,00h  ; ###Gleb###
   3952	F090  83 FF 30			     cmp     di,30h	     ; есть	установка ч/б	       +
   3953				     адаптера ?
   3954	F093  75 03			     jne     m3
   3955	F095  B8 B000			     mov     ax,0b000h	     ; уст адреса буфера	для ч/б   +
   3956				     адаптера
   3957	F098  8E C0		     m3:     mov     es,ax
   3958	F09A  58			     pop     ax		     ; восстановить	значение
   3959	F09B  8A 26 0049r		     mov     ah,crt_mode     ; получить	текущий режим в AH
   3960	F09F  2E: FF A4	F045r		     jmp   cs:m1[si]
   3961	F0A4			     video_io	     endp
   3962				     ;-------------------------
   3963				     ; set mode
   3964
   3965				     ;	 Эта	программа устанавливает режим работы  +
   3966				     адаптера ЭЛИ
   3967				     ;
   3968				     ;	 ВХОД
   3969				     ;		(AL) - содержит	значение режима.
   3970				     ;
   3971				     ;--------------------------
   3972
   3973				     ;	 Таблицы	параметров ЭЛИ
   3974
   3975	F0A4			     video_parms label	     byte
   3976
   3977				     ;	 Таблица	инициализации
   3978
   3979	F0A4  38 28 2D 0A 1F 06	19	     db	     38h,28h,2dh,0ah,1fh,6,19h	 ; уст для 40х25
   3980
   3981	F0AB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3982	F0B0  00 00 00 00		     db	     0,0,0,0
   3983	      =0010		     m4	     equ     10h
   3984
   3985	F0B4  71 50 5A 0A 1F 06	19	     db	     71h,50h,5ah,0ah,1fh,6,19h	 ; уст для 80х25
   3986
   3987	F0BB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3988	F0C0  00 00 00 00		     db	     0,0,0,0
   3989
   3990	F0C4  38 28 2D 0A 7F 06	64	     db	     38h,28h,2dh,0ah,7fh,6,64h	 ; уст для графики
   3991
   3992	F0CB  70 02 01 06 07		     db	     70h,2,1,6,7
   3993	F0D0  00 00 00 00		     db	     0,0,0,0
   3994
   3995	F0D4  62 50 50 0F 19 06	19	     db	     62h,50h,50h,0fh,19h,6,19h	 ; уст для 80х25	ч/б	       +
   3996				     адаптера
   3997
   3998	F0DB  19 02 0D 0B 0C		     db	     19h,2,0dh,0bh,0ch
   3999	F0E0  00 00 00 00		     db	     0,0,0,0
   4000
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 81
1840v4.asm



   4001	F0E4			     m5	     label   word	     ; таблица для			       +
   4002				     восстановления длины
   4003	F0E4  0800			     dw	     2048
   4004	F0E6  1000			     dw	     4096
   4005	F0E8  4000			     dw	     16384
   4006	F0EA  4000			     dw	     16384
   4007
   4008				     ;	 Колонки
   4009	F0EC			     m6	     label   byte
   4010	F0EC  28 28 50 50 28 28	50+	     db	     40,40,80,80,40,40,80,80
   4011	      50
   4012
   4013
   4014				     ;--- c_reg_tab
   4015	F0F4			     m7	     label   byte	     ; таблица установки режима
   4016	F0F4  2C 28 2D 29 2A 2E	1E+	     db	     2ch,28h,2dh,29h,2ah,2eh,1eh,29h
   4017	      29
   4018
   4019
   4020	F0FC			     set_mode proc   near
   4021	F0FC  BA 03D4			     mov     dx,03d4h	     ; адрес цветного адаптера
   4022	F0FF  B3 00			     mov     bl,0     ;	уст значение	для цветного	       +
   4023				     адаптера
   4024	F101  83 FF 30			     cmp     di,30h	     ; установлен ч/б адаптер ?
   4025	F104  75 07			     jne     m8		     ; переход, если	указан	       +
   4026				     цветной
   4027	F106  B0 07			     mov     al,7	     ; указать ч/б режим
   4028	F108  BA 03B4			     mov     dx,03b4h	     ; адрес для ч/б адаптера
   4029	F10B  FE C3			     inc     bl		     ; установить режим для ч/б    +
   4030				     адаптера
   4031	F10D  8A E0		     m8:     mov     ah,al	     ; сохранить режим в	AH
   4032	F10F  A2 0049r			     mov     crt_mode,al
   4033	F112  89 16 0063r		     mov     addr_6845,dx    ; сохранить адрес		       +
   4034				     управляющего порта
   4035								     ; для активного дисплея
   4036	F116  1E			     push    ds
   4037	F117  50			     push    ax		     ; сохранить режим
   4038	F118  52			     push    dx		     ; сохранить значение порта  +
   4039				     вывода
   4040	F119  83 C2 04			     add     dx,4	     ; указать адрес регистра      +
   4041				     управления
   4042	F11C  8A C3			     mov     al,bl	     ; получить	режим для	       +
   4043				     адаптера
   4044	F11E  EE			     out     dx,al	     ; сброс экрана
   4045	F11F  5A			     pop     dx		     ; восстановить	DX
   4046	F120  2B C0			     sub     ax,ax
   4047	F122  8E D8			     mov     ds,ax	     ; установить адрес таблицы  +
   4048				     векторов
   4049					     assume  ds:abs0
   4050	F124  C5 1E 0074r		     lds     bx,parm_ptr ; получить значение		       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 82
1840v4.asm



   4051				     параметров адаптера ЭЛИ
   4052	F128  58			     pop     ax		     ; восстановить	AX
   4053					     assume  ds:code
   4054	F129  B9 0010			     mov     cx,m4	; установить длину таблицы       +
   4055				     параметров
   4056	F12C  80 FC 02			     cmp     ah,2	     ; определение режима
   4057	F12F  72 10			     jc	     m9		     ; режим 0 или 1 ?
   4058	F131  03 D9			     add     bx,cx	     ; уст начало таблицы	       +
   4059				     параметров
   4060	F133  80 FC 04			     cmp     ah,4
   4061	F136  72 09			     jc	     m9		     ; режим 2 или 3
   4062	F138  03 D9			     add     bx,cx	     ; начало таблицы для графики
   4063	F13A  80 FC 07			     cmp     ah,7
   4064	F13D  72 02			     jc	     m9		     ; режимы 4, 5 или	6 ?
   4065	F13F  03 D9			     add     bx,cx	     ; уст начало таблицы для ч/б +
   4066				     адаптера
   4067
   4068				     ;	 BX указывает на строку таблицы			       +
   4069				     инициализации
   4070
   4071	F141			     m9:			     ; OUT_INIT
   4072	F141  50			     push    ax		     ; сохранить режим в	AH
   4073	F142  32 E4			     xor     ah,ah	     ;
   4074
   4075				     ;	 Цикл таблицы, устанавливающий адреса	       +
   4076				     регистров	и выводящий значения
   4077				     ; из таблицы
   4078
   4079	F144			     m10:
   4080	F144  8A C4			     mov     al,ah	     ;
   4081	F146  EE			     out     dx,al
   4082	F147  42			     inc     dx		     ; указать адрес порта
   4083	F148  FE C4			     inc     ah		     ;
   4084	F14A  8A 07			     mov     al,byte ptr [bx]	; получить значение	       +
   4085				     таблицы
   4086	F14C  EE			     out     dx,al	     ; послать строку из	таблицы +
   4087				     в	порт
   4088	F14D  43			     inc     bx		     ; +1 к адресу таблицы
   4089	F14E  4A			     dec     dx		     ; -1 из адреса порта
   4090	F14F  E2 F3			     loop    m10	     ; передана	вся таблица ?
   4091	F151  58			     pop     ax		     ; вернуть режимы
   4092	F152  1F			     pop     ds		     ; вернуть сегмент
   4093					     assume  ds:data
   4094
   4095				     ;	 Инициализация буфера дисплея
   4096
   4097	F153  33 FF			     xor     di,di	     ; DI=0
   4098	F155  89 3E 004Er		     mov     crt_start,di    ; сохранить начальный адрес
   4099	F159  C6 06 0062r 00		     mov     active_page,0   ; установить активную	       +
   4100				     страницу
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 83
1840v4.asm



   4101	F15E  B9 2000			     mov     cx,8192	     ; количество слов в	цветном +
   4102				     адаптере
   4103	F161  80 FC 04			     cmp     ah,4	     ; опрос графики
   4104	F164  72 0C			     jc	     m12	     ; нет инициализации графики
   4105	F166  80 FC 07			     cmp     ah,7	     ; опрос ч/б	адаптера
   4106	F169  74 04			     je	     m11	     ; инициализация ч/б	адаптера
   4107	F16B  33 C0			     xor     ax,ax	     ; для графического режима
   4108	F16D  EB 06			     jmp     short m13	     ; очистить	буфер
   4109	F16F			     m11:			     ; инициализация ч/б	адаптера
   4110	F16F  B9 0800			     mov     cx,2048	     ; об'ем буфера ч/б адаптера
   4111	F172			     m12:
   4112	F172  B8 0720			     mov     ax,' '+7*256    ; заполнить характеристики +
   4113				     для альфа
   4114	F175			     m13:			     ; очистить	буфер
   4115	F175  F3> AB			     rep     stosw	     ; заполнить область буфера  +
   4116				     пробелами
   4117
   4118				     ;	 Формирование порта управления режимом
   4119
   4120	F177  C7 06 0060r 0067		     mov     cursor_mode,67h   ; установить режим	       +
   4121				     текущего курсора (ERROR - MUS BE 607h)
   4122	F17D  A0 0049r			     mov     al,crt_mode     ; получить	режим в регистре +
   4123				     AX
   4124	F180  32 E4			     xor     ah,ah
   4125	F182  8B F0			     mov     si,ax	     ; таблица указателей режима
   4126	F184  8B 16 0063r		     mov     dx,addr_6845    ; подготовить адрес порта    +
   4127				     для вывода
   4128	F188  83 C2 04			     add     dx,4
   4129	F18B  2E: 8A 84	F0F4r		     mov al,cs:m7[si]
   4130	F190  EE			     out     dx,al
   4131	F191  A2 0065r			     mov     crt_mode_set,al
   4132
   4133				     ;	 Форморование количества колонок
   4134
   4135	F194  2E: 8A 84	F0ECr		     mov al,cs:m6[si]
   4136	F199  32 E4			     xor     ah,ah
   4137	F19B  A3 004Ar			     mov     crt_cols,ax     ; коичество колонок на	       +
   4138				     экране
   4139
   4140				     ;	 Установить позицию курсора
   4141
   4142	F19E  81 E6 000E		     and     si,0eh	     ; db 81h,0E6h,0Eh,00h   ; ###Gleb###
   4143	F1A2  2E: 8B 8C	F0E4r		     mov cx,cs:m5[si]  ; длина для очистки
   4144	F1A7  89 0E 004Cr		     mov     crt_len,cx
   4145	F1AB  B9 0008			     mov     cx,8	     ; очистить	все позиции	       +
   4146				     курсора
   4147	F1AE  BF 0050r			     mov     di,offset cursor_posn
   4148	F1B1  1E			     push    ds		     ; восстановить	сегмент
   4149	F1B2  07			     pop     es
   4150	F1B3  33 C0			     xor     ax,ax
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 84
1840v4.asm



   4151	F1B5  F3> AB			     rep     stosw	     ; заполнить нулями
   4152
   4153				     ;	 Установка регистра сканирования
   4154
   4155	F1B7  42			     inc     dx		     ; уст порт сканирования	по   +
   4156				     умолчанию
   4157	F1B8  B0 30			     mov     al,30h	     ; значение	30H для всех	       +
   4158				     режимов,
   4159								     ; исключая	640х200
   4160	F1BA  80 3E 0049r 06		     cmp     crt_mode,6	     ; режим ч/б	640х200
   4161	F1BF  75 02			     jnz     m14	     ; если	не 640х200
   4162	F1C1  B0 3F			     mov     al,3fh	     ; если	640х200, то поместить в 3FH
   4163	F1C3  EE		     m14:    out     dx,al	     ; вывод правильного	       +
   4164				     значения в порт 3D9
   4165	F1C4  A2 0066r			     mov     crt_pallette,al   ; сохранить значение для    +
   4166				     использования
   4167
   4168				     ;	 Нормальный возврат
   4169
   4170	F1C7			     video_return:
   4171	F1C7  5F			     pop     di
   4172	F1C8  5E			     pop     si
   4173	F1C9  5B			     pop     bx
   4174	F1CA			     m15:
   4175	F1CA  59			     pop     cx		     ; восстановление регистров
   4176	F1CB  5A			     pop     dx
   4177	F1CC  1F			     pop     ds
   4178	F1CD  07			     pop     es
   4179	F1CE  CF			     iret		     ; возврат из прерывания
   4180	F1CF			     set_mode	     endp
   4181				     ;--------------------
   4182				     ; set_ctype
   4183				     ;
   4184				     ;	 Эта	программа устанавливает размер	       +
   4185				     курсора и управление им
   4186				     ;
   4187				     ;	 ВХОД
   4188				     ;		(CX) - содержит	размер курсора. (CH -	       +
   4189				     начальная	граница,
   4190				     ;		       CL - конечная граница)
   4191				     ;
   4192				     ;--------------------
   4193	F1CF			     set_ctype proc  near
   4194	F1CF  B4 0A			     mov     ah,10	     ; установить регистр 6845	для +
   4195				     курсора
   4196	F1D1  89 0E 0060r		     mov     cursor_mode,cx   ;	сохранить в области	       +
   4197				     данных
   4198	F1D5  E8 0002			     call    m16	     ; вывод регистра CX
   4199	F1D8  EB ED			     jmp     short video_return
   4200
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 85
1840v4.asm



   4201	F1DA			     m16:
   4202	F1DA  8B 16 0063r		     mov     dx,addr_6845    ; адрес регистра
   4203	F1DE  8A C4			     mov     al,ah	     ; получить	значение
   4204	F1E0  EE			     out     dx,al	     ; установить регистр
   4205	F1E1  42			     inc     dx		     ; регистр данных
   4206	F1E2  8A C5			     mov     al,ch	     ; данные
   4207	F1E4  EE			     out     dx,al
   4208	F1E5  4A			     dec     dx
   4209	F1E6  8A C4			     mov     al,ah
   4210	F1E8  FE C0			     inc     al		     ; указать другой регистр      +
   4211				     данных
   4212	F1EA  EE			     out     dx,al	     ; установить второй регистр
   4213	F1EB  42			     inc     dx
   4214	F1EC  8A C1			     mov     al,cl	     ; второе значение данных
   4215	F1EE  EE			     out     dx,al
   4216	F1EF  C3			     ret		     ; возврат
   4217	F1F0			     set_ctype	     endp
   4218				     ;----------------------------
   4219				     ; set_cpos
   4220				     ;
   4221				     ;	 Установить текущую позицию курсора
   4222				     ;
   4223				     ;	 ВХОД
   4224				     ;		DX - строка, колонка,
   4225				     ;		BH - номер	страницы.
   4226				     ;
   4227				     ;-----------------------------
   4228	F1F0			     set_cpos proc   near
   4229	F1F0  8A CF			     mov     cl,bh
   4230	F1F2  32 ED			     xor     ch,ch	     ; установить счетчик
   4231	F1F4  D1 E1			     sal     cx,1	     ; сдвиг слова
   4232	F1F6  8B F1			     mov     si,cx
   4233	F1F8  89 94 0050r		     mov word ptr [si +	offset cursor_posn],dx	;сохранить	       +
   4234				     указатель
   4235	F1FC  38 3E 0062r		     cmp     active_page,bh
   4236	F200  75 05			     jnz     m17
   4237	F202  8B C2			     mov     ax,dx	     ; получить	строку/колонку в +
   4238				     AX
   4239	F204  E8 0002			     call    m18	     ; установить курсор
   4240	F207			     m17:
   4241	F207  EB BE			     jmp     short video_return	 ; возврат
   4242	F209			     set_cpos	     endp
   4243
   4244				     ;	 Установить позицию курсора, AX	содержит       +
   4245				     строку/колонку
   4246
   4247	F209			     m18     proc    near
   4248	F209  E8 007F			     call    position
   4249	F20C  8B C8			     mov     cx,ax
   4250	F20E  03 0E 004Er		     add     cx,crt_start    ; сложить с начальным	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 86
1840v4.asm



   4251				     адресом страницы
   4252	F212  D1 F9			     sar     cx,1	     ; делить на 2
   4253	F214  B4 0E			     mov     ah,14
   4254	F216  E8 FFC1			     call    m16
   4255	F219  C3			     ret
   4256	F21A			     m18     endp
   4257				     ;---------------------------
   4258				     ; read_cursor
   4259				     ;
   4260				     ;	 Считать	текущее положение курсора
   4261				     ;
   4262				     ;	 Эта	программа восстанавливает текущее       +
   4263				     положение	курсора
   4264				     ;
   4265				     ;	 ВХОД
   4266				     ;		BH - номер	страницы
   4267				     ;
   4268				     ;	 ВЫХОД
   4269				     ;		DX - строка/колонка текущей	позиции	       +
   4270				     курсора,
   4271				     ;		CX - размер курсора и управление им
   4272				     ;
   4273				     ;---------------------------
   4274	F21A			     read_cursor proc near
   4275	F21A  8A DF			     mov     bl,bh
   4276	F21C  32 FF			     xor     bh,bh
   4277	F21E  D1 E3			     sal     bx,1
   4278	F220  8B 97 0050r		     mov dx,word ptr [bx+offset	cursor_posn]
   4279	F224  8B 0E 0060r		     mov     cx,cursor_mode
   4280	F228  5F			     pop     di		     ; восстановить	регистры
   4281	F229  5E			     pop     si
   4282	F22A  5B			     pop     bx
   4283	F22B  58			     pop     ax
   4284	F22C  58			     pop     ax
   4285	F22D  1F			     pop     ds
   4286	F22E  07			     pop     es
   4287	F22F  CF			     iret
   4288	F230			     read_cursor     endp
   4289				     ;-----------------------------
   4290				     ; act_disp_page
   4291				     ;
   4292				     ;	  Эта программа устанавливает активную	       +
   4293				     страницу буфера адаптера ЭЛИ
   4294				     ;
   4295				     ;	 ВХОД
   4296				     ;		AL - страница.
   4297				     ;
   4298				     ;	 ВЫХОД
   4299				     ;		Выполняется сброс контроллера для	       +
   4300				     установки	новой страницы.
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 87
1840v4.asm



   4301				     ;
   4302				     ;-----------------------------
   4303	F230			     act_disp_page proc	     near
   4304	F230  A2 0062r			     mov     active_page,al  ; сохранить значение	       +
   4305				     активной страницы
   4306	F233  8B 0E 004Cr		     mov     cx,crt_len	     ; получить	длину области      +
   4307				     буфера
   4308	F237  98			     cbw		     ; преобразовать AL
   4309	F238  50			     push    ax		     ; сохранить значение	       +
   4310				     страницы
   4311	F239  F7 E1			     mul     cx
   4312	F23B  A3 004Er			     mov     crt_start,ax    ; сохранить начальный адрес
   4313								     ; для следующего требования
   4314	F23E  8B C8			     mov     cx,ax	     ; переслать начальный адрес+
   4315				     в	CX
   4316	F240  D1 F9			     sar     cx,1	     ; делить на 2
   4317	F242  B4 0C			     mov     ah,12
   4318	F244  E8 FF93			     call    m16
   4319	F247  5B			     pop     bx		     ; восстановить	значение       +
   4320				     страницы
   4321	F248  D1 E3			     sal     bx,1
   4322	F24A  8B 87 0050r		     mov ax,word ptr [bx+offset	cursor_posn]   ; получить курсор
   4323	F24E  E8 FFB8			     call    m18	     ; установить позицию	       +
   4324				     курсора
   4325	F251  E9 FF73			     jmp     video_return
   4326	F254			     act_disp_page   endp
   4327				     ;------------------------------
   4328				     ; set color
   4329				     ;
   4330				     ;	 Эта	программа устанавливает цветовую	       +
   4331				     палитру.
   4332				     ;
   4333				     ;	 ВХОД
   4334				     ;		BH=0
   4335				     ;		     BL	- значение пяти младших бит,	       +
   4336				     используемых для выбора
   4337				     ;			  цветовой палитры (цвет заднего     +
   4338				     плана	для цветной
   4339				     ;			  графики 320х200 или цвет каймы для    +
   4340				     цветного 40х25)
   4341				     ;		BH=1
   4342				     ;		     BL	- номер цветовой палитры
   4343				     ;			  BL=0 - зеленый(1), красный(2), желтый(3),
   4344				     ;			  BL=1 - голубой(1), фиолетовый(2), белый+
   4345				     (3)
   4346				     ;
   4347				     ;	 ВЫХОД
   4348				     ;		Установленная цветовая палитра в	       +
   4349				     порту	3D9.
   4350				     ;------------------------------
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 88
1840v4.asm



   4351	F254			     set_color proc  near
   4352	F254  8B 16 0063r		     mov     dx,addr_6845    ; порт	для палитры
   4353	F258  83 C2 05			     add     dx,5	     ; установить порт
   4354	F25B  A0 0066r			     mov     al,crt_pallette   ; получить текущее	       +
   4355				     значение палитры
   4356	F25E  0A FF			     or	     bh,bh	     ; цвет	0 ?
   4357	F260  75 0E			     jnz     m20	     ; вывод цвета 1
   4358
   4359				     ;	 Обработка цветовой палитры 0
   4360
   4361	F262  24 E0			     and     al,0e0h	     ; сбросить	5 младших бит
   4362	F264  80 E3 1F			     and     bl,01fh	     ; сбросить	3 старших бита
   4363	F267  0A C3			     or	     al,bl
   4364	F269			     m19:
   4365	F269  EE			     out     dx,al	      ;	вывод выбранного	цвета в  +
   4366				     порт 3D9
   4367	F26A  A2 0066r			     mov     crt_pallette,al  ;	сохранить значение цвета
   4368	F26D  E9 FF57			     jmp     video_return
   4369
   4370				     ;	 Обработка цветовой палитры 1
   4371
   4372	F270			     m20:
   4373	F270  24 DF			     and     al,0dfh	     ;
   4374	F272  D0 EB			     shr     bl,1	     ; проверить младший бит	BL
   4375	F274  73 F3			     jnc     m19
   4376	F276  0C 20			     or	     al,20h	     ;
   4377	F278  EB EF			     jmp     short m19	     ; переход
   4378	F27A			     set_color	     endp
   4379				     ;--------------------------
   4380				     ; video state
   4381				     ;
   4382				     ;	 Эта	программа получает текущее состояние  +
   4383				     ЭЛИ в AX.
   4384				     ;
   4385				     ;		AH - количество колонок,
   4386				     ;		AL - текущий режим,
   4387				     ;		BH - номер	активной страницы.
   4388				     ;
   4389				     ;---------------------------
   4390	F27A			     video_state proc	     near
   4391	F27A  8A 26 004Ar		     mov     ah,byte ptr crt_cols   ; получить количество    +
   4392				     колонок
   4393	F27E  A0 0049r			     mov     al,crt_mode	     ; текущий режим
   4394	F281  8A 3E 0062r		     mov     bh,active_page  ; получить	текущую активную+
   4395				     страницу
   4396	F285  5F			     pop     di		     ; восстановить	регистры
   4397	F286  5E			     pop     si
   4398	F287  59			     pop     cx
   4399	F288  E9 FF3F			     jmp     m15	     ; возврат к программе
   4400	F28B			     video_state     endp
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 89
1840v4.asm



   4401				     ;---------------------------
   4402				     ; position
   4403				     ;
   4404				     ;	 Эта	программа вычисляет адрес буфера	       +
   4405				     символа в режиме альфа.
   4406				     ;
   4407				     ;	 ВХОД
   4408				     ;		AX - номер	строки, номер колонки,
   4409				     ;
   4410				     ;	 ВЫХОД
   4411				     ;		AX - смещение символа с	координатами (AH,  +
   4412				     AL) относительно
   4413				     ;		     начала страницы. Смещение		       +
   4414				     измеряется в байтах.
   4415				     ;
   4416				     ;----------------------------
   4417	F28B			     position proc   near
   4418	F28B  53			     push    bx		     ; сохранить регистр
   4419	F28C  8B D8			     mov     bx,ax
   4420	F28E  8A C4			     mov     al,ah	     ; строки в AL
   4421	F290  F6 26 004Ar		     mul     byte ptr crt_cols
   4422	F294  32 FF			     xor     bh,bh
   4423	F296  03 C3			     add     ax,bx	     ; добавить	к значению	       +
   4424				     колонки
   4425	F298  D1 E0			     sal     ax,1	     ; * 2 для байтов атрибута
   4426	F29A  5B			     pop     bx
   4427	F29B  C3			     ret
   4428	F29C			     position	     endp
   4429				     ;-------------------------------
   4430				     ;scroll up
   4431				     ;
   4432				     ;	 Эта	программа перемещает	блок символов      +
   4433				     вверх	по экрану.
   4434				     ;
   4435				     ;	 ВХОД
   4436				     ;		AH - текуший режим,
   4437				     ;		AL - количество перемещаемых строк
   4438				     ;		CX - координаты левого верхнего	угла       +
   4439				     блока
   4440				     ;		     (строка, колонка),
   4441				     ;		DX - координаты правого нижнего	угла
   4442				     ;		BH - атрибут символа пробела (для	       +
   4443				     опробеливания	освобожда-
   4444				     ;		     емых строк),
   4445				     ;
   4446				     ;	 ВЫХОД
   4447				     ;		Модифицированный буфер дисплея.
   4448				     ;
   4449				     ;-----------------------------------
   4450					     assume cs:code,ds:data,es:data
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 90
1840v4.asm



   4451	F29C			     scroll_up proc  near
   4452	F29C  8A D8			     mov     bl,al	 ; сохранить количество	       +
   4453				     перемещаемых строк
   4454	F29E  80 FC 04			     cmp     ah,4	     ; проверка	графического       +
   4455				     режима
   4456	F2A1  72 08			     jc	     n1
   4457	F2A3  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4458	F2A6  74 03			     je	     n1
   4459	F2A8  E9 01F3			     jmp     graphics_up
   4460	F2AB			     n1:
   4461	F2AB  53			     push    bx		     ; сохранить полный атрибут  +
   4462				     в	BH
   4463	F2AC  8B C1			     mov     ax,cx	     ; координаты левого	       +
   4464				     верхнего угла
   4465	F2AE  E8 0039			     call    scroll_position
   4466	F2B1  74 33			     jz	     n7
   4467	F2B3  03 F0			     add     si,ax
   4468	F2B5  8A E6			     mov     ah,dh	     ; строка
   4469	F2B7  2A E3			     sub     ah,bl
   4470	F2B9			     n2:
   4471	F2B9  E8 0075			     call    n10	     ; сдвинуть	одну строку
   4472	F2BC  03 F5			     add     si,bp
   4473	F2BE  03 FD			     add     di,bp	     ; указать на следующую	       +
   4474				     строку в блоке
   4475	F2C0  FE CC			     dec     ah		     ; счетчик строк для	сдвига
   4476	F2C2  75 F5			     jnz     n2		     ; цикл	строки
   4477	F2C4			     n3:			     ; очистка входа
   4478	F2C4  58			     pop     ax		     ; восстановить	атрибут в AH
   4479	F2C5  B0 20			     mov     al,' '	     ; заполнить пробелами
   4480	F2C7			     n4:			     ; очистка счетчика
   4481	F2C7  E8 0070			     call    n11	     ; очистка строки
   4482	F2CA  03 FD			     add     di,bp	     ; указать следующую строку
   4483	F2CC  FE CB			     dec     bl		     ; счетчик строк для	сдвига
   4484	F2CE  75 F7			     jnz     n4		     ; очистка счетчика
   4485	F2D0			     n5:			     ; конец сдвига
   4486	F2D0  B8 0040			     mov     ax,dat
   4487	F2D3  8E D8			     mov     ds,ax
   4488	F2D5  80 3E 0049r 07		     cmp     crt_mode,7	     ; ч/б адаптер ?
   4489	F2DA  74 07			     je	     n6		     ; если	да - пропуск режима     +
   4490				     сброса
   4491	F2DC  A0 0065r			     mov     al,crt_mode_set
   4492	F2DF  BA 03D8			     mov     dx,03d8h	     ; установить порт цветного  +
   4493				     адаптера
   4494	F2E2  EE			     out     dx,al
   4495	F2E3			     n6:
   4496	F2E3  E9 FEE1			     jmp     video_return
   4497	F2E6			     n7:
   4498	F2E6  8A DE			     mov     bl,dh
   4499	F2E8  EB DA			     jmp     short n3	     ; очистить
   4500	F2EA			     scroll_up	     endp
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 91
1840v4.asm



   4501
   4502				     ;	 Обработка сдвига
   4503
   4504	F2EA			     scroll_position proc    near
   4505	F2EA  80 3E 0049r 02		     cmp     crt_mode,2
   4506	F2EF  72 19			     jb	     n9		     ; обработать 80х25 отдельно
   4507	F2F1  80 3E 0049r 03		     cmp     crt_mode,3
   4508	F2F6  77 12			     ja	     n9
   4509
   4510				     ;	 Сдиг для цветного адаптера в режиме 80х25
   4511
   4512	F2F8  52			     push    dx
   4513	F2F9  BA 03DA			     mov     dx,3dah	     ; обработка цветного	       +
   4514				     адаптера
   4515	F2FC  50			     push    ax
   4516	F2FD			     n8:			     ; ожидание	доступности	       +
   4517				     дисплея
   4518	F2FD  EC			     in	     al,dx
   4519	F2FE  A8 08			     test    al,8
   4520	F300  74 FB			     jz	     n8		     ; ожидание	доступности	       +
   4521				     дисплея
   4522	F302  B0 25			     mov     al,25h
   4523	F304  BA 03D8			     mov     dx,03d8h
   4524	F307  EE			     out     dx,al	     ; выключить ЭЛИ
   4525	F308  58			     pop     ax
   4526	F309  5A			     pop     dx
   4527	F30A  E8 FF7E		     n9:     call    position
   4528	F30D  03 06 004Er		     add     ax,crt_start    ; смещение	активной	       +
   4529				     страницы
   4530	F311  8B F8			     mov     di,ax	     ; для адреса сдвига
   4531	F313  8B F0			     mov     si,ax
   4532	F315  2B D1			     sub     dx,cx	     ; DX=строка
   4533	F317  FE C6			     inc     dh
   4534	F319  FE C2			     inc     dl		     ; прибавление к началу
   4535	F31B  32 ED			     xor     ch,ch	     ; установить старший байт    +
   4536				     счетчика в 0
   4537	F31D  8B 2E 004Ar		     mov     bp,crt_cols     ; получить	число колонок      +
   4538				     дисплея
   4539	F321  03 ED			     add     bp,bp	     ; увеличить на 2 байт	       +
   4540				     атрибута
   4541	F323  8A C3			     mov     al,bl	     ; получить	счетчик строки
   4542	F325  F6 26 004Ar		     mul     byte ptr crt_cols	 ; определить	смещение из  +
   4543				     адреса,
   4544	F329  03 C0			     add     ax,ax     ; умноженного	на 2,	для байта      +
   4545				     атрибута
   4546	F32B  06			     push    es	     ; установить адресацию для	       +
   4547				     области буфера
   4548	F32C  1F			     pop     ds
   4549	F32D  80 FB 00			     cmp     bl,0	     ; 0 означает очистку блока
   4550	F330  C3			     ret		     ; возврат с установкой	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 92
1840v4.asm



   4551				     флажков
   4552	F331			     scroll_position endp
   4553
   4554				     ;	 Перемещение	строки
   4555
   4556	F331			     n10     proc    near
   4557	F331  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4558				     передачи
   4559	F333  56			     push    si
   4560	F334  57			     push    di		     ; сохранить начальный адрес
   4561	F335  F3> A5			     rep     movsw	     ; передать	эту строку на       +
   4562				     экран
   4563	F337  5F			     pop     di
   4564	F338  5E			     pop     si		     ; восстановить	адресацию
   4565	F339  C3			     ret
   4566	F33A			     n10     endp
   4567
   4568				     ;	 очистка	строки
   4569
   4570	F33A			     n11     proc    near
   4571	F33A  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4572				     очистки
   4573	F33C  57			     push    di
   4574	F33D  F3> AB			     rep     stosw	     ; запомнить полный знак
   4575	F33F  5F			     pop     di
   4576	F340  C3			     ret
   4577	F341			     n11     endp
   4578				     ;------------------------
   4579				     ; scroll_down
   4580				     ;
   4581				     ;	 Эта	программа перемещает	блок символов      +
   4582				     вниз по
   4583				     ; экрану, заполняя верхние строки пробелом с  +
   4584				     заданным атрибутом
   4585				     ;
   4586				     ;	 ВХОД
   4587				     ;		AH - текущий режим,
   4588				     ;		AL - количество строк,
   4589				     ;		CX - верхний левый угол	блока,
   4590				     ;		DX - правый нижний угол	блока,
   4591				     ;		BH - атрибут символа-заполнителя	       +
   4592				     (пробела),
   4593				     ;
   4594				     ;-------------------------
   4595	F341			     scroll_down proc near
   4596	F341  FD			     std		     ; уст направление сдвига      +
   4597				     вниз
   4598	F342  8A D8			     mov     bl,al	     ; количество строк в BL
   4599	F344  80 FC 04			     cmp     ah,4	     ; проверка	графики
   4600	F347  72 08			     jc	     n12
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 93
1840v4.asm



   4601	F349  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4602	F34C  74 03			     je	     n12
   4603	F34E  E9 01A6			     jmp     graphics_down
   4604	F351			     n12:
   4605	F351  53			     push    bx		     ; сохранить атрибут в BH
   4606	F352  8B C2			     mov     ax,dx	     ; нижний правый угол
   4607	F354  E8 FF93			     call    scroll_position
   4608	F357  74 20			     jz	     n16
   4609	F359  2B F0			     sub     si,ax	     ; SI для адресации
   4610	F35B  8A E6			     mov     ah,dh
   4611	F35D  2A E3			     sub     ah,bl	     ; передать	количество строк
   4612	F35F			     n13:
   4613	F35F  E8 FFCF			     call    n10	     ; передать	одну строку
   4614	F362  2B F5			     sub     si,bp
   4615	F364  2B FD			     sub     di,bp
   4616	F366  FE CC			     dec     ah
   4617	F368  75 F5			     jnz     n13
   4618	F36A			     n14:
   4619	F36A  58			     pop     ax		     ; восстановить	атрибут в AH
   4620	F36B  B0 20			     mov     al,' '
   4621	F36D			     n15:
   4622	F36D  E8 FFCA			     call    n11	     ; очистка одной строки
   4623	F370  2B FD			     sub     di,bp	     ; перейти к следующей строке
   4624	F372  FE CB			     dec     bl
   4625	F374  75 F7			     jnz     n15
   4626	F376  E9 FF57			     jmp     n5		     ; конец сдвига
   4627	F379			     n16:
   4628	F379  8A DE			     mov     bl,dh
   4629	F37B  EB ED			     jmp     short n14
   4630	F37D			     scroll_down  endp
   4631				     ;--------------------
   4632				     ; read_ac_current
   4633				     ;
   4634				     ;	 Эта	программа считывает атрибут и	код	       +
   4635				     символа, находящегося в теку-
   4636				     ; щем положении курсора
   4637				     ;
   4638				     ;	 ВХОД
   4639				     ;		AH - текущий режим,
   4640				     ;		BH - номер	страницы (только для режима     +
   4641				     альфа),
   4642				     ;
   4643				     ;	 ВЫХОД
   4644				     ;		AL - код символа,
   4645				     ;		AH - атрибут символа.
   4646				     ;
   4647				     ;---------------------
   4648					     assume cs:code,ds:data,es:data
   4649	F37D			     read_ac_current proc near
   4650	F37D  80 FC 04			     cmp     ah,4	     ; это графика ?
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 94
1840v4.asm



   4651	F380  72 08			     jc	     p1
   4652	F382  80 FC 07			     cmp     ah,7	     ; ч/б адаптер ?
   4653	F385  74 03			     je	     p1
   4654	F387  E9 02A9			     jmp     graphics_read
   4655	F38A			     p1:			     ;
   4656	F38A  E8 001A			     call    find_position
   4657	F38D  8B F3			     mov     si,bx	     ; установить адресацию в SI
   4658
   4659
   4660	F38F  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4661	F393  83 C2 06			     add     dx,6	     ; порт	состояния
   4662	F396  06			     push    es
   4663	F397  1F			     pop     ds		     ; получить	сегмент
   4664	F398			     p2:
   4665	F398  EC			     in	     al,dx	     ; получить	состояние
   4666	F399  A8 01			     test    al,1
   4667	F39B  75 FB			     jnz     p2		     ; ожидание
   4668	F39D  FA			     cli		; сброс признака разрешения     +
   4669				     прерывания
   4670	F39E			     p3:
   4671	F39E  EC			     in	     al,dx	     ; получить	состояние
   4672	F39F  A8 01			     test    al,1
   4673	F3A1  74 FB			     jz	     p3		     ; ожидание
   4674	F3A3  AD			     lodsw		     ; получить	символ/атрибут
   4675	F3A4  E9 FE20			     jmp     video_return
   4676	F3A7			     read_ac_current endp
   4677
   4678	F3A7			     find_position proc	near
   4679	F3A7  8A CF			     mov     cl,bh	     ; поместить страницу в CX
   4680	F3A9  32 ED			     xor     ch,ch
   4681	F3AB  8B F1			     mov     si,cx	     ; передать	в SI индекс,	       +
   4682				     умноженный на 2
   4683	F3AD  D1 E6			     sal     si,1	     ; для слова смещения
   4684	F3AF  8B 84 0050r		     mov ax,word ptr [si+offset	cursor_posn]   ; получить	       +
   4685				     строку/ко-
   4686								     ; лонку этой страницы
   4687	F3B3  33 DB			     xor     bx,bx	     ; установить начальный	       +
   4688				     адрес	в 0
   4689	F3B5  E3 06			     jcxz    p5
   4690	F3B7			     p4:
   4691	F3B7  03 1E 004Cr		     add     bx,crt_len	     ; длина буфера
   4692	F3BB  E2 FA			     loop    p4
   4693	F3BD			     p5:
   4694	F3BD  E8 FECB			     call    position
   4695	F3C0  03 D8			     add     bx,ax
   4696	F3C2  C3			     ret
   4697	F3C3			     find_position   endp
   4698				     ;---------------------
   4699				     ;write_ac_current
   4700				     ;
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 95
1840v4.asm



   4701				     ;	 Эта	программа записывает	атрибут и код       +
   4702				     символа в текущую позицию
   4703				     ; курсора
   4704				     ;
   4705				     ;	 ВХОД
   4706				     ;		AH - текущий режим,
   4707				     ;		BH - номер	страницы,
   4708				     ;		CX - счетчик (количество повторений	       +
   4709				     символов),
   4710				     ;		AL - код символа,
   4711				     ;		BL - атрибут символа (для режимов альфа)  +
   4712				     или цвет символа
   4713				     ;		     для графики.
   4714				     ;
   4715				     ;----------------------
   4716	F3C3			     write_ac_current proc near
   4717	F3C3  80 FC 04			     cmp     ah,4	     ; это графика ?
   4718	F3C6  72 08			     jc	     p6
   4719	F3C8  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4720	F3CB  74 03			     je	     p6
   4721	F3CD  E9 01B1			     jmp     graphics_write
   4722	F3D0			     p6:
   4723	F3D0  8A E3			     mov     ah,bl	     ; получить	атрибут в AH
   4724	F3D2  50			     push    ax		     ; хранить
   4725	F3D3  51			     push    cx		     ; хранить счетчик
   4726	F3D4  E8 FFD0			     call    find_position
   4727	F3D7  8B FB			     mov     di,bx	     ; адрес в DI
   4728	F3D9  59			     pop     cx		     ; вернуть счетчик
   4729	F3DA  5B			     pop     bx		     ; и символ
   4730	F3DB			     p7:			     ; цикл	записи
   4731
   4732
   4733	F3DB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4734	F3DF  83 C2 06			     add     dx,6	     ; указать порт состояния
   4735	F3E2			     p8:
   4736	F3E2  EC			     in	     al,dx	     ; получить	состояние
   4737	F3E3  A8 01			     test    al,1
   4738	F3E5  75 FB			     jnz     p8		     ; ожидать
   4739	F3E7  FA			     cli		  ; сброс признака	разрешения   +
   4740				     прерывания
   4741	F3E8			     p9:
   4742	F3E8  EC			     in	     al,dx	     ; получить	состояние
   4743	F3E9  A8 01			     test    al,1
   4744	F3EB  74 FB			     jz	     p9		     ; ожидать
   4745	F3ED  8B C3			     mov     ax,bx
   4746	F3EF  AB			     stosw		     ; записать	символ и	атрибут
   4747	F3F0  FB			     sti		     ; уст признак разрешения      +
   4748				     прерывания
   4749	F3F1  E2 E8			     loop    p7
   4750	F3F3  E9 FDD1			     jmp     video_return
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 96
1840v4.asm



   4751	F3F6			     write_ac_current  endp
   4752				     ;---------------------
   4753				     ;write_c_current
   4754				     ;
   4755				     ;	 Эта	программа записывает	символ в	текущую +
   4756				     позицию курсора.
   4757				     ;
   4758				     ;	 ВХОД
   4759				     ;		BH - номер	страницы (только для альфа       +
   4760				     режимов),
   4761				     ;		CX - счетчик (количество повторений	       +
   4762				     символа),
   4763				     ;		AL - код символа,
   4764				     ;
   4765				     ;-----------------------
   4766	F3F6			     write_c_current proc near
   4767	F3F6  80 FC 04			     cmp     ah,4	     ; это графика ?
   4768	F3F9  72 08			     jc	     p10
   4769	F3FB  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4770	F3FE  74 03			     je	     p10
   4771	F400  E9 017E			     jmp     graphics_write
   4772	F403			     p10:
   4773	F403  50			     push    ax		     ; сохранить в стеке
   4774	F404  51			     push    cx		     ; сохранить количество	       +
   4775				     повторений
   4776	F405  E8 FF9F			     call    find_position
   4777	F408  8B FB			     mov     di,bx	     ; адрес в DI
   4778	F40A  59			     pop     cx		     ; вернуть количество	       +
   4779				     повторений
   4780	F40B  5B			     pop     bx		     ; BL - код символа
   4781	F40C			     p11:
   4782
   4783
   4784	F40C  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4785	F410  83 C2 06			     add     dx,6	     ; указать порт состояния
   4786	F413			     p12:
   4787	F413  EC			     in	     al,dx	     ; получить	состояние
   4788	F414  A8 01			     test    al,1
   4789	F416  75 FB			     jnz     p12	     ; ожидать
   4790	F418  FA			     cli		     ; сброс признака разрешения+
   4791				     прерывания
   4792	F419			     p13:
   4793	F419  EC			     in	     al,dx	     ; получить	состояние
   4794	F41A  A8 01			     test    al,1
   4795	F41C  74 FB			     jz	     p13	     ; ожидание
   4796	F41E  8A C3			     mov     al,bl	     ; восстановить	символ
   4797	F420  AA			     stosb		     ; записать	символ
   4798	F421  47			     inc     di
   4799	F422  E2 E8			     loop    p11	     ; цикл
   4800	F424  E9 FDA0			     jmp     video_return
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 97
1840v4.asm



   4801	F427			     write_c_current endp
   4802				     ;---------------------
   4803				     ; read dot	- write	dot
   4804				     ;
   4805				     ;	 Эта	программа считывает/записывает точку.
   4806				     ;
   4807				     ;	 ВХОД
   4808				     ;		DX - строка (0-199),
   4809				     ;		CX - колонка (0-639),
   4810				     ;		AL - цвет выводимой точки.
   4811				     ;		     Если бит 7=1, то выполняется операция
   4812				     ;		     XOR над	значением точки из буфера	       +
   4813				     дисплея и значением
   4814				     ;		     точки	из регистра AL (при записи	       +
   4815				     точки).
   4816				     ;
   4817				     ;	 ВЫХОД
   4818				     ;		AL - значение считанной точки
   4819				     ;
   4820				     ;----------------------
   4821					     assume cs:code,ds:data,es:data
   4822	F427			     read_dot proc   near
   4823	F427  E8 0031			     call    r3		     ; определить положение	       +
   4824				     точки
   4825	F42A  26: 8A 04			     mov     al,es:[si]	     ; получить	байт
   4826	F42D  22 C4			     and     al,ah	     ; размаскировать другие       +
   4827				     биты в байте
   4828	F42F  D2 E0			     shl     al,cl	     ;
   4829	F431  8A CE			     mov     cl,dh	     ; получить	число бит	       +
   4830				     результата
   4831	F433  D2 C0			     rol     al,cl
   4832	F435  E9 FD8F			     jmp     video_return    ; выход из прерывания
   4833	F438			     read_dot	     endp
   4834
   4835	F438			     write_dot proc  near
   4836	F438  50			     push    ax		     ; сохранить значение точки
   4837	F439  50			     push    ax		     ; еще раз
   4838	F43A  E8 001E			     call    r3		     ; определить положение	       +
   4839				     точки
   4840	F43D  D2 E8			     shr     al,cl	     ; сдвиг для установки бит     +
   4841				     при выводе
   4842	F43F  22 C4			     and     al,ah	     ; сбросить	другие биты
   4843	F441  26: 8A 0C			     mov     cl,es:[si]	     ; получить	текущий байт
   4844	F444  5B			     pop     bx
   4845	F445  F6 C3 80			     test    bl,80h
   4846	F448  75 0D			     jnz     r2
   4847	F44A  F6 D4			     not     ah	       ; установить маску для		       +
   4848				     передачи указанных бит
   4849	F44C  22 CC			     and     cl,ah
   4850	F44E  0A C1			     or	     al,cl
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 98
1840v4.asm



   4851	F450			     r1:
   4852	F450  26: 88 04			     mov es:[si],al	     ; восстановить	байт в памяти
   4853	F453  58			     pop     ax
   4854	F454  E9 FD70			     jmp     video_return    ; к выходу из программы
   4855	F457			     r2:
   4856	F457  32 C1			     xor     al,cl	     ; исключающее ИЛИ над	       +
   4857				     значениями точки
   4858	F459  EB F5			     jmp     short r1	     ; конец записи
   4859	F45B			     write_dot	     endp
   4860
   4861				     ;-------------------------------------
   4862				     ;
   4863				     ;	 Эта	программа определяет	относительный     +
   4864				     адрес	байта (внутри буфера
   4865				     ; дисплея),	из которого должна быть		       +
   4866				     считана/записана точка,с заданными
   4867				     ; координатами.
   4868				     ;
   4869				     ;	 ВХОД
   4870				     ;		DX - строка (0-199),
   4871				     ;		CX - колонка (0-639).
   4872				     ;
   4873				     ;	 ВЫХОД
   4874				     ;		SI - относительный	адрес байта,		       +
   4875				     содержащего точку внутри
   4876				     ;		     буфера дисплея,
   4877				     ;		AH - маска	для выделения значения	       +
   4878				     заданной точки внутри байта
   4879				     ;		CL - константа	сдвига маски	в AH в крайнюю+
   4880				     левую	позицию,
   4881				     ;		DH - число	бит,	определяющих значение      +
   4882				     точки.
   4883				     ;
   4884				     ;--------------------------------------
   4885
   4886	F45B			     r3	     proc    near
   4887	F45B  53			     push    bx		     ; сохранить BX
   4888	F45C  50			     push    ax		     ; сохранить AL
   4889
   4890				     ;	 Вычисление первого байта	указанной строки+
   4891				     умножением на 40.
   4892				     ; Наименьший бит строки	определяет		       +
   4893				     четно/нечетную 80-байтовую строку.
   4894
   4895	F45D  B0 28			     mov     al,40
   4896	F45F  52			     push    dx		     ; сохранить значение строки
   4897	F460  80 E2 FE			     and     dl,0feh	     ; сброс четно/нечетного	бита
   4898	F463  F6 E2			     mul     dl	  ; AX содержит	адрес первого байта   +
   4899				     указанной	строки
   4900	F465  5A			     pop     dx		     ; восстановить	его
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 99
1840v4.asm



   4901	F466  F6 C2 01			     test    dl,1	     ; проверить			       +
   4902				     четность/нечетность
   4903	F469  74 03			     jz	     r4		     ; переход,если строка четная
   4904	F46B  05 2000			     add     ax,2000h	     ; смещение	для нахождения    +
   4905				     нечетных строк
   4906	F46E			     r4:			     ; четная строка
   4907	F46E  8B F0			     mov     si,ax	     ; передать	указатель в SI
   4908	F470  58			     pop     ax		     ; восстановить	значение AL
   4909	F471  8B D1			     mov     dx,cx	     ; значение	колонки в DX
   4910
   4911				     ;	 Определение	действительных графических    +
   4912				     режимов
   4913				     ;
   4914				     ;	 Установка регистров согласно	режимaм
   4915				     ;
   4916				     ;	       BH - количество бит, определяющее точку,
   4917				     ;	       BL - константа выделения точки из левых   +
   4918				     бит байта,
   4919				     ;	       CH - константа для выделения из номера     +
   4920				     колонки номера позиции
   4921				     ;		    первого бита, определяющего	точку в  +
   4922				     байте, т.е.	получение
   4923				     ;		    остатка от	деления номера на 8 (для     +
   4924				     режима 640х200) или
   4925				     ;		    номера на 4	(для	режима 320х200),
   4926				     ;	       CL - константа сдвига (для выполнения       +
   4927				     деления на 8 или на 4).
   4928
   4929	F473  BB 02C0			     mov     bx,2c0h
   4930	F476  B9 0302			     mov     cx,302h	     ; установка параметров
   4931	F479  80 3E 0049r 06		     cmp     crt_mode,6
   4932	F47E  72 06			     jc	     r5		     ;
   4933	F480  BB 0180			     mov     bx,180h
   4934	F483  B9 0703			     mov     cx,703h	     ; уст параметры для		       +
   4935				     старшего регистра
   4936
   4937				     ;	 Определение	бита смещения в байте	по маске
   4938	F486			     r5:
   4939	F486  22 EA			     and     ch,dl	     ;
   4940
   4941				     ;	 Определение	байта смещения в колонке
   4942
   4943	F488  D3 EA			     shr     dx,cl	     ; сдвиг для коррекции
   4944	F48A  03 F2			     add     si,dx	     ; получить	указатель
   4945	F48C  8A F7			     mov     dh,bh   ; получить	указатель битов	       +
   4946				     результата в DH
   4947
   4948				     ;	 Умножение BH (количество бит в байте) на	CH     +
   4949				     (бит смещения)
   4950
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 100
1840v4.asm



   4951	F48E  2A C9			     sub     cl,cl
   4952	F490			     r6:
   4953	F490  D0 C8			     ror     al,1    ; левое крайнее значение в AL	для +
   4954				     записи
   4955	F492  02 CD			     add     cl,ch	     ; прибавить значение бита    +
   4956				     смещения
   4957	F494  FE CF			     dec     bh		     ; счетчик контроля
   4958	F496  75 F8			     jnz     r6	     ; на выходе CL содержит счетчик    +
   4959				     сдвига для
   4960								     ; восстановления
   4961	F498  8A E3			     mov     ah,bl	     ; получить	маску в AH
   4962	F49A  D2 EC			     shr     ah,cl	     ; передать	маску в ячейку
   4963	F49C  5B			     pop     bx		     ; восстановить	регистр
   4964	F49D  C3			     ret		     ; возврат с восстановлением
   4965	F49E			     r3	     endp
   4966
   4967				     ;----------------------------------------
   4968				     ;
   4969				     ;
   4970				     ;	  Программа перемещает блок символов вверх +
   4971				     в	режиме графики
   4972				     ;
   4973				     ;-----------------------------------------
   4974
   4975	F49E			     graphics_up proc near
   4976	F49E  8A D8			     mov     bl,al	     ; сохранить количество	       +
   4977				     символов
   4978	F4A0  8B C1			     mov     ax,cx	     ; получить	верхний левый      +
   4979				     угол в AX
   4980
   4981
   4982	F4A2  E8 026A			     call    graph_posn
   4983	F4A5  8B F8			     mov     di,ax	     ; сохранить результат
   4984
   4985				     ;	 Определить размеры блока
   4986
   4987	F4A7  2B D1			     sub     dx,cx
   4988	F4A9  81 C2 0101		     add     dx,101h
   4989	F4AD  D0 E6			     sal     dh,1
   4990	F4AF  D0 E6			     sal     dh,1
   4991
   4992	F4B1  80 3E 0049r 06		     cmp     crt_mode,6
   4993	F4B6  73 04			     jnc     r7
   4994
   4995	F4B8  D0 E2			     sal     dl,1
   4996	F4BA  D1 E7			     sal     di,1	     ;
   4997
   4998				     ;	 Определение	адреса источника	в буфере
   4999	F4BC			     r7:
   5000	F4BC  06			     push    es
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 101
1840v4.asm



   5001	F4BD  1F			     pop     ds
   5002	F4BE  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   5003				     счетчика
   5004	F4C0  D0 E3			     sal     bl,1	     ; умножение числа строк	на 4
   5005	F4C2  D0 E3			     sal     bl,1
   5006	F4C4  74 2D			     jz	     r11	     ; если	0, занести пробелы
   5007	F4C6  8A C3			     mov     al,bl	     ; получить	число строк в AL
   5008	F4C8  B4 50			     mov     ah,80	     ; 80 байт/строк
   5009	F4CA  F6 E4			     mul     ah		     ; определить смещение	       +
   5010				     источника
   5011	F4CC  8B F7			     mov     si,di	     ; установить источник
   5012	F4CE  03 F0			     add     si,ax	     ; сложить источник с ним
   5013	F4D0  8A E6			     mov     ah,dh	     ; количество строк
   5014	F4D2  2A E3			     sub     ah,bl	     ; определить число		       +
   5015				     перемещений
   5016
   5017	F4D4			     r8:
   5018	F4D4  E8 0080			     call    r17	     ; перемещение одной строки
   5019	F4D7  81 EE 1FB0		     sub     si,2000h-80     ; перемещение в следующую    +
   5020				     строку
   5021	F4DB  81 EF 1FB0		     sub     di,2000h-80
   5022	F4DF  FE CC			     dec     ah		     ; количество строк для	       +
   5023				     перемещения
   5024	F4E1  75 F1			     jnz     r8	     ; продолжать, пока все строки не +
   5025				     переместятся
   5026
   5027				     ;	 Заполнение освобожденных строк
   5028	F4E3			     r9:
   5029	F4E3  8A C7			     mov     al,bh
   5030	F4E5			     r10:
   5031	F4E5  E8 0088			     call    r18	     ; очистить	эту строку
   5032	F4E8  81 EF 1FB0		     sub     di,2000h-80     ; указать на следующую
   5033	F4EC  FE CB			     dec     bl		     ; количество строк для	       +
   5034				     заполнения
   5035	F4EE  75 F5			     jnz     r10	     ; цикл	очистки
   5036	F4F0  E9 FCD4			     jmp     video_return    ; к выходу из программы
   5037
   5038	F4F3			     r11:
   5039	F4F3  8A DE			     mov     bl,dh	     ; установить количество       +
   5040				     пробелов
   5041	F4F5  EB EC			     jmp     short r9	     ; очистить
   5042	F4F7			     graphics_up     endp
   5043
   5044				     ;---------------------------------
   5045				     ;
   5046				     ;	 Программа перемещает блок символов вниз в +
   5047				     режиме графики
   5048				     ;
   5049				     ;----------------------------------
   5050
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 102
1840v4.asm



   5051	F4F7			     graphics_down proc	     near
   5052	F4F7  FD			     std		     ; установить направление
   5053	F4F8  8A D8			     mov     bl,al	     ; сохранить количество	       +
   5054				     строк
   5055	F4FA  8B C2			     mov     ax,dx	     ; получить	нижнюю правую      +
   5056				     позицию в AX
   5057
   5058
   5059	F4FC  E8 0210			     call    graph_posn
   5060	F4FF  8B F8			     mov     di,ax	     ; сохранить результат
   5061
   5062				     ;	 Определение	размера блока
   5063
   5064	F501  2B D1			     sub     dx,cx
   5065	F503  81 C2 0101		     add     dx,101h
   5066	F507  D0 E6			     sal     dh,1
   5067	F509  D0 E6			     sal     dh,1
   5068
   5069
   5070	F50B  80 3E 0049r 06		     cmp     crt_mode,6
   5071	F510  73 05			     jnc     r12
   5072
   5073	F512  D0 E2			     sal     dl,1
   5074	F514  D1 E7			     sal     di,1
   5075	F516  47			     inc     di
   5076
   5077				     ;	 Определение	адреса источника	в буфере
   5078	F517			     r12:
   5079	F517  06			     push    es
   5080	F518  1F			     pop     ds
   5081	F519  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   5082				     счетчика
   5083	F51B  81 C7 00F0		     add     di,240	     ; указать последнюю строку
   5084	F51F  D0 E3			     sal     bl,1	     ; умножить	количество строк+
   5085				     на 4
   5086	F521  D0 E3			     sal     bl,1
   5087	F523  74 2E			     jz	     r16	     ; если	0, заполнить пробелом
   5088	F525  8A C3			     mov     al,bl	     ; получить	количество строк+
   5089				     в	AL
   5090	F527  B4 50			     mov     ah,80	     ; 80 байт/строк
   5091	F529  F6 E4			     mul     ah		     ; определить смещение	       +
   5092				     источника
   5093	F52B  8B F7			     mov     si,di	     ; установить источник
   5094	F52D  2B F0			     sub     si,ax	     ; вычесть смещение
   5095	F52F  8A E6			     mov     ah,dh	     ; количество строк
   5096	F531  2A E3			     sub     ah,bl	     ; определить число для	       +
   5097				     перемещения
   5098
   5099	F533			     r13:
   5100	F533  E8 0021			     call    r17	     ; переместить одну строку
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 103
1840v4.asm



   5101	F536  81 EE 2050		     sub     si,2000h+80     ; установить следующую	       +
   5102				     строку
   5103	F53A  81 EF 2050		     sub     di,2000h+80
   5104	F53E  FE CC			     dec     ah		     ; количество строк для	       +
   5105				     перемещения
   5106	F540  75 F1			     jnz     r13	     ; продолжать, пока все не      +
   5107				     переместятся
   5108
   5109				     ;	 Заполнение освобожденных строк
   5110	F542			     r14:
   5111	F542  8A C7			     mov     al,bh	     ; атрибут заполнения
   5112	F544			     r15:
   5113	F544  E8 0029			     call    r18	     ; очистить	строку
   5114	F547  81 EF 2050		     sub     di,2000h+80     ; указать следующую строку
   5115	F54B  FE CB			     dec     bl		     ; число строк для заполнения
   5116	F54D  75 F5			     jnz     r15
   5117	F54F  FC			     cld		     ; сброс признака		       +
   5118				     направления
   5119	F550  E9 FC74			     jmp     video_return    ; к выходу из программы
   5120
   5121	F553			     r16:
   5122	F553  8A DE			     mov     bl,dh
   5123	F555  EB EB			     jmp     short r14	     ; очистить
   5124	F557			     graphics_down endp
   5125
   5126				     ;	 Программа перемещения одной строки
   5127
   5128	F557			     r17     proc    near
   5129	F557  8A CA			     mov     cl,dl	     ; число байт в строке
   5130	F559  56			     push    si
   5131	F55A  57			     push    di		     ; хранить указатели
   5132	F55B  F3> A4			     rep     movsb	     ; переместить четное поле
   5133	F55D  5F			     pop     di
   5134	F55E  5E			     pop     si
   5135	F55F  81 C6 2000		     add     si,2000h
   5136	F563  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5137	F567  56			     push    si
   5138	F568  57			     push    di		     ; сохранить указатели
   5139	F569  8A CA			     mov     cl,dl	     ; возврат счвтчика
   5140	F56B  F3> A4			     rep     movsb	     ; передать	нечетное поле
   5141	F56D  5F			     pop     di
   5142	F56E  5E			     pop     si		     ; возврат указателей
   5143	F56F  C3			     ret		     ; возврат к программе
   5144	F570			     r17     endp
   5145
   5146				     ;	 Заполнение пробелами строки
   5147
   5148	F570			     r18     proc    near
   5149	F570  8A CA			     mov     cl,dl	     ; число байт в поле
   5150	F572  57			     push    di		     ; хранить указатель
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 104
1840v4.asm



   5151	F573  F3> AA			     rep     stosb	     ; запомнить новое значение
   5152	F575  5F			     pop     di		     ; вернуть указатель
   5153	F576  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5154	F57A  57			     push    di
   5155	F57B  8A CA			     mov     cl,dl
   5156	F57D  F3> AA			     rep     stosb	     ; заполнить нечетное поле
   5157	F57F  5F			     pop     di
   5158	F580  C3			     ret		     ; возврат к программе
   5159	F581			     r18     endp
   5160
   5161				     ;--------------------------------------
   5162				     ;
   5163				     ;	graphics_write
   5164				     ;
   5165				     ;	 Эта	программа записывает	символ в	режиме   +
   5166				     графики
   5167				     ;
   5168				     ;	 ВХОД
   5169				     ;		AL - код символа,
   5170				     ;		BL - атрибут цвета,	который используется+
   5171				     в	качестве цвета
   5172				     ;		     переднего	плана (цвет символа). Если +
   5173				     бит 7 BL=1, то
   5174				     ;		     выполняется операция XOR над	байтом в+
   5175				     буфере и байтом
   5176				     ;		     в	генераторе символов,
   5177				     ;		CX - счетчик повторений символа
   5178				     ;
   5179				     ;----------------------------------------
   5180
   5181					     assume cs:code,ds:data,es:data
   5182	F581			     graphics_write proc near
   5183	F581  B4 00			     mov     ah,0	     ; AH=0
   5184	F583  50			     push    ax		     ; сохранить значение кода    +
   5185				     символа
   5186
   5187				     ;	 Определение	позиции в области буфера	       +
   5188				     засылкой туда кода	точек
   5189
   5190	F584  E8 0185			     call    s26	     ; найти ячейку в области       +
   5191				     буфера
   5192	F587  8B F8			     mov     di,ax	     ; указатель области в DI
   5193
   5194				     ;	 Определение	области для получения кода      +
   5195				     точки
   5196
   5197	F589  58			     pop     ax		     ; восстановить	код точки
   5198	F58A  3C 80			     cmp     al,80h	     ; во второй половине ?
   5199	F58C  73 06			     jae     s1		     ; да
   5200
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 105
1840v4.asm



   5201				     ;	 Изображение	есть в первой половине памяти
   5202
   5203	F58E  BE FA6Er			     mov     si, offset	crt_char_gen  ;	смещение изображения
   5204	F591  0E			     push    cs		     ; хранить сегмент в	стеке
   5205	F592  EB 0F			     jmp     short s2	     ; определить режим
   5206
   5207				     ;	 Изображение	есть во второй части памяти
   5208
   5209	F594			     s1:
   5210	F594  2C 80			     sub     al,80h	     ; 0 во вторую половину
   5211	F596  1E			     push    ds		     ; хранить указатель данных
   5212	F597  2B F6			     sub     si,si
   5213	F599  8E DE			     mov     ds,si	     ; установить адресацию
   5214					     assume  ds:abs0
   5215	F59B  C5 36 007Cr		     lds     si,ext_ptr	     ; получить	смещение
   5216	F59F  8C DA			     mov     dx,ds	     ; получить	сегмент
   5217					     assume  ds:data
   5218	F5A1  1F			     pop     ds		     ; восстановить	сегмент	       +
   5219				     данных
   5220	F5A2  52			     push    dx		     ; хранить сегмент в	стеке
   5221
   5222				     ;	 Опеделение графического режима операции
   5223
   5224	F5A3			     s2:			     ; определение режима
   5225	F5A3  D1 E0			     sal     ax,1	     ; умножить	указатель кода    +
   5226				     на 8
   5227	F5A5  D1 E0			     sal     ax,1
   5228	F5A7  D1 E0			     sal     ax,1
   5229	F5A9  03 F0			     add     si,ax	     ; SI содержит смещение
   5230	F5AB  80 3E 0049r 06		     cmp     crt_mode,6
   5231	F5B0  1F			     pop     ds		     ; восстановить	указатель     +
   5232				     таблицы
   5233	F5B1  72 2C			     jc	     s7	     ; проверка	для средней		       +
   5234				     разрешающей способности
   5235
   5236				     ;	 Высокая	разрешающая способность
   5237	F5B3			     s3:
   5238	F5B3  57			     push    di		     ; сохранить указатель	       +
   5239				     области
   5240	F5B4  56			     push    si		     ; сохранить указатель кода
   5241	F5B5  B6 04			     mov     dh,4	     ; количество циклов
   5242	F5B7			     s4:
   5243	F5B7  AC			     lodsb		     ; выборка четного байта
   5244	F5B8  F6 C3 80			     test    bl,80h
   5245	F5BB  75 16			     jnz     s6
   5246	F5BD  AA			     stosb
   5247	F5BE  AC			     lodsb
   5248	F5BF			     s5:
   5249	F5BF  26: 88 85	1FFF		     mov es:[di+1fffh],al    ; запомнить во второй части
   5250	F5C4  83 C7 4F			     add     di,79	     ; передать	следующую строку
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 106
1840v4.asm



   5251	F5C7  FE CE			     dec     dh		     ; выполнить цикл
   5252	F5C9  75 EC			     jnz     s4
   5253	F5CB  5E			     pop     si
   5254	F5CC  5F			     pop     di		     ; восстановить	указатель     +
   5255				     области
   5256	F5CD  47			     inc     di	     ; указать на следующую позицию   +
   5257				     символа
   5258	F5CE  E2 E3			     loop    s3		     ; записать	последующие	       +
   5259				     символы
   5260	F5D0  E9 FBF4			     jmp     video_return
   5261
   5262	F5D3			     s6:
   5263	F5D3  26: 32 05			     xor al,es:[di]
   5264	F5D6  AA			     stosb		     ; запомнить код
   5265	F5D7  AC			     lodsb		     ; выборка нечетного символа
   5266	F5D8  26: 32 85	1FFF		     xor  al,es:[di+1fffh]
   5267	F5DD  EB E0			     jmp     s5		     ; повторить
   5268
   5269				     ;	 Средняя	разрешающая способность записи
   5270	F5DF			     s7:
   5271	F5DF  8A D3			     mov     dl,bl	     ; сохранить старший бит	       +
   5272				     цвета
   5273	F5E1  D1 E7			     sal     di,1    ; умножить	на 2,	т.к. два		       +
   5274				     байта/символа
   5275	F5E3  E8 00D1			     call    s19	     ; расширение BL до полного     +
   5276				     слова	цвета
   5277	F5E6			     s8:
   5278	F5E6  57			     push    di
   5279	F5E7  56			     push    si
   5280	F5E8  B6 04			     mov     dh,4	     ; число циклов
   5281	F5EA			     s9:
   5282	F5EA  AC			     lodsb		     ; получить	код точки
   5283	F5EB  E8 00DE			     call    s21	     ; продублировать
   5284	F5EE  23 C3			     and     ax,bx	     ; окрашивание в заданный      +
   5285				     цвет
   5286	F5F0  F6 C2 80			     test    dl,80h
   5287	F5F3  74 07			     jz	     s10
   5288	F5F5  26: 32 25			     xor     ah,es:[di]	     ; выполнить функцию XOR со      +
   5289				     "старым"
   5290	F5F8  26: 32 45	01		     xor     al,es:[di+1]    ; и "новым" цветами
   5291	F5FC  26: 88 25		     s10:    mov  es:[di],ah	     ; запомнить первый байт
   5292	F5FF  26: 88 45	01		     mov es:[di+1],al	     ; запомнить второй байт
   5293	F603  AC			     lodsb		     ; получить	код точки
   5294	F604  E8 00C5			     call    s21
   5295	F607  23 C3			     and     ax,bx	     ; окрашивание нечетного       +
   5296				     байта
   5297	F609  F6 C2 80			     test    dl,80h
   5298	F60C  74 0A			     jz	 s11
   5299	F60E  26: 32 A5	2000		     xor     ah,es:[di+2000h]	; из первой половины
   5300	F613  26: 32 85	2001		     xor     al,es:[di+2001h]	; и из второй половины
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 107
1840v4.asm



   5301	F618  26: 88 A5	2000	     s11:    mov     es:[di+2000h],ah
   5302	F61D  26: 88 85	2001		     mov     es:[di+2001h],al	; запомнить вторую часть   +
   5303				     буфера
   5304	F622  83 C7 50			     add     di,80	     ; указать следующую ячейку
   5305	F625  FE CE			     dec     dh
   5306	F627  75 C1			     jnz     s9		     ; повторить
   5307	F629  5E			     pop     si
   5308	F62A  5F			     pop     di
   5309	F62B  83 C7 02			     add     di,2	     ; переход к следующему	       +
   5310				     символу
   5311	F62E  E2 B6			     loop    s8		     ; режим записи
   5312	F630  E9 FB94			     jmp     video_return
   5313	F633			     graphics_write  endp
   5314				     ;-------------------------------------
   5315				     ;graphics_read
   5316				     ;
   5317				     ;	 Программа считывает символ в режиме	       +
   5318				     графики
   5319				     ;
   5320				     ;-------------------------------------
   5321	F633			     graphics_read   proc    near
   5322	F633  E8 00D6			     call    s26
   5323	F636  8B F0			     mov     si,ax	     ; сохранить в SI
   5324	F638  83 EC 08			     sub     sp,8	     ; зарезервировать в стеке 8  +
   5325				     байт для
   5326								     ; записи символа из	буфера   +
   5327				     дисплея
   5328	F63B  8B EC			     mov     bp,sp	     ; указатель для хранения      +
   5329				     области
   5330
   5331				     ;	 Определение	режима графики
   5332
   5333	F63D  80 3E 0049r 06		     cmp     crt_mode,6
   5334	F642  06			     push    es
   5335	F643  1F			     pop     ds		     ; указать сегмент
   5336	F644  72 1A			     jc	     s13	     ; средняя разрешающая	       +
   5337				     способность
   5338
   5339				     ;	Высокая разрешающая способность для	       +
   5340				     считавания
   5341
   5342	F646  B6 04			     mov     dh,4
   5343	F648			     s12:
   5344	F648  8A 04			     mov     al,byte ptr [si]	; получить первый	байт
   5345	F64A  88 46 00			     mov byte ptr [bp],al	; запомнить в	памяти
   5346	F64D  45			     inc     bp
   5347	F64E  8A 84 2000		     mov al,byte ptr [si+2000h]	  ; получить младший байт
   5348	F652  88 46 00			     mov byte ptr [bp],al
   5349	F655  45			     inc     bp
   5350	F656  83 C6 50			     add     si,80	     ; переход на следующую	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 108
1840v4.asm



   5351				     четную строку
   5352	F659  FE CE			     dec     dh
   5353	F65B  75 EB			     jnz     s12	     ; повторить
   5354	F65D  EB 17			     jmp     short s15	     ; переход к хранению кодов   +
   5355				     точек
   5356	F65F  90			     nop
   5357
   5358				     ;	 Средняя	разрешающая способность для	       +
   5359				     считывания
   5360	F660			     s13:
   5361	F660  D1 E6			     sal     si,1      ; смещение умножить на	2, т.к. 2    +
   5362				     байта/символа
   5363	F662  B6 04			     mov     dh,4
   5364	F664			     s14:
   5365	F664  E8 0088			     call    s23
   5366	F667  81 C6 2000		     add     si,2000h
   5367	F66B  E8 0081			     call    s23
   5368	F66E  81 EE 1FB0		     sub     si,2000h-80
   5369	F672  FE CE			     dec     dh
   5370	F674  75 EE			     jnz     s14	     ; повторить
   5371
   5372				     ;	 Сохранить
   5373	F676			     s15:
   5374	F676  BF FA6Er			     mov     di,offset crt_char_gen   ;	смещение
   5375	F679  0E			     push    cs
   5376	F67A  07			     pop     es
   5377	F67B  83 ED 08			     sub     bp,8	     ; восстановить	начальный     +
   5378				     адрес
   5379	F67E  8B F5			     mov     si,bp
   5380	F680  FC			     cld		     ; установить направление
   5381	F681  B0 00			     mov     al,0
   5382	F683			     s16:
   5383	F683  16			     push    ss
   5384	F684  1F			     pop     ds
   5385	F685  BA 0080			     mov     dx,128	     ; количество символов
   5386	F688			     s17:
   5387	F688  56			     push    si
   5388	F689  57			     push    di
   5389	F68A  B9 0008			     mov     cx,8	     ; количество байт в	символе
   5390	F68D  F3> A6			     repe    cmpsb	     ; сравнить
   5391	F68F  5F			     pop     di
   5392	F690  5E			     pop     si
   5393	F691  74 1E			     jz	     s18	     ; если	признак = 0,символы      +
   5394				     сравнились
   5395	F693  FE C0			     inc     al		     ; не сравнились
   5396	F695  83 C7 08			     add     di,8	     ; следующий код точки
   5397	F698  4A			     dec     dx		     ; - 1 из	счетчика
   5398	F699  75 ED			     jnz     s17	     ; повторить
   5399
   5400
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 109
1840v4.asm



   5401	F69B  3C 00			     cmp     al,0
   5402	F69D  74 12			     je	     s18    ; переход, если все сканировано,  +
   5403				     но символ
   5404							    ; не найден
   5405	F69F  2B C0			     sub     ax,ax
   5406	F6A1  8E D8			     mov     ds,ax	     ; установить адресацию	       +
   5407				     вектора
   5408					     assume  ds:abs0
   5409	F6A3  C4 3E 007Cr		     les     di,ext_ptr
   5410	F6A7  8C C0			     mov     ax,es
   5411	F6A9  0B C7			     or	     ax,di
   5412	F6AB  74 04			     jz	     s18
   5413	F6AD  B0 80			     mov     al,128	     ; начало второй части
   5414	F6AF  EB D2			     jmp     short s16	     ; вернуться и повторить
   5415					     assume  ds:data
   5416
   5417	F6B1			     s18:
   5418	F6B1  83 C4 08			     add     sp,8
   5419	F6B4  E9 FB10			     jmp     video_return
   5420	F6B7			     graphics_read   endp
   5421
   5422				     ;---------------------------------
   5423				     ;
   5424				     ;	 Эта	программа заполняет регистр BX	двумя     +
   5425				     младшими битами
   5426				     ; регистра	BL.
   5427				     ;
   5428				     ;	 ВХОД
   5429				     ;		BL - используемый цвет (младшие два бита).
   5430				     ;
   5431				     ;	 ВЫХОД
   5432				     ;		BX - используемый цвет (восемь		       +
   5433				     повторений двух битов цвета).
   5434				     ;
   5435				     ;---------------------------------
   5436	F6B7			     s19     proc    near
   5437	F6B7  80 E3 03			     and     bl,3	     ; выделить	биты цвета
   5438	F6BA  8A C3			     mov     al,bl	     ; переписать в AL
   5439	F6BC  51			     push    cx		     ; сохранить регистр
   5440	F6BD  B9 0003			     mov     cx,3	     ; количество повторений
   5441	F6C0			     s20:
   5442	F6C0  D0 E0			     sal     al,1
   5443	F6C2  D0 E0			     sal     al,1	     ; сдвиг влево на 2
   5444	F6C4  0A D8			     or	     bl,al	     ; в BL накапливается		       +
   5445				     результат
   5446	F6C6  E2 F8			     loop    s20	     ; цикл
   5447	F6C8  8A FB			     mov     bh,bl	     ; заполнить
   5448	F6CA  59			     pop     cx
   5449	F6CB  C3			     ret		     ; все выполнено
   5450	F6CC			     s19     endp
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 110
1840v4.asm



   5451				     ;--------------------------------------
   5452				     ;
   5453				     ;	 Эта	программа берет байт в AL и	удваивает     +
   5454				     все биты, превращая
   5455				     ; 8 бит	в 16 бит. Результат помещается в AX.
   5456				     ;--------------------------------------
   5457	F6CC			     s21     proc    near
   5458	F6CC  52			     push    dx		     ; сохранить регистры
   5459	F6CD  51			     push    cx
   5460	F6CE  53			     push    bx
   5461	F6CF  BA 0000			     mov     dx,0	     ; результат удвоения
   5462	F6D2  B9 0001			     mov     cx,1	     ; маска
   5463	F6D5			     s22:
   5464	F6D5  8B D8			     mov     bx,ax
   5465	F6D7  23 D9			     and     bx,cx	     ; выделение бита
   5466	F6D9  0B D3			     or	     dx,bx	     ; накапливание	результата
   5467	F6DB  D1 E0			     shl     ax,1
   5468	F6DD  D1 E1			     shl     cx,1	     ; сдвинуть	базу и маску на 1
   5469	F6DF  8B D8			     mov     bx,ax
   5470	F6E1  23 D9			     and     bx,cx
   5471	F6E3  0B D3			     or	     dx,bx
   5472	F6E5  D1 E1			     shl     cx,1    ; сдиг	маски, для выделения	       +
   5473				     следующего бита
   5474	F6E7  73 EC			     jnc     s22
   5475	F6E9  8B C2			     mov     ax,dx
   5476	F6EB  5B			     pop     bx		     ; восстановить	регистры
   5477	F6EC  59			     pop     cx
   5478	F6ED  5A			     pop     dx
   5479	F6EE  C3			     ret		     ; к выходу из прерывания
   5480	F6EF			     s21     endp
   5481
   5482				     ;----------------------------------
   5483				     ;
   5484				     ;	 Эта	программа преобразовывает		       +
   5485				     двух-битовое представление	точки
   5486				     ; (C1,C0) в однобитовое
   5487				     ; (C1,C0) к однобитовому.
   5488				     ;
   5489				     ;----------------------------------
   5490	F6EF			     s23     proc    near
   5491	F6EF  8A 24			     mov     ah,byte ptr [si]	; получить первый	байт
   5492	F6F1  8A 44 01			     mov     al,byte ptr [si+1]	  ; получить второй байт
   5493	F6F4  B9 C000			     mov     cx,0c000h	     ; 2 бита маски
   5494	F6F7  B2 00			     mov     dl,0	     ; регистр результата
   5495	F6F9			     s24:
   5496	F6F9  85 C1			     test    ax,cx	     ; проверка	2 младших бит	AX на+
   5497				     0
   5498	F6FB  F8			     clc		     ; сбросить	признак переноса+
   5499				     CF
   5500	F6FC  74 01			     jz	     s25	     ; переход если 0
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 111
1840v4.asm



   5501	F6FE  F9			     stc		     ; нет -	установить CF
   5502	F6FF  D0 D2		     s25:    rcl     dl,1	     ; циклический сдвиг
   5503	F701  D1 E9			     shr     cx,1
   5504	F703  D1 E9			     shr     cx,1
   5505	F705  73 F2			     jnc     s24	     ; повторить, если CF=1
   5506	F707  88 56 00			     mov byte ptr [bp],dl    ; запомнить результат
   5507	F70A  45			     inc     bp
   5508	F70B  C3			     ret		     ; к выходу из прерывания
   5509	F70C			     s23     endp
   5510
   5511				     ;---------------------------------------
   5512				     ;
   5513				     ;	 Эта	программа определает	положение	       +
   5514				     курсора относительно	мяти и
   5515				     ; начала буфера в режиме графики			       +
   5516				     /символ
   5517				     ;
   5518				     ;	 ВЫХОД
   5519				     ;		AX  содержит смещение курсора
   5520				     ;
   5521				     ;-----------------------------------------
   5522	F70C			     s26     proc    near
   5523	F70C  A1 0050r			     mov     ax,cursor_posn  ; получить	текущее		       +
   5524				     положение	курсора
   5525	F70F			     graph_posn	     label   near
   5526	F70F  53			     push    bx		     ; сохранить регистр
   5527	F710  8B D8			     mov     bx,ax	     ; сохранить текущее	       +
   5528				     положение	курсора
   5529	F712  8A C4			     mov     al,ah	     ; строка
   5530	F714  F6 26 004Ar		     mul     byte ptr crt_cols	 ; умножить на байт/колонку
   5531	F718  D1 E0			     shl     ax,1	     ; умножить	на 4
   5532	F71A  D1 E0			     shl     ax,1
   5533	F71C  2A FF			     sub     bh,bh	     ; выделить	значение колонки
   5534	F71E  03 C3			     add     ax,bx	     ; определить смещение
   5535	F720  5B			     pop     bx
   5536	F721  C3			     ret		     ; к выходу из прерывания
   5537	F722			     s26     endp
   5538
   5539				     ;----------------------------------------
   5540				     ;
   5541				     ;	 Записать телетайп (INT	10H, AH=14)
   5542				     ;
   5543				     ;	 Эта	программа выводит символ в буфер ЭЛИ с +
   5544				     одновременной	уста-
   5545				     ; новкой позиции курсора и передвижением	       +
   5546				     курсора на экране.
   5547				     ;	 После записи символа	в последнюю позицию   +
   5548				     строки выполняется ав-
   5549				     ; томатический	переход на новую строку. Если  +
   5550				     страница экрана за-
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 112
1840v4.asm



   5551				     ; полнена (позиция курсора 24,79/39),	выполняется +
   5552				     перемещение экрана
   5553				     ; на одну строку вверх. Освободившаяся строка+
   5554				     заполняется значением
   5555				     ; атрибута	символа (для алфавитно-цифрового   +
   5556				     режима). Для графики цвет=00
   5557				     ; После записи очередного символа курсор	       +
   5558				     установлен в следующую	позицию.
   5559				     ;
   5560				     ;	 ВХОД
   5561				     ;		AL - код выводимого символа,
   5562				     ;		BL - цвет переднего плана для графики.
   5563				     ;
   5564				     ;----------------------------------------
   5565
   5566					     assume  cs:code,ds:data
   5567	F722			     write_tty	     proc    near
   5568	F722  50			     push    ax		     ; сохранить регистры
   5569	F723  50			     push    ax
   5570	F724  B4 03			     mov     ah,3
   5571	F726  CD 10			     int     10h	     ; считать положение	       +
   5572				     текущего курсора
   5573	F728  58			     pop     ax		     ; восстановить	символ
   5574
   5575				     ;	 DX содержит текущую позицию курсора
   5576
   5577	F729  3C 08			     cmp     al,8	     ; есть	возврат на одну	       +
   5578				     позицию ?
   5579	F72B  74 59			     je	     u8		     ; возврат на одну позицию
   5580	F72D  3C 0D			     cmp     al,0dh	     ; есть	возврат каретки ?
   5581	F72F  74 5E			     je	     u9		     ; возврат каретки
   5582	F731  3C 0A			     cmp     al,0ah	     ; есть	граница поля	?
   5583	F733  74 5E			     je	     u10	     ; граница поля
   5584	F735  3C 07			     cmp     al,07h	     ; звуковой	сигнал ?
   5585	F737  74 61			     je	     u11	     ; звуковой	сигнал
   5586
   5587				     ;	 Запись символа на экран
   5588
   5589	F739  8A 3E 0062r		     mov     bh,active_page
   5590	F73D  B4 0A			     mov     ah,10	     ; запись символа без	       +
   5591				     атрибута
   5592	F73F  B9 0001			     mov     cx,1
   5593	F742  CD 10			     int     10h
   5594
   5595				     ;	 Положение курсора для следующего символа
   5596
   5597	F744  FE C2			     inc     dl
   5598	F746  3A 16 004Ar		     cmp     dl,byte ptr crt_cols
   5599	F74A  75 36			     jnz     u7		     ; переход к установке	       +
   5600				     курсора
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 113
1840v4.asm



   5601	F74C  B2 00			     mov     dl,0
   5602	F74E  80 FE 18			     cmp     dh,24	     ; проверка	граничной строки
   5603	F751  75 2D			     jnz     u6		     ; установить курсор
   5604
   5605				     ;	 Сдвиг экрана
   5606	F753			     u1:
   5607
   5608	F753  B4 02			     mov     ah,2
   5609	F755  B7 00			     mov     bh,0
   5610	F757  CD 10			     int     10h	     ; установить курсор
   5611
   5612
   5613	F759  A0 0049r			     mov     al,crt_mode     ; получить	текущий режим
   5614	F75C  3C 04			     cmp     al,4
   5615	F75E  72 06			     jc	     u2		     ; считывание курсора
   5616	F760  3C 07			     cmp     al,7
   5617	F762  B7 00			     mov     bh,0	     ; цвет	заднего плана
   5618	F764  75 06			     jne     u3
   5619
   5620	F766			     u2:			     ; считывание курсора
   5621	F766  B4 08			     mov     ah,8
   5622	F768  CD 10			     int     10h	; считать символ/атрибут	       +
   5623				     текущего курсора
   5624	F76A  8A FC			     mov     bh,ah	     ; запомнить в BH
   5625
   5626				     ;	 Перемещение	экрана на одну строку	вверх
   5627
   5628	F76C			     u3:
   5629	F76C  B8 0601			     mov     ax,601h
   5630	F76F  B9 0000			     mov     cx,0	     ; верхний левый угол
   5631	F772  B6 18			     mov     dh,24	     ; координаты нижнего	       +
   5632				     правого
   5633	F774  8A 16 004Ar		     mov     dl,byte ptr crt_cols    ; угла
   5634	F778  FE CA			     dec     dl
   5635	F77A			     u4:
   5636	F77A  CD 10			     int     10h
   5637
   5638				     ;	 Выход из прерывания
   5639
   5640	F77C			     u5:
   5641	F77C  58			     pop     ax		     ; восстановить	символ
   5642	F77D  E9 FA47			     jmp     video_return    ; возврат к программе
   5643
   5644	F780			     u6:			     ; установить курсор
   5645	F780  FE C6			     inc     dh		     ; следующая строка
   5646	F782			     u7:			     ; установить курсор
   5647	F782  B4 02			     mov     ah,2
   5648	F784  EB F4			     jmp     short u4	     ; установить новый курсор
   5649
   5650				     ;	 Сдвиг курсора на	одну позицию	влево
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 114
1840v4.asm



   5651
   5652	F786			     u8:
   5653	F786  80 FA 00			     cmp     dl,0
   5654	F789  74 F7			     je	     u7		     ; установить курсор
   5655	F78B  FE CA			     dec     dl		     ; нет -	снова его передать
   5656	F78D  EB F3			     jmp     short u7
   5657
   5658				     ;	 Перемещение	курсора в начало строки
   5659
   5660	F78F			     u9:
   5661	F78F  B2 00			     mov     dl,0
   5662	F791  EB EF			     jmp     short u7	     ; установить курсор
   5663
   5664				     ;	 Перемещение	курсора на следующую строку
   5665
   5666	F793			     u10:
   5667	F793  80 FE 18			     cmp     dh,24	     ; последняя строка экрана
   5668	F796  75 E8			     jne     u6		     ; да - сдвиг экрана
   5669	F798  EB B9			     jmp     short u1	     ; нет -	снова установить	       +
   5670				     курсор
   5671
   5672				     ;	 Звуковой сигнал
   5673
   5674	F79A			     u11:
   5675	F79A  B3 02			     mov     bl,2	     ; уст длительность		       +
   5676				     звукового	сигнала
   5677	F79C  E8 EE0A			     call    beep	     ; звук
   5678	F79F  EB DB			     jmp     short u5	     ; возврат
   5679	F7A1			     write_tty	     endp
   5680
   5681				     ;
   5682				     ;----------------------------------------
   5683				     ;
   5684				     ;	 Эта	программа считывает положение	       +
   5685				     светового	пера.
   5686				     ; Проверяется переключатель и триггер	       +
   5687				     светового	пера. Если бит 1 ре-
   5688				     ; гистра состояния (порт 3DA)=1, то триггер	       +
   5689				     установлен. Если бит 2 порта
   5690				     ; 3DA=0, то установлен	переключатель.
   5691				     ;	 Порты 3BD	и 3DC используются	для установки и   +
   5692				     сброса триггера и пере-
   5693				     ; ключателя светового пера.
   5694				     ;	 В регистрах R16 и R17 контроллера содержится  +
   5695				     адрес	координат пера
   5696				     ; относительно	начала буфера дисплея.
   5697				     ;	 Если триггер и переключатель установлены, +
   5698				     то программа определяет
   5699				     ; положение светового пера, в противном	       +
   5700				     случае, возврат без выдачи
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 115
1840v4.asm



   5701				     ; информации.
   5702				     ;
   5703				     ;	 В ППЭВМ ЕС1841	функция не поддерживается
   5704				     ;-------------------------------------------------
   5705
   5706
   5707
   5708
   5709					     assume  cs:code,ds:data
   5710
   5711				     ;	 Таблица	поправок для	получения		       +
   5712				     фактических координат светового пера
   5713
   5714	F7A1			     v1	     label   byte
   5715	F7A1  03 03 05 05 03 03	03+	     db	     3,3,5,5,3,3,3,4
   5716	      04
   5717
   5718	F7A9			     read_lpen	     proc    near
   5719
   5720
   5721	F7A9  B4 00			     mov     ah,0	     ; код возврата,	если перо не +
   5722				     включено
   5723	F7AB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес 6845
   5724	F7AF  83 C2 06			     add     dx,6	     ; указать регистр состояния
   5725	F7B2  EC			     in	     al,dx	     ; получить	регистр		       +
   5726				     состояния
   5727	F7B3  A8 04			     test    al,4	     ; проверить переключатель   +
   5728				     светового	пера
   5729	F7B5  75 78			     jnz     v6		     ; не установлено, возврат
   5730
   5731				     ;	 Проверка триггера светового пера
   5732
   5733	F7B7  A8 02			     test    al,2	     ; проверить триггер	       +
   5734				     светового	пера
   5735	F7B9  74 7E			     jz	     v7		     ; возврат без сброса	       +
   5736				     триггера
   5737
   5738				     ;	 Триггер	был установлен, считать значение в+
   5739				     AH
   5740
   5741	F7BB  B4 10			     mov     ah,16	     ; уст регистры светового      +
   5742				     пера 6845
   5743
   5744				     ;	 Ввод регистров, указанных AH и			       +
   5745				     преобразование в строки колонки в DX
   5746
   5747	F7BD  8B 16 0063r		     mov     dx,addr_6845
   5748	F7C1  8A C4			     mov     al,ah
   5749	F7C3  EE			     out     dx,al	     ; вывести в порт
   5750	F7C4  42			     inc     dx
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 116
1840v4.asm



   5751	F7C5  EC			     in	     al,dx	     ; получить	значение из порта
   5752	F7C6  8A E8			     mov     ch,al	     ; сохранить его в CX
   5753	F7C8  4A			     dec     dx		     ; регистр адреса
   5754	F7C9  FE C4			     inc     ah
   5755	F7CB  8A C4			     mov     al,ah	     ; второй регистр данных
   5756	F7CD  EE			     out     dx,al
   5757	F7CE  42			     inc     dx
   5758	F7CF  EC			     in	     al,dx	     ; получить	второе значение  +
   5759				     данных
   5760	F7D0  8A E5			     mov     ah,ch	     ; AX содержит координаты	       +
   5761				     светового	пера
   5762
   5763
   5764	F7D2  8A 1E 0049r		     mov     bl,crt_mode
   5765	F7D6  2A FF			     sub     bh,bh	     ; выделить	значение режима  +
   5766				     в	BX
   5767	F7D8  2E: 8A 9F	F7A1r		     mov     bl,cs:v1[bx]    ; значение	поправки
   5768	F7DD  2B C3			     sub     ax,bx
   5769	F7DF  2B 06 004Er		     sub     ax,crt_start
   5770
   5771	F7E3  79 03			     jns     v2
   5772	F7E5  B8 0000			     mov     ax,0	     ; поместить 0
   5773
   5774				     ;	 Определить режим
   5775
   5776	F7E8			     v2:
   5777	F7E8  B1 03			     mov     cl,3	     ; установить счетчик
   5778	F7EA  80 3E 0049r 04		     cmp     crt_mode,4	     ; определить, режим	графики +
   5779				     или
   5780								     ; альфа
   5781	F7EF  72 2A			     jb	     v4		     ; альфа-перо
   5782	F7F1  80 3E 0049r 07		     cmp     crt_mode,7
   5783	F7F6  74 23			     je	     v4		     ; альфа-перо
   5784
   5785				     ;	 Графический	режим
   5786
   5787	F7F8  B2 28			     mov     dl,40	     ; делитель	для графики
   5788	F7FA  F6 F2			     div     dl	     ; определение строки (AL)	и	       +
   5789				     колонки (AH)
   5790								     ; пределы AL 0-99, AH 0-39
   5791
   5792				     ;	 Определение	положения строки	для графики
   5793
   5794	F7FC  8A E8			     mov     ch,al	     ; сохранить значение строки+
   5795				     в	CH
   5796	F7FE  02 ED			     add     ch,ch	     ; умножить	на 2			       +
   5797				     четно/нечетное поле
   5798	F800  8A DC			     mov     bl,ah	     ; значение	колонки в BX
   5799	F802  2A FF			     sub     bh,bh	     ; умножить	на 8 для среднего +
   5800				     результата
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 117
1840v4.asm



   5801	F804  80 3E 0049r 06		     cmp     crt_mode,6	     ; определить среднюю или      +
   5802				     наивысшую
   5803								     ; разрешающую способность
   5804	F809  75 04			     jne     v3		     ; не наивысшая разрешающая  +
   5805				     способность
   5806	F80B  B1 04			     mov     cl,4     ;	сдвинуть значение наивысшей   +
   5807				     разрешающей
   5808							      ;	способности
   5809	F80D  D0 E4			     sal     ah,1    ; сдвиг на 1 разряд влево	       +
   5810				     значения колонки
   5811	F80F			     v3:			     ; не наивысшая разрешающая  +
   5812				     способность
   5813	F80F  D3 E3			     shl     bx,cl   ; умножить	на 16	для наивысшей      +
   5814				     разрешающей
   5815							     ; способности
   5816
   5817				     ;	 Определение	положения символа для альфа
   5818
   5819	F811  8A D4			     mov     dl,ah	     ; значение	колонки для	       +
   5820				     возврата
   5821	F813  8A F0			     mov     dh,al	     ; значение	строки
   5822	F815  D0 EE			     shr     dh,1	     ; делить на 4
   5823	F817  D0 EE			     shr     dh,1	     ; для значения в пределах 0-24
   5824	F819  EB 12			     jmp     short v5	     ; возврат светового пера
   5825
   5826				     ;	 Режим альфа светового пера
   5827
   5828	F81B			     v4:			     ; альфа светового пера
   5829	F81B  F6 36 004Ar		     div     byte ptr crt_cols	; строка,	колонка
   5830	F81F  8A F0			     mov     dh,al	     ; строка в DH
   5831	F821  8A D4			     mov     dl,ah	     ; колонка в DL
   5832	F823  D2 E0			     sal     al,cl	     ; умножение строк на 8
   5833	F825  8A E8			     mov     ch,al
   5834	F827  8A DC			     mov     bl,ah
   5835	F829  32 FF			     xor     bh,bh
   5836	F82B  D3 E3			     sal     bx,cl
   5837	F82D			     v5:
   5838	F82D  B4 01			     mov     ah,1	     ; указать, что все		       +
   5839				     установлено
   5840	F82F			     v6:
   5841	F82F  52			     push    dx		     ; сохранить значение	       +
   5842				     возврата
   5843	F830  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   5844	F834  83 C2 07			     add     dx,7
   5845	F837  EE			     out     dx,al	     ; вывод
   5846	F838  5A			     pop     dx		     ; восстановить	значение
   5847	F839			     v7:
   5848	F839  5F			     pop     di		      ;	восстановить регистры
   5849	F83A  5E			     pop     si
   5850	F83B  1F			     pop     ds
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 118
1840v4.asm



   5851	F83C  1F			     pop     ds
   5852	F83D  1F			     pop     ds
   5853	F83E  1F			     pop     ds
   5854	F83F  07			     pop     es
   5855	F840  CF			     iret
   5856	F841			     read_lpen	     endp
   5857
   5858				     ;--- int 12 ------------------------------------
   5859				     ;
   5860				     ;	  Программа определения размера памяти.
   5861				     ;
   5862				     ;	  Эта программа передает в	регистр AX об'ем    +
   5863				     памяти в Кбайтах.
   5864				     ;
   5865				     ;-----------------------------------------
   5866
   5867					     assume  cs:code,ds:data
   5868	F841			     memory_size_determine   proc    far
   5869	F841  FB			     sti		     ; установить бит разрешения+
   5870				     прерывания
   5871	F842  1E			     push    ds		     ; сохранить сегмент
   5872	F843  B8 0040			     mov     ax,dat	     ; установить адресацию
   5873	F846  8E D8			     mov     ds,ax
   5874	F848  A1 0013r			     mov     ax,memory_size  ; получить	значение размера+
   5875				     памяти
   5876	F84B  1F			     pop     ds		     ; восстановить	сегмент
   5877	F84C  CF			     iret		     ; возврат из прерывания
   5878	F84D			     memory_size_determine   endp
   5879
   5880				     ;--- int 11-------------------------------
   5881				     ;
   5882				     ;	  Программа определения состава		       +
   5883				     оборудования.
   5884				     ;
   5885				     ;	 Эта	программа передает в регистр AX	       +
   5886				     конфигурацию системы.
   5887				     ;
   5888				     ;	 Разряды	регистра AX имеют следующее	       +
   5889				     значение:
   5890				     ;	 0	 - загрузка системы с НГМД;
   5891				     ;	 5,4	 - тип подключенного ЭЛИ и режим его       +
   5892				     работы:
   5893				     ;		   00 -	не используется;
   5894				     ;		   01 -	40х25,	черно-белый режим цветного      +
   5895				     графического
   5896				     ;			ЭЛИ;
   5897				     ;		   10 -	80х25,	черно-белый режим цветного      +
   5898				     графического
   5899				     ;			ЭЛИ;
   5900				     ;		   11 -	80х25,	черно-белый режим		       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 119
1840v4.asm



   5901				     монохромного ЭЛИ.
   5902				     ;	 7,6	 - количество	НГМД;
   5903				     ;	 11,10,9 - количество	адаптеров стыка С2;
   5904				     ;	 12	 - адаптер игр;
   5905				     ;	 15,14	 - количество	печатающих устройств.
   5906				     ;	 Разряды	6 и 7 устанавливаются только в том   +
   5907				     случае, если
   5908				     ; разряд 0 установлен в "1".
   5909				     ;
   5910				     ;----------------------------------------------
   5911
   5912					     assume  cs:code,ds:data
   5913	F84D			     equipment	     proc    far
   5914	F84D  FB			     sti		     ; установить признак	       +
   5915				     разрешения прерывания
   5916	F84E  1E			     push    ds		     ; сохранить сегмент
   5917	F84F  B8 0040			     mov     ax,dat	     ; установить адресацию
   5918	F852  8E D8			     mov     ds,ax
   5919	F854  A1 0010r			     mov     ax,equip_flag   ; получить	конфигурацию       +
   5920				     системы
   5921	F857  1F			     pop     ds		     ; восстановить	сегмент
   5922	F858  CF			     iret		     ; возврат из прерывания
   5923	F859			     equipment	     endp
   5924
   5925				     ;****************************************
   5926				     ;
   5927				     ;	 Загрузка знакогенератора
   5928				     ;
   5929				     ;****************************************
   5930
   5931	F859			     bct     proc    near
   5932	F859  B8 DC00			     mov     ax,0dc00h
   5933	F85C  8E C0			     mov     es,ax
   5934	F85E  B9 1400			     mov     cx,1400h
   5935	F861  BA 03B8			     mov     dx,3b8h
   5936	F864  33 C0			     xor     ax,ax
   5937	F866  EE			     out     dx,al
   5938	F867  33 FF			     xor     di,di
   5939	F869  FC			     cld
   5940	F86A  F3> AB			     rep     stosw
   5941	F86C  BE FA6Er		     bct3:   mov     si,offset crt_char_gen
   5942	F86F  33 FF			     xor     di,di
   5943	F871  33 C0			     xor     ax,ax
   5944	F873  B1 80			     mov     cl,128
   5945	F875			     bct1:
   5946	F875  B3 08			     mov     bl,8
   5947	F877  2E: 8A 04		     bct2:   mov     al,cs:[si]
   5948	F87A  46			     inc     si
   5949	F87B  26: 89 05			     mov     word ptr es:[di],ax
   5950	F87E  47			     inc     di
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 120
1840v4.asm



   5951	F87F  47			     inc     di
   5952	F880  FE CB			     dec     bl
   5953	F882  75 F3			     jnz     bct2
   5954	F884  83 C7 10			     add     di,10h
   5955	F887  FE C9			     dec     cl
   5956	F889  75 EA				     jnz     bct1
   5957	F88B  B0 01				     mov     al, 1
   5958	F88D  EE				     out     dx, al
   5959	F88E  B8 B800				     mov     ax, 0B800h
   5960	F891  8E C0				     mov     es, ax
   5961	F893  B0 01				     mov     al, 1
   5962	F895  BA 03DF				     mov     dx, 3DFh
   5963	F898  EE				     out     dx, al
   5964	F899  BA 03D8				     mov     dx, 3D8h
   5965	F89C  EC				     in	     al, dx
   5966	F89D  8A D8				     mov     bl, al
   5967	F89F  B0 00				     mov     al, 0
   5968	F8A1  EE				     out     dx, al
   5969	F8A2  33 FF				     xor     di, di
   5970	F8A4  B9 0400				     mov     cx, 1024
   5971	F8A7  33 C0				     xor     ax, ax
   5972	F8A9  FC				     cld
   5973	F8AA  F3> AB				     repe stosw
   5974	F8AC  BE FA6Er				     mov     si, offset	crt_char_gen
   5975	F8AF  B9 0400				     mov     cx, 1024
   5976	F8B2  33 FF				     xor     di, di
   5977
   5978	F8B4			     bct4:
   5979	F8B4  2E: 8A 04				     mov     al, cs:[si]
   5980	F8B7  26: 88 05				     mov     es:[di], al
   5981	F8BA  46				     inc     si
   5982	F8BB  47				     inc     di
   5983	F8BC  E2 F6				     loop    bct4
   5984	F8BE  B0 00				     mov     al, 0
   5985	F8C0  BA 03DF				     mov     dx, 3DFh
   5986	F8C3  EE				     out     dx, al
   5987	F8C4  BA 03D8				     mov     dx, 3D8h
   5988	F8C7  8A C3				     mov     al, bl
   5989	F8C9  EE				     out     dx, al
   5990	F8CA  C3				     ret
   5991	F8CB			     bct     endp
   5992
   5993				     ;
   5994				     ;	 Таблица	кодов русских маленьких букв	       +
   5995				     (строчных)
   5996				     ;
   5997	F8CB			     rust    label   byte
   5998	F8CB  1B 31 32 33 34 35	36+	     db	     1bh,'1234567890-='
   5999	      37 38 39 30 2D 3D
   6000
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 121
1840v4.asm



   6001
   6002	F8D8  08 09			     db	     08h,09h
   6003	F8DA  D9 E6 E3 DA D5 DD	D3+	     db	     0d9h,0e6h,0e3h,0dah,0d5h,0ddh,0d3h,0e8h
   6004	      E8
   6005
   6006	F8E2  E9 D7 D6 ED 0D FF	E4+	     db	     0e9h,0d7h,0d6h,0edh,0dh,-1,0e4h,0ebh
   6007	      EB
   6008
   6009	F8EA  D2 D0 DF E0 DE DB	D4+	     db	     0d2h,0d0h,0dfh,0e0h,0deh,0dbh,0d4h,';:'
   6010	      3B 3A
   6011
   6012	F8F3  D1 EE 5C EF E7 E1	DC+	     db	     0d1h,0eeh,5ch,0efh,0e7h,0e1h,0dch,0d8h
   6013	      D8
   6014
   6015	F8FB  E2 EC 2C 2E 2F E5	2A	     db	     0e2h,0ech,',./',0e5h,'*'
   6016
   6017	F902  FF 20 EA			     db	     -1,' ',0eah
   6018
   6019
   6020	F905			     k30     label   byte
   6021	F905  52 4F 50 51 4B 4C	4D	     db	     82,79,80,81,75,76,77
   6022
   6023	F90C  47 48 49			     db	     71,72,73
   6024				     ;---
   6025	F90F  10 11 12 13 14 15	16+	     db	     16,17,18,19,20,21,22,23
   6026	      17
   6027
   6028	F917  18 19 1E 1F 20 21	22+	     db	     24,25,30,31,32,33,34,35
   6029	      23
   6030
   6031	F91F  24 25 26 2C 2D 2E	2F+	     db	     36,37,38,44,45,46,47,48
   6032	      30
   6033
   6034	F927  31 32			     db	     49,50
   6035
   6036				     ;	     Временный	обработчик прерываний стыка С2
   6037
   6038	F929			     rs232_io:
   6039	F929  B8 61F0				     mov     ax, 61F0h
   6040	F92C  CF				     iret
   6041
   6042	F92D			     ex_memory:
   6043	F92D  F9				     stc
   6044	F92E  B4 86				     mov     ah, 86h
   6045	F930  CA 0002				     retf    2
   6046
   6047				     ;---
   6048	F933  F6 06 0017r 03	     k89:    test    kb_flag,left_shift+right_shift
   6049	F938  74 11			     jz	     k80
   6050	F93A  3C F0			     cmp     al,0f0h
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 122
1840v4.asm



   6051	F93C  74 23			     je	     k89a
   6052	F93E  3C B0			     cmp     al,0b0h
   6053	F940  72 06			     jb	     k81
   6054	F942  3C CF			     cmp     al,0cfh
   6055	F944  77 02			     ja	     k81
   6056	F946  04 20			     add     al,20h
   6057	F948  E9 EE94		     k81:    jmp     k61
   6058	F94B  3C F1		     k80:    cmp     al,0f1h
   6059	F94D  74 0D			     je	     k89b
   6060	F94F  3C D0			     cmp     al,0d0h
   6061	F951  72 F5			     jb	     k81
   6062	F953  3C FE			     cmp     al,0feh
   6063	F955  77 F1			     ja	     k81
   6064	F957  2C 20			     sub     al,20h
   6065	F959  E9 EE83			     jmp     k61
   6066	F95C  2C 01		     k89b:   sub     al,01h
   6067	F95E  E9 EE7E			     jmp     k61
   6068	F961  04 01		     k89a:   add     al,01h
   6069	F963  E9 EE79			     jmp     k61
   6070
   6071	F966			     write_tty2:
   6072	F966  8A 3E 0062r			     mov     bh, ds:active_page
   6073	F96A  E9 FDB5				     jmp     write_tty
   6074
   6075	F96D			     f19a:
   6076	F96D  42				     inc     dx
   6077	F96E  B0 08				     mov     al, 8
   6078	F970  EE				     out     dx, al
   6079	F971  BA 03FE				     mov     dx, 3FEh
   6080	F974  EE				     out     dx, al
   6081	F975  B0 A4				     mov     al, 0A4h
   6082	F977  E6 21				     out     inta01, al
   6083	F979  8B C6				     mov     ax, si
   6084	F97B  B1 03				     mov     cl, 3
   6085	F97D  E9 EBDC				     jmp     f19b
   6086
   6087	F980			     f20a:
   6088	F980  B0 80				     mov     al, 80h
   6089	F982  E6 A0				     out     0A0h, al
   6090	F984  B0 BC				     mov     al, 0BCh
   6091	F986  E6 21				     out     21h, al
   6092	F988  E9 EBE9				     jmp     f20b
   6093				     ;
   6094	F98B  50		     dummm_return:   push    ax
   6095	F98C  B0 20				     mov     al,20h
   6096	F98E  E6 20				     out     20h,al
   6097	F990  58				     pop     ax
   6098	F991  CF				     iret
   6099
   6100	F992  DC*(00)				     db	220 dup(0)
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 123
1840v4.asm



   6101
   6102				     ;**************************************
   6103				     ;
   6104				     ;	 Знакогенератор графический 320х200 и 640х200
   6105				     ;
   6106				     ;***************************************
   6107
   6108
   6109
   6110	FA6E			     crt_char_gen  label  byte
   6111	FA6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;d_00
   6112	      00
   6113
   6114	FA76  7E 81 A5 81 BD 99	81+	     db	     07eh,081h,0a5h,081h,0bdh,099h,081h,07eh ;d_01
   6115	      7E
   6116
   6117	FA7E  7E FF DB FF C3 E7	FF+	     db	     07eh,0ffh,0dbh,0ffh,0c3h,0e7h,0ffh,07eh ;d_02
   6118	      7E
   6119
   6120	FA86  6C FE FE FE 7C 38	10+	     db	     06ch,0feh,0feh,0feh,07ch,038h,010h,000h ;d_03
   6121	      00
   6122
   6123	FA8E  10 38 7C FE 7C 38	10+	     db	     010h,038h,07ch,0feh,07ch,038h,010h,000h ;d_04
   6124	      00
   6125
   6126	FA96  38 7C 38 FE FE 7C	38+	     db	     038h,07ch,038h,0feh,0feh,07ch,038h,07ch ;d_05
   6127	      7C
   6128
   6129	FA9E  10 10 38 7C FE 7C	38+	     db	     010h,010h,038h,07ch,0feh,07ch,038h,07ch ;d_06
   6130	      7C
   6131
   6132	FAA6  00 00 18 3C 3C 18	00+	     db	     000h,000h,018h,03ch,03ch,018h,000h,000h ;d_07
   6133	      00
   6134
   6135	FAAE  FF FF E7 C3 C3 E7	FF+	     db	     0ffh,0ffh,0e7h,0c3h,0c3h,0e7h,0ffh,0ffh ;d_08
   6136	      FF
   6137
   6138	FAB6  00 3C 66 42 42 66	3C+	     db	     000h,03ch,066h,042h,042h,066h,03ch,000h ;d_09
   6139	      00
   6140
   6141	FABE  FF C3 99 BD BD 99	C3+	     db	     0ffh,0c3h,099h,0bdh,0bdh,099h,0c3h,0ffh ;d_0a
   6142	      FF
   6143
   6144	FAC6  0F 07 0F 7D CC CC	CC+	     db	     00fh,007h,00fh,07dh,0cch,0cch,0cch,078h ;d_0b
   6145	      78
   6146
   6147	FACE  3C 66 66 66 3C 18	7E+	     db	     03ch,066h,066h,066h,03ch,018h,07eh,018h ;d_0c
   6148	      18
   6149
   6150	FAD6  3F 33 3F 30 30 70	F0+	     db	     03fh,033h,03fh,030h,030h,070h,0f0h,0e0h ;d_0d
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 124
1840v4.asm



   6151	      E0
   6152
   6153	FADE  7F 63 7F 63 63 67	E6+	     db	     07fh,063h,07fh,063h,063h,067h,0e6h,0c0h ;d_0e
   6154	      C0
   6155
   6156	FAE6  99 5A 3C E7 E7 3C	5A+	     db	     099h,05ah,03ch,0e7h,0e7h,03ch,05ah,099h ;d_0f
   6157	      99
   6158
   6159
   6160	FAEE  80 E0 F8 FE F8 E0	80+	     db	     080h,0e0h,0f8h,0feh,0f8h,0e0h,080h,000h ;d_10
   6161	      00
   6162
   6163	FAF6  02 0E 3E FE 3E 0E	02+	     db	     002h,00eh,03eh,0feh,03eh,00eh,002h,000h ;d_11
   6164	      00
   6165
   6166	FAFE  18 3C 7E 18 18 7E	3C+	     db	     018h,03ch,07eh,018h,018h,07eh,03ch,018h ;d_12
   6167	      18
   6168
   6169	FB06  66 66 66 66 66 00	66+	     db	     066h,066h,066h,066h,066h,000h,066h,000h ;d_13
   6170	      00
   6171
   6172	FB0E  7F DB DB 7B 1B 1B	1B+	     db	     07fh,0dbh,0dbh,07bh,01bh,01bh,01bh,000h ;d_14
   6173	      00
   6174
   6175	FB16  3E 63 38 6C 6C 38	CC+	     db	     03eh,063h,038h,06ch,06ch,038h,0cch,078h ;d_15
   6176	      78
   6177
   6178	FB1E  00 00 00 00 7E 7E	7E+	     db	     000h,000h,000h,000h,07eh,07eh,07eh,000h ;d_16
   6179	      00
   6180
   6181	FB26  18 3C 7E 18 7E 3C	18+	     db	     018h,03ch,07eh,018h,07eh,03ch,018h,0ffh ;d_17
   6182	      FF
   6183
   6184	FB2E  18 3C 7E 18 18 18	18+	     db	     018h,03ch,07eh,018h,018h,018h,018h,000h ;d_18
   6185	      00
   6186
   6187	FB36  18 18 18 18 7E 3C	18+	     db	     018h,018h,018h,018h,07eh,03ch,018h,000h ;d_19
   6188	      00
   6189
   6190	FB3E  00 18 0C FE 0C 18	00+	     db	     000h,018h,00ch,0feh,00ch,018h,000h,000h ;d_1a
   6191	      00
   6192
   6193	FB46  00 30 60 FE 60 30	00+	     db	     000h,030h,060h,0feh,060h,030h,000h,000h ;d_1b
   6194	      00
   6195
   6196	FB4E  00 00 C0 C0 C0 FE	00+	     db	     000h,000h,0c0h,0c0h,0c0h,0feh,000h,000h ;d_1c
   6197	      00
   6198
   6199	FB56  00 24 66 FF 66 24	00+	     db	     000h,024h,066h,0ffh,066h,024h,000h,000h ;d_1d
   6200	      00
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 125
1840v4.asm



   6201
   6202	FB5E  00 18 3C 7E FF FF	00+	     db	     000h,018h,03ch,07eh,0ffh,0ffh,000h,000h ;d_1e
   6203	      00
   6204
   6205	FB66  00 FF FF 7E 3C 18	00+	     db	     000h,0ffh,0ffh,07eh,03ch,018h,000h,000h ;d_1f
   6206	      00
   6207
   6208
   6209	FB6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;sp d_20
   6210	      00
   6211
   6212	FB76  30 78 78 30 30 00	30+	     db	     030h,078h,078h,030h,030h,000h,030h,000h ;!	d_21
   6213	      00
   6214
   6215	FB7E  6C 6C 6C 00 00 00	00+	     db	     06ch,06ch,06ch,000h,000h,000h,000h,000h ;"d_22
   6216	      00
   6217
   6218	FB86  6C 6C FE 6C FE 6C	6C+	     db	     06ch,06ch,0feh,06ch,0feh,06ch,06ch,000h ;#	d_23
   6219	      00
   6220
   6221	FB8E  30 7C C0 78 0C F8	30+	     db	     030h,07ch,0c0h,078h,00ch,0f8h,030h,000h ;$	d_24
   6222	      00
   6223
   6224	FB96  00 C6 CC 18 30 66	C6+	     db	     000h,0c6h,0cch,018h,030h,066h,0c6h,000h ;per cent d_25
   6225	      00
   6226
   6227	FB9E  38 6C 38 76 DC CC	76+	     db	     038h,06ch,038h,076h,0dch,0cch,076h,000h ;&	d_26
   6228	      00
   6229
   6230	FBA6  60 60 C0 00 00 00	00+	     db	     060h,060h,0c0h,000h,000h,000h,000h,000h ;'	d_27
   6231	      00
   6232
   6233	FBAE  18 30 60 60 60 30	18+	     db	     018h,030h,060h,060h,060h,030h,018h,000h ;(	d_28
   6234	      00
   6235
   6236	FBB6  60 30 18 18 18 30	60+	     db	     060h,030h,018h,018h,018h,030h,060h,000h ;)	d_29
   6237	      00
   6238
   6239	FBBE  00 66 3C FF 3C 66	00+	     db	     000h,066h,03ch,0ffh,03ch,066h,000h,000h ;*	d_2a
   6240	      00
   6241
   6242	FBC6  00 30 30 FC 30 30	00+	     db	     000h,030h,030h,0fch,030h,030h,000h,000h ;+	d_2b
   6243	      00
   6244
   6245	FBCE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,060h ;,	d_2c
   6246	      60
   6247
   6248	FBD6  00 00 00 FC 00 00	00+	     db	     000h,000h,000h,0fch,000h,000h,000h,000h ;-	d_2d
   6249	      00
   6250
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 126
1840v4.asm



   6251	FBDE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,000h ;.	d_2e
   6252	      00
   6253
   6254	FBE6  06 0C 18 30 60 C0	80+	     db	     006h,00ch,018h,030h,060h,0c0h,080h,000h ;/	d_2f
   6255	      00
   6256
   6257
   6258	FBEE  7C C6 CE DE F6 E6	7C+	     db	     07ch,0c6h,0ceh,0deh,0f6h,0e6h,07ch,000h ;0	d_30
   6259	      00
   6260
   6261	FBF6  30 70 30 30 30 30	FC+	     db	     030h,070h,030h,030h,030h,030h,0fch,000h ;1	d_31
   6262	      00
   6263
   6264	FBFE  78 CC 0C 38 60 CC	FC+	     db	     078h,0cch,00ch,038h,060h,0cch,0fch,000h ;2	d_32
   6265	      00
   6266
   6267	FC06  78 CC 0C 38 0C CC	78+	     db	     078h,0cch,00ch,038h,00ch,0cch,078h,000h ;3	d_33
   6268	      00
   6269
   6270	FC0E  1C 3C 6C CC FE 0C	1E+	     db	     01ch,03ch,06ch,0cch,0feh,00ch,01eh,000h ;4	d_34
   6271	      00
   6272
   6273	FC16  FC C0 F8 0C 0C CC	78+	     db	     0fch,0c0h,0f8h,00ch,00ch,0cch,078h,000h ;5	d_35
   6274	      00
   6275
   6276	FC1E  38 60 C0 F8 CC CC	78+	     db	     038h,060h,0c0h,0f8h,0cch,0cch,078h,000h ;6	d_36
   6277	      00
   6278
   6279	FC26  FC CC 0C 18 30 30	30+	     db	     0fch,0cch,00ch,018h,030h,030h,030h,000h ;7	d_37
   6280	      00
   6281
   6282	FC2E  78 CC CC 78 CC CC	78+	     db	     078h,0cch,0cch,078h,0cch,0cch,078h,000h ;8	d_38
   6283	      00
   6284
   6285	FC36  78 CC CC 7C 0C 18	70+	     db	     078h,0cch,0cch,07ch,00ch,018h,070h,000h ;9	d_39
   6286	      00
   6287
   6288	FC3E  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,000h ;:	d_3a
   6289	      00
   6290
   6291	FC46  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,060h ;;	d_3b
   6292	      60
   6293
   6294	FC4E  18 30 60 C0 60 30	18+	     db	     018h,030h,060h,0c0h,060h,030h,018h,000h ;<	d_3c
   6295	      00
   6296
   6297	FC56  00 00 FC 00 00 FC	00+	     db	     000h,000h,0fch,000h,000h,0fch,000h,000h ;=	d_3d
   6298	      00
   6299
   6300	FC5E  60 30 18 0C 18 30	60+	     db	     060h,030h,018h,00ch,018h,030h,060h,000h ;>	d_3e
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 127
1840v4.asm



   6301	      00
   6302
   6303	FC66  78 CC 0C 18 30 00	30+	     db	     078h,0cch,00ch,018h,030h,000h,030h,000h ;?	d_3f
   6304	      00
   6305
   6306
   6307	FC6E  7C C6 DE DE DE C0	78+	     db	     07ch,0c6h,0deh,0deh,0deh,0c0h,078h,000h ;@	d_40
   6308	      00
   6309
   6310	FC76  30 78 CC CC FC CC	CC+	     db	     030h,078h,0cch,0cch,0fch,0cch,0cch,000h ;A	d_41
   6311	      00
   6312
   6313	FC7E  FC 66 66 7C 66 66	FC+	     db	     0fch,066h,066h,07ch,066h,066h,0fch,000h ;B	d_42
   6314	      00
   6315
   6316	FC86  3C 66 C0 C0 C0 66	3C+	     db	     03ch,066h,0c0h,0c0h,0c0h,066h,03ch,000h ;C	d_43
   6317	      00
   6318
   6319	FC8E  F8 6C 66 66 66 6C	F8+	     db	     0f8h,06ch,066h,066h,066h,06ch,0f8h,000h ;D	d_44
   6320	      00
   6321
   6322	FC96  FE 62 68 78 68 62	FE+	     db	     0feh,062h,068h,078h,068h,062h,0feh,000h ;E	d_45
   6323	      00
   6324
   6325	FC9E  FE 62 68 78 68 60	F0+	     db	     0feh,062h,068h,078h,068h,060h,0f0h,000h ;F	d_46
   6326	      00
   6327
   6328	FCA6  3C 66 C0 C0 CE 66	3E+	     db	     03ch,066h,0c0h,0c0h,0ceh,066h,03eh,000h ;G	d_47
   6329	      00
   6330
   6331	FCAE  CC CC CC FC CC CC	CC+	     db	     0cch,0cch,0cch,0fch,0cch,0cch,0cch,000h ;H	d_48
   6332	      00
   6333
   6334	FCB6  78 30 30 30 30 30	78+	     db	     078h,030h,030h,030h,030h,030h,078h,000h ;I	d_49
   6335	      00
   6336
   6337	FCBE  1E 0C 0C 0C CC CC	78+	     db	     01eh,00ch,00ch,00ch,0cch,0cch,078h,000h ;J	d_4a
   6338	      00
   6339
   6340	FCC6  E6 66 6C 78 6C 66	E6+	     db	     0e6h,066h,06ch,078h,06ch,066h,0e6h,000h ;K	d_4b
   6341	      00
   6342
   6343	FCCE  F0 60 60 60 62 66	FE+	     db	     0f0h,060h,060h,060h,062h,066h,0feh,000h ;L	d_4c
   6344	      00
   6345
   6346	FCD6  C6 EE FE FE D6 C6	C6+	     db	     0c6h,0eeh,0feh,0feh,0d6h,0c6h,0c6h,000h ;M	d_4d
   6347	      00
   6348
   6349	FCDE  C6 E6 F6 DE CE C6	C6+	     db	     0c6h,0e6h,0f6h,0deh,0ceh,0c6h,0c6h,000h ;N	d_4e
   6350	      00
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 128
1840v4.asm



   6351
   6352	FCE6  38 6C C6 C6 C6 6C	38+	     db	     038h,06ch,0c6h,0c6h,0c6h,06ch,038h,000h ;O	d_4f
   6353	      00
   6354
   6355
   6356	FCEE  FC 66 66 7C 60 60	F0+	     db	     0fch,066h,066h,07ch,060h,060h,0f0h,000h ;P	d_50
   6357	      00
   6358
   6359	FCF6  78 CC CC CC DC 78	1C+	     db	     078h,0cch,0cch,0cch,0dch,078h,01ch,000h ;Q	d_51
   6360	      00
   6361
   6362	FCFE  FC 66 66 7C 6C 66	E6+	     db	     0fch,066h,066h,07ch,06ch,066h,0e6h,000h ;R	d_52
   6363	      00
   6364
   6365	FD06  78 CC E0 70 1C CC	78+	     db	     078h,0cch,0e0h,070h,01ch,0cch,078h,000h ;S	d_53
   6366	      00
   6367
   6368	FD0E  FC B4 30 30 30 30	78+	     db	     0fch,0b4h,030h,030h,030h,030h,078h,000h ;T	d_54
   6369	      00
   6370
   6371	FD16  CC CC CC CC CC CC	FC+	     db	     0cch,0cch,0cch,0cch,0cch,0cch,0fch,000h ;U	d_55
   6372	      00
   6373
   6374	FD1E  CC CC CC CC CC 78	30+	     db	     0cch,0cch,0cch,0cch,0cch,078h,030h,000h ;V	d_56
   6375	      00
   6376
   6377	FD26  C6 C6 C6 D6 FE EE	C6+	     db	     0c6h,0c6h,0c6h,0d6h,0feh,0eeh,0c6h,000h ;W	d_57
   6378	      00
   6379
   6380	FD2E  C6 C6 6C 38 38 6C	C6+	     db	     0c6h,0c6h,06ch,038h,038h,06ch,0c6h,000h ;X	d_58
   6381	      00
   6382
   6383	FD36  CC CC CC 78 30 30	78+	     db	     0cch,0cch,0cch,078h,030h,030h,078h,000h ;Y	d_59
   6384	      00
   6385
   6386	FD3E  FE C6 8C 18 32 66	FE+	     db	     0feh,0c6h,08ch,018h,032h,066h,0feh,000h ;Z	d_5a
   6387	      00
   6388
   6389	FD46  78 60 60 60 60 60	78+	     db	     078h,060h,060h,060h,060h,060h,078h,000h ;(	d_5b
   6390	      00
   6391
   6392	FD4E  C0 60 30 18 0C 06	02+	     db	     0c0h,060h,030h,018h,00ch,006h,002h,000h ;backslash
   6393	      00
   6394
   6395	FD56  78 18 18 18 18 18	78+	     db	     078h,018h,018h,018h,018h,018h,078h,000h ;)	d_5d
   6396	      00
   6397
   6398	FD5E  10 38 6C C6 00 00	00+	     db	     010h,038h,06ch,0c6h,000h,000h,000h,000h ;cimpqumflex
   6399	      00
   6400
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 129
1840v4.asm



   6401	FD66  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,0ffh ;_	d_5f
   6402	      FF
   6403
   6404
   6405	FD6E  30 30 18 00 00 00	00+	     db	     030h,030h,018h,000h,000h,000h,000h,000h ;	d_60
   6406	      00
   6407
   6408	FD76  00 00 78 0C 7C CC	76+	     db	     000h,000h,078h,00ch,07ch,0cch,076h,000h ;lower case a
   6409	      00
   6410
   6411	FD7E  E0 60 60 7C 66 66	DC+	     db	     0e0h,060h,060h,07ch,066h,066h,0dch,000h ;b	d_62
   6412	      00
   6413
   6414	FD86  00 00 78 CC C0 CC	78+	     db	     000h,000h,078h,0cch,0c0h,0cch,078h,000h ;c	d_63
   6415	      00
   6416
   6417	FD8E  1C 0C 0C 7C CC CC	76+	     db	     01ch,00ch,00ch,07ch,0cch,0cch,076h,000h ;d	d_64
   6418	      00
   6419
   6420	FD96  00 00 78 CC FC C0	78+	     db	     000h,000h,078h,0cch,0fch,0c0h,078h,000h ;e	d_65
   6421	      00
   6422
   6423	FD9E  38 6C 60 F0 60 60	F0+	     db	     038h,06ch,060h,0f0h,060h,060h,0f0h,000h ;f	d_66
   6424	      00
   6425
   6426	FDA6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,0f8h ;g	d_67
   6427	      F8
   6428
   6429	FDAE  E0 60 6C 76 66 66	E6+	     db	     0e0h,060h,06ch,076h,066h,066h,0e6h,000h ;h	d_68
   6430	      00
   6431
   6432	FDB6  30 00 70 30 30 30	78+	     db	     030h,000h,070h,030h,030h,030h,078h,000h ;i	d_69
   6433	      00
   6434
   6435	FDBE  0C 00 0C 0C 0C CC	CC+	     db	     00ch,000h,00ch,00ch,00ch,0cch,0cch,078h ;j	d_6a
   6436	      78
   6437
   6438	FDC6  E0 60 66 6C 78 6C	E6+	     db	     0e0h,060h,066h,06ch,078h,06ch,0e6h,000h ;k	d_6b
   6439	      00
   6440
   6441	FDCE  70 30 30 30 30 30	78+	     db	     070h,030h,030h,030h,030h,030h,078h,000h ;l	d_6c
   6442	      00
   6443
   6444	FDD6  00 00 CC FE FE D6	C6+	     db	     000h,000h,0cch,0feh,0feh,0d6h,0c6h,000h ;m	d_6d
   6445	      00
   6446
   6447	FDDE  00 00 F8 CC CC CC	CC+	     db	     000h,000h,0f8h,0cch,0cch,0cch,0cch,000h ;n	d_6e
   6448	      00
   6449
   6450	FDE6  00 00 78 CC CC CC	78+	     db	     000h,000h,078h,0cch,0cch,0cch,078h,000h ;o	d_6f
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 130
1840v4.asm



   6451	      00
   6452
   6453
   6454	FDEE  00 00 DC 66 66 7C	60+	     db	     000h,000h,0dch,066h,066h,07ch,060h,0f0h ;p	d_70
   6455	      F0
   6456
   6457	FDF6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,01eh ;q	d_71
   6458	      1E
   6459
   6460	FDFE  00 00 DC 76 66 60	F0+	     db	     000h,000h,0dch,076h,066h,060h,0f0h,000h ;r	d_72
   6461	      00
   6462
   6463	FE06  00 00 7C C0 78 0C	F8+	     db	     000h,000h,07ch,0c0h,078h,00ch,0f8h,000h ;s	d_73
   6464	      00
   6465
   6466	FE0E  10 30 7C 30 30 34	18+	     db	     010h,030h,07ch,030h,030h,034h,018h,000h ;t	d_74
   6467	      00
   6468
   6469	FE16  00 00 CC CC CC CC	76+	     db	     000h,000h,0cch,0cch,0cch,0cch,076h,000h ;u	d_75
   6470	      00
   6471
   6472	FE1E  00 00 CC CC CC 78	30+	     db	     000h,000h,0cch,0cch,0cch,078h,030h,000h ;v	d_76
   6473	      00
   6474
   6475	FE26  00 00 C6 D6 FE FE	6C+	     db	     000h,000h,0c6h,0d6h,0feh,0feh,06ch,000h ;w	d_77
   6476	      00
   6477
   6478	FE2E  00 00 C6 6C 38 6C	C6+	     db	     000h,000h,0c6h,06ch,038h,06ch,0c6h,000h ;x	d_78
   6479	      00
   6480
   6481	FE36  00 00 CC CC CC 7C	0C+	     db	     000h,000h,0cch,0cch,0cch,07ch,00ch,0f8h ;y	d_79
   6482	      F8
   6483
   6484	FE3E  00 00 FC 98 30 64	FC+	     db	     000h,000h,0fch,098h,030h,064h,0fch,000h ;z	d_7a
   6485	      00
   6486
   6487	FE46  1C 30 30 E0 30 30	1C+	     db	     01ch,030h,030h,0e0h,030h,030h,01ch,000h ;	d_7b
   6488	      00
   6489
   6490	FE4E  18 18 18 00 18 18	18+	     db	     018h,018h,018h,000h,018h,018h,018h,000h ;	d_7c
   6491	      00
   6492
   6493	FE56  E0 30 30 1C 30 30	E0+	     db	     0e0h,030h,030h,01ch,030h,030h,0e0h,000h ;	d_7d
   6494	      00
   6495
   6496	FE5E  76 DC 00 00 00 00	00+	     db	     076h,0dch,000h,000h,000h,000h,000h,000h ;	d_7e
   6497	      00
   6498
   6499	FE66  00 10 38 6C C6 C6	FE+	     db	     000h,010h,038h,06ch,0c6h,0c6h,0feh,000h ;delta d_7f
   6500	      00
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 131
1840v4.asm



   6501
   6502
   6503				     ;---int 1a-------------------------------
   6504				     ;
   6505				     ;	 Программа установки-считывания времени     +
   6506				     суток
   6507				     ;
   6508				     ;	 Эта	программа обеспечивает выполнение       +
   6509				     двух функций, код которых
   6510				     ; задается	в регистре AH:
   6511				     ;	 AH=0 -	считать текущее состояние часов. После+
   6512				     выполнения коман-
   6513				     ; ды регистры CX	и DX содержат старшую и младшую+
   6514				     части	счетчика.
   6515				     ;	 Если регистр AL содержит "0", то счет	идет в    +
   6516				     течение одних
   6517				     ; суток, при любом другом значении счет	       +
   6518				     переходит	на следующие
   6519				     ; сутки;
   6520				     ;
   6521				     ;	 AH=1 -	записать текущее	состояние часов.	       +
   6522				     Регистры CX и DX
   6523				     ; содержат	старшую и младшую части счетчика.
   6524				     ;
   6525				     ;------------------------------------------
   6526					     assume  cs:code,ds:data
   6527	FE6E			     time_of_day     proc    far
   6528	FE6E  FB			     sti	     ; уст признак разрешения	       +
   6529				     прерывания
   6530	FE6F  1E			     push    ds	     ; сохранить сегмент
   6531	FE70  50			     push    ax	     ; сохранить параметры
   6532	FE71  B8 0040			     mov     ax,dat
   6533	FE74  8E D8			     mov     ds,ax
   6534	FE76  58			     pop     ax
   6535	FE77  0A E4			     or	     ah,ah   ; AH=0 ?
   6536	FE79  74 07			     jz	     t2	 ; да, переход	к считыванию		       +
   6537				     текущего состояния
   6538	FE7B  FE CC			     dec     ah	     ; AH=1 ?
   6539	FE7D  74 16			     jz	     t3	 ; да, переход	к установке текущего +
   6540				     состояния
   6541
   6542	FE7F			     t1:     ; Возврат из программы
   6543
   6544	FE7F  FB			     sti	     ; уст признак разрешения	       +
   6545				     прерывания
   6546	FE80  1F			     pop     ds	     ; возврат сегмента
   6547	FE81  CF			     iret	     ; возврат к программе,вызвавшей +
   6548				     процедуру
   6549
   6550	FE82			     t2:     ; Считать текущее состояния	часов
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 132
1840v4.asm



   6551
   6552	FE82  FA			     cli	     ; сбросить	признак разрешения    +
   6553				     прерывания
   6554	FE83  A0 0070r			     mov     al,timer_ofl  ; считать в AL флажок перехода+
   6555				     на сле-
   6556	FE86  C6 06 0070r 00		     mov     timer_ofl,0   ; дующие сутки и	сбросить его+
   6557				     в	памяти
   6558	FE8B  8B 0E 006Er		     mov     cx,timer_high	     ; установить старшую и  +
   6559				     младшую
   6560	FE8F  8B 16 006Cr		     mov     dx,timer_low	     ; части счетчика
   6561	FE93  EB EA			     jmp     short t1
   6562
   6563	FE95			     t3:     ; Установить текущее состояние часов
   6564
   6565	FE95  FA			     cli	     ; сброс признака разрешения	       +
   6566				     прерывания
   6567	FE96  89 16 006Cr		     mov     timer_low,dx	     ; установить младшую и  +
   6568				     старшую
   6569	FE9A  89 0E 006Er		     mov     timer_high,cx	     ; части счетчика
   6570	FE9E  C6 06 0070r 00		     mov     timer_ofl,0     ; сброс флажка перехода	       +
   6571				     через	сутки
   6572	FEA3  EB DA			     jmp     short t1	     ; возврат из программы	       +
   6573				     отсчета времени
   6574	FEA5			     time_of_day     endp
   6575
   6576				     ;-------int 08-------------------
   6577				     ;
   6578				     ;	 Программа обработки прерывания таймера     +
   6579				     КР580ВИ53 (INT	8H) об-
   6580				     ; рабатывает прерывания, аппаратурно	       +
   6581				     возникающие от нулевого канала
   6582				     ; таймера, на вход которого подаются сигналы  +
   6583				     с	частотой 1,228 МГц,
   6584				     ; делящиеся на 56263 для обеспечения 18,2		       +
   6585				     прерываний в секунду.
   6586				     ;	 При	обработке прерывания	корректируется   +
   6587				     программный счетчик,
   6588				     ; хранящийся в памяти по адресу 0046CH (младшая   +
   6589				     часть	счетчика) и
   6590				     ; адресу 0047EH (старшая часть счетчика)	и	       +
   6591				     используемый для уста-
   6592				     ; новки времени суток.
   6593				     ;	 В функции программы входит коррекция	       +
   6594				     счетчика, управляющего
   6595				     ; двигателем НГМД. После обнуления счетчика   +
   6596				     двигатель	выключается.
   6597				     ;	 Вектор 1CH дает возможность пользователю     +
   6598				     входить в заданную
   6599				     ; программу с частотой прерывания таймера (18.2+
   6600				     прерываний в секун-
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 133
1840v4.asm



   6601				     ; ду). Для этого	в таблице векторов прерываний+
   6602				     по адресу 007CH
   6603				     ; необходимо задать адрес пользовательской   +
   6604				     программы.
   6605				     ;
   6606				     ;---------------------------------------------------
   6607
   6608	FEA5			     timer_int	     proc    far
   6609	FEA5  FB			     sti	     ; уст признак разрешения	       +
   6610				     прерывания
   6611	FEA6  1E			     push    ds
   6612	FEA7  50			     push    ax
   6613	FEA8  52			     push    dx
   6614	FEA9  B8 0040			     mov     ax,dat
   6615	FEAC  8E D8			     mov     ds,ax
   6616	FEAE  FF 06 006Cr		     inc     timer_low	  ; +1 к старшей части счетчика
   6617	FEB2  75 04			     jnz     t4
   6618	FEB4  FF 06 006Er		     inc     timer_high	  ; +1 к старшей части счетчика
   6619
   6620	FEB8			     t4:     ; Опрос счетчика = 24	часам
   6621
   6622	FEB8  83 3E 006Er 18		     cmp     timer_high,018h
   6623	FEBD  75 19			     jnz     t5
   6624	FEBF  81 3E 006Cr 00B0		     cmp     timer_low,0b0h
   6625	FEC5  75 11			     jnz     t5
   6626
   6627				     ;	 Таймер исчерпал 24 часа
   6628
   6629	FEC7  C7 06 006Er 0000		     mov     timer_high,0   ; сброс старшей	и младшей      +
   6630				     частей
   6631	FECD  C7 06 006Cr 0000		     mov     timer_low,0    ; счетчика и установка	       +
   6632				     флажка пере-
   6633	FED3  C6 06 0070r 01		     mov     timer_ofl,1    ; хода счета на следующие      +
   6634				     сутки
   6635
   6636				     ;	 Выключение мотора НГМД, если счетчик	       +
   6637				     управления мотором
   6638				     ; исчерпан
   6639
   6640	FED8			     t5:
   6641	FED8  FE 0E 0040r		     dec     motor_count
   6642	FEDC  75 0B			     jnz     t6		     ; переход, если	счетчик не    +
   6643				     установлен
   6644	FEDE  80 26 003Fr F0		     and     motor_status,0f0h
   6645	FEE3  B0 0C			     mov     al,0ch
   6646	FEE5  BA 03F2			     mov     dx,03f2h
   6647	FEE8  EE			     out     dx,al	     ; выключить мотор
   6648
   6649	FEE9			     t6:
   6650	FEE9  CD 1C			     int     1ch     ; передача	управления программе+
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 134
1840v4.asm



   6651				     пользователя
   6652	FEEB  B0 20			     mov     al,eoi
   6653	FEED  E6 20			     out     020h,al	    ; конец прерывания
   6654	FEEF  5A			     pop     dx
   6655	FEF0  58			     pop     ax
   6656	FEF1  1F			     pop     ds
   6657	FEF2  CF			     iret		     ; возврат из прерывания
   6658	FEF3			     timer_int	     endp
   6659				     ;---------------------------------
   6660				     ;
   6661				     ;	 Эти	вектора передаются в область		       +
   6662				     прерывания 8086 во время
   6663				     ; включения питания.
   6664				     ;
   6665				     ;---------------------------------
   6666	FEF3			     vector_table    label   word    ; таблица векторов		       +
   6667				     прерываний
   6668
   6669	FEF3  FEA5r			     dw	     offset timer_int	     ; прерывание 8
   6670	FEF5  F000			     dw	     cod
   6671
   6672	FEF7  E987r			     dw	     offset kb_int	     ; прерывание 9
   6673	FEF9  F000			     dw	     cod
   6674
   6675	FEFB  FF53r			     dw	     offset dummy_return     ; прерывание А
   6676	FEFD  F000			     dw	     cod
   6677	FEFF  F98Br			     dw	     offset dummm_return     ; прерывание B
   6678	FF01  F000			     dw	     cod
   6679	FF03  F98Br			     dw	     offset dummm_return     ; прерывание C
   6680	FF05  F000			     dw	     cod
   6681	FF07  FF53r			     dw	     offset dummy_return     ; прерывание D
   6682	FF09  F000			     dw	     cod
   6683	FF0B  EF57r			     dw	     offset disk_int	     ; прерывание E
   6684	FF0D  F000			     dw	     cod
   6685
   6686	FF0F  FF53r			     dw	     offset dummy_return     ; прерывание F
   6687	FF11  F000			     dw	     cod
   6688	FF13  F065r			     dw	     offset video_io	     ; прерывание 10H
   6689	FF15  F000			     dw	     cod
   6690
   6691	FF17  F84Dr			     dw	     offset equipment	     ; прерывание 11H
   6692	FF19  F000			     dw	     cod
   6693
   6694	FF1B  F841r			     dw	     offset memory_size_determine    ; прерывание 12H
   6695	FF1D  F000			     dw	     cod
   6696
   6697	FF1F  EC59r			     dw	     offset diskette_io	     ; прерывание 13H
   6698	FF21  F000			     dw	     cod
   6699
   6700	FF23  F929r			     dw	     offset rs232_io	     ; прерывание  14H
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 135
1840v4.asm



   6701	FF25  F000			     dw	     cod
   6702
   6703	FF27  F92Dr			     dw	     offset ex_memory	     ; int 15h
   6704	FF29  F000			     dw	     cod
   6705
   6706	FF2B  E82Er			     dw	     offset keyboard_io	     ; прерывание 16H
   6707	FF2D  F000			     dw	     cod
   6708
   6709	FF2F  EFD2r			     dw	     offset printer_io	     ; прерывание 17H
   6710	FF31  F000			     dw	     cod
   6711
   6712	FF33  0000				     dw	0		     ; прерывание 18H
   6713	FF35  F600				     dw	0F600h		     ; ROM BASIC ???
   6714
   6715	FF37  E6F7r			     dw	     offset boot_strap	     ; прерывание 19H
   6716	FF39  F000			     dw	     cod
   6717
   6718	FF3B  FE6Er			     dw	     time_of_day     ; прерывание 1АH - время суток
   6719	FF3D  F000			     dw	     cod
   6720
   6721	FF3F  FF53r			     dw	     dummy_return    ; прерывание 1BH	- прерывание +
   6722				     клавиатуры
   6723	FF41  F000			     dw	     cod
   6724
   6725	FF43  FF53r			     dw	     dummy_return    ; прерывание 1C - прерывание  +
   6726				     таймера
   6727	FF45  F000			     dw	     cod
   6728
   6729	FF47  F0A4r			     dw	     video_parms     ; прерывание 1D - параметры    +
   6730				     видео
   6731	FF49  F000			     dw	     cod
   6732
   6733	FF4B  EFC7r			     dw	     offset  disk_base	 ;прерывание 1EH - параметры+
   6734				     НГМД
   6735	FF4D  F000			     dw	     cod
   6736
   6737	FF4F  0000			     dw	     0		     ; 1FH - адрес	таблицы пользова-
   6738	FF51  0000			     dw	     0		     ; тельского			       +
   6739				     дополнительного знакогенератора
   6740
   6741	FF53			     dummy_return:
   6742	FF53  CF			     iret
   6743
   6744				     ;---int 5----------------------
   6745				     ;
   6746				     ;	 Программа вывода на печать содержимого      +
   6747				     буфера ЭЛИ вызывается
   6748				     ; одновременным нажатием клавиши ПЕЧ и	       +
   6749				     клавиши переключения регист-
   6750				     ; ров. Позиция курсора сохраняется до	       +
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 136
1840v4.asm



   6751				     завершения процедуры обработки
   6752				     ; прерывания. Повторное	нажатие названных      +
   6753				     клавиш во время обработки
   6754				     ; прерывания игнорируется.
   6755				     ;	 При	выполнении программы	в постоянно	       +
   6756				     распределенной рабочей
   6757				     ; области памяти по	адресу 0500H			       +
   6758				     устанавливается следующая
   6759				     ; информация:
   6760				     ;	 0    -	содержимое буфера ЭЛИ еще	не выведено  +
   6761				     на печать,	либо
   6762				     ; вывод уже завершен;
   6763				     ;	 1    -	в процессе вывода содержимого	буфера   +
   6764				     ЭЛИ на печать;
   6765				     ;	 255  -	при печати обнаружена ошибка.
   6766				     ;-----------------------------------------------------
   6767
   6768					     assume  cs:code,ds:xxdata
   6769
   6770	FF54			     print_screen    proc    far
   6771	FF54  FB			     sti		  ; уст признак разрешения	       +
   6772				     прерывания
   6773	FF55  1E			     push    ds
   6774	FF56  50			     push    ax
   6775	FF57  53			     push    bx
   6776	FF58  51			     push    cx	  ; будет использоваться заглавная +
   6777				     буква	для курсора
   6778	FF59  52			     push    dx	  ; будет содержать текущее	       +
   6779				     положение	курсора
   6780	FF5A  B8 0050			     mov     ax,xxdat	     ; адрес 50
   6781	FF5D  8E D8			     mov     ds,ax
   6782	FF5F  80 3E 0000r 01		     cmp     status_byte,1   ; печать готова ?
   6783	FF64  74 5F			     jz	     exit	     ; переход, если	печать	       +
   6784				     готова
   6785	FF66  C6 06 0000r 01		     mov     status_byte,1   ;
   6786	FF6B  B4 0F			     mov     ah,15	     ; требуется текущий режим    +
   6787				     экрана
   6788	FF6D  CD 10			     int     10h	     ; AL - режим,	AH - число		       +
   6789				     строк/колонок
   6790								     ; BH - страница,выведенная на +
   6791				     экран
   6792
   6793
   6794				     ;*************************************8
   6795				     ;
   6796				     ;	 В этом месте:
   6797				     ;			 AX - колонка, строка,
   6798				     ;			 BH - номер отображаемой страницы.
   6799				     ;
   6800				     ;	 Стек содержит DS, AX, BX, CX, DX.
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 137
1840v4.asm



   6801				     ;
   6802				     ;			 AL - режим
   6803				     ;
   6804				     ;**************************************
   6805
   6806	FF6F  8A CC			     mov     cl,ah
   6807	FF71  B5 19			     mov     ch,25
   6808	FF73  E8 0055			     call    crlf
   6809	FF76  51			     push    cx
   6810	FF77  B4 03			     mov     ah,3
   6811	FF79  CD 10			     int     10h
   6812	FF7B  59			     pop     cx
   6813	FF7C  52			     push    dx
   6814	FF7D  33 D2			     xor     dx,dx
   6815
   6816				     ;**************************************
   6817				     ;
   6818				     ;	  Считывание знака, находящегося в текущей  +
   6819				     позиции курсора
   6820				     ; и вывод на печать
   6821				     ;
   6822				     ;**************************************
   6823
   6824	FF7F  B4 02		     pri10:  mov     ah,2
   6825	FF81  CD 10			     int     10h
   6826	FF83  B4 08			     mov     ah,8
   6827	FF85  CD 10			     int     10h
   6828	FF87  0A C0			     or	     al,al
   6829	FF89  75 02			     jnz     pri15
   6830	FF8B  B0 20			     mov     al,' '
   6831	FF8D			     pri15:
   6832	FF8D  52			     push    dx
   6833	FF8E  33 D2			     xor     dx,dx
   6834	FF90  32 E4			     xor     ah,ah
   6835	FF92  CD 17			     int     17h
   6836	FF94  5A			     pop     dx
   6837	FF95  F6 C4 25			     test    ah,25h
   6838	FF98  75 21			     jnz     err10
   6839	FF9A  FE C2			     inc     dl
   6840	FF9C  3A CA			     cmp     cl,dl
   6841	FF9E  75 DF			     jnz     pri10
   6842	FFA0  32 D2			     xor     dl,dl
   6843	FFA2  8A E2			     mov     ah,dl
   6844	FFA4  52			     push    dx
   6845	FFA5  E8 0023			     call    crlf
   6846	FFA8  5A			     pop     dx
   6847	FFA9  FE C6			     inc     dh
   6848	FFAB  3A EE			     cmp     ch,dh
   6849	FFAD  75 D0			     jnz     pri10
   6850	FFAF  5A			     pop     dx
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 138
1840v4.asm



   6851	FFB0  B4 02			     mov     ah,2
   6852	FFB2  CD 10			     int     10h
   6853	FFB4  C6 06 0000r 00		     mov     status_byte,0
   6854	FFB9  EB 0A			     jmp     short exit
   6855	FFBB  5A		     err10:  pop     dx
   6856	FFBC  B4 02			     mov     ah,2
   6857	FFBE  CD 10			     int     10h
   6858	FFC0  C6 06 0000r FF		     mov     status_byte,0ffh
   6859
   6860	FFC5  5A		     exit:   pop     dx
   6861	FFC6  59			     pop     cx
   6862	FFC7  5B			     pop     bx
   6863	FFC8  58			     pop     ax
   6864	FFC9  1F			     pop     ds
   6865	FFCA  CF			     iret
   6866	FFCB			     print_screen    endp
   6867
   6868				     ;	 Возврат	каретки
   6869
   6870	FFCB			     crlf    proc    near
   6871	FFCB  33 D2			     xor     dx,dx
   6872	FFCD  32 E4			     xor     ah,ah
   6873	FFCF  B0 0A			     mov     al,12q
   6874	FFD1  CD 17			     int     17h
   6875	FFD3  32 E4			     xor     ah,ah
   6876	FFD5  B0 0D			     mov     al,15q
   6877	FFD7  CD 17			     int     17h
   6878	FFD9  C3			     ret
   6879	FFDA			     crlf    endp
   6880
   6881	FFDA  16*(00)				     db	22 dup(0)
   6882
   6883				     ;--------------------------------------
   6884				     ;
   6885				     ;	 Включение питания
   6886				     ;
   6887				     ;--------------------------------------
   6888
   6889				     ;vector segment at	0ffffh
   6890
   6891				     ;	 Переход	по включению	питания
   6892
   6893	FFF0  EA		     POST:	     db	     0eah	     ; db    0eah,5bh,0e0h,00h,0f0h  ; jmp reset
   6894	FFF1  E05Br F000			     dw	     offset reset, cod	     ; ###Gleb###
   6895
   6896	FFF5  30 34 2F 32 34 2F	38+		     db	'04/24/81'
   6897	      31
   6898
   6899	FFFD  00 00				     db	   0, 0
   6900
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 139
1840v4.asm



   6901	FFFF  00				     db	   0 ;
   6902				     ;vector ends
   6903
   6904
   6905
   6906
   6907
   6908
   6909	0000			     code    ends
   6910					     end     POST
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 140
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "10-05-21"
??FILENAME			  Text	 "1840v4  "
??TIME				  Text	 "23:12:45"
??VERSION			  Number 0500
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 1840V4
@WORDSIZE			  Text	 2
A5700051COPR_IB			  Byte	 CODE:E000
ACTIVE_PAGE			  Byte	 DATA:0062
ACT_DISP_PAGE			  Near16 CODE:F230
ADDR_6845			  Word	 DATA:0063
ALT_INPUT			  Byte	 DATA:0019
ALT_KEY				  Number 0038
ALT_SHIFT			  Number 0008
ASCII_TBL			  Byte	 CODE:E41D
B1				  Near16 CODE:EFF5
B2				  Near16 CODE:EFFB
B3				  Near16 CODE:F002
B4				  Near16 CODE:F017
B5				  Near16 CODE:F01F
B6				  Near16 CODE:F020
B7				  Near16 CODE:F02B
B8				  Near16 CODE:F033
B9				  Near16 CODE:F03D
BAD_ADDR_MARK			  Number 0002
BAD_CMD				  Number 0001
BAD_CRC				  Number 0010
BAD_DMA				  Number 0008
BAD_NEC				  Number 0020
BAD_SEEK			  Number 0040
BCT				  Near16 CODE:F859
BCT1				  Near16 CODE:F875
BCT2				  Near16 CODE:F877
BCT3				  Near16 CODE:F86C
BCT4				  Near16 CODE:F8B4
BEEP				  Near16 CODE:E5A9
BIOS_BREAK			  Byte	 DATA:0071
BOOT_LOCN			  Far16	 ABS0:7C00
BOOT_STRAP			  Near16 CODE:E6F7
BOOT_VEC			  Dword	 ABS0:0064
BUFFER_END			  Word	 DATA:0082
BUFFER_HEAD			  Word	 DATA:001A
BUFFER_START			  Word	 DATA:0080
BUFFER_TAIL			  Word	 DATA:001C
C1				  Word	 CODE:E016
C10				  Near16 CODE:E0B1
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 141
Symbol Table



C11				  Near16 CODE:E0D9
C12				  Near16 CODE:E0EB
C13				  Near16 CODE:E0FC
C14				  Near16 CODE:E102
C15				  Near16 CODE:E110
C16				  Near16 CODE:E11C
C17				  Near16 CODE:E126
C18				  Near16 CODE:E136
C19				  Near16 CODE:E17E
C20				  Near16 CODE:E183
C21				  Near16 CODE:E192
C22				  Near16 CODE:E1D1
C23				  Near16 CODE:E1DD
C25				  Near16 CODE:E1EB
C2A				  Near16 CODE:E02A
C2B				  Near16 CODE:E02C
C3				  Near16 CODE:E030
C3A				  Near16 CODE:E045
C7X				  Near16 CODE:E05A
C8				  Near16 CODE:E08E
C9				  Near16 CODE:E0AB
CA3				  Near16 CODE:E1E6
CAPS_KEY			  Number 0056
CAPS_SHIFT			  Number 0040
CAPS_STATE			  Number 0040
CAW				  Word	 CODE:E018
CHK_STAT_2			  Near16 CODE:EF0F
CMD_BLOCK			  Byte	 DATA:0042
CMD_PORT			  Number 0063
COD				  Number F000
CONTROL_BYTE			  Byte	 DATA:0076
CRLF				  Near16 CODE:FFCB
CRT_CHAR_GEN			  Byte	 CODE:FA6E
CRT_COLS			  Word	 DATA:004A
CRT_LEN				  Word	 DATA:004C
CRT_MODE			  Byte	 DATA:0049
CRT_MODE_SET			  Byte	 DATA:0065
CRT_PALLETTE			  Byte	 DATA:0066
CRT_START			  Word	 DATA:004E
CSI				  Word	 ABS0:04D0
CTL_KEY				  Number 001D
CTL_SHIFT			  Number 0004
CURSOR_MODE			  Word	 DATA:0060
CURSOR_POSN			  Word	 DATA:0050
D1				  Byte	 CODE:E20B
D10				  Near16 CODE:E29E
D11				  Near16 CODE:E2A8
D12				  Near16 CODE:E2C4
D13				  Near16 CODE:E2CE
D14				  Near16 CODE:E2D8
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 142
Symbol Table



D1L				  Number 000E
D2				  Byte	 CODE:E219
D2L				  Number 000E
D3				  Near16 CODE:E255
D4				  Near16 CODE:E267
D5				  Near16 CODE:E269
D6				  Near16 CODE:E26F
D7				  Near16 CODE:E277
D8				  Near16 CODE:E289
D9				  Near16 CODE:E292
DAL				  Near16 CODE:E4E9
DAT				  Number 0040
DECIMAL_LOOP			  Near16 CODE:E653
DEL_KEY				  Number 0053
DISKETTE_IO			  Far16	 CODE:EC59
DISKETTE_PARM			  Dword	 ABS0:0078
DISKETTE_STATUS			  Byte	 DATA:0041
DISKW_STATUS			  Byte	 DATA:0074
DISK_BASE			  Byte	 CODE:EFC7
DISK_FORMAT			  Near16 CODE:ED1B
DISK_INT			  Far16	 CODE:EF57
DISK_POINTER			  Dword	 ABS0:0078
DISK_READ			  Near16 CODE:ED0E
DISK_RESET			  Near16 CODE:ECB9
DISK_STATUS			  Near16 CODE:ED0A
DISK_VECTOR			  Dword	 ABS0:0100
DISK_VERF			  Near16 CODE:ED17
DISK_WRITE			  Near16 CODE:ED41
DMA				  Number 0000
DMA08				  Number 0008
DMA_BOUNDARY			  Number 0009
DMA_SETUP			  Near16 CODE:EEC9
DUMMM_RETURN			  Near16 CODE:F98B
DUMMY_RETURN			  Near16 CODE:FF53
E1				  Byte	 CODE:E2DA
E10				  Near16 CODE:E369
E11				  Near16 CODE:E387
E12				  Near16 CODE:E389
E13				  Near16 CODE:E38B
E14				  Near16 CODE:E394
E15				  Near16 CODE:E396
E16				  Near16 CODE:E39F
E17				  Near16 CODE:E3A7
E18				  Near16 CODE:E3AD
E19				  Near16 CODE:E3B2
E190				  Near16 CODE:E613
E1L				  Number 0004
E20A				  Near16 CODE:E622
E20B				  Near16 CODE:E627
E20C				  Near16 CODE:E637
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 143
Symbol Table



E21A				  Near16 CODE:E689
E22				  Near16 CODE:E3FF
E3				  Near16 CODE:E301
E300				  Byte	 CODE:E69F
E3A				  Near16 CODE:E30C
E7				  Near16 CODE:E31A
E8				  Near16 CODE:E32A
E9				  Near16 CODE:E34C
EOI				  Number 0020
EQUIPMENT			  Far16	 CODE:F84D
EQUIP_FLAG			  Word	 DATA:0010
EQ_FL				  Byte	 ABS0:0410
ERR01				  Near16 CODE:E0AF
ERR10				  Near16 CODE:FFBB
ERROR_BEEP			  Near16 CODE:E768
ERR_BEEP			  Near16 CODE:E580
ERR_WAIT			  Near16 CODE:E4E0
EXIT				  Near16 CODE:FFC5
EXT_PTR				  Dword	 ABS0:007C
EX_MEMORY			  Near16 CODE:F92D
F1				  Byte	 CODE:E411
F10				  Near16 CODE:E490
F11				  Near16 CODE:E4A5
F12				  Near16 CODE:E4A7
F13				  Near16 CODE:E4BD
F14				  Near16 CODE:E4C6
F15				  Near16 CODE:E4CC
F16				  Near16 CODE:E502
F17				  Near16 CODE:E516
F18				  Near16 CODE:E542
F19				  Near16 CODE:E559
F19A				  Near16 CODE:F96D
F19B				  Near16 CODE:E55C
F1L				  Number 0004
F2				  Byte	 CODE:E415
F20				  Near16 CODE:E570
F20A				  Near16 CODE:F980
F20B				  Near16 CODE:E574
F21				  Near16 CODE:E57A
F23				  Near16 CODE:E57D
F2L				  Number 0003
F3				  Byte	 CODE:E418
F39				  Byte	 CODE:E6A6
F3L				  Number 0003
F4				  Word	 CODE:E41B
F4E				  Word	 CODE:E41D
F5				  Near16 CODE:E44A
F6				  Near16 CODE:E462
F7				  Near16 CODE:E46B
FIND_POSITION			  Near16 CODE:F3A7
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 144
Symbol Table



G1				  Near16 CODE:E58C
G10				  Near16 CODE:E5EC
G12				  Near16 CODE:E5FC
G2				  Near16 CODE:E591
G3				  Near16 CODE:E597
G4				  Near16 CODE:E59C
G5				  Near16 CODE:E5A2
G6				  Near16 CODE:E5A4
G7				  Near16 CODE:E5C0
G8				  Near16 CODE:E5D2
G9				  Near16 CODE:E5E5
GET_PARM			  Near16 CODE:EE51
GRAPHICS_DOWN			  Near16 CODE:F4F7
GRAPHICS_READ			  Near16 CODE:F633
GRAPHICS_UP			  Near16 CODE:F49E
GRAPHICS_WRITE			  Near16 CODE:F581
GRAPH_POSN			  Near16 CODE:F70F
H1				  Near16 CODE:E707
H2				  Near16 CODE:E722
H3				  Near16 CODE:E727
H4				  Near16 CODE:E72A
HDISK_INT			  Dword	 ABS0:0034
HD_ERROR			  Byte	 DATA:0042
HF_NUM				  Byte	 DATA:0075
HF_TBL_VEC			  Dword	 ABS0:0104
HOLD_STATE			  Number 0008
IDNPOL				  Word	 DATA:0090
INF_KEY				  Number 0059
INS_KEY				  Number 0052
INS_SHIFT			  Number 0080
INS_STATE			  Number 0080
INT5_PTR			  Word	 ABS0:0014
INTA00				  Number 0020
INTA01				  Number 0021
INT_ADDR			  Word	 ABS0:0020
INT_FLAG			  Number 0080
INT_PTR				  Dword	 ABS0:0020
INV_KEY_L			  Number 0058
INV_KEY_R			  Number 005A
INV_SHIFT			  Number 0004
IO_RAM_SIZE			  Word	 DATA:0015
IO_ROM_INIT			  Word	 DATA:0067
IO_ROM_SEG			  Word	 DATA:0069
J1				  Near16 CODE:EC87
J10				  Near16 CODE:ED29
J11				  Near16 CODE:ED57
J12				  Near16 CODE:EDA0
J13				  Near16 CODE:EDA4
J14				  Near16 CODE:EDAA
J15				  Near16 CODE:EDD4
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 145
Symbol Table



J16				  Near16 CODE:EDF9
J17				  Near16 CODE:EE00
J18				  Near16 CODE:EE3D
J19				  Near16 CODE:EE3F
J2				  Near16 CODE:ECAB
J20				  Near16 CODE:EE46
J21				  Near16 CODE:EE47
J22				  Near16 CODE:EE4B
J23				  Near16 CODE:E736
J24				  Near16 CODE:E73D
J25				  Near16 CODE:E747
J26				  Near16 CODE:E749
J27				  Near16 CODE:E752
J28				  Near16 CODE:EE95
J29				  Near16 CODE:EEB9
J3				  Near16 CODE:ECB3
J30				  Near16 CODE:EEC0
J300				  Near16 CODE:EEAB
J31				  Near16 CODE:EEC6
J32				  Near16 CODE:EEC8
J33				  Near16 CODE:EEDE
J34				  Near16 CODE:EF28
J35				  Near16 CODE:EF29
J36				  Near16 CODE:EF37
J37				  Near16 CODE:EF4A
J38				  Near16 CODE:EF74
J39				  Near16 CODE:EF79
J4				  Near16 CODE:ECD2
J40				  Near16 CODE:EF85
J40A				  Near16 CODE:EF8A
J41				  Near16 CODE:EF8F
J42				  Near16 CODE:EF96
J43				  Near16 CODE:EF9E
J44				  Near16 CODE:EFAC
J45				  Near16 CODE:EFC4
J5				  Near16 CODE:ECD4
J6				  Near16 CODE:ECD6
J7				  Near16 CODE:ECF8
J8				  Near16 CODE:ED09
J9				  Near16 CODE:ED10
K1				  Near16 CODE:E845
K10				  Byte	 CODE:E8DC
K11				  Byte	 CODE:E916
K12				  Byte	 CODE:E950
K13				  Byte	 CODE:E95A
K14				  Byte	 CODE:E964
K15				  Byte	 CODE:E971
K16				  Near16 CODE:E9AF
K17				  Near16 CODE:E9D9
K18				  Near16 CODE:EA4B
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 146
Symbol Table



K19				  Near16 CODE:EA60
K2				  Near16 CODE:E85E
K20				  Near16 CODE:EA6E
K21				  Near16 CODE:EA74
K22				  Near16 CODE:EA7B
K23				  Near16 CODE:EA9F
K24				  Near16 CODE:EAC3
K25				  Near16 CODE:EACC
K26				  Near16 CODE:EAEB
K26A				  Near16 CODE:EA48
K27				  Near16 CODE:EAF0
K28				  Near16 CODE:EAFF
K29				  Near16 CODE:EB09
K3				  Near16 CODE:E86F
K30				  Byte	 CODE:F905
K300				  Near16 CODE:EA1D
K301				  Near16 CODE:EA22
K302				  Near16 CODE:EA37
K303				  Near16 CODE:EA93
K304				  Near16 CODE:EAAF
K307				  Near16 CODE:EAF9
K31				  Near16 CODE:EB1F
K32				  Near16 CODE:EB28
K33				  Near16 CODE:EB44
K34				  Near16 CODE:EB55
K35				  Near16 CODE:EB65
K36				  Near16 CODE:EB69
K37				  Near16 CODE:EB6B
K38				  Near16 CODE:EB75
K39				  Near16 CODE:EB98
K4				  Near16 CODE:E75B
K40				  Near16 CODE:EBB3
K400				  Near16 CODE:EA06
K401				  Near16 CODE:EA0E
K406				  Near16 CODE:E9C2
K406B				  Near16 CODE:EADB
K407				  Near16 CODE:E9D6
K41				  Near16 CODE:EBBD
K42				  Near16 CODE:EBC7
K43				  Near16 CODE:EBD1
K44				  Near16 CODE:EBD7
K45				  Near16 CODE:EBEF
K46				  Near16 CODE:EBFC
K47				  Near16 CODE:EC06
K48				  Near16 CODE:EC19
K49				  Near16 CODE:EC27
K5				  Near16 CODE:E767
K50				  Near16 CODE:EC37
K51				  Near16 CODE:EC3D
K52				  Near16 CODE:EC43
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 147
Symbol Table



K53				  Near16 CODE:EC4A
K54				  Near16 CODE:E78D
K54A				  Near16 CODE:EBEC
K55				  Near16 CODE:E796
K56				  Near16 CODE:E7A0
K57				  Near16 CODE:E7A4
K58				  Near16 CODE:E7AD
K59				  Near16 CODE:E7D2
K6				  Byte	 CODE:E875
K60				  Near16 CODE:E7D5
K61				  Near16 CODE:E7DF
K62				  Near16 CODE:E7FC
K63				  Near16 CODE:E802
K64				  Near16 CODE:E804
K65				  Near16 CODE:E771
K66				  Near16 CODE:E778
K67				  Near16 CODE:E781
K6L				  Number 000C
K7				  Byte	 CODE:E881
K8				  Byte	 CODE:E889
K80				  Near16 CODE:F94B
K81				  Near16 CODE:F948
K88				  Near16 CODE:E7BE
K89				  Near16 CODE:F933
K89A				  Near16 CODE:F961
K89B				  Near16 CODE:F95C
K9				  Byte	 CODE:E8C3
K98				  Near16 CODE:EC13
K99				  Near16 CODE:E7F7
KBDINT				  Number 0002
KBD_IN				  Number 0060
KBD_RESET			  Near16 CODE:E5CB
KB_BUFFER			  Word	 DATA:001E
KB_BUFFER_END			  Word	 DATA:003E
KB_CTL				  Number 0061
KB_DAT				  Number 0060
KB_FLAG				  Byte	 DATA:0017
KB_FLAG_1			  Byte	 DATA:0018
KB_INT				  Far16	 CODE:E987
KB_OK				  Near16 CODE:E66C
KEYBOARD_IO			  Far16	 CODE:E82E
LAST_VAL			  Byte	 DATA:006B
LAT				  Number 0002
LAT_KEY				  Number 0057
LAT_SHIFT			  Number 0001
LEFT_KEY			  Number 0054
LEFT_SHIFT			  Number 0002
M1				  Word	 CODE:F045
M10				  Near16 CODE:F144
M11				  Near16 CODE:F16F
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 148
Symbol Table



M12				  Near16 CODE:F172
M13				  Near16 CODE:F175
M14				  Near16 CODE:F1C3
M15				  Near16 CODE:F1CA
M16				  Near16 CODE:F1DA
M17				  Near16 CODE:F207
M18				  Near16 CODE:F209
M19				  Near16 CODE:F269
M1L				  Number 0020
M2				  Near16 CODE:F080
M20				  Near16 CODE:F270
M3				  Near16 CODE:F098
M4				  Number 0010
M5				  Word	 CODE:F0E4
M6				  Byte	 CODE:F0EC
M7				  Byte	 CODE:F0F4
M8				  Near16 CODE:F10D
M9				  Near16 CODE:F141
MAX_PERIOD			  Number 0540
MEMORY_SIZE			  Word	 DATA:0013
MEMORY_SIZE_DETERMINE		  Far16	 CODE:F841
MEM_SIZ				  Word	 ABS0:0413
MFG_TST				  Byte	 DATA:0012
MIN_PERIOD			  Number 0410
MOTOR_COUNT			  Byte	 DATA:0040
MOTOR_STATUS			  Byte	 DATA:003F
MOTOR_WAIT			  Number 0025
N1				  Near16 CODE:F2AB
N10				  Near16 CODE:F331
N11				  Near16 CODE:F33A
N12				  Near16 CODE:F351
N13				  Near16 CODE:F35F
N14				  Near16 CODE:F36A
N15				  Near16 CODE:F36D
N16				  Near16 CODE:F379
N2				  Near16 CODE:F2B9
N3				  Near16 CODE:F2C4
N4				  Near16 CODE:F2C7
N5				  Near16 CODE:F2D0
N6				  Near16 CODE:F2E3
N7				  Near16 CODE:F2E6
N8				  Near16 CODE:F2FD
N9				  Near16 CODE:F30A
NEC_OP				  Near16 CODE:EE64
NEC_OUTPUT			  Near16 CODE:E72F
NEC_STATUS			  Byte	 DATA:0042
NMI_INT				  Near16 CODE:E2B5
NMI_PTR				  Word	 ABS0:0008
NUM_KEY				  Number 0045
NUM_SHIFT			  Number 0020
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 149
Symbol Table



NUM_STATE			  Number 0020
NUM_TRANS			  Near16 CODE:EFB0
ORG_VECTOR			  Dword	 ABS0:004C
OSH				  Near16 CODE:E3D4
P1				  Near16 CODE:F38A
P10				  Near16 CODE:F403
P11				  Near16 CODE:F40C
P12				  Near16 CODE:F413
P13				  Near16 CODE:F419
P2				  Near16 CODE:F398
P3				  Near16 CODE:F39E
P4				  Near16 CODE:F3B7
P5				  Near16 CODE:F3BD
P6				  Near16 CODE:F3D0
P7				  Near16 CODE:F3DB
P8				  Near16 CODE:F3E2
P9				  Near16 CODE:F3E8
PARM_PTR			  Dword	 ABS0:0074
PORT_A				  Number 0060
PORT_B				  Number 0061
PORT_C				  Number 0062
PORT_OFF			  Byte	 DATA:0077
POSITION			  Near16 CODE:F28B
POST				  Near16 CODE:FFF0
PRI10				  Near16 CODE:FF7F
PRI15				  Near16 CODE:FF8D
PRINTER_BASE			  Word	 DATA:0008
PRINTER_IO			  Far16	 CODE:EFD2
PRINT_SCREEN			  Far16	 CODE:FF54
PRT_DEC_LOOP			  Near16 CODE:E660
PRT_HEX				  Near16 CODE:E698
PRT_SIZ				  Near16 CODE:E64C
P_MSG				  Near16 CODE:E5F5
R1				  Near16 CODE:F450
R10				  Near16 CODE:F4E5
R11				  Near16 CODE:F4F3
R12				  Near16 CODE:F517
R13				  Near16 CODE:F533
R14				  Near16 CODE:F542
R15				  Near16 CODE:F544
R16				  Near16 CODE:F553
R17				  Near16 CODE:F557
R18				  Near16 CODE:F570
R2				  Near16 CODE:F457
R3				  Near16 CODE:F45B
R4				  Near16 CODE:F46E
R5				  Near16 CODE:F486
R6				  Near16 CODE:F490
R7				  Near16 CODE:F4BC
R8				  Near16 CODE:F4D4
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 150
Symbol Table



R9				  Near16 CODE:F4E3
READ_AC_CURRENT			  Near16 CODE:F37D
READ_CURSOR			  Near16 CODE:F21A
READ_DOT			  Near16 CODE:F427
READ_LPEN			  Near16 CODE:F7A9
RECORD_NOT_FND			  Number 0004
REGEN				  Byte	 VIDEO_RAM:0000
REGENW				  Word	 VIDEO_RAM:0000
RESET				  Near16 CODE:E05B
RESET_FLAG			  Word	 DATA:0072
RESULTS				  Near16 CODE:EF6B
RES_FL				  Word	 ABS0:0472
RIGHT_KEY			  Number 0055
RIGHT_SHIFT			  Number 0001
ROS				  Near16 CODE:E0DB
RS232_BASE			  Word	 DATA:0000
RS232_IO			  Near16 CODE:F929
RUST				  Byte	 CODE:F8CB
RUST2				  Byte	 CODE:E6BD
RUS_KEY				  Number 005B
RW_OPN				  Near16 CODE:ED4D
S1				  Near16 CODE:F594
S10				  Near16 CODE:F5FC
S11				  Near16 CODE:F618
S12				  Near16 CODE:F648
S13				  Near16 CODE:F660
S14				  Near16 CODE:F664
S15				  Near16 CODE:F676
S16				  Near16 CODE:F683
S17				  Near16 CODE:F688
S18				  Near16 CODE:F6B1
S19				  Near16 CODE:F6B7
S2				  Near16 CODE:F5A3
S20				  Near16 CODE:F6C0
S21				  Near16 CODE:F6CC
S22				  Near16 CODE:F6D5
S23				  Near16 CODE:F6EF
S24				  Near16 CODE:F6F9
S25				  Near16 CODE:F6FF
S26				  Near16 CODE:F70C
S3				  Near16 CODE:F5B3
S4				  Near16 CODE:F5B7
S5				  Near16 CODE:F5BF
S6				  Near16 CODE:F5D3
S7				  Near16 CODE:F5DF
S8				  Near16 CODE:F5E6
S9				  Near16 CODE:F5EA
SCROLL_DOWN			  Near16 CODE:F341
SCROLL_KEY			  Number 0046
SCROLL_POSITION			  Near16 CODE:F2EA
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 151
Symbol Table



SCROLL_SHIFT			  Number 0010
SCROLL_STATE			  Number 0010
SCROLL_UP			  Near16 CODE:F29C
SEEK				  Near16 CODE:EE67
SEEK_STATUS			  Byte	 DATA:003E
SET_COLOR			  Near16 CODE:F254
SET_CPOS			  Near16 CODE:F1F0
SET_CTYPE			  Near16 CODE:F1CF
SET_MODE			  Near16 CODE:F0FC
SP_TEST				  Near16 CODE:E5D8
STA				  Number 0030
START				  Near16 CODE:E05B
STATUS_BYTE			  Byte	 XXDATA:0000
STAT_OFFSET			  Byte	 DATA:007C
STGTST				  Near16 CODE:E01A
STGTST_CNT			  Near16 CODE:E01D
STG_LOC0			  Byte	 ABS0:0000
T1				  Near16 CODE:FE7F
T2				  Near16 CODE:FE82
T3				  Near16 CODE:FE95
T4				  Near16 CODE:FEB8
T5				  Near16 CODE:FED8
T6				  Near16 CODE:FEE9
TABL				  Word	 DATA:00E0
TABL1				  Word	 ABS0:04E0
TIMER				  Number 0040
TIMERO				  Number 0040
TIMER_HIGH			  Word	 DATA:006E
TIMER_INT			  Far16	 CODE:FEA5
TIMER_LOW			  Word	 DATA:006C
TIMER_OFL			  Byte	 DATA:0070
TIME_OF_DAY			  Far16	 CODE:FE6E
TIME_OUT			  Number 0080
TIM_CTL				  Number 0043
TMINT				  Number 0001
TMP_TOS				  Word	 DATA:3FF0
TOS				  Word	 STAC:0100
TST12				  Near16 CODE:E42D
TST6				  Near16 CODE:E227
TST8				  Near16 CODE:E2DE
U1				  Near16 CODE:F753
U10				  Near16 CODE:F793
U11				  Near16 CODE:F79A
U2				  Near16 CODE:F766
U3				  Near16 CODE:F76C
U4				  Near16 CODE:F77A
U5				  Near16 CODE:F77C
U6				  Near16 CODE:F780
U7				  Near16 CODE:F782
U8				  Near16 CODE:F786
Turbo Assembler	 Version 5.0	    10-05-21 23:12:45	    Page 152
Symbol Table



U9				  Near16 CODE:F78F
V1				  Byte	 CODE:F7A1
V2				  Near16 CODE:F7E8
V3				  Near16 CODE:F80F
V4				  Near16 CODE:F81B
V5				  Near16 CODE:F82D
V6				  Near16 CODE:F82F
V7				  Near16 CODE:F839
VECTOR_TABLE			  Word	 CODE:FEF3
VIDEO_INT			  Word	 ABS0:0040
VIDEO_IO			  Near16 CODE:F065
VIDEO_PARMS			  Byte	 CODE:F0A4
VIDEO_RA			  Number B800
VIDEO_RETURN			  Near16 CODE:F1C7
VIDEO_STATE			  Near16 CODE:F27A
WAIT_INT			  Near16 CODE:EF30
WRITE_AC_CURRENT		  Near16 CODE:F3C3
WRITE_C_CURRENT			  Near16 CODE:F3F6
WRITE_DOT			  Near16 CODE:F438
WRITE_PROTECT			  Number 0003
WRITE_TTY			  Near16 CODE:F722
WRITE_TTY2			  Near16 CODE:F966
X1				  Near16 CODE:ED8B
X2				  Near16 CODE:ED87
XLAT_PRINT_COD			  Near16 CODE:E402
XXDAT				  Number 0050
ZB				  Byte	 ABS0:0000
ZW				  Word	 ABS0:0000

Groups & Segments		  Bit Size Align  Combine Class

ABS0				  16  7C00 Para	  none
CODE				  16  00010000 Para   none
DATA				  16  3FF0 Para	  none
STAC				  16  0100 Para	  Stack
VIDEO_RAM			  16  4000 Para	  none
XXDATA				  16  0001 Para	  none

Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 1
1840v4.asm



      1				     ;___________________
      2				     ; v4 - ??/??/???? (Other version than 24/04/1981) новая клавиатура
      3				     ;	БАЗОВАЯ СИСТЕМА ВВОДА/ВЫВОДА (БСУВВ)
      4				     ;___________________
      5	      =0060		     port_a  equ     60h
      6	      =F000		     cod     equ     0f000h
      7	      =0040		     dat     equ     0040h
      8	      =0030		     sta     equ     0030h
      9	      =0050		     xxdat   equ     0050h
     10	      =B800		     video_ra equ    0b800h
     11	      =0061		     port_b  equ     61h
     12	      =0062		     port_c  equ     62h
     13	      =0063		     cmd_port equ    63h
     14	      =0020		     inta00  equ     20h
     15	      =0021		     inta01  equ     21h
     16	      =0020		     eoi     equ     20h
     17	      =0040		     timer   equ     40h
     18	      =0043		     tim_ctl equ     43h
     19	      =0040		     timero  equ     40h
     20	      =0001		     tmint   equ     01
     21	      =0008		     dma08   equ     08
     22	      =0000		     dma     equ     00
     23	      =0540		     max_period	equ  540h
     24	      =0410		     min_period	equ  410h
     25	      =0060		     kbd_in  equ     60h
     26	      =0002		     kbdint  equ     02
     27	      =0060		     kb_dat  equ     60h
     28	      =0061		     kb_ctl  equ     61h
     29				     ;_______________
     30				     ;	Расположение прерываний 8086
     31				     ;_________________________
     32	0000			     abs0    segment para
     33	0000			     zb	     label   byte
     34	0000			     zw	     label   word
     35	0000			     stg_loc0 label  byte
     36					     org     2*4
     37	0008			     nmi_ptr label   word
     38					     org     5*4
     39	0014			     int5_ptr label  word
     40					     org     8*4
     41	0020			     int_addr label  word
     42	0020			     int_ptr label   dword
     43					     org     0dh*4
     44	0034			     hdisk_int	label  dword
     45					     org     10h*4
     46	0040			     video_int label word
     47					     org     13h*4
     48	004C			     org_vector	 label	dword
     49					     org     19h*4
     50	0064			     boot_vec  label  dword
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 2
1840v4.asm



     51					     org     1dh*4
     52	0074			     parm_ptr label  dword
     53					     org     01eh*4
     54	0078			     disk_pointer label	dword
     55	0078			     diskette_parm  label  dword
     56					     org     01fh*4
     57	007C			     ext_ptr label   dword
     58					     org     040h*4
     59	0100			     disk_vector  label	 dword
     60					     org     041h*4
     61
     62	0104			     hf_tbl_vec	 label	dword
     63					     org     410h
     64	0410			     eq_fl   label   byte
     65
     66					     org     413h
     67	0413			     mem_siz label   word
     68					     org     472h
     69	0472			     res_fl  label   word
     70					     org     4d0h
     71	04D0			     csi     label   word
     72					     org     4e0h
     73	04E0			     tabl1   label   word
     74					     org     7c00h
     75	7C00			     boot_locn label far
     76	7C00			     abs0    ends
     77
     78				     ;______________________
     79				     ;	Использование стека только во	время	       +
     80				     инициализации
     81				     ;______________________
     82	0000			     stac    segment para stack
     83	0000  80*(????)			     dw	     128 dup(?)
     84
     85
     86
     87	0100			     tos     label   word
     88	0100			     stac    ends
     89
     90				     ;______________________
     91				     ;	Область данных ПЗУ
     92				     ;____________________
     93	0000			     data segment    para
     94	0000  04*(????)		     rs232_base	dw 4 dup(?)
     95
     96
     97
     98	0008  04*(????)		     printer_base dw 4 dup(?)
     99
    100
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 3
1840v4.asm



    101
    102	0010  ????		     equip_flag	dw ?
    103	0012  ??		     mfg_tst db	     ?
    104	0013  ????		     memory_size dw  ?
    105	0015  ????		     io_ram_size dw  ?
    106				     ;_______________
    107				     ;	Область данных клавиатуры
    108				     ;_________________
    109	0017  ??		     kb_flag db	     ?
    110
    111				     ;	Размещение флажков в kb_flag
    112
    113	      =0080		     ins_state equ   80h
    114	      =0040		     caps_state	equ  40h
    115	      =0020		     num_state equ   20h
    116	      =0010		     scroll_state equ 10h
    117	      =0008		     alt_shift equ   08h
    118	      =0004		     ctl_shift equ   04h
    119	      =0002		     left_shift	equ  02h
    120	      =0001		     right_shift equ 01h
    121
    122	0018  ??		     kb_flag_1 db    ?
    123
    124	      =0080		     ins_shift equ   80h
    125	      =0040		     caps_shift	equ  40h
    126	      =0020		     num_shift equ   20h
    127	      =0010		     scroll_shift equ 10h
    128	      =0008		     hold_state	equ  08h
    129	      =0004		     inv_shift equ   04h
    130	      =0002		     lat	     equ     02h
    131	      =0001		     lat_shift	     equ     01h
    132
    133
    134
    135	0019  ??		     alt_input db    ?
    136	001A  ????		     buffer_head dw  ?
    137	001C  ????		     buffer_tail dw  ?
    138	001E  10*(????)		     kb_buffer dw    16	dup(?)
    139
    140
    141
    142	003E			     kb_buffer_end label word
    143
    144				     ;	head=tail указывает на заполнение буфера
    145
    146	      =0045		     num_key equ     69
    147	      =0046		     scroll_key	equ  70
    148	      =0038		     alt_key equ     56
    149	      =001D		     ctl_key equ     29
    150	      =0056		     caps_key equ    86
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 4
1840v4.asm



    151	      =0054		     left_key equ    84
    152	      =0055		     right_key equ   85
    153	      =0052		     ins_key equ     82
    154	      =0053		     del_key equ     83
    155	      =0059		     inf_key   equ   89
    156	      =0058		     inv_key_l	equ  88
    157	      =005A		     inv_key_r equ   90
    158	      =005B		     rus_key	equ  91
    159	      =0057		     lat_key equ     87
    160
    161				     ;____________________
    162				     ;	Область данных НГМД
    163				     ;____________________
    164	003E  ??		     seek_status db  ?
    165				     ;
    166				     ;
    167	      =0080		     int_flag equ    080h
    168	003F  ??		     motor_status db ?
    169				     ;
    170				     ;
    171	0040  ??		     motor_count db  ?
    172	      =0025		     motor_wait	equ  37
    173
    174				     ;
    175	0041  ??		     diskette_status db	?
    176	      =0080		     time_out equ    80h
    177	      =0040		     bad_seek equ    40h
    178	      =0020		     bad_nec  equ    20h
    179	      =0010		     bad_crc  equ    10h
    180	      =0009		     dma_boundary equ 09h
    181	      =0008		     bad_dma  equ    08h
    182	      =0004		     record_not_fnd equ	04h
    183	      =0003		     write_protect equ 03h
    184	      =0002		     bad_addr_mark equ 02h
    185	      =0001		     bad_cmd equ     01h
    186
    187	0042			     cmd_block	label  byte
    188	0042			     hd_error  label  byte
    189	0042  07*(??)		     nec_status	db   7 dup(?)
    190
    191
    192
    193
    194				     ;_____________________
    195				     ;	Область данных ЭЛИ
    196				     ;_____________________
    197	0049  ??		     crt_mode db     ?
    198	004A  ????		     crt_cols dw     ?
    199	004C  ????		     crt_len  dw     ?
    200	004E  ????		     crt_start dw    ?
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 5
1840v4.asm



    201	0050  08*(????)		     cursor_posn dw  8 dup(?)
    202
    203
    204
    205	0060  ????		     cursor_mode dw  ?
    206	0062  ??		     active_page db  ?
    207	0063  ????		     addr_6845 dw    ?
    208	0065  ??		     crt_mode_set db ?
    209	0066  ??		     crt_pallette db ?
    210
    211				     ;___________________
    212				     ;	Область данных НМД
    213				     ;___________________
    214	0067  ????		     io_rom_init dw  ?
    215	0069  ????		     io_rom_seg	dw   ?
    216	006B  ??		     last_val db     ?
    217
    218				     ;___________________
    219				     ;	Область данных таймера
    220				     ;___________________
    221	006C  ????		     timer_low dw    ?
    222	006E  ????		     timer_high	dw   ?
    223	0070  ??		     timer_ofl db    ?
    224				     ;___________________
    225				     ;	Область данных системы
    226				     ;___________________
    227	0071  ??		     bios_break	db   ?
    228	0072  ????		     reset_flag	dw   ?
    229	0074  ??		     diskw_status  db  ?
    230	0075  ??		     hf_num  db	  ?
    231	0076  ??		     control_byte  db  ?
    232	0077  ??		     port_off  db  ?
    233						     org     7ch
    234	007C			     stat_offset     label   byte ; смещение для хранения	       +
    235				     состояний	модема
    236
    237					     org     80h
    238	0080  ????		     buffer_start    dw	     ?
    239	0082  ????		     buffer_end	     dw	     ?
    240					     org     0090h
    241	0090  ????		     idnpol  dw	     ?
    242					     org     0e0h
    243	00E0			     tabl    label   word
    244
    245					     org     3ff0h
    246	3FF0			     tmp_tos label   word
    247				     ;
    248	3FF0			     data    ends
    249
    250				     ;___________________
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 6
1840v4.asm



    251				     ;	Область расширения данных
    252				     ;_________________________________
    253	0000			     xxdata segment  para
    254	0000  ??		     status_byte db  ?
    255	0001			     xxdata  ends
    256
    257				     ;_________________
    258				     ;	Буфер ЭЛИ
    259				     ;___________________
    260	0000			     video_ram segment para
    261	0000			     regen   label   byte
    262	0000			     regenw  label   word
    263	0000  4000*(??)			     db	     16384 dup(?)
    264
    265
    266
    267	4000			     video_ram ends
    268				     ;____________________
    269				     ;	Основной массив в ПЗУ	(сегмент	code)
    270				     ;____________________
    271
    272	0000			     code segment para
    273
    274						     org 0E000h
    275
    276	E000  35 37 30 30 30 35	31+  a5700051Copr_Ib db	'5700051 copr. ibm 1981'
    277	      20 63 6F 70 72 2E	20+
    278	      69 62 6D 20 31 39	38+
    279	      31
    280	E016  E0D9r		     c1		     dw	offset c11	     ; адрес    возврата
    281	E018  E1E0r		     caw	     dw	offset ca3
    282					     assume cs:code,ss:code,es:abs0,ds:data
    283
    284	E01A			     stgtst:
    285	E01A  B9 4000				     mov     cx,4000h
    286
    287	E01D			     stgtst_cnt	     proc    near
    288	E01D  FC				     cld
    289	E01E  8B D9				     mov     bx, cx
    290	E020  B8 FFFF				     mov     ax, 0FFFFh
    291	E023  BA AA55				     mov     dx, 0AA55h
    292	E026  2B FF				     sub     di, di
    293	E028  F3> AA				     repe stosb
    294
    295	E02A			     c2a:
    296	E02A  4F				     dec     di
    297	E02B  FD				     std
    298
    299	E02C			     c2b:
    300	E02C  8B F7				     mov     si, di
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 7
1840v4.asm



    301	E02E  8B CB				     mov     cx, bx
    302
    303	E030			     c3:
    304	E030  AC				     lodsb
    305	E031  32 C4				     xor     al, ah
    306	E033  75 25				     jnz     c7x
    307	E035  E4 62				     in	     al, 62h
    308	E037  24 40				     and     al, 40h
    309	E039  B0 00				     mov     al, 0
    310	E03B  75 1D				     jnz     c7x
    311	E03D  80 FC 00				     cmp     ah, 0
    312	E040  74 03				     jz	     c3a
    313	E042  8A C2				     mov     al, dl
    314	E044  AA				     stosb
    315
    316	E045			     c3a:
    317	E045  E2 E9				     loop    c3
    318	E047  80 FC 00				     cmp     ah, 0
    319	E04A  74 0E				     jz	     c7x
    320	E04C  8A E0				     mov     ah, al
    321	E04E  86 F2				     xchg    dh, dl
    322	E050  FC				     cld
    323	E051  47				     inc     di
    324	E052  74 D8				     jz	     c2b
    325	E054  4F				     dec     di
    326	E055  BA 0001				     mov     dx, 1
    327	E058  EB D0				     jmp     short c2a
    328
    329	E05A			     c7x:
    330	E05A  C3				     retn
    331	E05B			     stgtst_cnt	     endp
    332
    333
    334				     ;____________________
    335				     ;	Сброс системы - фаза 1
    336				     ;____________________
    337				     ;_____________________
    338				     ;	Проверка 16К памяти
    339				     ;_____________________
    340				     ;___________________
    341				     ;	ТЕСТ.01
    342				     ;	     Тест процессора 8086. Осуществляет	       +
    343				     проверку регистра
    344				     ;	     признаков, команд перехода и		       +
    345				     считывания-записи
    346				     ;	     общих	и сегментных	регистров.
    347				     ;_____________________________________
    348	E05B			     reset   label   near
    349	E05B  FA		     start:  cli		     ; сброс признака разрешения+
    350				     прерывания
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 8
1840v4.asm



    351	E05C  B4 D5			     mov     ah,0d5h	     ;уст признаки SF,CF,ZF,AF
    352	E05E  9E			     sahf
    353	E05F  73 4E			     jnc     err01	     ;CF=0,в программу ошибок
    354	E061  75 4C			     jnz     err01	     ;ZF=0,в программу ошибок
    355	E063  7B 4A			     jnp     err01	     ;PF=0,в программу ошибок
    356	E065  79 48			     jns     err01	     ;SF=0,в программу ошибок
    357	E067  9F			     lahf		     ;загрузить признаки в AH
    358	E068  B1 05			     mov     cl,5	     ;загрузить счетчик
    359	E06A  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    360	E06C  73 41			     jnc     err01	     ;признак AF=0
    361	E06E  B0 40			     mov     al,40h	     ;уст признак переполнения
    362	E070  D0 E0			     shl     al,1	     ;уст для контроля
    363	E072  71 3B			     jno     err01	     ;признак OF	не уст
    364	E074  32 E4			     xor     ah,ah	     ;уст AH=0
    365	E076  9E			     sahf		     ;уст в	исходное состояние SF,+
    366				     CF,ZF,PF
    367	E077  72 36			     jc	     err01	     ;признак CF=1
    368	E079  74 34			     jz	     err01	     ;признак ZF=1
    369	E07B  78 32			     js	     err01	     ;признак SF=1
    370	E07D  7A 30			     jp	     err01	     ;признак PF=1
    371	E07F  9F			     lahf		     ;загрузить признаки в AH
    372	E080  B1 05			     mov     cl,5	     ;загрузить счетчик
    373	E082  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    374	E084  72 29			     jc	     err01	     ;признак IF=1
    375	E086  D0 E4			     shl     ah,1	     ;контроль,	что OF сброшен
    376	E088  70 25			     jo	     err01
    377	E08A  B8 FFFF			     mov     ax,0ffffh	     ;уст эталона в AX
    378	E08D  F9			     stc
    379	E08E  8E D8		     c8:     mov     ds,ax	     ;запись во	все регистры
    380	E090  8C DB			     mov     bx,ds
    381	E092  8E C3			     mov     es,bx
    382	E094  8C C1			     mov     cx,es
    383	E096  8E D1			     mov     ss,cx
    384	E098  8C D2			     mov     dx,ss
    385	E09A  8B E2			     mov     sp,dx
    386	E09C  8B EC			     mov     bp,sp
    387	E09E  8B F5			     mov     si,bp
    388	E0A0  8B FE			     mov     di,si
    389	E0A2  73 07			     jnc     c9
    390	E0A4  33 C7			     xor     ax,di	     ;проверка всех	регистров
    391								     ;эталонами "FFFF", "0000"
    392	E0A6  75 07			     jnz     err01
    393	E0A8  F8			     clc
    394	E0A9  73 E3			     jnc     c8
    395	E0AB			     c9:
    396	E0AB  0B C7			     or	     ax,di	     ;нулевым шаблоном все	       +
    397				     регистры проверены ?
    398	E0AD  74 02			     jz	     c10	     ;ДА - переход к следующему    +
    399				     тесту
    400	E0AF  EB AA		     err01:  jmp   short  start
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 9
1840v4.asm



    401				     ;_______________________
    402				     ; ТЕСТ.02
    403				     ;_______________________
    404	E0B1			     c10:
    405	E0B1  B0 00			     mov     al,0	     ;запретить прерывaния NMI
    406	E0B3  E6 A0			     out     0a0h,al
    407	E0B5  E6 83			     out     83h,al	     ;инициализация регистрa       +
    408				     страниц ПДП
    409	E0B7  B0 99			     mov     al,99h	     ;уст A,C -ввод, B -	вывод
    410	E0B9  E6 63			    out	     cmd_port,al	     ;запись в регистр	       +
    411				     режима
    412									     ;трехканального порта
    413	E0BB  B0 FC			     mov     al,0fch		     ;блокировка контроля    +
    414				     по четности
    415	E0BD  E6 61			     out     port_b,al
    416	E0BF  2A C0			     sub     al,al
    417	E0C1  BA 03D8			     mov     dx,3d8h
    418	E0C4  EE			     out     dx,al	     ;блокировка цветного ЭЛИ
    419	E0C5  FE C0			     inc     al
    420	E0C7  BA 03B8			     mov     dx,3b8h
    421	E0CA  EE			     out     dx,al	     ;блокировка черно-белого     +
    422				     ЭЛИ
    423	E0CB  B8 F000			     mov     ax,cod	     ;уст сегментного регистра SS
    424	E0CE  8E D0			     mov     ss,ax
    425	E0D0  BB E000			     mov     bx,0e000h		     ;уст начального адреса +
    426				     памяти
    427	E0D3  BC E016r			     mov     sp,offset c1	     ;уст адреса возврата
    428	E0D6  EB 03			     jmp     short ros
    429	E0D8  90				     nop
    430	E0D9  75 D4		     c11:    jne     err01
    431				     ;------------------------
    432				     ;	ТЕСТ.03
    433				     ;	 Осуществляет проверку, инициализацию и      +
    434				     запуск ПДП и
    435				     ; таймера 1	для регенерации памяти
    436				     ;_________________________
    437				     ;	 Блокировка контроллера ПДП
    438
    439	E0DB  B0 04		     ros:    mov     al,04
    440	E0DD  E6 08			     out     dma08,al
    441
    442				     ;	 Проверка правильности функционирования
    443				     ;	 таймера	1
    444
    445	E0DF  B0 54			     mov     al,54h	     ;выбор таймера	1,LSB, режим 2
    446	E0E1  E6 43			     out     timer+3,al
    447	E0E3  2B C9			     sub     cx,cx
    448	E0E5  8A D9			     mov     bl,cl
    449	E0E7  8A C1			     mov     al,cl	     ;уст начального счетчика     +
    450				     таймера в 0
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 10
1840v4.asm



    451	E0E9  E6 41			     out     timer+1,al
    452	E0EB			     c12:
    453	E0EB  B0 40			     mov     al,40h
    454	E0ED  E6 43			     out     timer+3,al
    455	E0EF  E4 41			     in	     al,timer+1	     ;считывание счетчика	       +
    456				     таймера 1
    457	E0F1  0A D8			     or	     bl,al	     ;все биты таймера включены ?
    458	E0F3  80 FB FF			     cmp     bl,0ffh	     ;ДА - сравнение	с FF
    459	E0F6  74 04			     je	     c13	     ;биты таймера сброшены
    460	E0F8  E2 F1			     loop    c12	     ;биты таймера установлены
    461	E0FA  EB B3			     jmp     short err01     ;сбой таймера 1, останов	       +
    462				     системы
    463	E0FC			     c13:
    464	E0FC  8A C3			     mov     al,bl	     ;уст счетчика таймера 1
    465	E0FE  2B C9			     sub     cx,cx
    466	E100  E6 41			     out     timer+1,al
    467	E102			     c14:	     ;цикл таймера
    468	E102  B0 40			     mov     al,40h
    469	E104  E6 43			     out     timer+3,al
    470	E106  E4 41			     in	     al,timer+1		     ;считывание счетчика    +
    471				     таймера 1
    472	E108  22 D8			     and     bl,al
    473	E10A  74 04			     jz	     c15
    474	E10C  E2 F4			     loop    c14	     ;цикл таймера
    475	E10E  EB 9F			     jmp     short err01
    476
    477				     ;	 Инициализация таймера 1
    478
    479	E110			     c15:
    480	E110  B0 54			     mov     al,54h
    481	E112  E6 43			     out     timer+3,al	     ;запись в регистр режима      +
    482				     таймера
    483	E114  B0 07			     mov     al,7    ;уст коэффициента деления для    +
    484				     регенерации
    485	E116  E6 41			     out     timer+1,al	     ;запись в счетчик таймера 1
    486	E118  E6 0D			     out     dma+0dh,al	     ;послать гашение ПДП
    487
    488				     ;	 Цикл проверки регистров ПДП
    489
    490	E11A  B0 FF			     mov     al,0ffh	     ;запись шаблона FF во все       +
    491				     регистры
    492	E11C  8A D8		     c16:    mov     bl,al	     ;сохранить шаблон для	       +
    493				     сравнения
    494	E11E  8A F8			     mov     bh,al
    495	E120  B9 0008			     mov     cx,8	     ;уст цикла	счетчика
    496	E123  BA 0000			     mov     dx,dma	     ;уст адреса регистра порта  +
    497				     ввода/вывода
    498	E126  EE		     c17:    out     dx,al	     ;запись  шаблона в регистр
    499	E127  EE			     out     dx,al	     ;старшие 16	бит регистра
    500	E128  B8 0101			     mov     ax,0101h	     ;изменение AX перед		       +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 11
1840v4.asm



    501				     считыванием
    502	E12B  EC			     in	     al,dx
    503	E12C  8A E0			     mov     ah,al	     ;сохранить младшие	16 бит      +
    504				     регистра
    505	E12E  EC			     in	     al,dx
    506	E12F  3B D8			     cmp     bx,ax	     ;считан тот же шаблон ?
    507	E131  74 03			     je	     c18	     ;ДА - проверка следующего     +
    508				     регистра
    509	E133  E9 FF79			     jmp     err01	     ;НЕТ - ошибка
    510	E136			     c18:			     ;выбор следующего регистра +
    511				     ПДП
    512	E136  42			     inc     dx		     ;установка адреса		       +
    513				     следующего
    514								     ;регистра ПДП
    515	E137  E2 ED			     loop    c17	     ;запись шаблона для	       +
    516				     следующего регистра
    517	E139  F6 D0			     not     al		       ;уст шаблона в 0
    518	E13B  74 DF			     jz	     c16
    519
    520				     ;	 Инициализация и запуск ПДП
    521
    522	E13D  B0 FF			     mov     al,0ffh	     ;уст счетчика 64K для	       +
    523				     регенерации
    524	E13F  E6 01			     out     dma+1,al
    525	E141  E6 01			     out     dma+1,al
    526	E143  B0 58			     mov     al,058h	     ;уст режим	ПДП,	счетчик 0,      +
    527				     считывание
    528	E145  E6 0B			     out     dma+0bh,al	     ;запись в регистр режима ПДП
    529	E147  B0 00			     mov     al,0	     ;доступность контроллера    +
    530				     ПДП
    531	E149  E6 08			     out     dma+8,al	     ;уст регистр команд ПДП
    532	E14B  E6 0A			     out     dma+10,al	     ;доступность канала 0 для     +
    533				     регенерации
    534	E14D  B0 41			     mov     al,41h	     ;уст режим	дла канала 1
    535	E14F  E6 0B			     out     dma+0bh,al
    536	E151  B0 42			     mov     al,42h	     ;уст режим	для канала 2
    537	E153  E6 0B			     out     dma+0bh,al
    538	E155  B0 43			     mov     al,43h	     ;уст режим	для канала 3
    539	E157  E6 0B			     out     dma+0bh,al
    540	E159  B8 0040				     mov     ax, dat
    541	E15C  8E D8				     mov     ds, ax
    542
    543	E15E  8B 1E 0072r			     mov     bx, ds:reset_flag
    544	E162  2B C0				     sub     ax, ax
    545	E164  8E C0				     mov     es, ax
    546	E166  8E D8				     mov     ds, ax
    547	E168  E4 62				     in	     al, port_c
    548	E16A  24 0F				     and     al, 0Fh
    549	E16C  FE C0				     inc     al
    550	E16E  02 C0				     add     al, al
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 12
1840v4.asm



    551	E170  BA 0000				     mov     dx, 0
    552	E173  8A E0				     mov     ah, al
    553	E175  B0 00				     mov     al, 0
    554	E177  FC				     cld
    555
    556	E178			     c19:
    557	E178  2B FF				     sub     di, di
    558	E17A  B9 0000				     mov     cx, 0
    559
    560	E17D			     c20:
    561	E17D  AA				     stosb
    562	E17E  E2 FD				     loop    c20
    563	E180  81 C2 1000			     add     dx, 4096
    564	E184  8E C2				     mov     es, dx
    565	E186  FE CC				     dec     ah
    566	E188  74 02				     jz	     c21
    567	E18A  EB EC				     jmp     short c19
    568				     ;____________________
    569				     ;	 Инициализация контроллера
    570				     ;	 прерываний 8259
    571				     ;____________________
    572	E18C			     c21:
    573	E18C  B0 13			     mov     al,13h	     ;ICW1 - EDGE, SNGL, ICW4
    574	E18E  E6 20			     out     inta00,al
    575	E190  B0 08			     mov     al,8	     ;УСТ ICW2 - прерывание типа 8(8-F)
    576	E192  E6 21			     out     inta01,al
    577	E194  B0 09			     mov     al,9	     ;уст ICW4 - BUFFERD , режим 8086
    578	E196  E6 21			     out     inta01,al
    579	E198  2B C0				     sub     ax, ax
    580	E19A  8E C0				     mov     es, ax
    581	E19C  BE 0040				     mov     si, dat
    582	E19F  8E DE				     mov     ds, si
    583
    584	E1A1  89 1E 0072r			     mov     ds:reset_flag, bx
    585	E1A5  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
    586	E1AB  74 38				     jz	     c25
    587	E1AD  8E D8				     mov     ds, ax
    588	E1AF  BC 3FF0r				     mov     sp, offset	tmp_tos
    589	E1B2  8E D0				     mov     ss, ax
    590	E1B4  8B F8				     mov     di, ax
    591	E1B6  BB 0024				     mov     bx, 9*4	     ; int 9 (KBD)
    592	E1B9  C7 07 E2A8r			     mov     word ptr [bx], offset d11
    593	E1BD  43				     inc     bx
    594	E1BE  43				     inc     bx
    595	E1BF  8C 0F				     mov     [bx], cs
    596	E1C1  E8 0407				     call    kbd_reset
    597	E1C4  80 FB 65				     cmp     bl, 65h	     ; Manufacturing test mode - viz document  +
    598				     in	BIOS root or http://www.vcfed.org/forum/archive/index.php/t-12377.html
    599	E1C7  75 0E				     jnz     c23
    600	E1C9  B2 FF				     mov     dl, 0FFh
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 13
1840v4.asm



    601
    602	E1CB			     c22:
    603	E1CB  E8 040A				     call    sp_test
    604	E1CE  8A C3				     mov     al, bl
    605	E1D0  AA				     stosb
    606	E1D1  FE CA				     dec     dl
    607	E1D3  75 F6				     jnz     c22
    608	E1D5  CD 3E				     int     3Eh
    609
    610	E1D7			     c23:
    611	E1D7  0E				     push    cs
    612	E1D8  17				     pop     ss
    613						     assume ss:code
    614	E1D9  FA				     cli
    615	E1DA  BC E018r				     mov     sp, offset	caw  ; [caw] = offset ca3 (next	jmp -> indirect+
    616				     call)
    617	E1DD  E9 FE3A				     jmp     stgtst
    618
    619	E1E0			     ca3:
    620	E1E0  74 03				     jz	     c25
    621	E1E2  E9 FECA				     jmp     err01
    622
    623				     ;	 Установка сегмента стека	и SP
    624
    625	E1E5			     c25:
    626	E1E5  B8 0030			     mov     ax,sta	     ;получить величину	стека
    627	E1E8  8E D0			     mov     ss,ax	     ;уст стек
    628	E1EA  BC 0100r			     mov     sp,offset tos   ;стек готов
    629
    630				     ;	 Установка указателя вектора прерывания NMI
    631
    632	E1ED  26: C7 06	0008r	  +	     mov     es:nmi_ptr,offset nmi_int
    633	      E2B5r
    634	E1F4  26: C7 06	000Ar F000	     mov     es:nmi_ptr+2,cod
    635	E1FB  EB 2A			     jmp     short tst6	     ;переход к	следующему тесту
    636
    637	E1FD			     ros_checksum proc	near
    638	E1FD  B9 2000			     mov     cx,8192	     ;число байт для сложения
    639	E200  32 C0			     xor     al,al
    640	E202  2E: 02 07		     c26:    add     al,cs:[bx]
    641	E205  43			     inc     bx		     ;указание следующего байта
    642	E206  E2 FA			     loop    c26	     ;сложить все байты в модуле +
    643				     ROS
    644	E208  0A C0			     or	     al,al	     ;сумма = 0 ?
    645	E20A  C3			     ret
    646	E20B			     ros_checksum endp
    647				     ;______________________
    648				     ;	 Начальный тест надежности
    649				     ;______________________
    650					     assume  cs:code,es:abs0
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 14
1840v4.asm



    651
    652	E20B  70 61 72 69 74 79	20+  d1		     db	'parity	check 2'
    653	      63 68 65 63 6B 20	32
    654
    655
    656	      =000E		     d1l     equ     14
    657	E219  70 61 72 69 74 79	20+  d2		     db	'parity	check 1'
    658	      63 68 65 63 6B 20	31
    659
    660
    661	      =000E		     d2l     equ     14
    662				     ;______________________
    663				     ;	 ТЕСТ.06
    664				     ;	      Тест контроллера прерываний
    665				     ;	      8259
    666				     ;_______________________
    667	E227			     tst6:
    668	E227  2B C0			     sub     ax,ax	     ;уст регистра ES
    669	E229  8E C0			     mov     es,ax
    670
    671				     ;-----уст вектора прерываний 5
    672
    673	E22B  26: C7 06	0014r	  +	     mov     es:int5_ptr,offset	print_screen   ; печать экрана
    674	      FF54r
    675	E232  26: C7 06	0016r F000	     mov     es:int5_ptr+2,cod
    676
    677				     ;	 Проверка регистра масок прерываний (IMR)
    678
    679	E239  FA			     cli		     ;сброс признака разрешения +
    680				     прерываний
    681	E23A  B0 00			     mov     al,0	     ;уст IMR в 0
    682	E23C  E6 21			     out     inta01,al
    683	E23E  E4 21			     in	     al,inta01	     ;считывание IMR
    684	E240  0A C0			     or	     al,al	     ;IMR=0 ?
    685	E242  75 2B			     jnz     d6		     ;IMR не 0,в программу ошибок
    686	E244  B0 FF			     mov     al,0ffh	     ;недоступность прерываний
    687	E246  E6 21			     out     inta01,al	     ;запись в IMR
    688	E248  E4 21			     in	     al,inta01	     ;считывание IMR
    689	E24A  04 01			     add     al,1	     ;все биты IMR установлены ?
    690	E24C  75 21			     jnz     d6		     ;НЕТ - в программу ошибок
    691
    692				     ;	 Контроль ожидания прерывания
    693
    694	E24E  FC			     cld		     ; уст признак направления
    695	E24F  B9 0008			     mov     cx,8
    696	E252  BF 0020r			     mov     di,offset int_ptr	     ; уст адресацию таблицы
    697	E255			     d3:
    698	E255  B8 E2A8r			     mov     ax,offset d11   ; установить адрес		       +
    699				     процедуры	прерываний
    700	E258  AB			     stosw
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 15
1840v4.asm



    701	E259  B8 F000			     mov     ax,cod  ; получить	адрес сегмента	       +
    702				     процедуры
    703	E25C  AB			     stosw
    704	E25D  83 C3 04			     add     bx,4    ;уст BX	для указания	следующего   +
    705				     значения
    706	E260  E2 F3			     loop    d3
    707
    708				     ;	 Прерывания размаскированы
    709
    710	E262  32 E4			     xor     ah,ah	     ;очистить регистр AH
    711	E264  FB			     sti		     ; установка признака	       +
    712				     разрешения прерывания
    713	E265  2B C9			     sub     cx,cx	     ; ожидание	1 сек любого	       +
    714				     прерывания,
    715	E267  E2 FE		     d4:     loop    d4		     ; которое может произойти
    716	E269  E2 FE		     d5:     loop    d5
    717	E26B  0A E4			     or	     ah,ah	     ; прерывание возникло ?
    718	E26D  74 08			     jz	     d7		     ; нет -	к следующему	тесту
    719	E26F  BA 0101		     d6:     mov     dx,101h	     ; уст длительности		       +
    720				     звукового	сигнала
    721	E272  E8 030B			     call    err_beep	     ; идти	в программу		       +
    722				     звукового	сигнала
    723	E275  FA			     cli
    724	E276  F4			     hlt		     ; останов системы
    725				     ;__________________
    726				     ;	 ТЕСТ.07
    727				     ;	      Проверка таймера 8253
    728				     ;___________________
    729	E277			     d7:
    730	E277  B4 00			     mov     ah,0	     ; сброс признака прерывания+
    731				     таймера
    732	E279  32 ED			     xor     ch,ch	     ; очистить	регистр CH
    733	E27B  B0 FE			     mov     al,0feh   ; маскировать	все прерывания,   +
    734				     кроме	LVL 0
    735	E27D  E6 21			     out     inta01,al	     ; запись IMR
    736	E27F  B0 10			     mov     al,00010000b    ; выбрать TIM 0, LSD, режим 0,	BINARY
    737	E281  E6 43			     out     tim_ctl,al	 ;записать регистр режима	       +
    738				     управления таймера
    739	E283  B1 16			     mov     cl,16h	     ; уст счетчик программного  +
    740				     цикла
    741	E285  8A C1			     mov     al,cl	     ; установить счетчик	       +
    742				     таймера 0
    743	E287  E6 40			     out     timero,al	     ; записать	счетчик таймера 0
    744	E289  F6 C4 FF		     d8:     test    ah,0ffh	     ; прерывание таймера 0	       +
    745				     произошло	?
    746	E28C  75 04			     jnz     d9		     ; да - таймер считал	медленно
    747	E28E  E2 F9			     loop    d8		     ; ожидание	прерывания	       +
    748				     определенное время
    749	E290  EB DD			     jmp     short d6	;прерывание таймера 0 не	       +
    750				     произошло	- ошибка
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 16
1840v4.asm



    751	E292  B1 12		     d9:     mov     cl,18	     ; уст счетчик программного  +
    752				     цикла
    753	E294  B0 FF			     mov     al,0ffh	     ; записать	счетчик таймера 0
    754	E296  E6 40			     out     timero,al
    755	E298  B4 00			     mov     ah,0	     ; сброс признака,		       +
    756				     полученного прерывания
    757	E29A  B0 FE			     mov     al,0feh	     ; недоступность прерываний +
    758				     таймера 0
    759	E29C  E6 21			     out     inta01,al
    760	E29E  F6 C4 FF		     d10:    test    ah,0ffh	     ; прерывание таймера 0	       +
    761				     произошло	?
    762	E2A1  75 CC			     jnz     d6		     ; да - таймер считает быстро
    763	E2A3  E2 F9			     loop    d10	     ; ожидание	прерывания	       +
    764				     определенное время
    765	E2A5  EB 37			     jmp     short tst8		     ; переход к следующему  +
    766				     тесту
    767	E2A7  90			     nop
    768				     ;____________________
    769				     ;	 Программа обслуживания
    770				     ;	 временного прерывания
    771				     ;____________________
    772	E2A8			     d11     proc    near
    773	E2A8  B4 01			     mov     ah,1
    774	E2AA  50			     push    ax		     ; хранить регистр AX
    775	E2AB  B0 FF			     mov     al,0ffh	     ; размаскировать все	       +
    776				     прерывания
    777	E2AD  E6 21			     out     inta01,al
    778	E2AF  B0 20			     mov     al,eoi
    779	E2B1  E6 20			     out     inta00,al
    780	E2B3  58			     pop     ax		     ; восстановить	регистр AX
    781	E2B4  CF			     iret
    782	E2B5			     d11     endp
    783
    784	E2B5			     nmi_int proc    near
    785	E2B5  50			     push    ax		     ; хранить регистр AX
    786	E2B6  E4 62			     in	     al,port_c
    787	E2B8  A8 40			     test    al,40h	     ; ошибка паритета при	       +
    788				     вводе/выводе ?
    789	E2BA  74 08			     jz	     d12	     ; да - признак сбрасывается  +
    790				     в	0
    791	E2BC  BE E20Br			     mov     si,offset d1    ; адрес поля сообщения об     +
    792				     ошибке
    793	E2BF  B9 000E			     mov     cx,d1l	     ; длина поля сообщения об     +
    794				     ошибке
    795	E2C2  EB 0A			     jmp     short d13	     ; отобразить ошибку на	       +
    796				     дисплее
    797	E2C4			     d12:
    798	E2C4  A8 80			     test    al,80h
    799	E2C6  74 10			     jz	     d14
    800	E2C8  BE E219r			     mov     si,offset d2    ; адрес поля сообщения об     +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 17
1840v4.asm



    801				     ошибке
    802	E2CB  B9 000E			     mov     cx,d2l	     ; длина поля сообщения об     +
    803				     ошибке
    804	E2CE			     d13:
    805	E2CE  B8 0000			     mov     ax,0	     ; инициировать	и установить+
    806				     режим	ЭЛИ
    807	E2D1  CD 10			     int     10h	     ; вызвать процедуру VIDEO_IO
    808	E2D3  E8 031F			     call    p_msg	     ; распечатать ошибку
    809	E2D6  FA			     cli
    810	E2D7  F4			     hlt		     ; останов системы
    811	E2D8			     d14:
    812	E2D8  58			     pop     ax		     ; восстановить	AX
    813	E2D9  CF			     iret
    814	E2DA			     nmi_int endp
    815				     ;____________________
    816				     ;	 Начальный тест надежности
    817				     ;____________________
    818					     assume  cs:code,ds:data
    819
    820	E2DA  20 32 30 31	     e1	     db	     ' 201'
    821	      =0004		     e1l     equ     04h
    822
    823				     ;	 Выполнение программы БСУВВ,
    824				     ;	 генерирующей вектора прерываний
    825
    826	E2DE			     tst8:
    827	E2DE  FC			     cld		     ; установить признак	       +
    828				     направления вперед
    829	E2DF  BF 0040r			     mov     di,offset video_int   ; уст адреса области	       +
    830				     прерываний
    831	E2E2  0E			     push    cs
    832	E2E3  1F			     pop     ds		     ; уст адреса таблицы	       +
    833				     векторов
    834	E2E4  BE FF13r			     mov     si,offset vector_table+20h	 ; смещение VECTOR_TABLE+32
    835	E2E7  B9 0020			     mov     cx,20h
    836	E2EA  F3> A5			     rep     movsw	     ; передать	таблицу векторов+
    837				     в	память
    838
    839				     ;	 Установка таймера 0 в	режим 3
    840
    841	E2EC  B0 FF			     mov     al,0ffh
    842	E2EE  E6 21			     out     inta01,al
    843	E2F0  B0 36			     mov     al,36h	     ; выбор счетчика 0,		       +
    844				     считывания-за-
    845				     ; писи	младшего,затем старшего байта		       +
    846				     счетчика,уст режима 3
    847	E2F2  E6 43			     out     timer+3,al	     ; запись режима таймера
    848	E2F4  B0 C7			     mov     al,0c7h
    849	E2F6  E6 40			     out     timer,al	     ; записать	младшую часть      +
    850				     счетчика
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 18
1840v4.asm



    851	E2F8  B0 DB			     mov     al,0dbh
    852	E2FA  E6 40			     out     timer,al	     ; записать	старшую часть      +
    853				     счетчика
    854
    855
    856					     assume  ds:data
    857	E2FC  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    858	E2FF  8E D8			     mov     ds,ax
    859	E301			     e3:
    860	E301  81 3E 0072r 1234		     cmp     reset_flag,1234h
    861	E307  74 03			     jz	     e3a
    862	E309  E8 154D			     call    bct     ;загрузка знакогенератора Ч/Б    +
    863				     ЭЛИ
    864				     ;_____________________
    865				     ;	 ТЕСТ.08
    866				     ;	      Инициализация и запуск
    867				     ;	      контроллера ЭЛИ
    868				     ;______________________
    869	E30C  E4 60		     e3a:    in	     al,port_a	     ; считывание состояния	       +
    870				     переключателей
    871	E30E  B4 00			     mov     ah,0
    872	E310  A3 0010r			     mov     equip_flag,ax   ; запомнить считанное	       +
    873				     состояние	пере-
    874								     ; ключателей
    875	E313  24 30			     and     al,30h	     ; выделить	переключатели     +
    876				     ЭЛИ
    877	E315  75 03			     jnz     e7		     ; переключатели ЭЛИ	       +
    878				     установлены в 0 ?
    879	E317  E9 0098			     jmp     e19	     ; пропустить тест ЭЛИ
    880	E31A			     e7:
    881	E31A  86 E0			     xchg    ah,al
    882	E31C  80 FC 30			     cmp     ah,30h	     ; адаптер ч/б ?
    883	E31F  74 09			     je	     e8		     ; да - установить режим для   +
    884				     ч/б адаптера
    885	E321  FE C0			     inc     al	      ;	уст цветной режим для		       +
    886				     цветного адаптера
    887	E323  80 FC 20			     cmp     ah,20h	     ; режим 80х25 установлен ?
    888	E326  75 02			     jne     e8		     ; нет -	уст режим для 40х25
    889	E328  B0 03			     mov     al,3	     ; установить режим 80х25
    890	E32A			     e8:
    891	E32A  50			     push    ax		     ; хранить режим ЭЛИ	в стеке
    892	E32B  2A E4			     sub     ah,ah	     ;
    893	E32D  CD 10			     int     10h
    894	E32F  58			     pop     ax
    895	E330  50			     push    ax
    896	E331  BB B000			     mov     bx,0b000h
    897	E334  BA 03B8			     mov     dx,3b8h	     ; регистр режима для ч/б
    898	E337  B9 1000			     mov     cx,4096	     ; счетчик байт для ч/б	       +
    899				     адаптера
    900	E33A  B0 01			     mov     al,1	     ; уст режим для	ч/б адаптера
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 19
1840v4.asm



    901	E33C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер ЭЛИ подключен ?
    902	E33F  74 0B			     je	     e9		     ; переход к проверке буфера +
    903				     ЭЛИ
    904	E341  BB B800			     mov     bx,0b800h
    905	E344  BA 03D8			     mov     dx,3d8h	     ; регистр режима для	       +
    906				     цветного адаптера
    907	E347  B9 4000			     mov     cx,4000h
    908	E34A  FE C8			     dec     al		     ; уст режим в 0 для цветного  +
    909				     адаптера
    910				     ;
    911				     ;	     Проверка буфера ЭЛИ
    912				     ;
    913	E34C			     e9:
    914	E34C  EE			     out     dx,al	     ; блокировка ЭЛИ для	       +
    915				     цветного адаптера
    916	E34D  8E C3			     mov     es,bx
    917	E34F  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    918	E352  8E D8			     mov     ds,ax
    919	E354  81 3E 0072r 1234		     cmp     reset_flag,1234h
    920	E35A  74 0D			     je	     e10
    921	E35C  8E DB			     mov     ds,bx	     ;
    922	E35E  E8 FCBC			     call    stgtst_cnt	     ; переход к проверке памяти
    923	E361  74 06			     je	     e10
    924	E363  BA 0102			     mov     dx,102h
    925	E366  E8 0217			     call    err_beep
    926
    927				     ;___________________________
    928				     ;
    929				     ;	 ТЕСТ.09
    930				     ;	      Осуществляет проверку	формирования       +
    931				     строк	в буфере	ЭЛИ
    932				     ;_________________________
    933	E369			     e10:
    934	E369  58			     pop     ax	  ; получить считанные			       +
    935				     переключатели	ЭЛИ в AH
    936	E36A  50			     push    ax		     ; сохранить их
    937	E36B  B4 00			     mov     ah,0
    938	E36D  CD 10			     int     10h
    939	E36F  B8 7020			     mov     ax,7020h	     ; запись пробелов в	режиме   +
    940				     реверса
    941	E372  2B FF			     sub     di,di	     ; установка начала области
    942	E374  B9 0028			     mov     cx,40	     ;
    943	E377  FC			     cld	 ; установить	признак направления  +
    944				     для уменьшения
    945	E378  F3> AB			     rep     stosw	     ; записать	в память
    946				     ;______________________
    947				     ;	  ТЕСТ.10
    948				     ;	       Осуществляет	проверку линий		       +
    949				     интерфейса ЭЛИ
    950				     ;______________________
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 20
1840v4.asm



    951	E37A  58			     pop     ax		     ; получить	считанные	       +
    952				     переключатели
    953	E37B  50			     push    ax		     ; сохранить их
    954	E37C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер подключен ?
    955	E37F  BA 03BA			     mov     dx,03bah	     ; уст адрес порта состояния +
    956				     ч/б дисплея
    957	E382  74 03			     je	     e11	     ; да - переход к	следующей     +
    958				     строке
    959	E384  BA 03DA			     mov     dx,03dah	     ; цветной адаптер подключен
    960				     ;
    961				     ;	     Тест строчной развертки
    962				     ;
    963	E387			     e11:
    964	E387  B4 08			     mov     ah,8
    965	E389			     e12:
    966	E389  2B C9			     sub     cx,cx
    967	E38B  EC		     e13:    in	     al,dx	 ;считывание порта состояния   +
    968				     контроллера СМ607
    969	E38C  22 C4			     and     al,ah	     ; проверка	строки
    970	E38E  75 04			     jnz     e14
    971	E390  E2 F9			     loop    e13
    972	E392  EB 13			     jmp     short e17	     ; переход к сообщению об       +
    973				     ошибке
    974	E394  2B C9		     e14:    sub     cx,cx
    975	E396  EC		     e15:    in	     al,dx     ;считывание порта	состояния     +
    976				     контроллера СМ607
    977	E397  22 C4			     and     al,ah
    978	E399  74 04			     jz	     e16
    979	E39B  E2 F9			     loop    e15
    980	E39D  EB 08			     jmp     short e17
    981				     ;
    982				     ;	     Следующий	строчный импульс
    983				     ;
    984	E39F			     e16:
    985	E39F  B1 03			     mov     cl,3	     ; получить	следующий бит      +
    986				     для контроля
    987	E3A1  D2 EC			     shr     ah,cl
    988	E3A3  75 E4			     jnz     e12
    989	E3A5  EB 06			     jmp     short e18	     ; отобразить курсор на	       +
    990				     экране
    991				     ;
    992				     ;	     Сообщение	об ошибке конттроллера СМ607
    993				     ;
    994	E3A7			     e17:
    995	E3A7  BA 0103			     mov     dx,103h
    996	E3AA  E8 01D3			     call    err_beep
    997				     ;
    998				     ;	     Отображение курсора на	экране
    999				     ;
   1000	E3AD			     e18:
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 21
1840v4.asm



   1001	E3AD  58			     pop     ax		     ; получить	считанные	       +
   1002				     переключатели	в AH
   1003	E3AE  B4 00			     mov     ah,0	     ; установить режим
   1004	E3B0  CD 10			     int     10h
   1005				     ;______________________
   1006				     ;	 ТЕСТ.11
   1007				     ;	      Дополнительный тест памяти
   1008				     ;______________________
   1009					     assume  ds:data
   1010	E3B2			     e19:
   1011	E3B2  B8 0040			     mov     ax,dat
   1012	E3B5  8E D8			     mov     ds,ax
   1013	E3B7  E4 62				     in	     al, port_c
   1014	E3B9  24 0F				     and     al, 0Fh
   1015	E3BB  FE C0				     inc     al
   1016	E3BD  B4 80				     mov     ah, 80h
   1017	E3BF  F6 E4				     mul     ah
   1018	E3C1  A3 0015r				     mov     ds:io_ram_size, ax	; Reserved in original IBM PC
   1019	E3C4  8B D0				     mov     dx, ax
   1020	E3C6  A3 0013r				     mov     ds:memory_size, ax
   1021	E3C9  81 3E 0072r 1234		     cmp     reset_flag,1234h
   1022	E3CF  74 2E			     je	     e22
   1023
   1024				     ;	 Проверка любой действительной памяти
   1025				     ;	 на считывание и запись
   1026
   1027	E3D1  E9 023F			     jmp     e190
   1028
   1029				     ;	 Печать адреса и эталона, если
   1030				     ;	 произошла ошибка данных
   1031
   1032
   1033	E3D4			     osh:
   1034	E3D4  8A E8			     mov     ch,al	     ;
   1035	E3D6  8A C6			     mov     al,dh	     ; получить	измененный адрес
   1036	E3D8  B1 04			     mov     cl,4
   1037	E3DA  D2 E8			     shr     al,cl	     ;
   1038	E3DC  E8 0023			     call    xlat_print_cod  ; преобразование и печать    +
   1039				     кода
   1040	E3DF  8A C6			     mov     al,dh
   1041	E3E1  24 0F			     and     al,0fh
   1042	E3E3  E8 001C			     call    xlat_print_cod  ; преобразование и печать    +
   1043				     кода
   1044	E3E6  8A C5			     mov     al,ch	     ; получить	следующий шаблон
   1045	E3E8  B1 04			     mov     cl,4
   1046	E3EA  D2 E8			     shr     al,cl
   1047	E3EC  E8 0013			     call    xlat_print_cod  ; преобразование и печать    +
   1048				     кода
   1049	E3EF  8A C5			     mov     al,ch	     ;
   1050	E3F1  24 0F			     and     al,0fh	     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 22
1840v4.asm



   1051	E3F3  E8 000C			     call    xlat_print_cod  ; преобразование и печать    +
   1052				     кода
   1053	E3F6  BE E2DAr			     mov     si,offset e1    ; установить адрес поля	       +
   1054				     сообщения
   1055								     ; об ошибке
   1056	E3F9  B9 0004			     mov     cx,e1l	     ; получить	счетчик поля	       +
   1057				     сообщения	об ошибке
   1058	E3FC  E8 01F6			     call    p_msg	     ; печать ошибки
   1059	E3FF			     e22:
   1060	E3FF  EB 2C			     jmp     short tst12	     ; переход к следующему  +
   1061				     тесту
   1062	E401  90			     nop
   1063				     ;_____________________
   1064				     ;
   1065				     ;	 Процедура вывода на экран сообщения об       +
   1066				     ошибке в коде ASCII
   1067				     ;
   1068				     ;_______________________
   1069
   1070	E402			     xlat_print_cod proc near
   1071	E402  1E			     push    ds		     ; сохранить DS
   1072	E403  0E			     push    cs
   1073	E404  1F			     pop     ds
   1074	E405  BB E41Dr			     mov     bx,offset f4e   ; адрес таблицы кодов ASCII
   1075	E408  D7			     xlatb
   1076	E409  B4 0E			     mov     ah,14
   1077	E40B  B7 00			     mov     bh,0
   1078	E40D  CD 10			     int     10h
   1079	E40F  1F			     pop     ds
   1080	E410  C3			     ret
   1081	E411			     xlat_print_cod endp
   1082				     ;______________________
   1083				     ;	 Сброс системы - фаза 4
   1084				     ;______________________
   1085				     ;
   1086				     ;	 Коды сообщений об ошибках
   1087				     ;_______________________
   1088
   1089					     assume  cs:code,ds:data
   1090	E411  20 33 30 31	     f1	     db	     ' 301'
   1091	      =0004		     f1l     equ     4h		     ; сообщение клавиатуры
   1092	E415  31 33 31		     f2	     db	     '131'
   1093	      =0003		     f2l     equ     3h		     ; сообщение кассеты
   1094	E418  36 30 31		     f3	     db	     '601'
   1095	      =0003		     f3l     equ     3h		     ; сообщение НГМД
   1096
   1097	E41B			     f4	     label   word
   1098	E41B  0378			     dw	     378h
   1099	E41D			     f4e     label   word
   1100	E41D  30 31 32 33 34 35	36+  ascii_tbl db    '0123456789abcdef'
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 23
1840v4.asm



   1101	      37 38 39 61 62 63	64+
   1102	      65 66
   1103
   1104
   1105				     ;______________________
   1106				     ;	 ТЕСТ.12
   1107				     ;	 Тест клавиатуры
   1108				     ;______________________
   1109	E42D			     tst12:
   1110
   1111	E42D  B8 0040			     mov     ax,dat
   1112	E430  8E D8			     mov     ds,ax
   1113	E432  E8 0196			     call    kbd_reset	     ; Сброс клавиатуры
   1114	E435  B0 4D			     mov     al,4dh	     ; доступность клавиатуры
   1115	E437  E6 61			     out     port_b,al
   1116	E439  E3 27			     jcxz    f6		     ; нет -	печать ошибки
   1117	E43B  80 FB AA			     cmp     bl,0aah	     ; код сканирования 'AA' ?
   1118	E43E  75 22			     jne     f6		     ; нет -	печать ошибки
   1119
   1120				     ;	 Поиск "залипших" клавиш
   1121
   1122	E440  B0 CC			     mov     al,0cch	   ; сброс	клавиатуры, уст	       +
   1123				     синхронизации
   1124	E442  E6 61			     out     port_b,al
   1125	E444  B0 4C			     mov     al,4ch	   ; доступность клавиатуры
   1126	E446  E6 61			     out     port_b,al
   1127	E448  2B C9			     sub     cx,cx
   1128				     ;
   1129				     ;	     Ожидание прерывания клавиатуры
   1130				     ;
   1131	E44A			     f5:
   1132	E44A  E2 FE			     loop    f5		     ; задержка
   1133	E44C  E4 60			     in	     al,kbd_in	     ; получение кода		       +
   1134				     сканирования
   1135	E44E  3C 00			     cmp     al,0	     ; код сканирования равен 0 ?
   1136	E450  74 19			     je	     f7		     ; да - продолжение		       +
   1137				     тестирования
   1138	E452  8A E8			     mov     ch,al	     ; сохранить код		       +
   1139				     сканирования
   1140	E454  B1 04			     mov     cl,4
   1141	E456  D2 E8			     shr     al,cl
   1142	E458  E8 FFA7			     call    xlat_print_cod  ; преобразование и печать
   1143	E45B  8A C5			     mov     al,ch	     ; восстановить	код		       +
   1144				     сканирования
   1145	E45D  24 0F			     and     al,0fh	     ; выделить	младший байт
   1146	E45F  E8 FFA0			     call    xlat_print_cod  ; преобразование и печать
   1147	E462  BE E411r		     f6:     mov     si,offset f1    ; получить	адрес поля	       +
   1148				     сообщения	об
   1149								     ; ошибке
   1150	E465  B9 0004			     mov     cx,f1l	      ;	длина поля сообщения об    +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 24
1840v4.asm



   1151				     ошибке
   1152	E468  E8 018A			     call    p_msg	      ;	вывод сообщения об ошибке+
   1153				     на экран
   1154
   1155				     ;	 Установка таблицы векторов прерываний
   1156
   1157	E46B			     f7:
   1158	E46B  2B C0			     sub     ax,ax
   1159	E46D  8E C0			     mov     es,ax
   1160	E46F  B9 0030			     mov     cx,24*2	     ; получить	счетчик векторов
   1161	E472  0E			     push    cs
   1162	E473  1F			     pop     ds
   1163	E474  BE FEF3r			     mov     si,offset vector_table   ;	адрес таблицы	       +
   1164				     векторов
   1165	E477  BF 0020r			     mov     di,offset int_ptr
   1166	E47A  FC			     cld
   1167	E47B  F3> A5			     rep     movsw
   1168				     ;______________________
   1169				     ;	 ТЕСТ.14
   1170				     ;	 Осуществляет проверку НГМД
   1171				     ;______________________
   1172	E47D  B8 0040			     mov     ax,dat	     ; уст. регистр DS
   1173	E480  8E D8			     mov     ds,ax
   1174	E482  B0 FC			     mov     al,0fch  ;	доступность прерываний	       +
   1175				     таймера и клавиатуры
   1176	E484  E6 21			     out     inta01,al
   1177	E486  A0 0010r			     mov     al,byte ptr equip_flag  ; получить	состояние     +
   1178				     переклю-
   1179									     ; чателей
   1180	E489  A8 01			     test    al,01h	     ; первоначальная загрузка с+
   1181				     НГМД ?
   1182	E48B  75 03			     jnz     f10	     ; да - проверка управления    +
   1183				     НГМД
   1184	E48D  E9 00ED			     jmp     f23
   1185	E490			     f10:
   1186	E490  B0 BC			     mov     al,0bch	     ; доступность прерываний с  +
   1187				     НГМД,
   1188	E492  E6 21			     out     inta01,al	     ; клавиатуры и таймера
   1189	E494  B4 00			     mov     ah,0	     ; сброс контроллера НГМД
   1190	E496  CD 13			     int     13h	     ; переход к сбросу НГМД
   1191	E498  F6 C4 FF			     test    ah,0ffh	     ; состояние верно ?
   1192	E49B  75 20			     jnz     f13	     ; нет -	сбой устройства
   1193
   1194				     ;	 Включить мотор устройства 0
   1195
   1196	E49D  BA 03F2			     mov     dx,03f2h	     ; получить	адрес адаптера    +
   1197				     НГМД
   1198	E4A0  B0 1C			     mov     al,1ch	     ; включить	мотор
   1199	E4A2  EE			     out     dx,al
   1200	E4A3  2B C9			     sub     cx,cx
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 25
1840v4.asm



   1201
   1202				     ;	  Ожидание включения мотора НГМД
   1203
   1204	E4A5			     f11:
   1205	E4A5  E2 FE			     loop    f11
   1206	E4A7			     f12:			     ; ожидание	мотора 1
   1207	E4A7  E2 FE			     loop    f12
   1208	E4A9  33 D2			     xor     dx,dx
   1209	E4AB  B5 01			     mov     ch,1	     ; выбор первой дорожки
   1210	E4AD  88 16 003Er		     mov seek_status,dl
   1211	E4B1  E8 09B3			     call    seek	     ; переход к рекалибровке      +
   1212				     НГМД
   1213	E4B4  72 07			     jc	     f13	     ; перейти в программу ошибок
   1214	E4B6  B5 22			     mov     ch,34	     ; выбор 34 дорожки
   1215	E4B8  E8 09AC			     call    seek
   1216	E4BB  73 09			     jnc     f14	     ; выключить мотор
   1217
   1218				     ;	  Ошибки НГМД
   1219
   1220	E4BD			     f13:
   1221	E4BD  BE E418r			     mov     si,offset f3    ; получить	адрес поля	       +
   1222				     сообщения	об
   1223								     ; ошибке
   1224	E4C0  B9 0003			     mov     cx,f3l	     ; установить счетчик
   1225	E4C3  E8 012F			     call    p_msg	     ; идти	в программу ошибок
   1226
   1227				     ;	 Выключить мотор устройства 0
   1228
   1229	E4C6			     f14:
   1230	E4C6  B0 0C			     mov     al,0ch	     ; выключить мотор		       +
   1231				     устройства 0
   1232	E4C8  BA 03F2			     mov     dx,03f2h	     ; уст адрес порта		       +
   1233				     управления НГМД
   1234	E4CB  EE			     out     dx,al
   1235
   1236				     ;	 Установка печати и базового адреса
   1237				     ;	 адаптера стыка С2, если устройства		       +
   1238				     подключены
   1239
   1240	E4CC			     f15:
   1241	E4CC  83 FD 00			     cmp     bp,0000h
   1242	E4CF  74 18			     jz	     dal
   1243	E4D1  BA 0003			     mov     dx,3
   1244	E4D4  E8 00A9			     call    err_beep
   1245	E4D7  BE E6A6r			     mov     si,offset f39
   1246	E4DA  B9 0017				     mov     cx, 23
   1247	E4DD  E8 0115			     call    p_msg
   1248	E4E0			     err_wait:
   1249	E4E0  B4 00			     mov     ah,0
   1250	E4E2  CD 16			     int     16h
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 26
1840v4.asm



   1251	E4E4  80 FC 3B			     cmp     ah,3bh
   1252	E4E7  75 F7			     jnz     err_wait
   1253	E4E9  2A E4		     dal:    sub     ah,ah
   1254	E4EB  A0 0049r			     mov     al,crt_mode
   1255	E4EE  CD 10			     int     10h
   1256	E4F0  C7 06 001Ar 001Er			     mov     ds:buffer_head, offset kb_buffer ;	ERROR -	Must be	approx.+
   1257				     6 lines upper, before int 16h
   1258	E4F6  C7 06 001Cr 001Er			     mov     ds:buffer_tail, offset kb_buffer ;	ERROR -	Must be	approx.+
   1259				     6 lines upper, before int 16h
   1260	E4FC  BD E41Br			     mov     bp,offset f4    ; таблица PRT_SRC
   1261	E4FF  BE 0000			     mov     si,0
   1262	E502			     f16:
   1263	E502  2E: 8B 56	00		     mov     dx,cs:[bp]	     ; получить	базовый адрес      +
   1264				     печати
   1265	E506  B0 AA			     mov     al,0aah	     ; записать	данные в	порт А
   1266	E508  EE			     out     dx,al
   1267	E509  2A C0			     sub     al,al
   1268	E50B  EC			     in	     al,dx	     ; считывание порта А
   1269	E50C  3C AA			     cmp     al,0aah	     ; шаблон данных тот	же
   1270	E50E  75 06			     jne     f17	 ; нет - проверка следующего      +
   1271				     устройства печати
   1272	E510  89 94 0008r		     mov     word ptr printer_base[si],dx  ;да-уст	базовый	       +
   1273				     адрес
   1274	E514  46			     inc     si		     ; вычисление следующего       +
   1275				     слова
   1276	E515  46			     inc     si
   1277	E516			     f17:
   1278	E516  45			     inc     bp		     ; указать следующий базовый+
   1279				     адрес
   1280	E517  45			     inc     bp
   1281	E518  81 FD E41Dr		     cmp     bp,offset f4e   ; все возможные адреса	       +
   1282				     проверены	?
   1283	E51C  75 E4			     jne     f16	     ; нет, к проверке следующего+
   1284				     адреса печати
   1285	E51E  BB 0000			     mov     bx,0
   1286	E521  BA 03FF			     mov     dx,3ffh	     ; проверка	подключения	       +
   1287				     адаптера 1	стыка С2
   1288	E524  B0 8A			     mov     al,8ah
   1289	E526  EE			     out     dx,al
   1290	E527  BA 02FF			     mov     dx,2ffh
   1291	E52A  EE			     out     dx,al
   1292	E52B  BA 03FC			     mov     dx,3fch
   1293	E52E  B0 AA			     mov     al,0aah
   1294	E530  EE			     out     dx,al
   1295	E531  42			     inc     dx
   1296	E532  33 C0				     xor     ax, ax
   1297	E534  EE				     out     dx, al
   1298	E535  EC			     in	     al,dx
   1299	E536  3C AA			     cmp     al,0aah
   1300	E538  75 08			     jnz     f18
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 27
1840v4.asm



   1301	E53A  C7 87 0000r 03F8		     mov  word ptr rs232_base[bx],3f8h	; уст адрес адаптера 1
   1302	E540  43			     inc     bx
   1303	E541  43			     inc     bx
   1304	E542  BA 02FC		     f18:    mov     dx,2fch	     ; проверка	подключения	       +
   1305				     адаптера 2	стыка С2
   1306	E545  B0 AA			     mov     al,0aah
   1307	E547  EE			     out     dx,al
   1308	E548  42			     inc     dx
   1309	E549  33 C0				     xor     ax, ax
   1310	E54B  EE				     out     dx, al
   1311	E54C  EC			     in	     al,dx
   1312	E54D  3C AA			     cmp     al,0aah
   1313	E54F  75 08			     jnz     f19
   1314	E551  C7 87 0000r 02F8		     mov  word ptr rs232_base[bx],2f8h	 ; уст адрес адаптера 2
   1315	E557  43			     inc     bx
   1316	E558  43			     inc     bx
   1317
   1318
   1319
   1320				     ;_____Установка EQUIP_FLAG для	инди-
   1321				     ;	   кации номера печати
   1322
   1323	E559			     f19:
   1324	E559  E9 1411				     jmp     f19a
   1325
   1326	E55C			     f19b:
   1327	E55C  D2 C8			     ror     al,cl
   1328	E55E  0A C3			     or	     al,bl
   1329	E560  A2 0011r			     mov     byte ptr equip_flag+1,al
   1330	E563  BA 0201			     mov     dx,201h
   1331	E566  EC			     in	     al,dx
   1332	E567  A8 0F			     test    al,0fh
   1333	E569  75 05			     jnz     f20			; проверка адаптера    +
   1334				     игр
   1335	E56B  80 0E 0011r 10		     or	     byte ptr equip_flag+1,16
   1336	E570			     f20:
   1337	E570  E9 140D				     jmp     f20a
   1338	E573  90				     nop
   1339
   1340	E574			     f20b:
   1341	E574  BA 0001				     mov     dx, 1
   1342	E577  E8 0006			     call    err_beep	     ; переход к подпрограмме      +
   1343				     звукового	сигнала
   1344	E57A			     f21:
   1345	E57A  E9 017A				     jmp     boot_strap
   1346
   1347	E57D			     f23:
   1348	E57D  E9 FF4C			     jmp     f15
   1349
   1350				     ;	  Установка длительности звукового сигнала
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 28
1840v4.asm



   1351
   1352					     assume  cs:code,ds:data
   1353	E580			     err_beep proc   near
   1354	E580  9C			     pushf		     ; сохранить признаки
   1355	E581  FA			     cli		     ; сброс признака разрешения+
   1356				     прерывания
   1357	E582  1E			     push    ds		     ; сохранить DS
   1358	E583  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
   1359	E586  8E D8			     mov     ds,ax
   1360	E588  0A F6			     or	     dh,dh
   1361	E58A  74 0B			     jz	     g3
   1362	E58C			     g1:			      ;	длинный звуковой	сигнал
   1363	E58C  B3 06			     mov     bl,6	      ;	счетчик для звуковых	       +
   1364				     сигналов
   1365	E58E  E8 0018			     call    beep	      ;	выполнить звуковой сигнал
   1366	E591  E2 FE		     g2:     loop    g2		      ;	задержка между звуковыми +
   1367				     сигналами
   1368	E593  FE CE			     dec     dh
   1369	E595  75 F5			     jnz     g1
   1370	E597			     g3:			      ;	короткий звуковой сигнал
   1371	E597  B3 01			     mov     bl,1   ; счетчик для короткого		       +
   1372				     звукового	сигнала
   1373	E599  E8 000D			     call    beep	     ; выполнить звуковой сигнал
   1374	E59C  E2 FE		     g4:     loop    g4		     ; задержка	между звуковыми  +
   1375				     сигналами
   1376	E59E  FE CA			     dec     dl		     ;
   1377	E5A0  75 F5			     jnz     g3		     ; выполнить
   1378	E5A2  E2 FE		     g5:     loop    g5		     ; длинная задержка перед      +
   1379				     возвратом
   1380	E5A4  E2 FE		     g6:     loop    g6
   1381	E5A6  1F			     pop     ds		     ; восстановление DS
   1382	E5A7  9D			     popf		; восстановление			       +
   1383				     первоначальных признаков
   1384	E5A8  C3			     ret		     ; возврат к программе
   1385	E5A9			     err_beep	     endp
   1386
   1387				     ;	 Подпрограмма звукового сигнала
   1388
   1389	E5A9			     beep    proc    near
   1390	E5A9  B0 B6			     mov     al,10110110b    ; таймер 2,младший и	старший +
   1391				     счет-
   1392								     ; чики, двоичный счет
   1393	E5AB  E6 43			     out     timer+3,al	     ; записать	в регистр режима
   1394	E5AD  B8 045E			     mov     ax,45eh	     ; делитель
   1395	E5B0  E6 42			     out     timer+2,al	     ; записать	младший счетчик
   1396	E5B2  8A C4			     mov     al,ah
   1397	E5B4  E6 42			     out     timer+2,al	     ; записать	старший счетчик
   1398	E5B6  E4 61			     in	     al,port_b	     ; получить	текущее		       +
   1399				     состояние	порта
   1400	E5B8  8A E0			     mov     ah,al	     ; сохранить это состояние
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 29
1840v4.asm



   1401	E5BA  0C 03			     or	     al,03	     ; включить	звук
   1402	E5BC  E6 61			     out     port_b,al
   1403	E5BE  2B C9			     sub     cx,cx	     ; установить счетчик	       +
   1404				     ожидания
   1405	E5C0  E2 FE		     g7:     loop    g7		     ; задержка	перед		       +
   1406				     выключением
   1407	E5C2  FE CB			     dec     bl		     ; задержка	счетчика	       +
   1408				     закончена	?
   1409	E5C4  75 FA			     jnz     g7	     ; нет -	продолжение подачи	       +
   1410				     звукового	сигнала
   1411	E5C6  8A C4			     mov     al,ah	     ; восстановить	значение       +
   1412				     порта
   1413	E5C8  E6 61			     out     port_b,al
   1414	E5CA  C3			     ret		     ; возврат к программе
   1415	E5CB			     beep    endp
   1416				     ;_____________________
   1417				     ;	 Эта	процедура вызывает программный
   1418				     ;	 сброс клавиатуры
   1419				     ;_____________________
   1420	E5CB			     kbd_reset proc  near
   1421	E5CB  B0 0C			     mov     al,0ch	; установить низкий уровень     +
   1422				     синхронизации
   1423	E5CD  E6 61			     out     port_b,al	     ; записать	порт B
   1424	E5CF  B9 7530			     mov     cx,30000	     ; время длительности	       +
   1425				     низкого уровня
   1426	E5D2  E2 FE		     g8:     loop    g8
   1427	E5D4  B0 CC			     mov     al,0cch	     ; уст CLK
   1428	E5D6  E6 61			     out     port_b,al
   1429	E5D8			     sp_test:
   1430	E5D8  B0 4C			     mov     al,4ch	     ; уст высокий уровень	       +
   1431				     синхронизации
   1432	E5DA  E6 61			     out     port_b,al
   1433	E5DC  B0 FD			     mov     al,0fdh	     ; разрешить прерывания	       +
   1434				     клавиатуры
   1435	E5DE  E6 21			     out     inta01,al	     ; записать	регистр масок
   1436	E5E0  FB			     sti		     ; уст признака разрешения    +
   1437				     прерывания
   1438	E5E1  B4 00			     mov     ah,0
   1439	E5E3  2B C9			     sub     cx,cx	     ; уст счетчика ожидания	       +
   1440				     прерываний
   1441	E5E5  F6 C4 FF		     g9:     test    ah,0ffh	     ; прерывание клавиатуры       +
   1442				     возникло ?
   1443	E5E8  75 02			     jnz     g10   ;  да - считывание возвращенного   +
   1444				     кода сканирования
   1445	E5EA  E2 F9			     loop    g9		     ; нет -	цикл ожидания
   1446	E5EC  E4 60		     g10:    in	     al,port_a	 ; считать код сканирования      +
   1447				     клавиатуры
   1448	E5EE  8A D8			     mov     bl,al	     ; сохранить этот код
   1449	E5F0  B0 CC			     mov     al,0cch	     ; очистка клавиатуры
   1450	E5F2  E6 61			     out     port_b,al
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 30
1840v4.asm



   1451	E5F4  C3			     ret		     ; возврат к программе
   1452	E5F5			     kbd_reset	     endp
   1453				     ;_____________________
   1454				     ;	 Эта	программа выводит на экран дисплея
   1455				     ;	 сообщения об ошибках
   1456				     ;
   1457				     ;	   Необходимые условия:
   1458				     ;	 SI = адрес поля сообщения об ошибке
   1459				     ;	 CX = длина поля сообщения об ошибке
   1460				     ;	 Максимальный размер передаваемой
   1461				     ;	 информации -	36 знаков
   1462				     ;
   1463				     ;______________________
   1464	E5F5			     p_msg   proc    near
   1465	E5F5  B8 0040			     mov     ax,dat
   1466	E5F8  8E D8			     mov     ds,ax
   1467	E5FA  8B EE			     mov     bp,si
   1468	E5FC			     g12:
   1469	E5FC  2E: 8A 04			     mov     al,cs:[si]	     ; поместить знак в AL
   1470	E5FF  46			     inc     si		     ; указать следующий знак
   1471	E600  B7 00			     mov     bh,0	     ; установить страницу
   1472	E602  B4 0E			     mov     ah,14	     ; уст функцию записи знака
   1473	E604  CD 10			     int     10h	     ; и записать знак
   1474	E606  E2 F4			     loop    g12     ; продолжать до записи всего       +
   1475				     сообщения
   1476	E608  B8 0E0D			     mov     ax,0e0dh	; переместить курсор в начало  +
   1477				     строки
   1478	E60B  CD 10			     int     10h
   1479	E60D  B8 0E0A			     mov     ax,0e0ah  ; переместить	курсор на	       +
   1480				     следующую	строку
   1481	E610  CD 10			     int     10h
   1482	E612  C3			     ret
   1483	E613			     p_msg   endp
   1484
   1485
   1486	E613			     e190:
   1487	E613  1E				     push    ds
   1488	E614  B8 0010				     mov     ax, 16
   1489	E617  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
   1490	E61D  75 03				     jnz     e20a
   1491	E61F  E9 FDDD				     jmp     e22
   1492
   1493	E622			     e20a:
   1494	E622  B8 0010				     mov     ax, 16
   1495	E625  EB 25				     jmp     short prt_siz
   1496
   1497	E627			     e20b:
   1498	E627  8B 1E 0013r			     mov     bx, ds:memory_size
   1499	E62B  83 EB 10				     sub     bx, 16
   1500	E62E  B1 04				     mov     cl, 4
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 31
1840v4.asm



   1501	E630  D3 EB				     shr     bx, cl
   1502	E632  8B CB				     mov     cx, bx
   1503	E634  BB 0400				     mov     bx, 400h
   1504
   1505	E637			     e20c:
   1506	E637  8E DB				     mov     ds, bx
   1507
   1508	E639  8E C3				     mov     es, bx
   1509	E63B  81 C3 0400			     add     bx, 400h
   1510	E63F  52				     push    dx
   1511	E640  51				     push    cx
   1512	E641  53				     push    bx
   1513	E642  50				     push    ax
   1514	E643  E8 F9D4				     call    stgtst
   1515	E646  75 41				     jnz     e21a
   1516	E648  58				     pop     ax
   1517	E649  05 0010				     add     ax, 16
   1518
   1519	E64C			     prt_siz:
   1520	E64C  50				     push    ax
   1521	E64D  BB 000A				     mov     bx, 10
   1522	E650  B9 0003				     mov     cx, 3
   1523
   1524	E653			     decimal_loop:
   1525	E653  33 D2				     xor     dx, dx
   1526	E655  F7 F3				     div     bx
   1527	E657  80 CA 30				     or	     dl, 30h
   1528	E65A  52				     push    dx
   1529	E65B  E2 F6				     loop    decimal_loop
   1530	E65D  B9 0003				     mov     cx, 3
   1531
   1532	E660			     prt_dec_loop:
   1533	E660  58				     pop     ax
   1534	E661  E8 0034				     call    prt_hex
   1535	E664  E2 FA				     loop    prt_dec_loop
   1536	E666  B9 0007				     mov     cx, 7
   1537	E669  BE E69Fr				     mov     si, offset	e300 ; " Kb OK\r"
   1538
   1539	E66C			     kb_ok:
   1540	E66C  2E: 8A 04				     mov     al, cs:[si]
   1541	E66F  46				     inc     si
   1542	E670  E8 0025				     call    prt_hex
   1543	E673  E2 F7				     loop    kb_ok
   1544	E675  58				     pop     ax
   1545	E676  3D 0010				     cmp     ax, 16
   1546	E679  74 AC				     jz	     e20b
   1547	E67B  5B				     pop     bx
   1548	E67C  59				     pop     cx
   1549	E67D  5A				     pop     dx
   1550	E67E  E2 B7				     loop    e20c
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 32
1840v4.asm



   1551	E680  B0 0A				     mov     al, 10
   1552	E682  E8 0013				     call    prt_hex
   1553	E685  1F				     pop     ds
   1554
   1555	E686  E9 FD76				     jmp     e22
   1556
   1557	E689			     e21a:
   1558	E689  5B				     pop     bx
   1559	E68A  83 C4 06				     add     sp, 6
   1560	E68D  8C DA				     mov     dx, ds
   1561	E68F  1F				     pop     ds
   1562	E690  1E				     push    ds
   1563	E691  89 1E 0013r			     mov     ds:memory_size, bx
   1564	E695  E9 FD3C				     jmp     osh
   1565
   1566	E698			     prt_hex	     proc near
   1567	E698  B4 0E				     mov     ah, 14
   1568	E69A  B7 00				     mov     bh, 0
   1569	E69C  CD 10				     int     10h
   1570	E69E  C3				     retn
   1571	E69F			     prt_hex	     endp
   1572
   1573	E69F  20 4B 62 20 4F 4B	0D   e300	     db	' Kb OK',0Dh
   1574	E6A6  45 52 52 4F 52 20	28+  f39	     db	'ERROR (RESUME="F1" KEY)'
   1575	      52 45 53 55 4D 45	3D+
   1576	      22 46 31 22 20 4B	45+
   1577	      59 29
   1578
   1579				     ;	 Таблица	кодов русских больших букв	       +
   1580				     (заглавных)
   1581
   1582	E6BD			     rust2   label   byte
   1583	E6BD  1B 21 40 23 24 25	5E+	     db	     1bh,'!@#$',37,05eh,'&*()_+'
   1584	      26 2A 28 29 5F 2B
   1585
   1586
   1587	E6CA  08 00			     db	     08h,0
   1588	E6CC  B9 C6 C3 BA B5 BD	B3+	     db	     0b9h,0c6h,0c3h,0bah,0b5h,0bdh,0b3h,0c8h
   1589	      C8
   1590
   1591	E6D4  C9 B7 B6 CD 0D FF	C4+	     db	     0c9h,0b7h,0b6h,0cdh,0dh,-1,0c4h,0cbh
   1592	      CB
   1593
   1594	E6DC  B2 B0 BF C0 BE BB	B4+	     db	     0b2h,0b0h,0bfh,0c0h,0beh,0bbh,0b4h,27h
   1595	      27
   1596
   1597	E6E4  22 B1 CE 7C CF C7	C1+	     db	     '"',0b1h,0ceh,7ch,0cfh,0c7h,0c1h,0bch,0b8h
   1598	      BC B8
   1599
   1600	E6ED  C2 CC 3C 3E 3F C5	00+	     db	     0c2h,0cch,'<>?',0c5h,000,-1,' ',0cah
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 33
1840v4.asm



   1601	      FF 20 CA
   1602
   1603
   1604
   1605
   1606				     ;___int 19_____________
   1607				     ;	 Программа загрузки системы с НГМД
   1608				     ;
   1609				     ; Программа считывает содержимое дорожки 0     +
   1610				     сектора 1 в
   1611				     ; ячейку boot_locn (адрес 7C00,сегмент 0)
   1612				     ;	 Если НГМД отсутствует или произошла	       +
   1613				     аппаратная ошибка,
   1614				     ; устанавливается прерывание типа INT	18H,	       +
   1615				     которое вызывает
   1616				     ; выполнение программ тестирования и	       +
   1617				     инициализации
   1618				     ; системы
   1619				     ;
   1620				     ;_________________________
   1621					     assume  cs:code,ds:data
   1622	E6F7			     boot_strap	proc near
   1623
   1624	E6F7  FB			     sti		   ; установить признак	       +
   1625				     разрешения прерывания
   1626	E6F8  B8 0040			     mov     ax,dat	   ; установить адресацию
   1627	E6FB  8E D8			     mov     ds,ax
   1628	E6FD  A1 0010r			     mov     ax,equip_flag ; получить состояние	       +
   1629				     переключателей
   1630	E700  A8 01			     test    al,1	   ; опрос	первоначальной	       +
   1631				     загрузки
   1632	E702  74 23			     jz	     h3
   1633
   1634				     ;	 Система	загружается с НГМД
   1635				     ;	 CX содержит счетчик повторений
   1636
   1637	E704  B9 0004			     mov     cx,4	     ; установить счетчик	       +
   1638				     повторений
   1639	E707			     h1:			     ; первоначальная загрузка
   1640	E707  51			     push    cx		     ; сохранить счетчик	       +
   1641				     повторений
   1642	E708  B4 00			     mov     ah,0	     ; сброс НГМД
   1643	E70A  CD 13			     int     13h
   1644	E70C  72 14			     jc	     h2		     ; если	ошибка,повторить
   1645	E70E  B4 02			     mov     ah,2	     ; считать сектор 1
   1646	E710  BB 0000			     mov     bx,0	     ;
   1647	E713  8E C3			     mov     es,bx
   1648	E715  BB 7C00r			     mov     bx,offset boot_locn
   1649	E718  BA 0000			     mov     dx,0	     ;
   1650	E71B  B9 0001			     mov     cx,1	     ; сектор 1 ,	дорожка 0
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 34
1840v4.asm



   1651	E71E  B0 01			     mov     al,1	     ; считывание первого	       +
   1652				     сектора
   1653	E720  CD 13			     int     13h
   1654	E722  59		     h2:     pop     cx		     ; восстановить	счетчик	       +
   1655				     повторений
   1656	E723  73 05			     jnc     h4		     ; уст CF при	безуспешном	       +
   1657				     считывании
   1658	E725  E2 E0			     loop    h1		     ; цикл	повторения
   1659
   1660				     ;	 Загрузка с НГМД недоступна
   1661
   1662	E727			     h3:			     ; кассета
   1663	E727  E9 F985			     jmp     err01   ; отсутствует дискет загрузки
   1664
   1665				     ;	 Загрузка завершилась успешно
   1666
   1667	E72A			     h4:				     ;
   1668	E72A  EA 00007C00sr			     jmp far ptr boot_locn   ; db 0EAh,	00h, 7Ch, 00h, 00h   ;	       +
   1669				     (0000:7C00)   ; ###Gleb###
   1670
   1671	E72F			     boot_strap	     endp
   1672				     ;--------------------
   1673				     ;	 Эта	программа посылает байт в	контроллер   +
   1674				     адаптера НГМД
   1675				     ; после проверки корректности управления и    +
   1676				     готовности
   1677				     ; контроллера.
   1678				     ;	 Программа ожидает байт состояния		       +
   1679				     определенное время
   1680				     ; и проверяет готовность НГМД к работе.
   1681				     ;
   1682				     ;	 ВВОД   (AH) - выводимый байт
   1683				     ;
   1684				     ;	 ВЫВОД  CY=0 - успешно,
   1685				     ;		CY=1 - не успешно.Состояние
   1686				     ;		НГМД анализируется.
   1687				     ;-----------------------
   1688	E72F			     nec_output	proc near
   1689	E72F  52			     push    dx		     ; сохранить регистры
   1690	E730  51			     push    cx
   1691	E731  BA 03F4			     mov     dx,03f4h	     ; состояние порта
   1692	E734  33 C9			     xor     cx,cx	     ; счетчик времени вывода
   1693	E736			     j23:
   1694	E736  EC			     in	     al,dx	     ; получить	состояние
   1695	E737  A8 40			     test    al,040h	     ; проверка	управляющих бит
   1696	E739  74 0C			     jz	     j25	     ; биты	управления		       +
   1697				     нормальные
   1698	E73B  E2 F9			     loop    j23
   1699	E73D			     j24:
   1700	E73D  80 0E 0041r 80		     or	     diskette_status,time_out
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 35
1840v4.asm



   1701	E742  59			     pop     cx
   1702	E743  5A			     pop     dx	     ; установить код ошибки	и	       +
   1703				     восстановить регистры
   1704	E744  58			     pop     ax		     ; адрес возврата
   1705	E745  F9			     stc		     ;
   1706	E746  C3			     ret
   1707
   1708	E747			     j25:
   1709	E747  33 C9			     xor     cx,cx	     ; обнуление счетчика
   1710	E749			     j26:
   1711	E749  EC			     in	     al,dx	     ; получить	состояние
   1712	E74A  A8 80			     test    al,080h	     ; проверка	готовности
   1713	E74C  75 04			     jnz     j27	     ; да - идти на выход
   1714	E74E  E2 F9			     loop    j26	     ; повторить
   1715	E750  EB EB			     jmp     short j24	     ; ошибка состояния
   1716	E752			     j27:			     ; выход
   1717	E752  8A C4			     mov     al,ah	     ; получить	байт
   1718	E754  BA 03F5			     mov     dx,03f5h	     ; переслать байт данных	в     +
   1719				     порт
   1720	E757  EE			     out     dx,al
   1721	E758  59			     pop     cx		     ; восстановить	регистры
   1722	E759  5A			     pop     dx
   1723	E75A  C3			     ret		     ;
   1724	E75B			     nec_output	     endp
   1725
   1726				     ;___int 16_________________
   1727				     ;
   1728				     ;	 Программа поддержки клавиатуры
   1729				     ;
   1730				     ;	 Эта	программа считывает в регистр
   1731				     ; AX код сканирования клавиши и код
   1732				     ; ASCII из буфера клавиатуры.
   1733				     ;
   1734				     ;	 Программа выполняет три функции, код
   1735				     ; которых задается в регистре AH:
   1736				     ;
   1737				     ;	  AH=0 - считать	следующий символ
   1738				     ;		  из буфера.При выходе	код
   1739				     ;		  сканирования в AH,код
   1740				     ;		  ASCII	в AL.
   1741				     ;	 AH=1 -	установить ZF, если код
   1742				     ;		  ASCII	прочитан:
   1743				     ;
   1744				     ;		  ZF=0 - буфер заполнен,
   1745				     ;		  ZF=1 - буфер пустой.
   1746				     ;	 При	выходе в	AX помещен адрес вершины	       +
   1747				     буфера клавиатуры.
   1748				     ;	 AH=2 -	возврат текущего	состояния в регистр AL
   1749				     ;		   из	постоянно распределенной	области +
   1750				     памяти с
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 36
1840v4.asm



   1751				     ;		адресом 00417H.
   1752				     ;
   1753				     ;	 При	выполнении программ клавиатуры	       +
   1754				     используются флажки,
   1755				     ; которые устанавливаются в	постоянно	       +
   1756				     распределенной области
   1757				     ; памяти по адресам	00417H и 00418H и имеют значение:
   1758				     ;	 00417H
   1759				     ;	       0 - правое	переключение регистра;
   1760				     ;	       1 - левое переключение регистра;
   1761				     ;		  2 - УПР;
   1762				     ;	       3 - ДОП;
   1763				     ;	       4 - ФСД;
   1764				     ;	       5 - ЦИФ;
   1765				     ;	       6 - ФПБ;
   1766				     ;	       7 - ВСТ;
   1767				     ;	 00418H
   1768				     ;	       0 - состояние клавиши ЛАТ между нажатием+
   1769				     и	отжатием;
   1770				     ;	       1 - ЛАТ;
   1771				     ;	       2 - Р/Л;
   1772				     ;	       3 - пауза;
   1773				     ;	       4 - ФСД;
   1774				     ;	       5 - ЦИФ;
   1775				     ;	       6 - ФПБ;
   1776				     ;	       7 - ВСТ.
   1777				     ;
   1778				     ;	 Флажки, соответствующие разрядам 4-7	       +
   1779				     постоянно	распределенной
   1780				     ; области памяти с адресом 00417H,			       +
   1781				     устанавливаются по нажатию
   1782				     ; клавиш ВСТ, ФПБ, ЦИФ, ФСД и сохраняют свои      +
   1783				     значения до сле-
   1784				     ; дующего нажатия соответствующей клавиши.
   1785				     ; Одноименные флажки, соответствующие	       +
   1786				     разрядам 4-7 постоянно
   1787				     ; распределенной области памяти	с адресом      +
   1788				     00418H, и	флажки
   1789				     ; ДОП, УПР, левое переключение регистра,	       +
   1790				     правое переключение
   1791				     ; регистра, Р/Л устанавливаются по нажатию      +
   1792				     клавиш и сбрасываются
   1793				     ; по отжатию.
   1794				     ;
   1795				     ;------------------------------
   1796					     assume  cs:code,ds:data
   1797
   1798
   1799	E75B			     k4	     proc    near
   1800	E75B  83 C3 02			     add     bx,2
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 37
1840v4.asm



   1801	E75E  81 FB 003Er		     cmp  bx, offset kb_buffer_end	      ;	конец буфера	?
   1802	E762  75 03			     jne     k5			      ;	нет - продолжить
   1803	E764  BB 001Er			     mov     bx, offset	kb_buffer     ;	да - уст начала буфера
   1804	E767			     k5:
   1805	E767  C3			     ret
   1806	E768			     k4	     endp
   1807
   1808	E768			     error_beep	proc near
   1809	E768  50			     push    ax
   1810	E769  53			     push    bx
   1811	E76A  51			     push    cx
   1812	E76B  BB 00C0			     mov     bx,0c0h
   1813	E76E  E4 61			     in	     al,kb_ctl
   1814	E770  50			     push    ax
   1815	E771			     k65:
   1816	E771  24 FC			     and     al,0fch
   1817	E773  E6 61			     out     kb_ctl,al
   1818	E775  B9 0048			     mov     cx,48h
   1819	E778  E2 FE		     k66:    loop    k66
   1820	E77A  0C 02			     or	     al,2
   1821	E77C  E6 61			     out     kb_ctl,al
   1822	E77E  B9 0048			     mov     cx,48h
   1823	E781  E2 FE		     k67:    loop    k67
   1824	E783  4B			     dec     bx
   1825	E784  75 EB			     jnz     k65
   1826	E786  58			     pop     ax
   1827	E787  E6 61			     out     kb_ctl,al
   1828	E789  59			     pop     cx
   1829	E78A  5B			     pop     bx
   1830	E78B  58			     pop     ax
   1831	E78C  C3			     ret
   1832	E78D			     error_beep	     endp
   1833
   1834				     ;---
   1835
   1836	E78D			     k54:
   1837	E78D  3C 3B			     cmp     al,59
   1838	E78F  72 05			     jb	     k55
   1839	E791  B0 00			     mov     al,0
   1840	E793  EB 0F				     jmp     short k57
   1841	E795  90				     nop
   1842
   1843	E796  BB E8DCr		     k55:    mov     bx,offset k10
   1844	E799  F6 06 0018r 02		     test    kb_flag_1,lat
   1845	E79E  74 57			     jz	     k99
   1846
   1847				     ;---
   1848
   1849	E7A0			     k56:
   1850	E7A0  FE C8			     dec     al
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 38
1840v4.asm



   1851	E7A2  2E: D7			     xlat    cs:k11
   1852
   1853				     ;---
   1854
   1855	E7A4			     k57:
   1856	E7A4  3C FF			     cmp     al,-1
   1857	E7A6  74 2A			     je	     k59
   1858	E7A8  80 FC FF			     cmp     ah,-1
   1859	E7AB  74 25			     je	     k59
   1860				     ;---
   1861
   1862	E7AD			     k58:
   1863	E7AD  F6 06 0017r 40		     test    kb_flag,caps_state
   1864	E7B2  74 2B			     jz	     k61
   1865
   1866				     ;---
   1867	E7B4  F6 06 0018r 02		     test    kb_flag_1,lat
   1868	E7B9  75 03			     jnz     k88
   1869	E7BB  E9 1175			     jmp     k89
   1870	E7BE			     k88:
   1871	E7BE  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   1872	E7C3  74 10			     jz	     k60
   1873
   1874				     ;----------
   1875
   1876	E7C5  3C 41			     cmp     al,'A'
   1877	E7C7  72 16			     jb	     k61
   1878	E7C9  3C 5A			     cmp     al,'Z'
   1879	E7CB  77 12			     ja	     k61
   1880	E7CD  04 20			     add     al,'a'-'A'
   1881	E7CF  EB 0E				     jmp     short k61
   1882	E7D1  90				     nop
   1883
   1884	E7D2			     k59:
   1885	E7D2  E9 0316			     jmp     k26
   1886
   1887
   1888	E7D5			     k60:
   1889	E7D5  3C 61			     cmp     al,'a'
   1890	E7D7  72 06			     jb	     k61
   1891	E7D9  3C 7A			     cmp     al,'z'
   1892	E7DB  77 02			     ja	     k61
   1893	E7DD  2C 20			     sub     al,'a'-'A'
   1894
   1895	E7DF			     k61:
   1896	E7DF  8B 1E 001Cr		     mov     bx,buffer_tail
   1897	E7E3  8B F3			     mov     si,bx
   1898	E7E5  E8 FF73			     call   k4
   1899	E7E8  3B 1E 001Ar		     cmp     bx,buffer_head
   1900	E7EC  74 0E			     je	     k62
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 39
1840v4.asm



   1901	E7EE  89 04			     mov     word ptr [si],ax
   1902	E7F0  89 1E 001Cr		     mov     buffer_tail,bx
   1903	E7F4  E9 02F4			     jmp     k26
   1904	E7F7  BB F8CBr		     k99:    mov     bx,offset rust
   1905	E7FA  EB A4			     jmp k56
   1906
   1907				     ;---
   1908
   1909	E7FC			     k62:
   1910	E7FC  E8 FF69			     call    error_beep
   1911	E7FF  E9 02E9			     jmp     k26
   1912
   1913				     ;---
   1914
   1915	E802			     k63:
   1916	E802  2C 3B			     sub     al,59
   1917	E804			     k64:
   1918	E804  2E: D7			     xlat    cs:k9
   1919	E806  8A E0			     mov     ah,al
   1920	E808  B0 00			     mov     al,0
   1921	E80A  EB 98				     jmp     short k57
   1922	E80C  22*(00)				     db	34 dup(0)
   1923
   1924				     ;---
   1925
   1926	E82E			     keyboard_io proc	     far
   1927	E82E  FB			     sti		     ;
   1928	E82F  1E			     push    ds
   1929	E830  53			     push    bx
   1930	E831  BB 0040			     mov     bx,dat
   1931	E834  8E DB			     mov     ds,bx	     ; установить сегмент данных
   1932	E836  0A E4			     or	     ah,ah	     ; AH=0
   1933	E838  74 0B			     jz	     k1		  ; переход к считыванию	       +
   1934				     следующего символа
   1935	E83A  FE CC			     dec     ah		     ; AH=1
   1936	E83C  74 20			     jz	     k2		  ; переход к считыванию кода    +
   1937				     ASCII
   1938	E83E  FE CC			     dec     ah			  ; AH=2
   1939	E840  74 2D			     jz	     k3		  ; переход к получению байта    +
   1940				     состояния
   1941	E842  5B			     pop     bx			  ; восстановить регистр
   1942	E843  1F			     pop     ds
   1943	E844  CF			     iret
   1944
   1945				     ;	 Считывание кода сканирования	и кода ASCII из +
   1946				     буфера клавиатуры
   1947				     ;
   1948	E845			     k1:
   1949	E845  FB			     sti	     ; уст признака разрешения	       +
   1950				     прерывания
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 40
1840v4.asm



   1951	E846  90			     nop		     ; задержка
   1952	E847  FA			     cli	     ; сброс признака разрешения	       +
   1953				     прерывания
   1954	E848  8B 1E 001Ar		     mov     bx,buffer_head  ; уст вершину буфера по	       +
   1955				     чтению
   1956	E84C  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   1957				     буфера по записи
   1958	E850  74 F3			     jz	     k1
   1959	E852  8B 07			     mov     ax,word ptr [bx] ;	получить код			       +
   1960				     сканирования и код	ASCII
   1961	E854  E8 FF04			     call    k4
   1962	E857  89 1E 001Ar		     mov     buffer_head,bx  ; запомнить вершину буфера  +
   1963				     по чтению
   1964	E85B  5B			     pop     bx		     ; восстановить	регистр
   1965	E85C  1F			     pop     ds		     ; восстановить	сегмент
   1966	E85D  CF			     iret		     ; возврат к программе
   1967
   1968				     ;	 Считать	код ASCII
   1969
   1970	E85E			     k2:
   1971	E85E  FA			     cli	     ; Сброс признака разрешения	       +
   1972				     прерывания
   1973	E85F  8B 1E 001Ar		     mov     bx,buffer_head  ; получить	указатель	       +
   1974				     вершины буфера
   1975								     ; по чтению
   1976	E863  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   1977				     буфера по записи
   1978	E867  8B 07			     mov     ax,word ptr [bx]
   1979	E869  FB			     sti		     ; уст признак разрешения      +
   1980				     прерывания
   1981	E86A  5B			     pop     bx		     ; восстановить	регистр
   1982	E86B  1F			     pop     ds		     ; восстановить	сегмент
   1983	E86C  CA 0002			     ret     2
   1984
   1985				     ;	 Получение младшего байта	состояния	       +
   1986				     (флажков)
   1987
   1988	E86F			     k3:
   1989	E86F  A0 0017r			     mov     al,kb_flag	     ; получить	младший байт	       +
   1990				     состояния	    на
   1991	E872  5B			     pop     bx		     ; восстановить	регистр
   1992	E873  1F			     pop     ds		     ; восстановить	сегмент
   1993	E874  CF			     iret		     ; возврат к программе
   1994	E875			     keyboard_io     endp
   1995
   1996				     ;	 Таблица	кодов сканирования управляющих     +
   1997				     клавиш
   1998
   1999	E875			     k6	     label   byte
   2000	E875  52			     db	     ins_key
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 41
1840v4.asm



   2001	E876  56 45 46 38 1D		     db	     caps_key,num_key,scroll_key,alt_key,ctl_key
   2002	E87B  54 55			     db	     left_key,right_key
   2003	E87D  58			     db	     inv_key_l
   2004	E87E  5A 57 5B			     db	     inv_key_r,lat_key,rus_key
   2005	      =000C		     k6l     equ     0ch
   2006
   2007				     ;	 Таблица	масок нажатых управляющих клавиш
   2008
   2009	E881			     k7	     label   byte
   2010	E881  80			     db	     ins_shift
   2011	E882  40 20 10 08 04		     db	     caps_shift,num_shift,scroll_shift,alt_shift,ctl_shift
   2012	E887  02 01			     db	     left_shift,right_shift
   2013
   2014
   2015				     ;	 Таблица	кодов сканирования при нажатой      +
   2016				     клавише УПР для
   2017				     ; кодов сканирования клавиш	меньше 59
   2018
   2019	E889  1B FF 00 FF FF FF	1E+  k8	     db	     27,-1,0,-1,-1,-1,30,-1
   2020	      FF
   2021
   2022	E891  FF FF FF 1F FF 7F	FF+	     db	     -1,-1,-1,31,-1,127,-1,17
   2023	      11
   2024
   2025	E899  17 05 12 14 19 15	09+	     db	     23,5,18,20,25,21,9,15
   2026	      0F
   2027
   2028	E8A1  10 1B 1D 0A FF 01	13	     db	     16,27,29,10,-1,1,19
   2029
   2030	E8A8  04 06 07 08 0A 0B	0C+	     db	     4,6,7,8,10,11,12,-1,-1
   2031	      FF FF
   2032
   2033	E8B1  FF FF 1C 1A 18 03	16+	     db	     -1,-1,28,26,24,3,22,2
   2034	      02
   2035
   2036	E8B9  0E 0D FF FF FF FF	FF+	     db	     14,13,-1,-1,-1,-1,-1,-1
   2037	      FF
   2038
   2039	E8C1  20 FF			     db	     ' ',-1
   2040
   2041				     ;	 Таблица	кодов сканирования при нажатой      +
   2042				     клавише УПР для
   2043				     ; кодов сканирования клавиш	больше 59
   2044	E8C3			     k9	     label   byte
   2045	E8C3  5E 5F 60 61 62 63	64+	     db	     94,95,96,97,98,99,100,101
   2046	      65
   2047
   2048	E8CB  66 67 FF FF 77 FF	84+	     db	     102,103,-1,-1,119,-1,132,-1
   2049	      FF
   2050
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 42
1840v4.asm



   2051	E8D3  73 FF 74 FF 75 FF	76+	     db	     115,-1,116,-1,117,-1,118,-1
   2052	      FF
   2053
   2054	E8DB  FF			     db	     -1
   2055
   2056				     ;	 Таблица	кодов ASCII нижнего	регистра	       +
   2057				     клавиатуры
   2058
   2059	E8DC			     k10     label   byte
   2060	E8DC  1B 31 32 33 34 35	36+	     db	     27,'1234567890-='
   2061	      37 38 39 30 2D 3D
   2062
   2063
   2064	E8E9  08 09			     db	     08h,09h
   2065	E8EB  71 77 65 72 74 79	75+	     db	     'qwertyuiop[]',0dh,-1,'asdfghjkl;:',60h,7eh
   2066	      69 6F 70 5B 5D 0D	FF+
   2067	      61 73 64 66 67 68	6A+
   2068	      6B 6C 3B 3A 60 7E
   2069
   2070
   2071
   2072
   2073	E906  5C 7A 78 63 76 62	6E+	     db	     05ch,'zxcvbnm',',./{'
   2074	      6D 2C 2E 2F 7B
   2075
   2076	E912  2A FF 20 7D		     db	     '*',-1,' }'
   2077
   2078				     ;	 Таблица	кодов ASCII верхнего регистра	       +
   2079				     клавиатуры
   2080
   2081	E916			     k11     label   byte
   2082	E916  1B 21 40 23 24 25	5E+	     db	     27,'!@#$',37,05eh,'&*()_+'
   2083	      26 2A 28 29 5F 2B
   2084
   2085
   2086	E923  08 00			     db	     08h,0
   2087	E925  51 57 45 52 54 59	55+	     db	     'QWERTYUIOP',-1,-1,0dh,-1
   2088	      49 4F 50 FF FF 0D	FF
   2089
   2090
   2091	E933  41 53 44 46 47 48	4A+	     db	     'ASDFGHJKL'
   2092	      4B 4C
   2093
   2094	E93C  27 22 FF FF 7C		     db	     027h,'"',-1,-1,7ch
   2095	E941  5A 58 43 56 42 4E	4D	     db	     'ZXCVBNM'
   2096
   2097	E948  3C 3E 3F FF 00 FF	20+	     db	     '<>?',-1,0,-1,' ',-1
   2098	      FF
   2099
   2100
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 43
1840v4.asm



   2101				     ;	 Таблица	кодов сканирования клавиш Ф11 -	Ф20   +
   2102				     (на верхнем
   2103				     ; регистре	Ф1 - Ф10)
   2104
   2105	E950			     k12     label   byte
   2106	E950  54 55 56 57 58 59	5A	     db	     84,85,86,87,88,89,90
   2107
   2108	E957  5B 5C 5D			     db	     91,92,93
   2109
   2110				     ;	 Таблица	кодов сканирования одновременно   +
   2111				     нажатых клавиш
   2112				     ; ДОП и Ф1 - Ф10
   2113
   2114	E95A			     k13     label byte
   2115	E95A  68 69 6A 6B 6C		     db	     104,105,106,107,108
   2116	E95F  6D 6E 6F 70 71		     db	     109,110,111,112,113
   2117
   2118				     ;	 Таблица	кодов правого				       +
   2119				     пятнадцатиклавишного поля на верхнем
   2120				     ; регистре
   2121
   2122	E964			     k14     label   byte
   2123	E964  37 38 39 2D 34 35	36+	     db	     '789-456+1230.'
   2124	      2B 31 32 33 30 2E
   2125
   2126
   2127
   2128				     ;	 Таблица	кодов правого				       +
   2129				     пятнадцатиклавишного поля на нижнем
   2130				     ; регистре
   2131
   2132	E971			     k15     label byte
   2133	E971  47 48 49 FF 4B FF	4D	     db	     71,72,73,-1,75,-1,77
   2134
   2135	E978  FF 4F 50 51 52 53		     db	     -1,79,80,81,82,83
   2136
   2137	E97E  09*(00)				     db	9 dup(0)
   2138
   2139				     ;----INT 9--------------------------
   2140				     ;
   2141				     ;	  Программа обработки	прерывания		       +
   2142				     клавиатуры
   2143				     ;
   2144				     ; Программа считывает код сканирования	       +
   2145				     клавиши в регистр AL.
   2146				     ; Единичное состояние разряда 7 в коде	       +
   2147				     сканирования означает,
   2148				     ; что клавиша отжата.
   2149				     ;	 В результате выполнения программы в	       +
   2150				     регистре AX формируется
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 44
1840v4.asm



   2151				     ; слово, старший байт которого (AH) содержит      +
   2152				     код сканирования,
   2153				     ; а младший (AL) -	код ASCII. Эта информация	       +
   2154				     помещается в буфер
   2155				     ; клавиатуры. После	заполнения буфера	       +
   2156				     подается звуковой сигнал.
   2157				     ;
   2158				     ;-----------------------------------
   2159
   2160	E987			     kb_int proc far
   2161	E987  FB			     sti		; установка признака		       +
   2162				     разрешения прерывания
   2163	E988  50			     push    ax
   2164	E989  53			     push    bx
   2165	E98A  51			     push    cx
   2166	E98B  52			     push    dx
   2167	E98C  56			     push    si
   2168	E98D  57			     push    di
   2169	E98E  1E			     push    ds
   2170	E98F  06			     push    es
   2171	E990  FC			     cld		    ; установить признак	       +
   2172				     направления вперед
   2173	E991  B8 0040			     mov     ax,dat	    ; установить адресацию
   2174	E994  8E D8			     mov     ds,ax
   2175	E996  E4 60			     in	     al,kb_dat	    ; считать код сканирования
   2176	E998  50			     push    ax
   2177	E999  E4 61			     in	     al,kb_ctl	    ; считать значение порта 61
   2178	E99B  8A E0			     mov     ah,al	    ; сохранить считанное	       +
   2179				     значение
   2180	E99D  0C 80			     or	     al,80h	    ; установить бит 7 порта 61
   2181	E99F  E6 61			     out     kb_ctl,al	    ; для работы с клавиатурой
   2182	E9A1  86 E0			     xchg    ah,al	    ; восстановить значение	       +
   2183				     порта	61
   2184	E9A3  E6 61			     out     kb_ctl,al
   2185	E9A5  58			     pop     ax		    ; восстановить код		       +
   2186				     сканирования
   2187	E9A6  8A E0			     mov     ah,al	    ; и сохранить его в AH
   2188
   2189				     ;---
   2190
   2191	E9A8  3C FF			     cmp     al,0ffh  ;	сравнение с кодом заполнения  +
   2192				     буфера
   2193							      ;	клавиатуры
   2194	E9AA  75 03			     jnz     k16	     ; продолжить
   2195	E9AC  E9 FE4D			     jmp     k62     ; переход на звуковой сигнал по  +
   2196				     заполнению
   2197							     ; буфера клавиатуры
   2198
   2199	E9AF			     k16:
   2200	E9AF  24 7F			     and     al,07fh	     ; сброс бита отжатия клавиши
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 45
1840v4.asm



   2201	E9B1  0E			     push    cs
   2202	E9B2  07			     pop     es
   2203	E9B3  BF E875r			     mov     di,offset k6  ; установить адрес таблицы    +
   2204				     сканирования
   2205								   ; управляющих клавиш
   2206	E9B6  B9 000C			     mov     cx,k6l
   2207	E9B9  F2> AE			     repne scasb     ; сравнение полученного кода      +
   2208				     ска-
   2209							     ; нирования с содержимым таблицы
   2210	E9BB  8A C4			     mov     al,ah	     ; запомнить код		       +
   2211				     сканирования
   2212	E9BD  74 1A			     je	     k17	     ; переход по совпадению
   2213	E9BF  E9 010A			     jmp     k25	     ; переход по несовпадению
   2214	E9C2			     k406:
   2215	E9C2  F6 06 0018r 02		     test    kb_flag_1,lat
   2216	E9C7  75 7F			     jnz     k26a
   2217	E9C9  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2218	E9CE  B8 5CF1			     mov     ax,5cf1h
   2219	E9D1  74 03			     jz	     k407
   2220	E9D3  B8 5CF0			     mov     ax,5cf0h
   2221
   2222				     ;	 Получение маски нажатой управляющей	       +
   2223				     клавиши
   2224
   2225	E9D6			     k407:
   2226	E9D6  E9 FDCB			     jmp     k57
   2227
   2228	E9D9  81 EF E876r	     k17:    sub     di,offset k6+1
   2229	E9DD  83 FF 08			     cmp     di,8
   2230	E9E0  72 3B			     jb	     k300
   2231	E9E2  B4 06			     mov     ah,6
   2232	E9E4  83 FF 0A			     cmp     di,0ah
   2233	E9E7  72 39			     jb	     k301
   2234	E9E9  A8 80			     test    al,80h
   2235	E9EB  74 5B			     jz	     k26a
   2236	E9ED  80 26 0018r FC		     and     kb_flag_1,not lat+lat_shift
   2237	E9F2  83 FF 0B			     cmp     di,0bh
   2238	E9F5  74 17			     je	     k401
   2239	E9F7  F6 06 0018r 04		     test    kb_flag_1,inv_shift
   2240	E9FC  74 08			     jz	     k400
   2241	E9FE  80 0E 0018r 01		     or	     kb_flag_1,lat_shift
   2242	EA03  EB 43				     jmp     short k26a
   2243	EA05  90				     nop
   2244	EA06  80 0E 0018r 03	     k400:   or	     kb_flag_1,lat+lat_shift
   2245	EA0B  EB 3B				     jmp     short k26a
   2246	EA0D  90				     nop
   2247	EA0E  F6 06 0018r 04	     k401:   test    kb_flag_1,inv_shift
   2248	EA13  74 33			     jz	     k26a
   2249	EA15  80 0E 0018r 02		     or	     kb_flag_1,lat
   2250	EA1A  EB 2C				     jmp     short k26a
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 46
1840v4.asm



   2251	EA1C  90				     nop
   2252	EA1D  2E: 8A A5	E881r	     k300:   mov     ah,cs:k7[di]
   2253	EA22			     k301:
   2254	EA22  A8 80			     test    al,80h	     ; клавиша отжата ?
   2255	EA24  75 79			     jnz     k23     ; переход, если	клавиша отжата
   2256
   2257				     ;	 Управляющая	клавиша нажата
   2258
   2259	EA26  80 FC 10			     cmp     ah,scroll_shift ; нажата управляющая	       +
   2260				     клавиша с
   2261								     ;	запоминанием ?
   2262	EA29  73 20			     jae     k18	     ; переход, если	да
   2263
   2264				     ;---
   2265	EA2B  80 FC 06			     cmp     ah,6
   2266	EA2E  74 07			     je	     k302
   2267
   2268	EA30  08 26 0017r		     or	     kb_flag,ah	     ; установка масок		       +
   2269				     управляющих клавиш
   2270								     ; без запоминания
   2271	EA34  E9 00B4			     jmp     k26	     ; к выходу из прерывания
   2272	EA37  80 0E 0018r 06	     k302:   or	     kb_flag_1,inv_shift+lat
   2273	EA3C  F6 06 0018r 01		     test    kb_flag_1,lat_shift
   2274	EA41  74 05			     jz	     k26a
   2275	EA43  80 26 0018r FD		     and     kb_flag_1,not lat
   2276	EA48			     k26a:
   2277	EA48  E9 00A0			     jmp     k26
   2278
   2279				     ;	 Опрос нажатия клавиши с запоминанием
   2280
   2281	EA4B			     k18:
   2282	EA4B  F6 06 0017r 04		     test    kb_flag,ctl_shift	       ; опрос клавиши УПР
   2283	EA50  75 7A			     jnz     k25
   2284	EA52  3C 52			     cmp     al,ins_key		       ; опрос клавиши ВСТ
   2285	EA54  75 25			     jnz     k22
   2286	EA56  F6 06 0017r 08		     test    kb_flag,alt_shift	       ; опрос клавиши ДОП
   2287	EA5B  74 03			     jz	     k19
   2288	EA5D  EB 6D				     jmp     short k25
   2289	EA5F  90				     nop
   2290	EA60  F6 06 0017r 20	     k19:    test    kb_flag,num_state	; опрос клавиши ЦИФ
   2291	EA65  75 0D			     jnz     k21
   2292	EA67  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift ; опрос клавиш	       +
   2293				     левого
   2294								  ; и правого переключения	       +
   2295				     регистров
   2296	EA6C  74 0D			     jz	     k22
   2297
   2298	EA6E			     k20:
   2299	EA6E  B8 5230			     mov     ax,5230h
   2300	EA71  E9 FD30			     jmp     k57	   ; установка	кода нуля
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 47
1840v4.asm



   2301	EA74			     k21:
   2302	EA74  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2303	EA79  74 F3			     jz	     k20
   2304
   2305	EA7B			     k22:
   2306	EA7B  84 26 0018r		     test    ah,kb_flag_1
   2307	EA7F  75 6A			     jnz     k26
   2308	EA81  08 26 0018r		     or	     kb_flag_1,ah
   2309	EA85  30 26 0017r		     xor     kb_flag,ah
   2310	EA89  3C 52			     cmp     al,ins_key
   2311	EA8B  75 5E			     jne     k26
   2312	EA8D  B8 5200			     mov     ax,ins_key*256
   2313	EA90  E9 FD11			     jmp     k57
   2314
   2315	EA93			     k303:
   2316	EA93  80 26 0018r FB		     and     kb_flag_1,not inv_shift
   2317	EA98  80 36 0018r 02		     xor     kb_flag_1,lat
   2318	EA9D  EB 10			     jmp     short k304
   2319
   2320				     ;	 Управляющая	клавиша отжата
   2321
   2322	EA9F			     k23:
   2323
   2324	EA9F  80 FC 10			     cmp     ah,scroll_shift
   2325	EAA2  73 1F			     jae     k24
   2326	EAA4  F6 D4			     not     ah
   2327	EAA6  80 FC F9			     cmp     ah,0f9h
   2328	EAA9  74 E8			     je	     k303
   2329	EAAB  20 26 0017r		     and     kb_flag,ah
   2330	EAAF			     k304:
   2331	EAAF  3C B8			     cmp     al,alt_key+80h
   2332	EAB1  75 38			     jne     k26
   2333
   2334				     ;---
   2335
   2336	EAB3  A0 0019r			     mov     al,alt_input
   2337	EAB6  B4 00			     mov     ah,0
   2338	EAB8  88 26 0019r		     mov     alt_input,ah
   2339	EABC  3C 00			     cmp     al,0
   2340	EABE  74 2B			     je	     k26
   2341	EAC0  E9 FCEA			     jmp     k58
   2342
   2343	EAC3			     k24:
   2344	EAC3  F6 D4			     not     ah
   2345	EAC5  20 26 0018r		     and     kb_flag_1,ah
   2346	EAC9  EB 20				     jmp     short k26
   2347	EACB  90				     nop
   2348
   2349	EACC			     k25:
   2350	EACC  3C 80			     cmp     al,80h
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 48
1840v4.asm



   2351	EACE  73 1B			     jae     k26
   2352	EAD0  3C 59			     cmp     al,inf_key
   2353	EAD2  74 25			     je	     k307
   2354	EAD4  3C 5C			     cmp     al,92
   2355	EAD6  75 03			     jne     k406b
   2356	EAD8  E9 FEE7			     jmp     k406
   2357	EADB			     k406b:
   2358	EADB  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2359	EAE0  74 1D			     jz	     k28
   2360	EAE2  3C 45			     cmp     al,num_key
   2361	EAE4  74 05			     je	     k26
   2362	EAE6  80 26 0018r F7		     and     kb_flag_1,not hold_state
   2363
   2364	EAEB			     k26:
   2365	EAEB  FA			     cli
   2366	EAEC  B0 20			     mov     al,eoi
   2367	EAEE  E6 20			     out     020h,al
   2368	EAF0			     k27:
   2369	EAF0  07			     pop     es
   2370	EAF1  1F			     pop     ds
   2371	EAF2  5F			     pop     di
   2372	EAF3  5E			     pop     si
   2373	EAF4  5A			     pop     dx
   2374	EAF5  59			     pop     cx
   2375	EAF6  5B			     pop     bx
   2376	EAF7  58			     pop     ax
   2377	EAF8  CF			     iret
   2378
   2379	EAF9  B8 A000		     k307:   mov     ax,0a000h
   2380	EAFC  E9 FCA5			     jmp     k57
   2381
   2382
   2383				     ;---
   2384
   2385	EAFF			     k28:
   2386	EAFF  F6 06 0017r 08		     test    kb_flag,alt_shift
   2387	EB04  75 03			     jnz     k29
   2388	EB06  EB 6D				     jmp     short k38
   2389	EB08  90				     nop
   2390
   2391				     ;---
   2392
   2393	EB09			     k29:
   2394	EB09  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2395	EB0E  74 0F			     jz	     k31
   2396	EB10  3C 53			     cmp     al,del_key
   2397	EB12  75 0B			     jne     k31
   2398
   2399				     ;---
   2400
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 49
1840v4.asm



   2401	EB14  C7 06 0072r 1234		     mov     reset_flag,1234h
   2402	EB1A  EA			     db	     0eah		     ;	     db	     0eah,5bh,0e0h,00h,0f0h  ; +
   2403				     jmp far ptr start
   2404	EB1B  E05Br F000		     dw	     offset start, cod	     ;	     ###Gleb###
   2405
   2406				     ;---
   2407
   2408
   2409
   2410
   2411	EB1F			     k31:
   2412	EB1F  3C 39			     cmp     al,57
   2413	EB21  75 05			     jne     k32
   2414	EB23  B0 20			     mov     al,' '
   2415	EB25  E9 FC7C			     jmp     k57
   2416
   2417				     ;---
   2418
   2419	EB28			     k32:
   2420	EB28  BF F905r			     mov     di,offset k30
   2421	EB2B  B9 000A			     mov     cx,10
   2422	EB2E  F2> AE				     repne scasb
   2423	EB30  75 12			     jne     k33
   2424	EB32  81 EF F906r		     sub     di,offset k30+1
   2425	EB36  A0 0019r			     mov     al,alt_input
   2426	EB39  B4 0A			     mov     ah,10
   2427	EB3B  F6 E4			     mul     ah
   2428	EB3D  03 C7			     add     ax,di
   2429	EB3F  A2 0019r			     mov     alt_input,al
   2430	EB42  EB A7				     jmp     short k26
   2431
   2432				     ;---
   2433
   2434	EB44			     k33:
   2435	EB44  C6 06 0019r 00		     mov     alt_input,00h
   2436	EB49  B9 001A			     mov     cx,0026
   2437	EB4C  F2> AE				     repne scasb
   2438	EB4E  75 05			     jne     k34
   2439	EB50  B0 00			     mov     al,0
   2440	EB52  E9 FC4F			     jmp     k57
   2441
   2442				     ;---
   2443
   2444	EB55			     k34:
   2445	EB55  3C 02			     cmp     al,2
   2446	EB57  72 0C			     jb	     k35
   2447	EB59  3C 0E			     cmp     al,14
   2448	EB5B  73 08			     jae     k35
   2449	EB5D  80 C4 76			     add     ah,118
   2450	EB60  B0 00			     mov     al,0
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 50
1840v4.asm



   2451	EB62  E9 FC3F			     jmp     k57
   2452
   2453				     ;---
   2454
   2455	EB65			     k35:
   2456	EB65  3C 3B			     cmp     al,59
   2457	EB67  73 02			     jae     k37
   2458	EB69			     k36:
   2459	EB69  EB 80				     jmp     short k26
   2460	EB6B			     k37:
   2461	EB6B  3C 47			     cmp     al,71
   2462	EB6D  73 FA			     jae     k36
   2463	EB6F  BB E95Ar			     mov     bx,offset k13
   2464	EB72  E9 FC8D			     jmp     k63
   2465
   2466				     ;---
   2467
   2468	EB75			     k38:
   2469	EB75  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2470	EB7A  74 5B			     jz	     k44
   2471
   2472				     ;---
   2473				     ;---
   2474
   2475	EB7C  3C 46			     cmp     al,scroll_key
   2476	EB7E  75 18			     jne     k39
   2477	EB80  BB 001Er			     mov     bx,offset kb_buffer
   2478	EB83  89 1E 001Ar		     mov     buffer_head,bx
   2479	EB87  89 1E 001Cr		     mov     buffer_tail,bx
   2480	EB8B  C6 06 0071r 80		     mov     bios_break,80h
   2481	EB90  CD 1B			     int     1bh
   2482	EB92  B8 0000			     mov     ax,0
   2483	EB95  E9 FC0C			     jmp     k57
   2484
   2485	EB98			     k39:
   2486	EB98  3C 45			     cmp     al,num_key
   2487	EB9A  75 21			     jne     k41
   2488	EB9C  80 0E 0018r 08		     or	     kb_flag_1,hold_state
   2489	EBA1  B0 20			     mov     al,eoi
   2490	EBA3  E6 20			     out     020h,al
   2491
   2492				     ;---
   2493
   2494	EBA5  80 3E 0049r 07		     cmp     crt_mode,7
   2495	EBAA  74 07			     je	     k40
   2496	EBAC  BA 03D8			     mov     dx,03d8h
   2497	EBAF  A0 0065r			     mov     al,crt_mode_set
   2498	EBB2  EE			     out     dx,al
   2499	EBB3			     k40:
   2500	EBB3  F6 06 0018r 08		     test    kb_flag_1,hold_state
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 51
1840v4.asm



   2501	EBB8  75 F9			     jnz     k40
   2502	EBBA  E9 FF33			     jmp     k27
   2503	EBBD			     k41:
   2504
   2505				     ;---
   2506
   2507	EBBD  3C 37			     cmp     al,55
   2508	EBBF  75 06			     jne     k42
   2509	EBC1  B8 7200			     mov     ax,114*256
   2510	EBC4  E9 FBDD			     jmp     k57
   2511
   2512				     ;---
   2513
   2514	EBC7			     k42:
   2515	EBC7  BB E889r			     mov     bx,offset k8
   2516	EBCA  3C 3B			     cmp     al,59
   2517	EBCC  73 03			     jae     k43
   2518	EBCE  E9 FBCF			     jmp     k56
   2519	EBD1			     k43:
   2520	EBD1  BB E8C3r			     mov     bx,offset k9
   2521	EBD4  E9 FC2B			     jmp     k63
   2522
   2523				     ;---
   2524
   2525	EBD7			     k44:
   2526
   2527	EBD7  3C 47			     cmp     al,71
   2528	EBD9  73 3E			     jae     k48
   2529	EBDB  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2530	EBE0  74 0A			     jz	     k54a
   2531
   2532				     ;---
   2533
   2534	EBE2  3C 0F			     cmp     al,15
   2535	EBE4  75 09			     jne     k45
   2536	EBE6  B8 0F00			     mov     ax,15*256
   2537	EBE9  E9 FBB8			     jmp     k57
   2538
   2539	EBEC			     k54a:
   2540	EBEC  E9 FB9E			     jmp k54
   2541
   2542	EBEF			     k45:
   2543	EBEF  3C 37			     cmp     al,55
   2544	EBF1  75 09			     jne     k46
   2545
   2546				     ;---
   2547
   2548	EBF3  B0 20			     mov     al,eoi
   2549	EBF5  E6 20			     out     020h,al
   2550	EBF7  CD 05			     int     5h
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 52
1840v4.asm



   2551	EBF9  E9 FEF4			     jmp     k27
   2552
   2553	EBFC			     k46:
   2554	EBFC  3C 3B			     cmp     al,59
   2555	EBFE  72 06			     jb	     k47
   2556	EC00  BB E950r			     mov     bx,offset k12
   2557	EC03  E9 FBFC			     jmp     k63
   2558
   2559	EC06			     k47:
   2560	EC06  F6 06 0018r 02		     test    kb_flag_1,lat
   2561	EC0B  74 06			     jz	     k98
   2562	EC0D  BB E916r			     mov     bx,offset k11
   2563	EC10  E9 FB8D			     jmp      k56
   2564	EC13  BB E6BDr		     k98:    mov     bx,offset rust2
   2565	EC16  E9 FB87			     jmp     k56
   2566
   2567				     ;---
   2568
   2569	EC19			     k48:
   2570	EC19  F6 06 0017r 20		     test    kb_flag,num_state
   2571	EC1E  75 23			     jnz     k52
   2572	EC20  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2573	EC25  75 23			     jnz     k53
   2574
   2575				     ;---
   2576
   2577	EC27			     k49:
   2578
   2579	EC27  3C 4A			     cmp     al,74
   2580	EC29  74 0C			     je	     k50
   2581	EC2B  3C 4E			     cmp     al,78
   2582	EC2D  74 0E			     je	     k51
   2583	EC2F  2C 47			     sub     al,71
   2584	EC31  BB E971r			     mov     bx,offset k15
   2585	EC34  E9 FBCD			     jmp       k64
   2586
   2587	EC37  B8 4A2D		     k50:    mov     ax,74*256+'-'
   2588	EC3A  E9 FB67			     jmp      k57
   2589
   2590	EC3D  B8 4E2B		     k51:    mov     ax,78*256+'+'
   2591	EC40  E9 FB61			     jmp      k57
   2592
   2593				     ;---
   2594
   2595	EC43			     k52:
   2596	EC43  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2597	EC48  75 DD			     jnz     k49
   2598
   2599	EC4A			     k53:
   2600	EC4A  2C 46			     sub     al,70
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 53
1840v4.asm



   2601	EC4C  BB E964r			     mov     bx,offset k14
   2602	EC4F  E9 FB4E			     jmp      k56
   2603	EC52			     kb_int  endp
   2604
   2605	EC52  07*(00)				     db	7 dup(0)
   2606
   2607				     ;--- int 13H---------
   2608				     ;	 Программа обслуживания накопителя на	       +
   2609				     гибком магнитном
   2610				     ; диске выполняет шесть	функций,	код которых  +
   2611				     задается
   2612				     ; в регистре AH:
   2613				     ;	 AH=0 -	сбросить  НГМД;
   2614				     ;	 AH=1 -	считать байт	состояния НГМД. Состояние+
   2615				     соответствует
   2616				     ; последней выполняемой операции и		       +
   2617				     передается в регистр AL из
   2618				     ; постоянно распределенной области		       +
   2619				     оперативной памяти с адресом
   2620				     ; 00441H;
   2621				     ;	  AH=2H	- считать указанный сектор в память;
   2622				     ;	  AH=3H	- записать указанный сектор из	памяти;
   2623				     ;	  AH=4H	- верификация;
   2624				     ;	  AH=5H	- форматизация.
   2625				     ;	  Для выполнения функций записи,		       +
   2626				     считывания, верификации,
   2627				     ; форматизации	в регистрах задается		       +
   2628				     следующая	информация:
   2629				     ;	  DL - номер устройства (0-3, контролируемое      +
   2630				     значение);
   2631				     ;	  DH - номер головки (0-1, неконтролируемое	       +
   2632				     значение);
   2633				     ;	  CH - номер дорожки (0-39,	неконтролируемое       +
   2634				     значение);
   2635				     ;	  CL - номер сектора (1-8, неконтролируемое	       +
   2636				     значение);
   2637				     ;	  AL - количество секторов (1-8,			       +
   2638				     неконтролируемое значение).
   2639				     ;
   2640				     ;	  Для выполнения форматизации необходимо    +
   2641				     сформировать в
   2642				     ; памяти четырехбайтную таблицу	для каждого  +
   2643				     сектора, содержащую
   2644				     ; следующую информацию:
   2645				     ;	  номер дорожки;
   2646				     ;	  номер головки;
   2647				     ;	  номер сектора;
   2648				     ;	  количество байт	в секторе (00 -	128 байт, 01 - 256 +
   2649				     байт,
   2650				     ; 02 - 512	байт, 03 - 1024 байта).
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 54
1840v4.asm



   2651				     ;	  Адрес таблицы задается в	регистрах ES:BX.
   2652				     ;
   2653				     ;	  После выполнения программы в	регистре AH    +
   2654				     находится
   2655				     ; байт	состояния НГМД.
   2656				     ;
   2657				     ;	  Байт состояния НГМД имеет следующее	       +
   2658				     значение:
   2659				     ;	  80 - тайм-аут;
   2660				     ;	  40 - сбой	позиционирования;
   2661				     ;	  20 - сбой	контроллера;
   2662				     ;	  10 - ошибка кода циклического контроля при  +
   2663				     считывании;
   2664				     ;	  09 - переход адреса через сегмент (64К байт);
   2665				     ;	  08 - переполнение;
   2666				     ;	  04 - сектор не найден;
   2667				     ;	  03 - защита записи;
   2668				     ;	  02 - не обнаружен маркер идентификатора       +
   2669				     сектора;
   2670				     ;	  01 - команда отвергнута.
   2671				     ;	  При успешном завершении программы	       +
   2672				     признак CF=0,  в про-
   2673				     ; тивном случае - признак CF=1 (регистр AH	       +
   2674				     содержит код ошибки).
   2675				     ;	  Регистр AL содержит количество реально       +
   2676				     считанных	секторов.
   2677				     ;	  Адрес программы	обслуживания накопителя  +
   2678				     на гибком магнитном
   2679				     ; диске записывается в вектор 40H в процедуре   +
   2680				     сброса по включению
   2681				     ; питания.
   2682				     ;-------------------------
   2683					     assume  cs:code,ds:data,es:data
   2684	EC59			     diskette_io proc	     far
   2685	EC59  FB			     sti		     ; установить признак	       +
   2686				     прерывания
   2687	EC5A  53			     push    bx		     ; сохранить адрес
   2688	EC5B  51			     push    cx
   2689	EC5C  1E			     push    ds		; сохранить сегментное	       +
   2690				     значение регистра
   2691	EC5D  56			     push    si		; сохранить все регистры во      +
   2692				     время	операции
   2693	EC5E  57			     push    di
   2694	EC5F  55			     push    bp
   2695	EC60  52			     push    dx
   2696	EC61  8B EC			     mov     bp,sp	; установить указатель	       +
   2697				     вершины стека
   2698	EC63  BE 0040			     mov     si,dat
   2699	EC66  8E DE			     mov     ds,si	     ; установить область данных
   2700	EC68  E8 001C			     call    j1		     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 55
1840v4.asm



   2701	EC6B  BB 0004			     mov     bx,4	     ; получить	параметры	       +
   2702				     ожидания мотора
   2703	EC6E  E8 01E0			     call    get_parm
   2704	EC71  88 26 0040r		     mov     motor_count,ah  ; уст время отсчета	для	       +
   2705				     мотора
   2706	EC75  8A 26 0041r		     mov     ah,diskette_status	 ; получить состояние	       +
   2707				     операции
   2708	EC79  80 FC 01			     cmp     ah,1	     ; уст признак CF	для		       +
   2709				     индикации
   2710	EC7C  F5			     cmc		     ; успешной	операции
   2711	EC7D  5A			     pop     dx		     ; восстановить	все регистры
   2712	EC7E  5D			     pop     bp
   2713	EC7F  5F			     pop     di
   2714	EC80  5E			     pop     si
   2715	EC81  1F			     pop     ds
   2716	EC82  59			     pop     cx
   2717	EC83  5B			     pop     bx
   2718	EC84  CA 0002			     ret     2
   2719	EC87			     diskette_io     endp
   2720	EC87			     j1	     proc    near
   2721	EC87  8A F0			     mov     dh,al	     ; сохранить количество	       +
   2722				     секторов
   2723	EC89  80 26 003Fr 7F		     and     motor_status,07fh	 ; указать операцию	       +
   2724				     считывания
   2725	EC8E  0A E4			     or	     ah,ah	     ; AH=0
   2726	EC90  74 27			     jz	     disk_reset
   2727	EC92  FE CC			     dec     ah		     ; AH=1
   2728	EC94  74 74			     jz	     disk_status
   2729	EC96  C6 06 0041r 00		     mov     diskette_status,0	 ; сброс состояния
   2730	EC9B  80 FA 04			     cmp     dl,4	     ; проверка	количества	       +
   2731				     устройств
   2732	EC9E  73 13			     jae     j3		     ; переход по ошибке
   2733	ECA0  FE CC			     dec     ah		     ; AH=2
   2734	ECA2  74 6A			     jz	     disk_read
   2735	ECA4  FE CC			     dec     ah		     ; AH=3
   2736	ECA6  75 03			     jnz     j2
   2737	ECA8  E9 0096			     jmp     disk_write
   2738	ECAB			     j2:
   2739	ECAB  FE CC			     dec     ah		     ; AH=4
   2740	ECAD  74 68			     jz	     disk_verf
   2741	ECAF  FE CC			     dec     ah		     ; AH=5
   2742	ECB1  74 68			     jz	     disk_format
   2743	ECB3			     j3:
   2744	ECB3  C6 06 0041r 01		     mov     diskette_status,bad_cmd   ; неверная команда
   2745
   2746	ECB8  C3			     ret		     ; операция	не определена
   2747	ECB9			     j1	     endp
   2748
   2749				     ;	 Сбросить НГМД
   2750
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 56
1840v4.asm



   2751	ECB9			     disk_reset	proc near
   2752	ECB9  BA 03F2			     mov     dx,03f2h
   2753	ECBC  FA			     cli		     ; сброс признака разрешения+
   2754				     прерывания
   2755	ECBD  A0 003Fr			     mov     al,motor_status  ;	какой мотор включен
   2756	ECC0  B1 04			     mov     cl,4	     ; счетчик сдвига
   2757	ECC2  D2 E0			     sal     al,cl
   2758	ECC4  A8 20			     test    al,20h	     ; выбрать соответствующее   +
   2759				     устройство
   2760	ECC6  75 0C			     jnz     j5		     ; переход, если	включен	       +
   2761				     мотор	первого
   2762								     ; устройства
   2763	ECC8  A8 40			     test    al,40h
   2764	ECCA  75 06			     jnz     j4		     ; переход, если	включен	       +
   2765				     мотор	второго
   2766								     ; устройства
   2767	ECCC  A8 80			     test    al,80h
   2768	ECCE  74 06			     jz	     j6		     ; переход, если	включен	       +
   2769				     мотор	нулевого
   2770								     ; устройства
   2771	ECD0  FE C0			     inc     al
   2772	ECD2  FE C0		     j4:     inc     al
   2773	ECD4  FE C0		     j5:     inc     al
   2774	ECD6  0C 08		     j6:     or	     al,8	     ; включить	доступность	       +
   2775				     прерывания
   2776	ECD8  EE			     out     dx,al	     ; сброс адаптера
   2777	ECD9  C6 06 003Er 00		     mov     seek_status,0
   2778	ECDE  C6 06 0041r 00		     mov     diskette_status,0	; уст нормальное		       +
   2779				     состояние	НГМД
   2780	ECE3  0C 04			     or	     al,4	     ; выключить сброс
   2781	ECE5  EE			     out     dx,al
   2782	ECE6  FB			     sti		     ; установить бит разрешения+
   2783				     прерывания
   2784	ECE7  E8 0225			     call    chk_stat_2	     ; выполнить прерывание	       +
   2785				     после	сброса
   2786	ECEA  A0 0042r			     mov     al,nec_status
   2787	ECED  3C C0			     cmp     al,0c0h	; проверка готовности		       +
   2788				     устройства для передачи
   2789	ECEF  74 07			     jz	     j7		     ; устройство готово
   2790	ECF1  80 0E 0041r 20		     or	     diskette_status,bad_nec  ;	уст код ошибки
   2791	ECF6  EB 11			     jmp     short j8
   2792
   2793				     ;	 Послать	команду в контроллер
   2794
   2795	ECF8			     j7:
   2796	ECF8  B4 03			     mov     ah,03h	     ; установить команду
   2797	ECFA  E8 FA32			     call    nec_output	     ; передать	команду
   2798	ECFD  BB 0001			     mov     bx,1	     ; передача	первого байта      +
   2799				     параметров
   2800	ED00  E8 014E			     call    get_parm	     ; в контроллер
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 57
1840v4.asm



   2801	ED03  BB 0003			     mov     bx,3	     ; передача	второго байта      +
   2802				     параметров
   2803	ED06  E8 0148			     call    get_parm	     ; в контроллер
   2804	ED09			     j8:
   2805	ED09  C3			     ret		     ; возврат к прерванной	       +
   2806				     программе
   2807	ED0A			     disk_reset	     endp
   2808
   2809				     ;
   2810				     ; Считать байт состояния НГМД (AH=1)
   2811				     ;
   2812
   2813	ED0A			     disk_status proc near
   2814	ED0A  A0 0041r			     mov     al,diskette_status
   2815	ED0D  C3			     ret
   2816	ED0E			     disk_status     endp
   2817
   2818				     ;	 Считать	указанный сектор	в память	(AH=2)
   2819
   2820	ED0E			     disk_read proc near
   2821	ED0E  B0 46			     mov     al,046h	     ; установить команду
   2822	ED10			     j9:
   2823	ED10  E8 01B6			     call    dma_setup	     ; установить ПДП
   2824	ED13  B4 E6			     mov     ah,0e6h	 ; уст команду считывания	       +
   2825				     контроллера
   2826	ED15  EB 36			     jmp     short rw_opn    ; переход к выполнению	       +
   2827				     операции
   2828	ED17			     disk_read	     endp
   2829
   2830				     ;	 Верификация	(AH=4)
   2831
   2832	ED17			     disk_verf proc near
   2833	ED17  B0 42			     mov     al,042h	     ; установить команду
   2834	ED19  EB F5			     jmp     short j9
   2835	ED1B			     disk_verf	     endp
   2836
   2837				     ;	 Форматизация (AH=5)
   2838
   2839	ED1B			     disk_format proc near
   2840	ED1B  80 0E 003Fr 80		     or	     motor_status,80h  ; индикация операции	       +
   2841				     записи
   2842	ED20  B0 4A			     mov     al,04ah	       ; установить команду
   2843	ED22  E8 01A4			     call    dma_setup	       ; установить ПДП
   2844	ED25  B4 4D			     mov     ah,04dh	       ; установить команду
   2845	ED27  EB 24			     jmp     short rw_opn
   2846	ED29			     j10:
   2847	ED29  BB 0007			     mov     bx,7	       ; получить значение	       +
   2848				     сектора
   2849	ED2C  E8 0122			     call    get_parm
   2850	ED2F  BB 0009			     mov     bx,9	     ; получить	значение дорожки+
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 58
1840v4.asm



   2851				     на секторе
   2852	ED32  E8 011C			     call    get_parm
   2853	ED35  BB 000F			     mov     bx,15	     ; получить	значение длины    +
   2854				     интервала
   2855	ED38  E8 0116			     call    get_parm	     ; для контроллера
   2856	ED3B  BB 0011			     mov     bx,17	     ; получить	полный байт
   2857	ED3E  E9 00B8			     jmp     j16
   2858	ED41			     disk_format     endp
   2859
   2860				     ;	 Записать указанный сектор из памяти (AH=3)
   2861
   2862	ED41			     disk_write	proc near
   2863	ED41  80 0E 003Fr 80		     or	     motor_status,80h	     ; индикация операции     +
   2864				     записи
   2865	ED46  B0 4A			     mov     al,04ah		     ; уст код операции	       +
   2866				     записи
   2867	ED48  E8 017E			     call    dma_setup
   2868	ED4B  B4 C5			     mov     ah,0c5h		     ; команда записи на	НГМД
   2869	ED4D			     disk_write	     endp
   2870
   2871				     ;______________________
   2872				     ; rw_opn
   2873				     ;	 Программа выполнения операций
   2874				     ;	 считывания, записи, верификации
   2875				     ;----------------------
   2876	ED4D			     rw_opn  proc    near
   2877	ED4D  73 08			     jnc     j11	     ; проверка	ошибки ПДП
   2878	ED4F  C6 06 0041r 09		     mov     diskette_status,dma_boundary   ; установить ошибку
   2879	ED54  B0 00			     mov     al,0	     ;
   2880	ED56  C3			     ret		     ; возврат к основной	       +
   2881				     программе
   2882	ED57			     j11:
   2883	ED57  50			     push    ax		     ; сохранить команду
   2884
   2885				     ;	 Включить мотор и	выбрать устройство
   2886
   2887	ED58  51			     push    cx
   2888	ED59  8A CA			     mov     cl,dl	     ; уст номер устройства, как  +
   2889				     счетчик сдвига
   2890	ED5B  B0 01			     mov     al,1	     ; маска для определения	       +
   2891				     мотора устройства
   2892	ED5D  D2 E0			     sal     al,cl	     ; сдвиг
   2893	ED5F  FA			     cli		     ; сбросить	бит разрешения    +
   2894				     прерывания
   2895	ED60  C6 06 0040r FF		     mov     motor_count,0ffh  ; установить счетчик
   2896	ED65  84 06 003Fr		     test    al,motor_status
   2897	ED69  75 3F			     jnz     j14
   2898	ED6B  80 26 003Fr F0		     and     motor_status,0f0h	; выключить все биты	       +
   2899				     мотора
   2900	ED70  08 06 003Fr		     or	     motor_status,al	; включить мотор
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 59
1840v4.asm



   2901	ED74  FB			     sti		     ; установить бит разрешения+
   2902				     прерывания
   2903	ED75  B0 10			     mov     al,10h	     ; бит маски
   2904	ED77  D2 E0			     sal     al,cl	     ; уст бит маски	для		       +
   2905				     доступности мотора
   2906	ED79  0A C2			     or	     al,dl	     ; включить	бит выбора	       +
   2907				     устройства
   2908	ED7B  0C 0C			     or	     al,0ch	     ; нет сброса, доступность     +
   2909				     прерывания ПДП
   2910	ED7D  52			     push    dx
   2911	ED7E  BA 03F2			     mov     dx,03f2h	     ; установить адрес порта
   2912	ED81  EE			     out     dx,al
   2913	ED82  5A			     pop     dx		     ; восстановить	регистры
   2914	ED83  51			     push    cx		     ;задержка для включения       +
   2915				     мотора устройства
   2916	ED84  B9 0003			     mov     cx,3
   2917	ED87  51		     x2:     push    cx
   2918	ED88  B9 0000			     mov     cx,0
   2919	ED8B  E2 FE		     x1:     loop    x1
   2920	ED8D  59			     pop     cx
   2921	ED8E  E2 F7			     loop    x2
   2922	ED90  59			     pop     cx
   2923
   2924				     ;	 Ожидание включения мотора для операции      +
   2925				     записи
   2926
   2927	ED91  F6 06 003Fr 80		     test    motor_status,80h  ; запись ?
   2928	ED96  74 12			     jz	     j14     ; нет -	продолжать без ожидания
   2929	ED98  BB 0014			     mov     bx,20	     ; установить ожидание	       +
   2930				     включения	мотора
   2931	ED9B  E8 00B3			     call    get_parm	     ; получить	параметры
   2932	ED9E  0A E4			     or	     ah,ah
   2933	EDA0			     j12:
   2934	EDA0  74 08			     jz	     j14	     ; выход по окончании	       +
   2935				     времени ожидания
   2936	EDA2  2B C9			     sub     cx,cx	     ; установить счетчик
   2937	EDA4  E2 FE		     j13:    loop    j13	     ; ожидать требуемое время
   2938	EDA6  FE CC			     dec     ah		     ; уменьшеть значение	       +
   2939				     времени
   2940	EDA8  EB F6			     jmp     short j12	     ; повторить цикл
   2941
   2942	EDAA			     j14:
   2943	EDAA  FB			     sti		     ; уст признак разрешения      +
   2944				     прерывания
   2945	EDAB  59			     pop     cx
   2946
   2947				     ;	 Выполнить операцию поиска
   2948
   2949	EDAC  E8 00B8			     call    seek	     ; установить дорожку
   2950	EDAF  58			     pop     ax		     ; восстановить	команду
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 60
1840v4.asm



   2951	EDB0  8A FC			     mov     bh,ah	     ; сохранить команду в BH
   2952	EDB2  B6 00			     mov     dh,0	     ; уст 0	сектор в	случае	       +
   2953				     ошибки
   2954	EDB4  72 4A			     jc	     j17	     ; выход, если ошибка
   2955	EDB6  BE EE00r			     mov     si,offset j17
   2956
   2957	EDB9  56			     push    si
   2958
   2959				     ;	 Послать	параметры в контроллер
   2960
   2961	EDBA  E8 F972			     call    nec_output	     ; передача	команды
   2962	EDBD  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; уст номер головки
   2963	EDC0  D0 E4			     sal     ah,1	     ; сдвиг на 2
   2964	EDC2  D0 E4			     sal     ah,1
   2965	EDC4  80 E4 04			     and     ah,4	     ; выделить	бит
   2966	EDC7  0A E2			     or	     ah,dl	     ; операция	OR с номером	       +
   2967				     устройства
   2968	EDC9  E8 F963			     call    nec_output
   2969
   2970				     ;	 Проверка операции форматизации
   2971
   2972	EDCC  80 FF 4D			     cmp     bh,04dh	     ; форматизация	?
   2973	EDCF  75 03			     jne     j15    ; нет - продолжать			       +
   2974				     запись/считывание/верификацию
   2975	EDD1  E9 FF55			     jmp     j10
   2976
   2977	EDD4  8A E5		     j15:    mov     ah,ch	     ; номер цилиндра
   2978	EDD6  E8 F956			     call    nec_output
   2979	EDD9  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; номер головки
   2980	EDDC  E8 F950			     call    nec_output
   2981	EDDF  8A E1			     mov     ah,cl	     ; номер сектора
   2982	EDE1  E8 F94B			     call    nec_output
   2983	EDE4  BB 0007			     mov     bx,7
   2984	EDE7  E8 0067			     call    get_parm
   2985	EDEA  BB 0009			     mov     bx,9
   2986	EDED  E8 0061			     call    get_parm
   2987	EDF0  BB 000B			     mov     bx,11
   2988	EDF3  E8 005B			     call    get_parm
   2989	EDF6  BB 000D			     mov     bx,13
   2990	EDF9			     j16:
   2991	EDF9  E8 0055			     call    get_parm
   2992	EDFC  5E			     pop     si
   2993
   2994				     ;	 Операция запущена
   2995
   2996	EDFD  E8 0130			     call    wait_int	     ; ожидание	прерывания
   2997	EE00			     j17:
   2998	EE00  72 45			     jc	     j21	     ; поиск ошибки
   2999	EE02  E8 0166			     call    results	     ; получить	состояние	       +
   3000				     контроллера
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 61
1840v4.asm



   3001	EE05  72 3F			     jc	     j20	     ; поиск ошибки
   3002
   3003				     ;	 Проверка  состояния, полученного из	       +
   3004				     контроллера
   3005
   3006	EE07  FC			     cld		     ; установить направление     +
   3007				     коррекции
   3008	EE08  BE 0042r			     mov     si,offset nec_status
   3009	EE0B  AC			     lods    nec_status
   3010	EE0C  24 C0			     and     al,0c0h	     ; проверить нормальное	       +
   3011				     окончание
   3012	EE0E  74 3B			     jz	     j22
   3013	EE10  3C 40			     cmp     al,040h	     ; проверить неверное	       +
   3014				     окончание
   3015	EE12  75 29			     jnz     j18
   3016
   3017				     ;	 Обнаруженно	неверное окончание
   3018
   3019	EE14  AC			     lods    nec_status
   3020	EE15  D0 E0			     sal     al,1
   3021	EE17  B4 04			     mov     ah,record_not_fnd
   3022	EE19  72 24			     jc	     j19
   3023	EE1B  D0 E0			     sal     al,1
   3024	EE1D  D0 E0			     sal     al,1
   3025	EE1F  B4 10			     mov     ah,bad_crc
   3026	EE21  72 1C			     jc	     j19
   3027	EE23  D0 E0			     sal     al,1
   3028	EE25  B4 08			     mov     ah,bad_dma
   3029	EE27  72 16			     jc	     j19
   3030	EE29  D0 E0			     sal     al,1
   3031	EE2B  D0 E0			     sal     al,1
   3032	EE2D  B4 04			     mov     ah,record_not_fnd
   3033	EE2F  72 0E			     jc	     j19
   3034	EE31  D0 E0			     sal     al,1
   3035	EE33  B4 03			     mov     ah,write_protect  ; проверка защиты записи
   3036	EE35  72 08			     jc	     j19
   3037	EE37  D0 E0			     sal     al,1
   3038	EE39  B4 02			     mov     ah,bad_addr_mark
   3039	EE3B  72 02			     jc	     j19
   3040
   3041				     ;	 Контроллер вышел из строя
   3042
   3043	EE3D			     j18:
   3044	EE3D  B4 20			     mov     ah,bad_nec
   3045	EE3F			     j19:
   3046	EE3F  08 26 0041r		     or	     diskette_status,ah
   3047	EE43  E8 016A			     call    num_trans
   3048	EE46			     j20:
   3049	EE46  C3			     ret	     ; возврат к программе, вызвавшей+
   3050				     прерывание
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 62
1840v4.asm



   3051
   3052	EE47			     j21:
   3053	EE47  E8 0121			     call    results	     ; вызов результатов в буфер
   3054	EE4A  C3			     ret
   3055
   3056				     ;	 Операция была успешной
   3057
   3058	EE4B			     j22:
   3059	EE4B  E8 0162			     call    num_trans
   3060	EE4E  32 E4			     xor     ah,ah	     ; нет ошибок
   3061	EE50  C3			     ret
   3062	EE51			     rw_opn  endp
   3063				     ;------------------------
   3064				     ;get_parm
   3065				     ;
   3066				     ;	 ВХОД   BX - индекс байта,деленный
   3067				     ;		     на 2,который будет
   3068				     ;		     выбран,если младший
   3069				     ;		     бит BX установлен,то
   3070				     ;		     байт немедленно пере-
   3071				     ;		     дается контроллеру.
   3072				     ;
   3073				     ;	 ВЫХОД  AH	- байт из	блока.
   3074				     ;-------------------------
   3075	EE51			     get_parm proc   near
   3076	EE51  1E			     push    ds		     ; сохранить сегмент
   3077	EE52  2B C0			     sub     ax,ax	     ; AX=0
   3078	EE54  8E D8			     mov     ds,ax
   3079					     assume  ds:abs0
   3080	EE56  C5 36 0078r		     lds     si,disk_pointer
   3081	EE5A  D1 EB			     shr     bx,1	     ; делить BX на 2, уст флаг для  +
   3082				     выхода
   3083	EE5C  8A A0 0000r		     mov     ah,zb[si+bx]    ; получить	слово
   3084	EE60  1F			     pop     ds		     ; восстановить	сегмент
   3085					     assume  ds:data
   3086	EE61  72 01			     jc	     nec_op	      ;если	флаг установлен,	       +
   3087				     выход
   3088	EE63  C3			     ret	     ; возврат к программе, вызвавшей+
   3089				     прерывание
   3090	EE64  E9 F8C8		     nec_op: jmp     nec_output
   3091	EE67			     get_parm endp
   3092				     ;----------------------------
   3093				     ;	 Позиционирование
   3094				     ;
   3095				     ;	 Эта	программа позиционирует голов-
   3096				     ; ку обозначенного устройства на нуж-
   3097				     ; ную дорожку. Если устройство не
   3098				     ; было	выбрано до тех пор, пока не
   3099				     ; была	сброшена команда,то устройство
   3100				     ; будет рекалибровано.
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 63
1840v4.asm



   3101				     ;
   3102				     ;	 ВВОД
   3103				     ;	     (DL) - номер усройства для
   3104				     ;		    позиционирования,
   3105				     ;	     (CH) - номер дорожки.
   3106				     ;
   3107				     ;	 ВЫВОД
   3108				     ;	      CY=0 - успешно,
   3109				     ;	      CY=1 - сбой (состояние НГМД установить
   3110				     ;		     согласно  AX).
   3111				     ;----------------------------
   3112	EE67			     seek    proc    near
   3113	EE67  B0 01			     mov     al,1	     ; уст маску
   3114	EE69  51			     push    cx
   3115	EE6A  8A CA			     mov     cl,dl	     ; установить номер		       +
   3116				     устройства
   3117	EE6C  D2 C0			     rol     al,cl	     ; циклический сдвиг влево
   3118	EE6E  59			     pop     cx
   3119	EE6F  84 06 003Er		     test    al,seek_status
   3120	EE73  75 20			     jnz     j28
   3121	EE75  08 06 003Er		     or	     seek_status,al
   3122	EE79  B4 07			     mov     ah,07h
   3123	EE7B  E8 F8B1			     call    nec_output
   3124	EE7E  8A E2			     mov     ah,dl
   3125	EE80  E8 F8AC			     call    nec_output
   3126	EE83  E8 0089			     call    chk_stat_2	  ; получить и	обработать	       +
   3127				     прерывание
   3128	EE86  B4 07			     mov     ah,07h	     ; команда рекалибровки
   3129	EE88  E8 F8A4			     call    nec_output
   3130	EE8B  8A E2			     mov     ah,dl
   3131	EE8D  E8 F89F			     call    nec_output
   3132	EE90  E8 007C			     call    chk_stat_2
   3133	EE93  72 33			     jc	     j32	     ; сбой	позиционирования
   3134
   3135
   3136	EE95			     j28:
   3137	EE95  B4 0F			     mov     ah,0fh
   3138	EE97  E8 F895			     call    nec_output
   3139	EE9A  8A E2			     mov     ah,dl	     ; номер устройства
   3140	EE9C  E8 F890			     call    nec_output
   3141	EE9F  8A E5			     mov     ah,ch	     ; номер дорожки
   3142	EEA1  90				     nop
   3143	EEA2  F6 06 0010r 04		     test    byte ptr equip_flag,4
   3144	EEA7  75 02			     jnz     j300
   3145	EEA9  02 E4			     add     ah,ah	     ; удвоение	номера дорожки
   3146	EEAB			     j300:
   3147	EEAB  E8 F881			     call    nec_output
   3148	EEAE  E8 005E			     call    chk_stat_2	     ; получить	конечное	       +
   3149				     прерывание и
   3150								     ; считать состояние
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 64
1840v4.asm



   3151
   3152
   3153	EEB1  9C			     pushf		     ; сохранить значение	       +
   3154				     флажков
   3155	EEB2  BB 0012			     mov     bx,18
   3156	EEB5  E8 FF99			     call    get_parm
   3157	EEB8  51			     push    cx		     ; сохранить регистр
   3158	EEB9			     j29:
   3159	EEB9  B9 0226			     mov     cx,550	     ; организовать	цикл = 1 ms
   3160	EEBC  0A E4			     or	     ah,ah	     ; проверка	окончания	       +
   3161				     времени
   3162	EEBE  74 06			     jz	     j31
   3163	EEC0  E2 FE		     j30:    loop    j30	     ; задержка	1ms
   3164	EEC2  FE CC			     dec     ah		     ; вычитание из счетчика
   3165	EEC4  EB F3			     jmp     short j29	     ; возврат к началу цикла
   3166	EEC6			     j31:
   3167	EEC6  59			     pop     cx		     ; восстановить	состояние
   3168	EEC7  9D			     popf
   3169	EEC8			     j32:			     ; ошибка позиционирования
   3170	EEC8  C3			     ret	     ; возврат к программе, вызвавшей+
   3171				     прерывание
   3172	EEC9			     seek    endp
   3173				     ;-----------------------
   3174				     ; dma_setup
   3175				     ;	 Программа установки ПДП для операций	       +
   3176				     записи,считывания,верифи-
   3177				     ; кации.
   3178				     ;
   3179				     ;	 ВВОД
   3180				     ;
   3181				     ;	     (AL) - байт режима для ПДП,
   3182				     ;	     (ES:BX) - адрес считывания/записи		       +
   3183				     информации.
   3184				     ;
   3185				     ;------------------------
   3186	EEC9			     dma_setup proc  near
   3187	EEC9  51			     push    cx		     ; сохранить регистр
   3188	EECA  E6 0C			     out     dma+12,al
   3189	EECC  E6 0B			     out     dma+11,al	     ; вывод байта состояния
   3190	EECE  8C C0			     mov     ax,es	     ; получить	значение ES
   3191	EED0  B1 04			     mov     cl,4	     ; счетчик для сдвига
   3192	EED2  D3 C0			     rol ax,cl		     ; циклический сдвиг влево
   3193	EED4  8A E8			     mov     ch,al	     ;
   3194	EED6  24 F0			     and     al,0f0h	     ;
   3195	EED8  03 C3			     add     ax,bx
   3196	EEDA  73 02			     jnc     j33
   3197	EEDC  FE C5			     inc     ch		     ; перенос означает,	что	       +
   3198				     старшие 4 бита
   3199								     ; должны быть прибавлены
   3200	EEDE			     j33:
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 65
1840v4.asm



   3201	EEDE  50			     push    ax		     ; сохранить начальный адрес
   3202	EEDF  E6 04			     out     dma+4,al	     ; вывод младшей половины      +
   3203				     адреса
   3204	EEE1  8A C4			     mov     al,ah
   3205	EEE3  E6 04			     out     dma+4,al	     ; вывод старшей половины      +
   3206				     адреса
   3207	EEE5  8A C5			     mov     al,ch	     ; получить	4 старших бита
   3208	EEE7  24 0F			     and     al,0fh
   3209	EEE9  E6 81			     out     081h,al   ; вывод 4 старших бит на регистр+
   3210				     страниц
   3211
   3212				     ;	 Определение	счетчика
   3213
   3214	EEEB  8A E6			     mov     ah,dh	     ; номер сектора
   3215	EEED  2A C0			     sub     al,al	     ;
   3216	EEEF  D1 E8			     shr     ax,1	     ;
   3217	EEF1  50			     push    ax
   3218	EEF2  BB 0006			     mov     bx,6	     ; получить	параметры	       +
   3219				     байт/сектор
   3220	EEF5  E8 FF59			     call    get_parm
   3221	EEF8  8A CC			     mov     cl,ah	     ; счетчик сдига (0=128, 1=256 и т.д)
   3222	EEFA  58			     pop     ax
   3223	EEFB  D3 E0			     shl     ax,cl	     ; сдвиг
   3224	EEFD  48			     dec     ax		     ; -1
   3225	EEFE  50			     push    ax		     ; сохранить значение	       +
   3226				     счетчика
   3227	EEFF  E6 05			     out     dma+5,al	     ; вывести младший байт	       +
   3228				     счетчика
   3229	EF01  8A C4			     mov     al,ah
   3230	EF03  E6 05			     out     dma+5,al	     ; вывести старший байт	       +
   3231				     счетчика
   3232	EF05  59			     pop     cx		     ; восстановить	значение       +
   3233				     счетчика
   3234	EF06  58			     pop     ax		     ; восстановить	значение       +
   3235				     адреса
   3236	EF07  03 C1			     add     ax,cx	     ; проверка	заполнения 64K
   3237	EF09  59			     pop     cx		     ; восстановить	регистр
   3238	EF0A  B0 02			     mov     al,2	     ; режим для 8237
   3239	EF0C  E6 0A			     out     dma+10,al	     ; инициализация канала НГМД
   3240	EF0E  C3			     ret	     ; возврат к программе, вызвавшей+
   3241				     прерывание
   3242	EF0F			     dma_setup	     endp
   3243				     ;-----------------------
   3244				     ;chk_stat_2
   3245				     ;	 Эта	программа обрабатывает прерывания ,     +
   3246				     полученные после
   3247				     ; рекалибровки, позиционирования или сброса  +
   3248				     адаптера. Прерывание
   3249				     ; ожидается, принимается, обрабатывается	и     +
   3250				     результат	выдается программе,
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 66
1840v4.asm



   3251				     ; вызвавшей прерывание.
   3252				     ;
   3253				     ;	 ВЫВОД
   3254				     ;	       CY=0 - успешно,
   3255				     ;	       CY=1 - сбой (ошибка в	состоянии НГМД),
   3256				     ;--------------------------
   3257	EF0F			     chk_stat_2	proc near
   3258	EF0F  E8 001E			     call    wait_int	     ; ожидание	прерывания
   3259	EF12  72 14			     jc	     j34	     ; если	ошибка, то возврат
   3260	EF14  B4 08			     mov     ah,08h	     ; команда получения	       +
   3261				     состояния
   3262	EF16  E8 F816			     call    nec_output
   3263	EF19  E8 004F			     call    results	     ; считать результаты
   3264	EF1C  72 0A			     jc	     j34
   3265	EF1E  A0 0042r			     mov     al,nec_status   ; получить	первый байт	       +
   3266				     состояния
   3267	EF21  24 60			     and     al,060h	     ; выделить	биты
   3268	EF23  3C 60			     cmp     al,060h	     ; проверка
   3269	EF25  74 02			     jz	     j35	; если ошибка, то идти на метку
   3270	EF27  F8			     clc		     ; возврат
   3271	EF28			     j34:
   3272	EF28  C3			     ret	     ; возврат к программе, вызвавшей+
   3273				     прерывание
   3274	EF29			     j35:
   3275	EF29  80 0E 0041r 40		     or	     diskette_status,bad_seek
   3276	EF2E  F9			     stc		     ; ошибка в возвращенном	коде
   3277	EF2F  C3			     ret
   3278	EF30			     chk_stat_2	     endp
   3279				     ;---------------------------------
   3280				     ; wait_int
   3281				     ;	 Эта	программа ожидает прерывание,	которое +
   3282				     возникает	во время
   3283				     ; программы вывода.	Если устройство не	       +
   3284				     готово, ошибка	может быть
   3285				     ; возвращена.
   3286				     ;
   3287				     ;
   3288				     ;	 ВЫВОД
   3289				     ;		   CY=0	- успешно,
   3290				     ;		   CY=1	- сбой(состояние НГМД			       +
   3291				     устанавливается),
   3292				     ;-----------------------------------
   3293	EF30			     wait_int proc   near
   3294	EF30  FB			     sti		     ; установить признак	       +
   3295				     разрешения прерывания
   3296	EF31  53			     push    bx
   3297	EF32  51			     push    cx		     ; сохранить регистр
   3298	EF33  B3 02			     mov     bl,2	     ; количество циклов
   3299	EF35  33 C9			     xor     cx,cx	     ; длителность одного цикла  +
   3300				     ожидания
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 67
1840v4.asm



   3301	EF37			     j36:
   3302	EF37  F6 06 003Er 80		     test    seek_status,int_flag  ; опрос	наличия		       +
   3303				     прерывания
   3304	EF3C  75 0C			     jnz     j37
   3305	EF3E  E2 F7			     loop    j36	     ; возврат к началу цикла
   3306	EF40  FE CB			     dec     bl
   3307	EF42  75 F3			     jnz     j36
   3308	EF44  80 0E 0041r 80		     or	     diskette_status,time_out
   3309	EF49  F9			     stc		     ; возврат при ошибке
   3310	EF4A			     j37:
   3311	EF4A  9C			     pushf		     ; сохранить текущие	       +
   3312				     признаки
   3313	EF4B  80 26 003Er 7F		     and     seek_status,not int_flag
   3314	EF50  9D			     popf		     ; восстановить	признаки
   3315	EF51  59			     pop     cx
   3316	EF52  5B			     pop     bx		     ; восстановить	регистр
   3317	EF53  C3			     ret	     ; возврат к программе, вызвавшей+
   3318				     прерывание
   3319	EF54			     wait_int	     endp
   3320
   3321	EF54  03*(00)				     db	3 dup(0)
   3322
   3323				     ;---------------------------
   3324				     ;disk_int
   3325				     ;	 Эта	программа обрабатывает прерывания       +
   3326				     НГМД
   3327				     ;
   3328				     ;	 ВЫВОД  - признак прерывания			       +
   3329				     устанавливается в SEEK_STATUS.
   3330				     ;---------------------------
   3331	EF57			     disk_int proc   far
   3332	EF57  FB			     sti		     ; установить признак	       +
   3333				     разрешения прерывания
   3334	EF58  1E			     push    ds
   3335	EF59  50			     push    ax
   3336	EF5A  B8 0040			     mov     ax,dat
   3337	EF5D  8E D8			     mov     ds,ax
   3338	EF5F  80 0E 003Er 80		     or	     seek_status,int_flag
   3339	EF64  B0 20			     mov     al,20h	     ; установить конец		       +
   3340				     прерывания
   3341	EF66  E6 20			     out     20h,al	     ; послать конец прерывания  +
   3342				     в	порт
   3343	EF68  58			     pop     ax
   3344	EF69  1F			     pop     ds
   3345	EF6A  CF			     iret		     ; возврат из прерывания
   3346	EF6B			     disk_int	     endp
   3347				     ;----------------------------
   3348				     ;
   3349				     ;	 Эта	программа считывет все, что контроллер+
   3350				     адаптера НГМД указывает
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 68
1840v4.asm



   3351				     ; программе, следующей за прерыванием.
   3352				     ;
   3353				     ;
   3354				     ;	 ВЫВОД
   3355				     ;		CF=0 - успешно,
   3356				     ;		CF=1 - сбой
   3357				     ;----------------------------
   3358	EF6B			     results proc    near
   3359	EF6B  FC			     cld
   3360	EF6C  BF 0042r			     mov     di,offset nec_status
   3361	EF6F  51			     push    cx		     ; сохранить счетчик
   3362	EF70  52			     push    dx
   3363	EF71  53			     push    bx
   3364	EF72  B3 07			     mov     bl,7	     ; установить длину области  +
   3365				     состояния
   3366
   3367
   3368	EF74			     j38:
   3369	EF74  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3370	EF76  BA 03F4			     mov     dx,03f4h	     ; адрес порта
   3371	EF79			     j39:
   3372	EF79  EC			     in	     al,dx	     ; получить	состояние
   3373	EF7A  A8 80			     test    al,080h	     ; готово ?
   3374	EF7C  75 0C			     jnz     j40a
   3375	EF7E  E2 F9			     loop    j39
   3376	EF80  80 0E 0041r 80		     or	     diskette_status,time_out
   3377	EF85			     j40:			     ; ошибка
   3378	EF85  F9			     stc		     ; возврат по ошибке
   3379	EF86  5B			     pop     bx
   3380	EF87  5A			     pop     dx
   3381	EF88  59			     pop     cx
   3382	EF89  C3			     ret
   3383
   3384				     ;	 Проверка признака направления
   3385
   3386	EF8A  EC		     j40a:   in	     al,dx	     ; получить	регистр		       +
   3387				     состояния
   3388	EF8B  A8 40			     test    al,040h	     ; сбой	позиционирования
   3389	EF8D  75 07			     jnz     j42     ; если	все нормально, считать      +
   3390				     состояние
   3391	EF8F			     j41:
   3392	EF8F  80 0E 0041r 20		     or	     diskette_status,bad_nec
   3393	EF94  EB EF			     jmp     short j40	     ; ошибка
   3394
   3395				     ;	 Считывание состояния
   3396
   3397	EF96			     j42:
   3398	EF96  42			     inc     dx		     ; указать порт
   3399	EF97  EC			     in	     al,dx	     ; ввести данные
   3400	EF98  88 05			     mov    byte ptr [di],al  ;	сохранить байт
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 69
1840v4.asm



   3401	EF9A  47			     inc     di		     ; увеличить адрес
   3402	EF9B  B9 000A			     mov     cx,000ah	     ; счетчик
   3403	EF9E  E2 FE		     j43:    loop    j43
   3404	EFA0  4A			     dec     dx
   3405	EFA1  EC			     in	     al,dx	     ; получить	состояние
   3406	EFA2  A8 10			     test    al,010h
   3407	EFA4  74 06			     jz	     j44
   3408	EFA6  FE CB			     dec     bl		     ; -1 из количества циклов
   3409	EFA8  75 CA			     jnz     j38
   3410	EFAA  EB E3			     jmp     short j41	     ; сигнал неверен
   3411
   3412	EFAC			     j44:
   3413	EFAC  5B			     pop     bx		     ; восстановить	регистры
   3414	EFAD  5A			     pop     dx
   3415	EFAE  59			     pop     cx
   3416	EFAF  C3			     ret		     ; возврат из прерывания
   3417	EFB0			     results endp
   3418				     ;-----------------------------
   3419				     ; num_trans
   3420				     ;	 Эта	программа вычисляет количество	       +
   3421				     секторов, которое действительно
   3422				     ; было	записано или	считано с НГМД
   3423				     ;
   3424				     ;	 ВВОД
   3425				     ;	      (CH) - цилиндр,
   3426				     ;	      (CL) - сектор.
   3427				     ;
   3428				     ;	 ВЫВОД
   3429				     ;	      (AL) - количество действительно		       +
   3430				     переданных секторов.
   3431				     ;
   3432				     ;------------------------------
   3433	EFB0			     num_trans proc  near
   3434	EFB0  A0 0045r			     mov     al,nec_status+3  ;	получить последний	       +
   3435				     цилиндр
   3436	EFB3  3A C5			     cmp     al,ch	     ; сравнить	со стартовым
   3437	EFB5  A0 0047r			     mov     al,nec_status+5  ;	получить последний сектор
   3438	EFB8  74 0A			     jz	     j45
   3439	EFBA  BB 0008			     mov     bx,8
   3440	EFBD  E8 FE91			     call    get_parm	     ; получить	значение EOT
   3441	EFC0  8A C4			     mov     al,ah	     ; AH в AL
   3442	EFC2  FE C0			     inc     al		     ; EOT+1
   3443	EFC4  2A C1		     j45:    sub     al,cl	 ; вычисление	стартового	       +
   3444				     номера из конечного
   3445	EFC6  C3			     ret
   3446	EFC7			     num_trans endp
   3447
   3448				     ;-------------------------------
   3449				     ; disk_base
   3450				     ;	 Эта	программа устанавливает параметры,      +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 70
1840v4.asm



   3451				     требуемые	для операций
   3452				     ; НГМД.
   3453				     ;--------------------------------
   3454
   3455	EFC7			     disk_base label byte
   3456	EFC7  CF			     db	     11001111b	     ;
   3457	EFC8  02			     db	     2		     ;
   3458	EFC9  25			     db	     motor_wait	     ;
   3459	EFCA  02			     db	     2		     ;
   3460	EFCB  08			     db	     8		     ;
   3461	EFCC  2A			     db	     02ah	     ;
   3462	EFCD  FF			     db	     0ffh	     ;
   3463	EFCE  50			     db	     050h	     ;
   3464	EFCF  F6			     db	     0f6h	     ;
   3465	EFD0  19			     db	     25		     ;
   3466	EFD1  04			     db	     4		     ;
   3467				     ;--- int 17-------------------
   3468				     ;	 Программа связи с печатающим устройством
   3469				     ;
   3470				     ;	 Эта	программа выполняет три функции, код    +
   3471				     которых задается
   3472				     ; в регистре AH:
   3473				     ;	 AH=0 -	печать знака, заданного в регистре	AL.    +
   3474				     Если в
   3475				     ; результате выполнения функции	знак не	       +
   3476				     напечатается, то в регистре
   3477				     ; AL устанавливается "1" (тайм-аут);
   3478				     ;	 AH=1 -	инициализация порта печати. После	       +
   3479				     выполнения функции
   3480				     ; в регистре AH находится байт состояния	       +
   3481				     печатающего устройства;
   3482				     ;	 AH=2H - считывание байта состояния		       +
   3483				     печатающего устройства.
   3484				     ;	 В регистре DX	необходимо задать ноль.
   3485				     ;	 Значение разрядов байта состояния	       +
   3486				     печатающего устройства:
   3487				     ;	 0 - тайм-аут;
   3488				     ;	 3 - ошибка ввода-вывода;
   3489				     ;	 4 - выбран (SLCT);
   3490				     ;	 5 - конец	бумаги (PE);
   3491				     ;	 6 - подтверждение;
   3492				     ;	 7 - занято.
   3493				     ;------------------------------
   3494
   3495					     assume  cs:code,ds:data
   3496	EFD2			     printer_io	proc far
   3497	EFD2  FB			     sti		     ; установить признак	       +
   3498				     разрешения прерывания
   3499	EFD3  1E			     push    ds		     ; сохранить сегмент
   3500	EFD4  52			     push    dx
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 71
1840v4.asm



   3501	EFD5  56			     push    si
   3502	EFD6  51			     push    cx
   3503	EFD7  53			     push    bx
   3504	EFD8  BE 0040			     mov     si,dat
   3505	EFDB  8E DE			     mov     ds,si	     ; установить сегмент
   3506	EFDD  8B F2			     mov     si,dx
   3507	EFDF  D1 E6			     shl     si,1
   3508	EFE1  8B 94 0008r		     mov     dx,printer_base[si]  ; получить базовый адрес
   3509									  ; печатающего устройства
   3510	EFE5  0B D2			     or	     dx,dx		; печать подключена ?
   3511	EFE7  74 0C			     jz	     b1			; нет, возврат
   3512	EFE9  0A E4			     or	     ah,ah		; AH=0 ?
   3513	EFEB  74 0E			     jz	     b2			; да,	переход к печати	       +
   3514				     знака
   3515	EFED  FE CC			     dec     ah			; AH=1 ?
   3516	EFEF  74 42			     jz	     b8			; да,	переход к		       +
   3517				     инициализации
   3518	EFF1  FE CC			     dec     ah			; AH=2 ?
   3519	EFF3  74 2A			     jz	     b5		; да,	переход к считыванию	       +
   3520				     байта	состояния
   3521
   3522				     ;	  Выход из программы
   3523
   3524	EFF5			     b1:
   3525	EFF5  5B			     pop     bx		     ; восстановить	регистры
   3526	EFF6  59			     pop     cx
   3527	EFF7  5E			     pop     si
   3528	EFF8  5A			     pop     dx
   3529	EFF9  1F			     pop     ds
   3530	EFFA  CF			     iret
   3531
   3532				     ;	 Печать знака, заданного в	AL
   3533
   3534	EFFB			     b2:
   3535	EFFB  50			     push    ax
   3536	EFFC  B3 0A			     mov     bl,10	     ; количество циклов	       +
   3537				     ожидания
   3538	EFFE  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3539	F000  EE			     out     dx,al	     ; вывести символ в порт
   3540	F001  42			     inc     dx		     ; -1 из адреса порта
   3541	F002			     b3:			     ; ожидание	BUSY
   3542	F002  EC			     in	     al,dx	     ; получить	состояние
   3543	F003  8A E0			     mov     ah,al	     ; переслать состояние в	AH
   3544	F005  A8 80			     test    al,80h	     ; печать занята ?
   3545	F007  75 0E			     jnz     b4		     ; переход, если	да
   3546	F009  E2 F7			     loop    b3		     ; цикл	ожидания закончился ?
   3547	F00B  FE CB			     dec     bl		     ; да, -1	из количества циклов
   3548	F00D  75 F3			     jnz     b3		     ; время ожидания истекло ?
   3549	F00F  80 CC 01			     or	     ah,1	     ; да, уст бит "тайм-аут"
   3550	F012  80 E4 F9			     and     ah,0f9h	     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 72
1840v4.asm



   3551	F015  EB 14			     jmp     short b7
   3552	F017			     b4:			     ; OUT_STROBE
   3553	F017  B0 0D			     mov     al,0dh	     ; установить высокий строб
   3554	F019  42			     inc     dx	     ; стробирование битом 0 порта C    +
   3555				     для 8255
   3556	F01A  EE			     out     dx,al
   3557	F01B  B0 0C			     mov     al,0ch	     ; установить низкий строб
   3558	F01D  EE			     out     dx,al
   3559	F01E  58			     pop     ax		     ;
   3560
   3561				     ;	 Считывание байта состояния печатающего     +
   3562				     устройства
   3563
   3564	F01F			     b5:
   3565	F01F  50			     push    ax		     ; сохранить регистр
   3566	F020			     b6:
   3567	F020  8B 94 0008r		     mov     dx,printer_base[si]  ; получить адрес	печати
   3568	F024  42			     inc     dx
   3569	F025  EC			     in	     al,dx	     ; получить	состояние печати
   3570	F026  8A E0			     mov     ah,al
   3571	F028  80 E4 F8			     and     ah,0f8h
   3572	F02B			     b7:
   3573	F02B  5A			     pop     dx
   3574	F02C  8A C2			     mov     al,dl
   3575	F02E  80 F4 48			     xor     ah,48h
   3576	F031  EB C2			     jmp     short b1	     ; к выходу из программы
   3577
   3578				     ;	 Инициализация порта печатающего		       +
   3579				     устройства
   3580
   3581	F033			     b8:
   3582	F033  50			     push    ax
   3583	F034  83 C2 02			     add     dx,2	     ; указать порт
   3584	F037  B0 08			     mov     al,8
   3585	F039  EE			     out     dx,al
   3586	F03A  B8 03E8			     mov     ax,1000	      ;	время задержки
   3587	F03D			     b9:
   3588	F03D  48			     dec     ax		      ;	цикл задержки
   3589	F03E  75 FD			     jnz     b9
   3590	F040  B0 0C			     mov     al,0ch
   3591	F042  EE			     out     dx,al
   3592	F043  EB DB			     jmp     short b6	 ; переход к считыванию байта   +
   3593				     состояния
   3594	F045			     printer_io	     endp
   3595				     ;--- int 10------------------
   3596				     ;
   3597				     ;	 Программа обработки прерывания ЭЛИ
   3598				     ;
   3599				     ;	 Эта	программа обеспечивает выполнение       +
   3600				     функций обслуживания
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 73
1840v4.asm



   3601				     ; адаптера	ЭЛИ,	код которых задается в	       +
   3602				     регистре AH:
   3603				     ;
   3604				     ;	  AH=0	 - установить	режим работы	адаптера       +
   3605				     ЭЛИ. В	результате
   3606				     ; выполнения функции в регистре AL могут	       +
   3607				     устанавливаться следу-
   3608				     ; ющие	режимы:
   3609				     ;	  0 - 40х25, черно-белый, алфавитно-цифровой;
   3610				     ;	  1 - 40х25, цветной, алфавитно-цифровой;
   3611				     ;	  2 - 80х25, черно-белый, алфавитно-цифровой;
   3612				     ;	  3 - 80х25, цветной, алфавитно-цифровой;
   3613				     ;	  4 - 320х200,	цветной,	графический;
   3614				     ;	  5 - 320х200,	черно-белый, графический;
   3615				     ;	  6 - 640х200,	черно-белый, графический;
   3616				     ;	  7 - 80х25, черно-белый, алфавитно-цифровой.
   3617				     ;	  Режимы 0 - 6 используются для ЭМ адаптера     +
   3618				     ЭЛИ, режим	7
   3619				     ; используется	для монохромного	черно-белого+
   3620				     80х25 адаптера.
   3621				     ;
   3622				     ;	  AH=1	 - установить	размер курсора. Функция    +
   3623				     задает размер кур-
   3624				     ; сора	и управление	им.
   3625				     ;	 Разряды	0 - 4 регистра CL определяют конечную+
   3626				     границу курсора,
   3627				     ; разряды 0	- 4 регистра CH	- начальную границу    +
   3628				     курсора.
   3629				     ;	  Разряды 6 и 5	задают управление курсором:
   3630				     ;	  00 - курсор мерцает с частотой,	задаваемой   +
   3631				     аппаратурно;
   3632				     ;	  01 - курсор отсутствует.
   3633				     ;	  Аппаратурно всегда вызывается мерцание    +
   3634				     курсора с частотой,
   3635				     ; равной 1/16 частоты	кадровой развертки.
   3636				     ;
   3637				     ;	  AH=2	 - установить	текущую позицию курсора.  +
   3638				     Для выполнения
   3639				     ; функции необходимо задать	следующие	       +
   3640				     координаты курсора:
   3641				     ;	  BH - страница;
   3642				     ;	  DX - строка и колонка.
   3643				     ; При графическом режиме регистр BH=0.
   3644				     ;
   3645				     ;	  AH=3	 - считать текущее положение курсора.    +
   3646				     Функция вос-
   3647				     ; станавливает	текущее положение курсора.      +
   3648				     Перед	выполнением
   3649				     ; функции в регистре BH необходимо задать	       +
   3650				     страницу.
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 74
1840v4.asm



   3651				     ;	  После выполнения программы регистры	       +
   3652				     содержат следующую
   3653				     ; информацию:
   3654				     ;	  DH - строка;
   3655				     ;	  DL - колонка;
   3656				     ;	  CX - размер курсора и управление им.
   3657				     ;
   3658				     ;	  AH=5	- установить активную	страницу буфера  +
   3659				     адаптера.
   3660				     ; Функция используется только в			       +
   3661				     алфавитно-цифровом режиме.
   3662				     ; Для ее выполнения	необходимо в	регистре AL    +
   3663				     задать страницу:
   3664				     ;	  0-7 -	для режимов 0	и 1;
   3665				     ;	  0-3 -	для режимов 2	и 3.
   3666				     ;	  Значения режимов те же, что и для функции   +
   3667				     AH=0.
   3668				     ;
   3669				     ;	  AH=6	 - переместить блок символов вверх по    +
   3670				     экрану.
   3671				     ; Функция перемещает символы в пределах	       +
   3672				     заданной области вверх
   3673				     ; по экрану, заполняя нижние	строки пробелами+
   3674				     с	заданным атрибу-
   3675				     ; том.
   3676				     ;	  Для выполнения функции необходимо задать +
   3677				     следующие	пара-
   3678				     ; метры;
   3679				     ;	  AL - количество перемещаемых строк. Для	       +
   3680				     очистки блока AL=0;
   3681				     ;	  CX - координаты левого верхнего угла блока  +
   3682				     (строка,колонка);
   3683				     ;	  DX - координаты правого нижнего угла блока;
   3684				     ;	  BH - атрибут символа пробела.
   3685				     ;
   3686				     ;	  AH=7	 - переместить блок символов вниз.	       +
   3687				     Функция перемещает
   3688				     ; символы в пределах заданной области вниз по+
   3689				     экрану, заполняя
   3690				     ; верхние строки пробелами с заданным	       +
   3691				     атрибутом.
   3692				     ;	  Для выполнения функции необходимо задать +
   3693				     те же параметры,
   3694				     ; что и для	функции AH=6H.
   3695				     ;
   3696				     ;	  AH=8	 - считать атрибут и код символа,	       +
   3697				     находящегося в теку-
   3698				     ; щей позиции курсора. Функция считывает	       +
   3699				     атрибут и код символа
   3700				     ; и помещает их	в регистр AX (AL - код символа, AH - +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 75
1840v4.asm



   3701				     атрибут
   3702				     ; символа).
   3703				     ;	  Для выполнения функции необходимо в	       +
   3704				     регистре BH задать
   3705				     ; страницу	(только для алфавитно-цифрового     +
   3706				     режима).
   3707				     ;
   3708				     ;	  AH=9	 - записать атрибут и код символа в	       +
   3709				     текущую позицию
   3710				     ; курсора. Функция помещает код символа и	его +
   3711				     атрибут в текущую
   3712				     ; позицию курсора.
   3713				     ;	  Для выполнения функции необходимо задать +
   3714				     следующие	параметры:
   3715				     ;	  BH - отображаемая	страница (только для	       +
   3716				     алфавитно-цифрового
   3717				     ; режима;
   3718				     ;	  CX - количество записываемых символов;
   3719				     ;	  AL - код символа;
   3720				     ;	  BL - атрибут символа для				       +
   3721				     алфавитно-цифрового режима	или
   3722				     ; цвет	знака для графики. При записи точки       +
   3723				     разряд 7 регистра BL=1.    =1
   3724				     ;
   3725				     ;	  AH=10	- записать символ	в текущую позицию       +
   3726				     курсора. Атрибут
   3727				     ; не изменяется.
   3728				     ;	  Для выполнения функции необходимо задать +
   3729				     следующие	параметры:
   3730				     ;	  BH - отображаемая	страница (только для	       +
   3731				     алфавитно-цифрового
   3732				     ; режима);
   3733				     ;	  CX - количество повторений символа;
   3734				     ;	  AL - код записываемого символа.		       +
   3735				     ся
   3736				     ;									   -
   3737				     ;	  AH=11	- установить цветовую	палитру.		       +
   3738				     ь
   3739				     ;	  При выполнении функции используются два   +
   3740				     варианта.
   3741				     ;	  Для первого	варианта в регистре BH		       +
   3742				     задается ноль,а в регистре
   3743				     ; BL - значения пяти младших разрядов,		       +
   3744				     используемых для выбора
   3745				     ; цветовой	палитры (цвет заднего	плана для      +
   3746				     цветного графического
   3747				     ; режима 320х200 или цвет каймы	для цветного	       +
   3748				     графического режима
   3749				     ; 40х25).
   3750				     ;	  Для второго	варианта в регистре BH		       +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 76
1840v4.asm



   3751				     задается "1", а в регистре
   3752				     ; BL - номер цветовой	палитры (0 или 1).
   3753				     ;	  Палитра 0 состоит из зеленого	(1), красного  +
   3754				     (2) и желтого (3)
   3755				     ; цветов, палитра 1 -	из голубого (1),		       +
   3756				     фиолетового (2)	и белого	(3).
   3757				     ; При работе с видеомонитором цвета палитры   +
   3758				     заменяются соответству-
   3759				     ; ющими градациями цвета.
   3760				     ;	  Результатом выполнения функции является  +
   3761				     установка	цветовой       )
   3762				     ; палитры в регистре выбора цвета (3D9).
   3763				     ;
   3764				     ;	  AH=12	 - записать точку.	Функция определяет    +
   3765				     относительный
   3766				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3767				     должна быть записана
   3768				     ; точка с заданными	координатами.
   3769				     ;	  Для выполнения функции необходимо задать +
   3770				     следующие	параметры:    ,
   3771				     ;	  DX - строка;
   3772				     ;	  CX - колонка;
   3773				     ;	  AL - цвет	выводимой точки. Если	разряд 7	       +
   3774				     регистра AL уста-	 3)
   3775				     ; новлен в "1", то выполняется	операция XOR над    +
   3776				     значением	точки
   3777				     ; из буфера и значением точки из регистра	AL.
   3778				     ;
   3779				     ;	  AH=13	- считать точку. Функция определяет       +
   3780				     относительный
   3781				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3782				     должна быть считана
   3783				     ; точка с заданными	координатами.
   3784				     ;	  Перед выполнением программы в регистрах   +
   3785				     задаются те же	парамет-
   3786				     ; ры, что и для функции AH=12.
   3787				     ;	 После выполнения программы в регистре	AL     +
   3788				     находится	значение
   3789				     ; считанной точки.
   3790				     ;
   3791				     ;	  AH=14	- записать телетайп. Функция выводит     +
   3792				     символ в буфер
   3793				     ; ЭЛИ с одновременной установкой позиции	       +
   3794				     курсора и передвижением
   3795				     ; курсора на экране.
   3796				     ;	  После записи символа в последнюю позицию  +
   3797				     строки выполняется
   3798				     ; автоматический переход на	новую строку.       +
   3799				     Если страница экрана
   3800				     ; заполнена, выполняется перемещение на одну +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 77
1840v4.asm



   3801				     строку вверх. Осво-
   3802				     ; бодившаяся строка заполняется	значением     +
   3803				     атрибута символа для
   3804				     ; алфавитно-цифрового режима или нулями -	для +
   3805				     графики.
   3806				     ;	  После записи очередного символа курсор     +
   3807				     устанавливается
   3808				     ; в следующую позицию.
   3809				     ;	  Для выполнения программы необходимо	       +
   3810				     задать следующие параметры:
   3811				     ;	  AL - код выводимого символа;
   3812				     ;	  BL - цвет	переднего плана (для графического +
   3813				     режима).
   3814				     ;	  Программа обрабатывает следующие	       +
   3815				     служебные	символы:
   3816				     ;	  0BH -	сдвиг курсора на одну	позицию (без	       +
   3817				     очистки);
   3818				     ;	  0DH -	перемещение курсора в начало строки;
   3819				     ;	  0AH -	перемещение курсора на следующую	       +
   3820				     строку;
   3821				     ;	  07H -	звуковой сигнал.
   3822				     ;
   3823				     ;	  AH=15	- получить текущее состояние ЭЛИ.	       +
   3824				     Функция считывает
   3825				     ; текущее состояние ЭЛИ	из памяти и размещает+
   3826				     его в следующих
   3827				     ; регистрах;
   3828				     ;	  AH - количество колонок (40 или 80);
   3829				     ;	  AL - текущий режим (0-7).	Значения режимов	те   +
   3830				     же, что и для
   3831				     ; функции AH=0;
   3832				     ;	  BH - номер активной страницы.
   3833				     ;
   3834				     ;	 AH=17 - загрузить знакогенератор		       +
   3835				     пользователя. Функция дает
   3836				     ; возможность пользователю загружать	       +
   3837				     знакогенератор любым, необ-
   3838				     ; ходимым ему алфавитом.
   3839				     ;	  Для выполнения программы необходимо	       +
   3840				     задать следующие параметры:
   3841				     ;	  ES:BP	- адрес таблицы, сформированной	       +
   3842				     пользователем;
   3843				     ;	  CX	- количество передаваемых	символов;
   3844				     ;	  BL	- код символа, начиная	с которого	       +
   3845				     загружается таблица
   3846				     ; пользователя;
   3847				     ;	  BH - количество байт на знакоместо;
   3848				     ;	  DL - идентификатор таблицы пользователя;
   3849				     ;	  AL - режим:
   3850				     ;		       AL=0   -	 загрузить знакогенератор
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 78
1840v4.asm



   3851				     ;		       AL=1   -	 выдать идентификатор таблицы
   3852				     ;		       AL=3   -	 загрузить вторую половину      +
   3853				     знакогенератора:
   3854				     ;				 BL=0 -	загрузить вторую		       +
   3855				     половину знакогене
   3856				     ;				 ратора из ПЗУ кодовой таблицы+
   3857				     с	русским
   3858				     ;				 алфавитом,
   3859				     ;				 BL=1 -	загрузить вторую		       +
   3860				     половину знакогене
   3861				     ;				 ратора из ПЗУ стандартной       +
   3862				     кодовой таблицей
   3863				     ;				 ASCII (USA)
   3864				     ;	 На выходе:
   3865				     ;	     AH	  -  количество байт на	знакоместо
   3866				     ;	     AL	  -  идентификатор	таблицы пользователя
   3867				     ;	     CF=1   -	операция завершена успешно
   3868				     ;
   3869				     ;	  AH=19	- переслать цепочку символов. Функция   +
   3870				     позволяет	пере-
   3871				     ; сылать символы четырьмя способами,	тип	       +
   3872				     которых задается в
   3873				     ; регистре	AL:
   3874				     ;	  AL=0 - символ, символ, символ, ...
   3875				     ; В регистре BL задается атрибут, курсор не       +
   3876				     движется;
   3877				     ;	  AL=1 - символ, символ, символ, ...
   3878				     ; В регистре BL задается атрибут, курсор	       +
   3879				     движется;
   3880				     ;	  AL=2H	- символ,	атрибут,	символ, атрибут, ...
   3881				     ; Курсор не движется;
   3882				     ;	  AL=3H	- символ,	атрибут,	символ, атрибут, ...
   3883				     ; Курсор движется.
   3884				     ;	   Кроме того необходимо задать в регистрах:
   3885				     ;	  ES:BP	- начальный адрес	цепочки символов;
   3886				     ;	  CX	- количество символов;
   3887				     ;	  DH,DL	- строку и колонку для	начала записи;
   3888				     ;	  BH	- номер страницы.
   3889				     ;-----------------------------------------------------------
   3890
   3891					     assume cs:code,ds:data,es:video_ram
   3892
   3893	F045			     m1	     label   word	     ; таблица функций адаптера  +
   3894				     ЭЛИ
   3895	F045  F0FCr			     dw	     offset  set_mode
   3896	F047  F1CFr			     dw	     offset  set_ctype
   3897	F049  F1F0r			     dw	     offset  set_cpos
   3898	F04B  F21Ar			     dw	     offset  read_cursor
   3899	F04D  F7A9r			     dw	     offset  read_lpen
   3900	F04F  F230r			     dw	     offset  act_disp_page
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 79
1840v4.asm



   3901	F051  F29Cr			     dw	     offset  scroll_up
   3902	F053  F341r			     dw	     offset  scroll_down
   3903	F055  F37Dr			     dw	     offset  read_ac_current
   3904	F057  F3C3r			     dw	     offset  write_ac_current
   3905	F059  F3F6r			     dw	     offset  write_c_current
   3906	F05B  F254r			     dw	     offset  set_color
   3907	F05D  F438r			     dw	     offset  write_dot
   3908	F05F  F427r			     dw	     offset  read_dot
   3909	F061  F966r			     dw	     offset  write_tty2
   3910	F063  F27Ar			     dw	     offset  video_state
   3911	      =0020		     m1l     equ     20h
   3912
   3913	F065			     video_io proc   near
   3914	F065  FB			     sti		 ; установить	признак		       +
   3915				     разрешения прерывания
   3916	F066  FC			     cld
   3917	F067  06			     push    es
   3918	F068  1E			     push    ds
   3919	F069  52			     push    dx
   3920	F06A  51			     push    cx
   3921	F06B  53			     push    bx
   3922	F06C  56			     push    si
   3923	F06D  57			     push    di
   3924	F06E  50			     push    ax		     ; сохранить значение AX
   3925	F06F  8A C4			     mov     al,ah	     ; переслать AH в	AL
   3926	F071  32 E4			     xor     ah,ah	     ; обнулить	старший байт
   3927	F073  D1 E0			     sal     ax,1	     ; умножить	на 2
   3928	F075  8B F0			     mov     si,ax	     ; поместить в SI
   3929	F077  3D 0020			     cmp     ax,m1l	     ; проверка	длины таблицы      +
   3930				     функций
   3931	F07A  72 04			     jb	     m2		     ; адаптера	ЭЛИ
   3932	F07C  58			     pop     ax		     ; восстановить	AX
   3933	F07D  E9 0147			     jmp     video_return    ; выход, если AX неверно
   3934	F080  B8 0040		     m2:     mov     ax,dat
   3935	F083  8E D8			     mov     ds,ax
   3936	F085  B8 B800			     mov     ax,0b800h	     ; сегмент для цветного	       +
   3937				     адаптера
   3938	F088  8B 3E 0010r		     mov     di,equip_flag   ; получить	тип адаптера
   3939	F08C  81 E7 0030		     and     di,30h	     ; выделить	биты режима ;	db 81h,+
   3940				     0E7h,30h,00h  ; ###Gleb###
   3941	F090  83 FF 30			     cmp     di,30h	     ; есть	установка ч/б	       +
   3942				     адаптера ?
   3943	F093  75 03			     jne     m3
   3944	F095  B8 B000			     mov     ax,0b000h	     ; уст адреса буфера	для ч/б   +
   3945				     адаптера
   3946	F098  8E C0		     m3:     mov     es,ax
   3947	F09A  58			     pop     ax		     ; восстановить	значение
   3948	F09B  8A 26 0049r		     mov     ah,crt_mode     ; получить	текущий режим в AH
   3949	F09F  2E: FF A4	F045r		     jmp   cs:m1[si]
   3950	F0A4			     video_io	     endp
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 80
1840v4.asm



   3951				     ;-------------------------
   3952				     ; set mode
   3953
   3954				     ;	 Эта	программа устанавливает режим работы  +
   3955				     адаптера ЭЛИ
   3956				     ;
   3957				     ;	 ВХОД
   3958				     ;		(AL) - содержит	значение режима.
   3959				     ;
   3960				     ;--------------------------
   3961
   3962				     ;	 Таблицы	параметров ЭЛИ
   3963
   3964	F0A4			     video_parms label	     byte
   3965
   3966				     ;	 Таблица	инициализации
   3967
   3968	F0A4  38 28 2D 0A 1F 06	19	     db	     38h,28h,2dh,0ah,1fh,6,19h	 ; уст для 40х25
   3969
   3970	F0AB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3971	F0B0  00 00 00 00		     db	     0,0,0,0
   3972	      =0010		     m4	     equ     10h
   3973
   3974	F0B4  71 50 5A 0A 1F 06	19	     db	     71h,50h,5ah,0ah,1fh,6,19h	 ; уст для 80х25
   3975
   3976	F0BB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3977	F0C0  00 00 00 00		     db	     0,0,0,0
   3978
   3979	F0C4  38 28 2D 0A 7F 06	64	     db	     38h,28h,2dh,0ah,7fh,6,64h	 ; уст для графики
   3980
   3981	F0CB  70 02 01 06 07		     db	     70h,2,1,6,7
   3982	F0D0  00 00 00 00		     db	     0,0,0,0
   3983
   3984	F0D4  62 50 50 0F 19 06	19	     db	     62h,50h,50h,0fh,19h,6,19h	 ; уст для 80х25	ч/б	       +
   3985				     адаптера
   3986
   3987	F0DB  19 02 0D 0B 0C		     db	     19h,2,0dh,0bh,0ch
   3988	F0E0  00 00 00 00		     db	     0,0,0,0
   3989
   3990	F0E4			     m5	     label   word	     ; таблица для			       +
   3991				     восстановления длины
   3992	F0E4  0800			     dw	     2048
   3993	F0E6  1000			     dw	     4096
   3994	F0E8  4000			     dw	     16384
   3995	F0EA  4000			     dw	     16384
   3996
   3997				     ;	 Колонки
   3998	F0EC			     m6	     label   byte
   3999	F0EC  28 28 50 50 28 28	50+	     db	     40,40,80,80,40,40,80,80
   4000	      50
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 81
1840v4.asm



   4001
   4002
   4003				     ;--- c_reg_tab
   4004	F0F4			     m7	     label   byte	     ; таблица установки режима
   4005	F0F4  2C 28 2D 29 2A 2E	1E+	     db	     2ch,28h,2dh,29h,2ah,2eh,1eh,29h
   4006	      29
   4007
   4008
   4009	F0FC			     set_mode proc   near
   4010	F0FC  BA 03D4			     mov     dx,03d4h	     ; адрес цветного адаптера
   4011	F0FF  B3 00			     mov     bl,0     ;	уст значение	для цветного	       +
   4012				     адаптера
   4013	F101  83 FF 30			     cmp     di,30h	     ; установлен ч/б адаптер ?
   4014	F104  75 07			     jne     m8		     ; переход, если	указан	       +
   4015				     цветной
   4016	F106  B0 07			     mov     al,7	     ; указать ч/б режим
   4017	F108  BA 03B4			     mov     dx,03b4h	     ; адрес для ч/б адаптера
   4018	F10B  FE C3			     inc     bl		     ; установить режим для ч/б    +
   4019				     адаптера
   4020	F10D  8A E0		     m8:     mov     ah,al	     ; сохранить режим в	AH
   4021	F10F  A2 0049r			     mov     crt_mode,al
   4022	F112  89 16 0063r		     mov     addr_6845,dx    ; сохранить адрес		       +
   4023				     управляющего порта
   4024								     ; для активного дисплея
   4025	F116  1E			     push    ds
   4026	F117  50			     push    ax		     ; сохранить режим
   4027	F118  52			     push    dx		     ; сохранить значение порта  +
   4028				     вывода
   4029	F119  83 C2 04			     add     dx,4	     ; указать адрес регистра      +
   4030				     управления
   4031	F11C  8A C3			     mov     al,bl	     ; получить	режим для	       +
   4032				     адаптера
   4033	F11E  EE			     out     dx,al	     ; сброс экрана
   4034	F11F  5A			     pop     dx		     ; восстановить	DX
   4035	F120  2B C0			     sub     ax,ax
   4036	F122  8E D8			     mov     ds,ax	     ; установить адрес таблицы  +
   4037				     векторов
   4038					     assume  ds:abs0
   4039	F124  C5 1E 0074r		     lds     bx,parm_ptr ; получить значение		       +
   4040				     параметров адаптера ЭЛИ
   4041	F128  58			     pop     ax		     ; восстановить	AX
   4042					     assume  ds:code
   4043	F129  B9 0010			     mov     cx,m4	; установить длину таблицы       +
   4044				     параметров
   4045	F12C  80 FC 02			     cmp     ah,2	     ; определение режима
   4046	F12F  72 10			     jc	     m9		     ; режим 0 или 1 ?
   4047	F131  03 D9			     add     bx,cx	     ; уст начало таблицы	       +
   4048				     параметров
   4049	F133  80 FC 04			     cmp     ah,4
   4050	F136  72 09			     jc	     m9		     ; режим 2 или 3
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 82
1840v4.asm



   4051	F138  03 D9			     add     bx,cx	     ; начало таблицы для графики
   4052	F13A  80 FC 07			     cmp     ah,7
   4053	F13D  72 02			     jc	     m9		     ; режимы 4, 5 или	6 ?
   4054	F13F  03 D9			     add     bx,cx	     ; уст начало таблицы для ч/б +
   4055				     адаптера
   4056
   4057				     ;	 BX указывает на строку таблицы			       +
   4058				     инициализации
   4059
   4060	F141			     m9:			     ; OUT_INIT
   4061	F141  50			     push    ax		     ; сохранить режим в	AH
   4062	F142  32 E4			     xor     ah,ah	     ;
   4063
   4064				     ;	 Цикл таблицы, устанавливающий адреса	       +
   4065				     регистров	и выводящий значения
   4066				     ; из таблицы
   4067
   4068	F144			     m10:
   4069	F144  8A C4			     mov     al,ah	     ;
   4070	F146  EE			     out     dx,al
   4071	F147  42			     inc     dx		     ; указать адрес порта
   4072	F148  FE C4			     inc     ah		     ;
   4073	F14A  8A 07			     mov     al,byte ptr [bx]	; получить значение	       +
   4074				     таблицы
   4075	F14C  EE			     out     dx,al	     ; послать строку из	таблицы +
   4076				     в	порт
   4077	F14D  43			     inc     bx		     ; +1 к адресу таблицы
   4078	F14E  4A			     dec     dx		     ; -1 из адреса порта
   4079	F14F  E2 F3			     loop    m10	     ; передана	вся таблица ?
   4080	F151  58			     pop     ax		     ; вернуть режимы
   4081	F152  1F			     pop     ds		     ; вернуть сегмент
   4082					     assume  ds:data
   4083
   4084				     ;	 Инициализация буфера дисплея
   4085
   4086	F153  33 FF			     xor     di,di	     ; DI=0
   4087	F155  89 3E 004Er		     mov     crt_start,di    ; сохранить начальный адрес
   4088	F159  C6 06 0062r 00		     mov     active_page,0   ; установить активную	       +
   4089				     страницу
   4090	F15E  B9 2000			     mov     cx,8192	     ; количество слов в	цветном +
   4091				     адаптере
   4092	F161  80 FC 04			     cmp     ah,4	     ; опрос графики
   4093	F164  72 0C			     jc	     m12	     ; нет инициализации графики
   4094	F166  80 FC 07			     cmp     ah,7	     ; опрос ч/б	адаптера
   4095	F169  74 04			     je	     m11	     ; инициализация ч/б	адаптера
   4096	F16B  33 C0			     xor     ax,ax	     ; для графического режима
   4097	F16D  EB 06			     jmp     short m13	     ; очистить	буфер
   4098	F16F			     m11:			     ; инициализация ч/б	адаптера
   4099	F16F  B9 0800			     mov     cx,2048	     ; об'ем буфера ч/б адаптера
   4100	F172			     m12:
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 83
1840v4.asm



   4101	F172  B8 0720			     mov     ax,' '+7*256    ; заполнить характеристики +
   4102				     для альфа
   4103	F175			     m13:			     ; очистить	буфер
   4104	F175  F3> AB			     rep     stosw	     ; заполнить область буфера  +
   4105				     пробелами
   4106
   4107				     ;	 Формирование порта управления режимом
   4108
   4109	F177  C7 06 0060r 0067		     mov     cursor_mode,67h   ; установить режим	       +
   4110				     текущего курсора (ERROR - MUS BE 607h)
   4111	F17D  A0 0049r			     mov     al,crt_mode     ; получить	режим в регистре +
   4112				     AX
   4113	F180  32 E4			     xor     ah,ah
   4114	F182  8B F0			     mov     si,ax	     ; таблица указателей режима
   4115	F184  8B 16 0063r		     mov     dx,addr_6845    ; подготовить адрес порта    +
   4116				     для вывода
   4117	F188  83 C2 04			     add     dx,4
   4118	F18B  2E: 8A 84	F0F4r		     mov al,cs:m7[si]
   4119	F190  EE			     out     dx,al
   4120	F191  A2 0065r			     mov     crt_mode_set,al
   4121
   4122				     ;	 Форморование количества колонок
   4123
   4124	F194  2E: 8A 84	F0ECr		     mov al,cs:m6[si]
   4125	F199  32 E4			     xor     ah,ah
   4126	F19B  A3 004Ar			     mov     crt_cols,ax     ; коичество колонок на	       +
   4127				     экране
   4128
   4129				     ;	 Установить позицию курсора
   4130
   4131	F19E  81 E6 000E		     and     si,0eh	     ; db 81h,0E6h,0Eh,00h   ; ###Gleb###
   4132	F1A2  2E: 8B 8C	F0E4r		     mov cx,cs:m5[si]  ; длина для очистки
   4133	F1A7  89 0E 004Cr		     mov     crt_len,cx
   4134	F1AB  B9 0008			     mov     cx,8	     ; очистить	все позиции	       +
   4135				     курсора
   4136	F1AE  BF 0050r			     mov     di,offset cursor_posn
   4137	F1B1  1E			     push    ds		     ; восстановить	сегмент
   4138	F1B2  07			     pop     es
   4139	F1B3  33 C0			     xor     ax,ax
   4140	F1B5  F3> AB			     rep     stosw	     ; заполнить нулями
   4141
   4142				     ;	 Установка регистра сканирования
   4143
   4144	F1B7  42			     inc     dx		     ; уст порт сканирования	по   +
   4145				     умолчанию
   4146	F1B8  B0 30			     mov     al,30h	     ; значение	30H для всех	       +
   4147				     режимов,
   4148								     ; исключая	640х200
   4149	F1BA  80 3E 0049r 06		     cmp     crt_mode,6	     ; режим ч/б	640х200
   4150	F1BF  75 02			     jnz     m14	     ; если	не 640х200
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 84
1840v4.asm



   4151	F1C1  B0 3F			     mov     al,3fh	     ; если	640х200, то поместить в 3FH
   4152	F1C3  EE		     m14:    out     dx,al	     ; вывод правильного	       +
   4153				     значения в порт 3D9
   4154	F1C4  A2 0066r			     mov     crt_pallette,al   ; сохранить значение для    +
   4155				     использования
   4156
   4157				     ;	 Нормальный возврат
   4158
   4159	F1C7			     video_return:
   4160	F1C7  5F			     pop     di
   4161	F1C8  5E			     pop     si
   4162	F1C9  5B			     pop     bx
   4163	F1CA			     m15:
   4164	F1CA  59			     pop     cx		     ; восстановление регистров
   4165	F1CB  5A			     pop     dx
   4166	F1CC  1F			     pop     ds
   4167	F1CD  07			     pop     es
   4168	F1CE  CF			     iret		     ; возврат из прерывания
   4169	F1CF			     set_mode	     endp
   4170				     ;--------------------
   4171				     ; set_ctype
   4172				     ;
   4173				     ;	 Эта	программа устанавливает размер	       +
   4174				     курсора и управление им
   4175				     ;
   4176				     ;	 ВХОД
   4177				     ;		(CX) - содержит	размер курсора. (CH -	       +
   4178				     начальная	граница,
   4179				     ;		       CL - конечная граница)
   4180				     ;
   4181				     ;--------------------
   4182	F1CF			     set_ctype proc  near
   4183	F1CF  B4 0A			     mov     ah,10	     ; установить регистр 6845	для +
   4184				     курсора
   4185	F1D1  89 0E 0060r		     mov     cursor_mode,cx   ;	сохранить в области	       +
   4186				     данных
   4187	F1D5  E8 0002			     call    m16	     ; вывод регистра CX
   4188	F1D8  EB ED			     jmp     short video_return
   4189
   4190	F1DA			     m16:
   4191	F1DA  8B 16 0063r		     mov     dx,addr_6845    ; адрес регистра
   4192	F1DE  8A C4			     mov     al,ah	     ; получить	значение
   4193	F1E0  EE			     out     dx,al	     ; установить регистр
   4194	F1E1  42			     inc     dx		     ; регистр данных
   4195	F1E2  8A C5			     mov     al,ch	     ; данные
   4196	F1E4  EE			     out     dx,al
   4197	F1E5  4A			     dec     dx
   4198	F1E6  8A C4			     mov     al,ah
   4199	F1E8  FE C0			     inc     al		     ; указать другой регистр      +
   4200				     данных
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 85
1840v4.asm



   4201	F1EA  EE			     out     dx,al	     ; установить второй регистр
   4202	F1EB  42			     inc     dx
   4203	F1EC  8A C1			     mov     al,cl	     ; второе значение данных
   4204	F1EE  EE			     out     dx,al
   4205	F1EF  C3			     ret		     ; возврат
   4206	F1F0			     set_ctype	     endp
   4207				     ;----------------------------
   4208				     ; set_cpos
   4209				     ;
   4210				     ;	 Установить текущую позицию курсора
   4211				     ;
   4212				     ;	 ВХОД
   4213				     ;		DX - строка, колонка,
   4214				     ;		BH - номер	страницы.
   4215				     ;
   4216				     ;-----------------------------
   4217	F1F0			     set_cpos proc   near
   4218	F1F0  8A CF			     mov     cl,bh
   4219	F1F2  32 ED			     xor     ch,ch	     ; установить счетчик
   4220	F1F4  D1 E1			     sal     cx,1	     ; сдвиг слова
   4221	F1F6  8B F1			     mov     si,cx
   4222	F1F8  89 94 0050r		     mov word ptr [si +	offset cursor_posn],dx	;сохранить	       +
   4223				     указатель
   4224	F1FC  38 3E 0062r		     cmp     active_page,bh
   4225	F200  75 05			     jnz     m17
   4226	F202  8B C2			     mov     ax,dx	     ; получить	строку/колонку в +
   4227				     AX
   4228	F204  E8 0002			     call    m18	     ; установить курсор
   4229	F207			     m17:
   4230	F207  EB BE			     jmp     short video_return	 ; возврат
   4231	F209			     set_cpos	     endp
   4232
   4233				     ;	 Установить позицию курсора, AX	содержит       +
   4234				     строку/колонку
   4235
   4236	F209			     m18     proc    near
   4237	F209  E8 007F			     call    position
   4238	F20C  8B C8			     mov     cx,ax
   4239	F20E  03 0E 004Er		     add     cx,crt_start    ; сложить с начальным	       +
   4240				     адресом страницы
   4241	F212  D1 F9			     sar     cx,1	     ; делить на 2
   4242	F214  B4 0E			     mov     ah,14
   4243	F216  E8 FFC1			     call    m16
   4244	F219  C3			     ret
   4245	F21A			     m18     endp
   4246				     ;---------------------------
   4247				     ; read_cursor
   4248				     ;
   4249				     ;	 Считать	текущее положение курсора
   4250				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 86
1840v4.asm



   4251				     ;	 Эта	программа восстанавливает текущее       +
   4252				     положение	курсора
   4253				     ;
   4254				     ;	 ВХОД
   4255				     ;		BH - номер	страницы
   4256				     ;
   4257				     ;	 ВЫХОД
   4258				     ;		DX - строка/колонка текущей	позиции	       +
   4259				     курсора,
   4260				     ;		CX - размер курсора и управление им
   4261				     ;
   4262				     ;---------------------------
   4263	F21A			     read_cursor proc near
   4264	F21A  8A DF			     mov     bl,bh
   4265	F21C  32 FF			     xor     bh,bh
   4266	F21E  D1 E3			     sal     bx,1
   4267	F220  8B 97 0050r		     mov dx,word ptr [bx+offset	cursor_posn]
   4268	F224  8B 0E 0060r		     mov     cx,cursor_mode
   4269	F228  5F			     pop     di		     ; восстановить	регистры
   4270	F229  5E			     pop     si
   4271	F22A  5B			     pop     bx
   4272	F22B  58			     pop     ax
   4273	F22C  58			     pop     ax
   4274	F22D  1F			     pop     ds
   4275	F22E  07			     pop     es
   4276	F22F  CF			     iret
   4277	F230			     read_cursor     endp
   4278				     ;-----------------------------
   4279				     ; act_disp_page
   4280				     ;
   4281				     ;	  Эта программа устанавливает активную	       +
   4282				     страницу буфера адаптера ЭЛИ
   4283				     ;
   4284				     ;	 ВХОД
   4285				     ;		AL - страница.
   4286				     ;
   4287				     ;	 ВЫХОД
   4288				     ;		Выполняется сброс контроллера для	       +
   4289				     установки	новой страницы.
   4290				     ;
   4291				     ;-----------------------------
   4292	F230			     act_disp_page proc	     near
   4293	F230  A2 0062r			     mov     active_page,al  ; сохранить значение	       +
   4294				     активной страницы
   4295	F233  8B 0E 004Cr		     mov     cx,crt_len	     ; получить	длину области      +
   4296				     буфера
   4297	F237  98			     cbw		     ; преобразовать AL
   4298	F238  50			     push    ax		     ; сохранить значение	       +
   4299				     страницы
   4300	F239  F7 E1			     mul     cx
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 87
1840v4.asm



   4301	F23B  A3 004Er			     mov     crt_start,ax    ; сохранить начальный адрес
   4302								     ; для следующего требования
   4303	F23E  8B C8			     mov     cx,ax	     ; переслать начальный адрес+
   4304				     в	CX
   4305	F240  D1 F9			     sar     cx,1	     ; делить на 2
   4306	F242  B4 0C			     mov     ah,12
   4307	F244  E8 FF93			     call    m16
   4308	F247  5B			     pop     bx		     ; восстановить	значение       +
   4309				     страницы
   4310	F248  D1 E3			     sal     bx,1
   4311	F24A  8B 87 0050r		     mov ax,word ptr [bx+offset	cursor_posn]   ; получить курсор
   4312	F24E  E8 FFB8			     call    m18	     ; установить позицию	       +
   4313				     курсора
   4314	F251  E9 FF73			     jmp     video_return
   4315	F254			     act_disp_page   endp
   4316				     ;------------------------------
   4317				     ; set color
   4318				     ;
   4319				     ;	 Эта	программа устанавливает цветовую	       +
   4320				     палитру.
   4321				     ;
   4322				     ;	 ВХОД
   4323				     ;		BH=0
   4324				     ;		     BL	- значение пяти младших бит,	       +
   4325				     используемых для выбора
   4326				     ;			  цветовой палитры (цвет заднего     +
   4327				     плана	для цветной
   4328				     ;			  графики 320х200 или цвет каймы для    +
   4329				     цветного 40х25)
   4330				     ;		BH=1
   4331				     ;		     BL	- номер цветовой палитры
   4332				     ;			  BL=0 - зеленый(1), красный(2), желтый(3),
   4333				     ;			  BL=1 - голубой(1), фиолетовый(2), белый+
   4334				     (3)
   4335				     ;
   4336				     ;	 ВЫХОД
   4337				     ;		Установленная цветовая палитра в	       +
   4338				     порту	3D9.
   4339				     ;------------------------------
   4340	F254			     set_color proc  near
   4341	F254  8B 16 0063r		     mov     dx,addr_6845    ; порт	для палитры
   4342	F258  83 C2 05			     add     dx,5	     ; установить порт
   4343	F25B  A0 0066r			     mov     al,crt_pallette   ; получить текущее	       +
   4344				     значение палитры
   4345	F25E  0A FF			     or	     bh,bh	     ; цвет	0 ?
   4346	F260  75 0E			     jnz     m20	     ; вывод цвета 1
   4347
   4348				     ;	 Обработка цветовой палитры 0
   4349
   4350	F262  24 E0			     and     al,0e0h	     ; сбросить	5 младших бит
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 88
1840v4.asm



   4351	F264  80 E3 1F			     and     bl,01fh	     ; сбросить	3 старших бита
   4352	F267  0A C3			     or	     al,bl
   4353	F269			     m19:
   4354	F269  EE			     out     dx,al	      ;	вывод выбранного	цвета в  +
   4355				     порт 3D9
   4356	F26A  A2 0066r			     mov     crt_pallette,al  ;	сохранить значение цвета
   4357	F26D  E9 FF57			     jmp     video_return
   4358
   4359				     ;	 Обработка цветовой палитры 1
   4360
   4361	F270			     m20:
   4362	F270  24 DF			     and     al,0dfh	     ;
   4363	F272  D0 EB			     shr     bl,1	     ; проверить младший бит	BL
   4364	F274  73 F3			     jnc     m19
   4365	F276  0C 20			     or	     al,20h	     ;
   4366	F278  EB EF			     jmp     short m19	     ; переход
   4367	F27A			     set_color	     endp
   4368				     ;--------------------------
   4369				     ; video state
   4370				     ;
   4371				     ;	 Эта	программа получает текущее состояние  +
   4372				     ЭЛИ в AX.
   4373				     ;
   4374				     ;		AH - количество колонок,
   4375				     ;		AL - текущий режим,
   4376				     ;		BH - номер	активной страницы.
   4377				     ;
   4378				     ;---------------------------
   4379	F27A			     video_state proc	     near
   4380	F27A  8A 26 004Ar		     mov     ah,byte ptr crt_cols   ; получить количество    +
   4381				     колонок
   4382	F27E  A0 0049r			     mov     al,crt_mode	     ; текущий режим
   4383	F281  8A 3E 0062r		     mov     bh,active_page  ; получить	текущую активную+
   4384				     страницу
   4385	F285  5F			     pop     di		     ; восстановить	регистры
   4386	F286  5E			     pop     si
   4387	F287  59			     pop     cx
   4388	F288  E9 FF3F			     jmp     m15	     ; возврат к программе
   4389	F28B			     video_state     endp
   4390				     ;---------------------------
   4391				     ; position
   4392				     ;
   4393				     ;	 Эта	программа вычисляет адрес буфера	       +
   4394				     символа в режиме альфа.
   4395				     ;
   4396				     ;	 ВХОД
   4397				     ;		AX - номер	строки, номер колонки,
   4398				     ;
   4399				     ;	 ВЫХОД
   4400				     ;		AX - смещение символа с	координатами (AH,  +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 89
1840v4.asm



   4401				     AL) относительно
   4402				     ;		     начала страницы. Смещение		       +
   4403				     измеряется в байтах.
   4404				     ;
   4405				     ;----------------------------
   4406	F28B			     position proc   near
   4407	F28B  53			     push    bx		     ; сохранить регистр
   4408	F28C  8B D8			     mov     bx,ax
   4409	F28E  8A C4			     mov     al,ah	     ; строки в AL
   4410	F290  F6 26 004Ar		     mul     byte ptr crt_cols
   4411	F294  32 FF			     xor     bh,bh
   4412	F296  03 C3			     add     ax,bx	     ; добавить	к значению	       +
   4413				     колонки
   4414	F298  D1 E0			     sal     ax,1	     ; * 2 для байтов атрибута
   4415	F29A  5B			     pop     bx
   4416	F29B  C3			     ret
   4417	F29C			     position	     endp
   4418				     ;-------------------------------
   4419				     ;scroll up
   4420				     ;
   4421				     ;	 Эта	программа перемещает	блок символов      +
   4422				     вверх	по экрану.
   4423				     ;
   4424				     ;	 ВХОД
   4425				     ;		AH - текуший режим,
   4426				     ;		AL - количество перемещаемых строк
   4427				     ;		CX - координаты левого верхнего	угла       +
   4428				     блока
   4429				     ;		     (строка, колонка),
   4430				     ;		DX - координаты правого нижнего	угла
   4431				     ;		BH - атрибут символа пробела (для	       +
   4432				     опробеливания	освобожда-
   4433				     ;		     емых строк),
   4434				     ;
   4435				     ;	 ВЫХОД
   4436				     ;		Модифицированный буфер дисплея.
   4437				     ;
   4438				     ;-----------------------------------
   4439					     assume cs:code,ds:data,es:data
   4440	F29C			     scroll_up proc  near
   4441	F29C  8A D8			     mov     bl,al	 ; сохранить количество	       +
   4442				     перемещаемых строк
   4443	F29E  80 FC 04			     cmp     ah,4	     ; проверка	графического       +
   4444				     режима
   4445	F2A1  72 08			     jc	     n1
   4446	F2A3  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4447	F2A6  74 03			     je	     n1
   4448	F2A8  E9 01F3			     jmp     graphics_up
   4449	F2AB			     n1:
   4450	F2AB  53			     push    bx		     ; сохранить полный атрибут  +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 90
1840v4.asm



   4451				     в	BH
   4452	F2AC  8B C1			     mov     ax,cx	     ; координаты левого	       +
   4453				     верхнего угла
   4454	F2AE  E8 0039			     call    scroll_position
   4455	F2B1  74 33			     jz	     n7
   4456	F2B3  03 F0			     add     si,ax
   4457	F2B5  8A E6			     mov     ah,dh	     ; строка
   4458	F2B7  2A E3			     sub     ah,bl
   4459	F2B9			     n2:
   4460	F2B9  E8 0075			     call    n10	     ; сдвинуть	одну строку
   4461	F2BC  03 F5			     add     si,bp
   4462	F2BE  03 FD			     add     di,bp	     ; указать на следующую	       +
   4463				     строку в блоке
   4464	F2C0  FE CC			     dec     ah		     ; счетчик строк для	сдвига
   4465	F2C2  75 F5			     jnz     n2		     ; цикл	строки
   4466	F2C4			     n3:			     ; очистка входа
   4467	F2C4  58			     pop     ax		     ; восстановить	атрибут в AH
   4468	F2C5  B0 20			     mov     al,' '	     ; заполнить пробелами
   4469	F2C7			     n4:			     ; очистка счетчика
   4470	F2C7  E8 0070			     call    n11	     ; очистка строки
   4471	F2CA  03 FD			     add     di,bp	     ; указать следующую строку
   4472	F2CC  FE CB			     dec     bl		     ; счетчик строк для	сдвига
   4473	F2CE  75 F7			     jnz     n4		     ; очистка счетчика
   4474	F2D0			     n5:			     ; конец сдвига
   4475	F2D0  B8 0040			     mov     ax,dat
   4476	F2D3  8E D8			     mov     ds,ax
   4477	F2D5  80 3E 0049r 07		     cmp     crt_mode,7	     ; ч/б адаптер ?
   4478	F2DA  74 07			     je	     n6		     ; если	да - пропуск режима     +
   4479				     сброса
   4480	F2DC  A0 0065r			     mov     al,crt_mode_set
   4481	F2DF  BA 03D8			     mov     dx,03d8h	     ; установить порт цветного  +
   4482				     адаптера
   4483	F2E2  EE			     out     dx,al
   4484	F2E3			     n6:
   4485	F2E3  E9 FEE1			     jmp     video_return
   4486	F2E6			     n7:
   4487	F2E6  8A DE			     mov     bl,dh
   4488	F2E8  EB DA			     jmp     short n3	     ; очистить
   4489	F2EA			     scroll_up	     endp
   4490
   4491				     ;	 Обработка сдвига
   4492
   4493	F2EA			     scroll_position proc    near
   4494	F2EA  80 3E 0049r 02		     cmp     crt_mode,2
   4495	F2EF  72 19			     jb	     n9		     ; обработать 80х25 отдельно
   4496	F2F1  80 3E 0049r 03		     cmp     crt_mode,3
   4497	F2F6  77 12			     ja	     n9
   4498
   4499				     ;	 Сдиг для цветного адаптера в режиме 80х25
   4500
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 91
1840v4.asm



   4501	F2F8  52			     push    dx
   4502	F2F9  BA 03DA			     mov     dx,3dah	     ; обработка цветного	       +
   4503				     адаптера
   4504	F2FC  50			     push    ax
   4505	F2FD			     n8:			     ; ожидание	доступности	       +
   4506				     дисплея
   4507	F2FD  EC			     in	     al,dx
   4508	F2FE  A8 08			     test    al,8
   4509	F300  74 FB			     jz	     n8		     ; ожидание	доступности	       +
   4510				     дисплея
   4511	F302  B0 25			     mov     al,25h
   4512	F304  BA 03D8			     mov     dx,03d8h
   4513	F307  EE			     out     dx,al	     ; выключить ЭЛИ
   4514	F308  58			     pop     ax
   4515	F309  5A			     pop     dx
   4516	F30A  E8 FF7E		     n9:     call    position
   4517	F30D  03 06 004Er		     add     ax,crt_start    ; смещение	активной	       +
   4518				     страницы
   4519	F311  8B F8			     mov     di,ax	     ; для адреса сдвига
   4520	F313  8B F0			     mov     si,ax
   4521	F315  2B D1			     sub     dx,cx	     ; DX=строка
   4522	F317  FE C6			     inc     dh
   4523	F319  FE C2			     inc     dl		     ; прибавление к началу
   4524	F31B  32 ED			     xor     ch,ch	     ; установить старший байт    +
   4525				     счетчика в 0
   4526	F31D  8B 2E 004Ar		     mov     bp,crt_cols     ; получить	число колонок      +
   4527				     дисплея
   4528	F321  03 ED			     add     bp,bp	     ; увеличить на 2 байт	       +
   4529				     атрибута
   4530	F323  8A C3			     mov     al,bl	     ; получить	счетчик строки
   4531	F325  F6 26 004Ar		     mul     byte ptr crt_cols	 ; определить	смещение из  +
   4532				     адреса,
   4533	F329  03 C0			     add     ax,ax     ; умноженного	на 2,	для байта      +
   4534				     атрибута
   4535	F32B  06			     push    es	     ; установить адресацию для	       +
   4536				     области буфера
   4537	F32C  1F			     pop     ds
   4538	F32D  80 FB 00			     cmp     bl,0	     ; 0 означает очистку блока
   4539	F330  C3			     ret		     ; возврат с установкой	       +
   4540				     флажков
   4541	F331			     scroll_position endp
   4542
   4543				     ;	 Перемещение	строки
   4544
   4545	F331			     n10     proc    near
   4546	F331  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4547				     передачи
   4548	F333  56			     push    si
   4549	F334  57			     push    di		     ; сохранить начальный адрес
   4550	F335  F3> A5			     rep     movsw	     ; передать	эту строку на       +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 92
1840v4.asm



   4551				     экран
   4552	F337  5F			     pop     di
   4553	F338  5E			     pop     si		     ; восстановить	адресацию
   4554	F339  C3			     ret
   4555	F33A			     n10     endp
   4556
   4557				     ;	 очистка	строки
   4558
   4559	F33A			     n11     proc    near
   4560	F33A  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4561				     очистки
   4562	F33C  57			     push    di
   4563	F33D  F3> AB			     rep     stosw	     ; запомнить полный знак
   4564	F33F  5F			     pop     di
   4565	F340  C3			     ret
   4566	F341			     n11     endp
   4567				     ;------------------------
   4568				     ; scroll_down
   4569				     ;
   4570				     ;	 Эта	программа перемещает	блок символов      +
   4571				     вниз по
   4572				     ; экрану, заполняя верхние строки пробелом с  +
   4573				     заданным атрибутом
   4574				     ;
   4575				     ;	 ВХОД
   4576				     ;		AH - текущий режим,
   4577				     ;		AL - количество строк,
   4578				     ;		CX - верхний левый угол	блока,
   4579				     ;		DX - правый нижний угол	блока,
   4580				     ;		BH - атрибут символа-заполнителя	       +
   4581				     (пробела),
   4582				     ;
   4583				     ;-------------------------
   4584	F341			     scroll_down proc near
   4585	F341  FD			     std		     ; уст направление сдвига      +
   4586				     вниз
   4587	F342  8A D8			     mov     bl,al	     ; количество строк в BL
   4588	F344  80 FC 04			     cmp     ah,4	     ; проверка	графики
   4589	F347  72 08			     jc	     n12
   4590	F349  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4591	F34C  74 03			     je	     n12
   4592	F34E  E9 01A6			     jmp     graphics_down
   4593	F351			     n12:
   4594	F351  53			     push    bx		     ; сохранить атрибут в BH
   4595	F352  8B C2			     mov     ax,dx	     ; нижний правый угол
   4596	F354  E8 FF93			     call    scroll_position
   4597	F357  74 20			     jz	     n16
   4598	F359  2B F0			     sub     si,ax	     ; SI для адресации
   4599	F35B  8A E6			     mov     ah,dh
   4600	F35D  2A E3			     sub     ah,bl	     ; передать	количество строк
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 93
1840v4.asm



   4601	F35F			     n13:
   4602	F35F  E8 FFCF			     call    n10	     ; передать	одну строку
   4603	F362  2B F5			     sub     si,bp
   4604	F364  2B FD			     sub     di,bp
   4605	F366  FE CC			     dec     ah
   4606	F368  75 F5			     jnz     n13
   4607	F36A			     n14:
   4608	F36A  58			     pop     ax		     ; восстановить	атрибут в AH
   4609	F36B  B0 20			     mov     al,' '
   4610	F36D			     n15:
   4611	F36D  E8 FFCA			     call    n11	     ; очистка одной строки
   4612	F370  2B FD			     sub     di,bp	     ; перейти к следующей строке
   4613	F372  FE CB			     dec     bl
   4614	F374  75 F7			     jnz     n15
   4615	F376  E9 FF57			     jmp     n5		     ; конец сдвига
   4616	F379			     n16:
   4617	F379  8A DE			     mov     bl,dh
   4618	F37B  EB ED			     jmp     short n14
   4619	F37D			     scroll_down  endp
   4620				     ;--------------------
   4621				     ; read_ac_current
   4622				     ;
   4623				     ;	 Эта	программа считывает атрибут и	код	       +
   4624				     символа, находящегося в теку-
   4625				     ; щем положении курсора
   4626				     ;
   4627				     ;	 ВХОД
   4628				     ;		AH - текущий режим,
   4629				     ;		BH - номер	страницы (только для режима     +
   4630				     альфа),
   4631				     ;
   4632				     ;	 ВЫХОД
   4633				     ;		AL - код символа,
   4634				     ;		AH - атрибут символа.
   4635				     ;
   4636				     ;---------------------
   4637					     assume cs:code,ds:data,es:data
   4638	F37D			     read_ac_current proc near
   4639	F37D  80 FC 04			     cmp     ah,4	     ; это графика ?
   4640	F380  72 08			     jc	     p1
   4641	F382  80 FC 07			     cmp     ah,7	     ; ч/б адаптер ?
   4642	F385  74 03			     je	     p1
   4643	F387  E9 02A9			     jmp     graphics_read
   4644	F38A			     p1:			     ;
   4645	F38A  E8 001A			     call    find_position
   4646	F38D  8B F3			     mov     si,bx	     ; установить адресацию в SI
   4647
   4648
   4649	F38F  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4650	F393  83 C2 06			     add     dx,6	     ; порт	состояния
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 94
1840v4.asm



   4651	F396  06			     push    es
   4652	F397  1F			     pop     ds		     ; получить	сегмент
   4653	F398			     p2:
   4654	F398  EC			     in	     al,dx	     ; получить	состояние
   4655	F399  A8 01			     test    al,1
   4656	F39B  75 FB			     jnz     p2		     ; ожидание
   4657	F39D  FA			     cli		; сброс признака разрешения     +
   4658				     прерывания
   4659	F39E			     p3:
   4660	F39E  EC			     in	     al,dx	     ; получить	состояние
   4661	F39F  A8 01			     test    al,1
   4662	F3A1  74 FB			     jz	     p3		     ; ожидание
   4663	F3A3  AD			     lodsw		     ; получить	символ/атрибут
   4664	F3A4  E9 FE20			     jmp     video_return
   4665	F3A7			     read_ac_current endp
   4666
   4667	F3A7			     find_position proc	near
   4668	F3A7  8A CF			     mov     cl,bh	     ; поместить страницу в CX
   4669	F3A9  32 ED			     xor     ch,ch
   4670	F3AB  8B F1			     mov     si,cx	     ; передать	в SI индекс,	       +
   4671				     умноженный на 2
   4672	F3AD  D1 E6			     sal     si,1	     ; для слова смещения
   4673	F3AF  8B 84 0050r		     mov ax,word ptr [si+offset	cursor_posn]   ; получить	       +
   4674				     строку/ко-
   4675								     ; лонку этой страницы
   4676	F3B3  33 DB			     xor     bx,bx	     ; установить начальный	       +
   4677				     адрес	в 0
   4678	F3B5  E3 06			     jcxz    p5
   4679	F3B7			     p4:
   4680	F3B7  03 1E 004Cr		     add     bx,crt_len	     ; длина буфера
   4681	F3BB  E2 FA			     loop    p4
   4682	F3BD			     p5:
   4683	F3BD  E8 FECB			     call    position
   4684	F3C0  03 D8			     add     bx,ax
   4685	F3C2  C3			     ret
   4686	F3C3			     find_position   endp
   4687				     ;---------------------
   4688				     ;write_ac_current
   4689				     ;
   4690				     ;	 Эта	программа записывает	атрибут и код       +
   4691				     символа в текущую позицию
   4692				     ; курсора
   4693				     ;
   4694				     ;	 ВХОД
   4695				     ;		AH - текущий режим,
   4696				     ;		BH - номер	страницы,
   4697				     ;		CX - счетчик (количество повторений	       +
   4698				     символов),
   4699				     ;		AL - код символа,
   4700				     ;		BL - атрибут символа (для режимов альфа)  +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 95
1840v4.asm



   4701				     или цвет символа
   4702				     ;		     для графики.
   4703				     ;
   4704				     ;----------------------
   4705	F3C3			     write_ac_current proc near
   4706	F3C3  80 FC 04			     cmp     ah,4	     ; это графика ?
   4707	F3C6  72 08			     jc	     p6
   4708	F3C8  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4709	F3CB  74 03			     je	     p6
   4710	F3CD  E9 01B1			     jmp     graphics_write
   4711	F3D0			     p6:
   4712	F3D0  8A E3			     mov     ah,bl	     ; получить	атрибут в AH
   4713	F3D2  50			     push    ax		     ; хранить
   4714	F3D3  51			     push    cx		     ; хранить счетчик
   4715	F3D4  E8 FFD0			     call    find_position
   4716	F3D7  8B FB			     mov     di,bx	     ; адрес в DI
   4717	F3D9  59			     pop     cx		     ; вернуть счетчик
   4718	F3DA  5B			     pop     bx		     ; и символ
   4719	F3DB			     p7:			     ; цикл	записи
   4720
   4721
   4722	F3DB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4723	F3DF  83 C2 06			     add     dx,6	     ; указать порт состояния
   4724	F3E2			     p8:
   4725	F3E2  EC			     in	     al,dx	     ; получить	состояние
   4726	F3E3  A8 01			     test    al,1
   4727	F3E5  75 FB			     jnz     p8		     ; ожидать
   4728	F3E7  FA			     cli		  ; сброс признака	разрешения   +
   4729				     прерывания
   4730	F3E8			     p9:
   4731	F3E8  EC			     in	     al,dx	     ; получить	состояние
   4732	F3E9  A8 01			     test    al,1
   4733	F3EB  74 FB			     jz	     p9		     ; ожидать
   4734	F3ED  8B C3			     mov     ax,bx
   4735	F3EF  AB			     stosw		     ; записать	символ и	атрибут
   4736	F3F0  FB			     sti		     ; уст признак разрешения      +
   4737				     прерывания
   4738	F3F1  E2 E8			     loop    p7
   4739	F3F3  E9 FDD1			     jmp     video_return
   4740	F3F6			     write_ac_current  endp
   4741				     ;---------------------
   4742				     ;write_c_current
   4743				     ;
   4744				     ;	 Эта	программа записывает	символ в	текущую +
   4745				     позицию курсора.
   4746				     ;
   4747				     ;	 ВХОД
   4748				     ;		BH - номер	страницы (только для альфа       +
   4749				     режимов),
   4750				     ;		CX - счетчик (количество повторений	       +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 96
1840v4.asm



   4751				     символа),
   4752				     ;		AL - код символа,
   4753				     ;
   4754				     ;-----------------------
   4755	F3F6			     write_c_current proc near
   4756	F3F6  80 FC 04			     cmp     ah,4	     ; это графика ?
   4757	F3F9  72 08			     jc	     p10
   4758	F3FB  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4759	F3FE  74 03			     je	     p10
   4760	F400  E9 017E			     jmp     graphics_write
   4761	F403			     p10:
   4762	F403  50			     push    ax		     ; сохранить в стеке
   4763	F404  51			     push    cx		     ; сохранить количество	       +
   4764				     повторений
   4765	F405  E8 FF9F			     call    find_position
   4766	F408  8B FB			     mov     di,bx	     ; адрес в DI
   4767	F40A  59			     pop     cx		     ; вернуть количество	       +
   4768				     повторений
   4769	F40B  5B			     pop     bx		     ; BL - код символа
   4770	F40C			     p11:
   4771
   4772
   4773	F40C  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4774	F410  83 C2 06			     add     dx,6	     ; указать порт состояния
   4775	F413			     p12:
   4776	F413  EC			     in	     al,dx	     ; получить	состояние
   4777	F414  A8 01			     test    al,1
   4778	F416  75 FB			     jnz     p12	     ; ожидать
   4779	F418  FA			     cli		     ; сброс признака разрешения+
   4780				     прерывания
   4781	F419			     p13:
   4782	F419  EC			     in	     al,dx	     ; получить	состояние
   4783	F41A  A8 01			     test    al,1
   4784	F41C  74 FB			     jz	     p13	     ; ожидание
   4785	F41E  8A C3			     mov     al,bl	     ; восстановить	символ
   4786	F420  AA			     stosb		     ; записать	символ
   4787	F421  47			     inc     di
   4788	F422  E2 E8			     loop    p11	     ; цикл
   4789	F424  E9 FDA0			     jmp     video_return
   4790	F427			     write_c_current endp
   4791				     ;---------------------
   4792				     ; read dot	- write	dot
   4793				     ;
   4794				     ;	 Эта	программа считывает/записывает точку.
   4795				     ;
   4796				     ;	 ВХОД
   4797				     ;		DX - строка (0-199),
   4798				     ;		CX - колонка (0-639),
   4799				     ;		AL - цвет выводимой точки.
   4800				     ;		     Если бит 7=1, то выполняется операция
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 97
1840v4.asm



   4801				     ;		     XOR над	значением точки из буфера	       +
   4802				     дисплея и значением
   4803				     ;		     точки	из регистра AL (при записи	       +
   4804				     точки).
   4805				     ;
   4806				     ;	 ВЫХОД
   4807				     ;		AL - значение считанной точки
   4808				     ;
   4809				     ;----------------------
   4810					     assume cs:code,ds:data,es:data
   4811	F427			     read_dot proc   near
   4812	F427  E8 0031			     call    r3		     ; определить положение	       +
   4813				     точки
   4814	F42A  26: 8A 04			     mov     al,es:[si]	     ; получить	байт
   4815	F42D  22 C4			     and     al,ah	     ; размаскировать другие       +
   4816				     биты в байте
   4817	F42F  D2 E0			     shl     al,cl	     ;
   4818	F431  8A CE			     mov     cl,dh	     ; получить	число бит	       +
   4819				     результата
   4820	F433  D2 C0			     rol     al,cl
   4821	F435  E9 FD8F			     jmp     video_return    ; выход из прерывания
   4822	F438			     read_dot	     endp
   4823
   4824	F438			     write_dot proc  near
   4825	F438  50			     push    ax		     ; сохранить значение точки
   4826	F439  50			     push    ax		     ; еще раз
   4827	F43A  E8 001E			     call    r3		     ; определить положение	       +
   4828				     точки
   4829	F43D  D2 E8			     shr     al,cl	     ; сдвиг для установки бит     +
   4830				     при выводе
   4831	F43F  22 C4			     and     al,ah	     ; сбросить	другие биты
   4832	F441  26: 8A 0C			     mov     cl,es:[si]	     ; получить	текущий байт
   4833	F444  5B			     pop     bx
   4834	F445  F6 C3 80			     test    bl,80h
   4835	F448  75 0D			     jnz     r2
   4836	F44A  F6 D4			     not     ah	       ; установить маску для		       +
   4837				     передачи указанных бит
   4838	F44C  22 CC			     and     cl,ah
   4839	F44E  0A C1			     or	     al,cl
   4840	F450			     r1:
   4841	F450  26: 88 04			     mov es:[si],al	     ; восстановить	байт в памяти
   4842	F453  58			     pop     ax
   4843	F454  E9 FD70			     jmp     video_return    ; к выходу из программы
   4844	F457			     r2:
   4845	F457  32 C1			     xor     al,cl	     ; исключающее ИЛИ над	       +
   4846				     значениями точки
   4847	F459  EB F5			     jmp     short r1	     ; конец записи
   4848	F45B			     write_dot	     endp
   4849
   4850				     ;-------------------------------------
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 98
1840v4.asm



   4851				     ;
   4852				     ;	 Эта	программа определяет	относительный     +
   4853				     адрес	байта (внутри буфера
   4854				     ; дисплея),	из которого должна быть		       +
   4855				     считана/записана точка,с заданными
   4856				     ; координатами.
   4857				     ;
   4858				     ;	 ВХОД
   4859				     ;		DX - строка (0-199),
   4860				     ;		CX - колонка (0-639).
   4861				     ;
   4862				     ;	 ВЫХОД
   4863				     ;		SI - относительный	адрес байта,		       +
   4864				     содержащего точку внутри
   4865				     ;		     буфера дисплея,
   4866				     ;		AH - маска	для выделения значения	       +
   4867				     заданной точки внутри байта
   4868				     ;		CL - константа	сдвига маски	в AH в крайнюю+
   4869				     левую	позицию,
   4870				     ;		DH - число	бит,	определяющих значение      +
   4871				     точки.
   4872				     ;
   4873				     ;--------------------------------------
   4874
   4875	F45B			     r3	     proc    near
   4876	F45B  53			     push    bx		     ; сохранить BX
   4877	F45C  50			     push    ax		     ; сохранить AL
   4878
   4879				     ;	 Вычисление первого байта	указанной строки+
   4880				     умножением на 40.
   4881				     ; Наименьший бит строки	определяет		       +
   4882				     четно/нечетную 80-байтовую строку.
   4883
   4884	F45D  B0 28			     mov     al,40
   4885	F45F  52			     push    dx		     ; сохранить значение строки
   4886	F460  80 E2 FE			     and     dl,0feh	     ; сброс четно/нечетного	бита
   4887	F463  F6 E2			     mul     dl	  ; AX содержит	адрес первого байта   +
   4888				     указанной	строки
   4889	F465  5A			     pop     dx		     ; восстановить	его
   4890	F466  F6 C2 01			     test    dl,1	     ; проверить			       +
   4891				     четность/нечетность
   4892	F469  74 03			     jz	     r4		     ; переход,если строка четная
   4893	F46B  05 2000			     add     ax,2000h	     ; смещение	для нахождения    +
   4894				     нечетных строк
   4895	F46E			     r4:			     ; четная строка
   4896	F46E  8B F0			     mov     si,ax	     ; передать	указатель в SI
   4897	F470  58			     pop     ax		     ; восстановить	значение AL
   4898	F471  8B D1			     mov     dx,cx	     ; значение	колонки в DX
   4899
   4900				     ;	 Определение	действительных графических    +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 99
1840v4.asm



   4901				     режимов
   4902				     ;
   4903				     ;	 Установка регистров согласно	режимaм
   4904				     ;
   4905				     ;	       BH - количество бит, определяющее точку,
   4906				     ;	       BL - константа выделения точки из левых   +
   4907				     бит байта,
   4908				     ;	       CH - константа для выделения из номера     +
   4909				     колонки номера позиции
   4910				     ;		    первого бита, определяющего	точку в  +
   4911				     байте, т.е.	получение
   4912				     ;		    остатка от	деления номера на 8 (для     +
   4913				     режима 640х200) или
   4914				     ;		    номера на 4	(для	режима 320х200),
   4915				     ;	       CL - константа сдвига (для выполнения       +
   4916				     деления на 8 или на 4).
   4917
   4918	F473  BB 02C0			     mov     bx,2c0h
   4919	F476  B9 0302			     mov     cx,302h	     ; установка параметров
   4920	F479  80 3E 0049r 06		     cmp     crt_mode,6
   4921	F47E  72 06			     jc	     r5		     ;
   4922	F480  BB 0180			     mov     bx,180h
   4923	F483  B9 0703			     mov     cx,703h	     ; уст параметры для		       +
   4924				     старшего регистра
   4925
   4926				     ;	 Определение	бита смещения в байте	по маске
   4927	F486			     r5:
   4928	F486  22 EA			     and     ch,dl	     ;
   4929
   4930				     ;	 Определение	байта смещения в колонке
   4931
   4932	F488  D3 EA			     shr     dx,cl	     ; сдвиг для коррекции
   4933	F48A  03 F2			     add     si,dx	     ; получить	указатель
   4934	F48C  8A F7			     mov     dh,bh   ; получить	указатель битов	       +
   4935				     результата в DH
   4936
   4937				     ;	 Умножение BH (количество бит в байте) на	CH     +
   4938				     (бит смещения)
   4939
   4940	F48E  2A C9			     sub     cl,cl
   4941	F490			     r6:
   4942	F490  D0 C8			     ror     al,1    ; левое крайнее значение в AL	для +
   4943				     записи
   4944	F492  02 CD			     add     cl,ch	     ; прибавить значение бита    +
   4945				     смещения
   4946	F494  FE CF			     dec     bh		     ; счетчик контроля
   4947	F496  75 F8			     jnz     r6	     ; на выходе CL содержит счетчик    +
   4948				     сдвига для
   4949								     ; восстановления
   4950	F498  8A E3			     mov     ah,bl	     ; получить	маску в AH
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 100
1840v4.asm



   4951	F49A  D2 EC			     shr     ah,cl	     ; передать	маску в ячейку
   4952	F49C  5B			     pop     bx		     ; восстановить	регистр
   4953	F49D  C3			     ret		     ; возврат с восстановлением
   4954	F49E			     r3	     endp
   4955
   4956				     ;----------------------------------------
   4957				     ;
   4958				     ;
   4959				     ;	  Программа перемещает блок символов вверх +
   4960				     в	режиме графики
   4961				     ;
   4962				     ;-----------------------------------------
   4963
   4964	F49E			     graphics_up proc near
   4965	F49E  8A D8			     mov     bl,al	     ; сохранить количество	       +
   4966				     символов
   4967	F4A0  8B C1			     mov     ax,cx	     ; получить	верхний левый      +
   4968				     угол в AX
   4969
   4970
   4971	F4A2  E8 026A			     call    graph_posn
   4972	F4A5  8B F8			     mov     di,ax	     ; сохранить результат
   4973
   4974				     ;	 Определить размеры блока
   4975
   4976	F4A7  2B D1			     sub     dx,cx
   4977	F4A9  81 C2 0101		     add     dx,101h
   4978	F4AD  D0 E6			     sal     dh,1
   4979	F4AF  D0 E6			     sal     dh,1
   4980
   4981	F4B1  80 3E 0049r 06		     cmp     crt_mode,6
   4982	F4B6  73 04			     jnc     r7
   4983
   4984	F4B8  D0 E2			     sal     dl,1
   4985	F4BA  D1 E7			     sal     di,1	     ;
   4986
   4987				     ;	 Определение	адреса источника	в буфере
   4988	F4BC			     r7:
   4989	F4BC  06			     push    es
   4990	F4BD  1F			     pop     ds
   4991	F4BE  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   4992				     счетчика
   4993	F4C0  D0 E3			     sal     bl,1	     ; умножение числа строк	на 4
   4994	F4C2  D0 E3			     sal     bl,1
   4995	F4C4  74 2D			     jz	     r11	     ; если	0, занести пробелы
   4996	F4C6  8A C3			     mov     al,bl	     ; получить	число строк в AL
   4997	F4C8  B4 50			     mov     ah,80	     ; 80 байт/строк
   4998	F4CA  F6 E4			     mul     ah		     ; определить смещение	       +
   4999				     источника
   5000	F4CC  8B F7			     mov     si,di	     ; установить источник
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 101
1840v4.asm



   5001	F4CE  03 F0			     add     si,ax	     ; сложить источник с ним
   5002	F4D0  8A E6			     mov     ah,dh	     ; количество строк
   5003	F4D2  2A E3			     sub     ah,bl	     ; определить число		       +
   5004				     перемещений
   5005
   5006	F4D4			     r8:
   5007	F4D4  E8 0080			     call    r17	     ; перемещение одной строки
   5008	F4D7  81 EE 1FB0		     sub     si,2000h-80     ; перемещение в следующую    +
   5009				     строку
   5010	F4DB  81 EF 1FB0		     sub     di,2000h-80
   5011	F4DF  FE CC			     dec     ah		     ; количество строк для	       +
   5012				     перемещения
   5013	F4E1  75 F1			     jnz     r8	     ; продолжать, пока все строки не +
   5014				     переместятся
   5015
   5016				     ;	 Заполнение освобожденных строк
   5017	F4E3			     r9:
   5018	F4E3  8A C7			     mov     al,bh
   5019	F4E5			     r10:
   5020	F4E5  E8 0088			     call    r18	     ; очистить	эту строку
   5021	F4E8  81 EF 1FB0		     sub     di,2000h-80     ; указать на следующую
   5022	F4EC  FE CB			     dec     bl		     ; количество строк для	       +
   5023				     заполнения
   5024	F4EE  75 F5			     jnz     r10	     ; цикл	очистки
   5025	F4F0  E9 FCD4			     jmp     video_return    ; к выходу из программы
   5026
   5027	F4F3			     r11:
   5028	F4F3  8A DE			     mov     bl,dh	     ; установить количество       +
   5029				     пробелов
   5030	F4F5  EB EC			     jmp     short r9	     ; очистить
   5031	F4F7			     graphics_up     endp
   5032
   5033				     ;---------------------------------
   5034				     ;
   5035				     ;	 Программа перемещает блок символов вниз в +
   5036				     режиме графики
   5037				     ;
   5038				     ;----------------------------------
   5039
   5040	F4F7			     graphics_down proc	     near
   5041	F4F7  FD			     std		     ; установить направление
   5042	F4F8  8A D8			     mov     bl,al	     ; сохранить количество	       +
   5043				     строк
   5044	F4FA  8B C2			     mov     ax,dx	     ; получить	нижнюю правую      +
   5045				     позицию в AX
   5046
   5047
   5048	F4FC  E8 0210			     call    graph_posn
   5049	F4FF  8B F8			     mov     di,ax	     ; сохранить результат
   5050
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 102
1840v4.asm



   5051				     ;	 Определение	размера блока
   5052
   5053	F501  2B D1			     sub     dx,cx
   5054	F503  81 C2 0101		     add     dx,101h
   5055	F507  D0 E6			     sal     dh,1
   5056	F509  D0 E6			     sal     dh,1
   5057
   5058
   5059	F50B  80 3E 0049r 06		     cmp     crt_mode,6
   5060	F510  73 05			     jnc     r12
   5061
   5062	F512  D0 E2			     sal     dl,1
   5063	F514  D1 E7			     sal     di,1
   5064	F516  47			     inc     di
   5065
   5066				     ;	 Определение	адреса источника	в буфере
   5067	F517			     r12:
   5068	F517  06			     push    es
   5069	F518  1F			     pop     ds
   5070	F519  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   5071				     счетчика
   5072	F51B  81 C7 00F0		     add     di,240	     ; указать последнюю строку
   5073	F51F  D0 E3			     sal     bl,1	     ; умножить	количество строк+
   5074				     на 4
   5075	F521  D0 E3			     sal     bl,1
   5076	F523  74 2E			     jz	     r16	     ; если	0, заполнить пробелом
   5077	F525  8A C3			     mov     al,bl	     ; получить	количество строк+
   5078				     в	AL
   5079	F527  B4 50			     mov     ah,80	     ; 80 байт/строк
   5080	F529  F6 E4			     mul     ah		     ; определить смещение	       +
   5081				     источника
   5082	F52B  8B F7			     mov     si,di	     ; установить источник
   5083	F52D  2B F0			     sub     si,ax	     ; вычесть смещение
   5084	F52F  8A E6			     mov     ah,dh	     ; количество строк
   5085	F531  2A E3			     sub     ah,bl	     ; определить число для	       +
   5086				     перемещения
   5087
   5088	F533			     r13:
   5089	F533  E8 0021			     call    r17	     ; переместить одну строку
   5090	F536  81 EE 2050		     sub     si,2000h+80     ; установить следующую	       +
   5091				     строку
   5092	F53A  81 EF 2050		     sub     di,2000h+80
   5093	F53E  FE CC			     dec     ah		     ; количество строк для	       +
   5094				     перемещения
   5095	F540  75 F1			     jnz     r13	     ; продолжать, пока все не      +
   5096				     переместятся
   5097
   5098				     ;	 Заполнение освобожденных строк
   5099	F542			     r14:
   5100	F542  8A C7			     mov     al,bh	     ; атрибут заполнения
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 103
1840v4.asm



   5101	F544			     r15:
   5102	F544  E8 0029			     call    r18	     ; очистить	строку
   5103	F547  81 EF 2050		     sub     di,2000h+80     ; указать следующую строку
   5104	F54B  FE CB			     dec     bl		     ; число строк для заполнения
   5105	F54D  75 F5			     jnz     r15
   5106	F54F  FC			     cld		     ; сброс признака		       +
   5107				     направления
   5108	F550  E9 FC74			     jmp     video_return    ; к выходу из программы
   5109
   5110	F553			     r16:
   5111	F553  8A DE			     mov     bl,dh
   5112	F555  EB EB			     jmp     short r14	     ; очистить
   5113	F557			     graphics_down endp
   5114
   5115				     ;	 Программа перемещения одной строки
   5116
   5117	F557			     r17     proc    near
   5118	F557  8A CA			     mov     cl,dl	     ; число байт в строке
   5119	F559  56			     push    si
   5120	F55A  57			     push    di		     ; хранить указатели
   5121	F55B  F3> A4			     rep     movsb	     ; переместить четное поле
   5122	F55D  5F			     pop     di
   5123	F55E  5E			     pop     si
   5124	F55F  81 C6 2000		     add     si,2000h
   5125	F563  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5126	F567  56			     push    si
   5127	F568  57			     push    di		     ; сохранить указатели
   5128	F569  8A CA			     mov     cl,dl	     ; возврат счвтчика
   5129	F56B  F3> A4			     rep     movsb	     ; передать	нечетное поле
   5130	F56D  5F			     pop     di
   5131	F56E  5E			     pop     si		     ; возврат указателей
   5132	F56F  C3			     ret		     ; возврат к программе
   5133	F570			     r17     endp
   5134
   5135				     ;	 Заполнение пробелами строки
   5136
   5137	F570			     r18     proc    near
   5138	F570  8A CA			     mov     cl,dl	     ; число байт в поле
   5139	F572  57			     push    di		     ; хранить указатель
   5140	F573  F3> AA			     rep     stosb	     ; запомнить новое значение
   5141	F575  5F			     pop     di		     ; вернуть указатель
   5142	F576  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5143	F57A  57			     push    di
   5144	F57B  8A CA			     mov     cl,dl
   5145	F57D  F3> AA			     rep     stosb	     ; заполнить нечетное поле
   5146	F57F  5F			     pop     di
   5147	F580  C3			     ret		     ; возврат к программе
   5148	F581			     r18     endp
   5149
   5150				     ;--------------------------------------
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 104
1840v4.asm



   5151				     ;
   5152				     ;	graphics_write
   5153				     ;
   5154				     ;	 Эта	программа записывает	символ в	режиме   +
   5155				     графики
   5156				     ;
   5157				     ;	 ВХОД
   5158				     ;		AL - код символа,
   5159				     ;		BL - атрибут цвета,	который используется+
   5160				     в	качестве цвета
   5161				     ;		     переднего	плана (цвет символа). Если +
   5162				     бит 7 BL=1, то
   5163				     ;		     выполняется операция XOR над	байтом в+
   5164				     буфере и байтом
   5165				     ;		     в	генераторе символов,
   5166				     ;		CX - счетчик повторений символа
   5167				     ;
   5168				     ;----------------------------------------
   5169
   5170					     assume cs:code,ds:data,es:data
   5171	F581			     graphics_write proc near
   5172	F581  B4 00			     mov     ah,0	     ; AH=0
   5173	F583  50			     push    ax		     ; сохранить значение кода    +
   5174				     символа
   5175
   5176				     ;	 Определение	позиции в области буфера	       +
   5177				     засылкой туда кода	точек
   5178
   5179	F584  E8 0185			     call    s26	     ; найти ячейку в области       +
   5180				     буфера
   5181	F587  8B F8			     mov     di,ax	     ; указатель области в DI
   5182
   5183				     ;	 Определение	области для получения кода      +
   5184				     точки
   5185
   5186	F589  58			     pop     ax		     ; восстановить	код точки
   5187	F58A  3C 80			     cmp     al,80h	     ; во второй половине ?
   5188	F58C  73 06			     jae     s1		     ; да
   5189
   5190				     ;	 Изображение	есть в первой половине памяти
   5191
   5192	F58E  BE FA6Er			     mov     si, offset	crt_char_gen  ;	смещение изображения
   5193	F591  0E			     push    cs		     ; хранить сегмент в	стеке
   5194	F592  EB 0F			     jmp     short s2	     ; определить режим
   5195
   5196				     ;	 Изображение	есть во второй части памяти
   5197
   5198	F594			     s1:
   5199	F594  2C 80			     sub     al,80h	     ; 0 во вторую половину
   5200	F596  1E			     push    ds		     ; хранить указатель данных
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 105
1840v4.asm



   5201	F597  2B F6			     sub     si,si
   5202	F599  8E DE			     mov     ds,si	     ; установить адресацию
   5203					     assume  ds:abs0
   5204	F59B  C5 36 007Cr		     lds     si,ext_ptr	     ; получить	смещение
   5205	F59F  8C DA			     mov     dx,ds	     ; получить	сегмент
   5206					     assume  ds:data
   5207	F5A1  1F			     pop     ds		     ; восстановить	сегмент	       +
   5208				     данных
   5209	F5A2  52			     push    dx		     ; хранить сегмент в	стеке
   5210
   5211				     ;	 Опеделение графического режима операции
   5212
   5213	F5A3			     s2:			     ; определение режима
   5214	F5A3  D1 E0			     sal     ax,1	     ; умножить	указатель кода    +
   5215				     на 8
   5216	F5A5  D1 E0			     sal     ax,1
   5217	F5A7  D1 E0			     sal     ax,1
   5218	F5A9  03 F0			     add     si,ax	     ; SI содержит смещение
   5219	F5AB  80 3E 0049r 06		     cmp     crt_mode,6
   5220	F5B0  1F			     pop     ds		     ; восстановить	указатель     +
   5221				     таблицы
   5222	F5B1  72 2C			     jc	     s7	     ; проверка	для средней		       +
   5223				     разрешающей способности
   5224
   5225				     ;	 Высокая	разрешающая способность
   5226	F5B3			     s3:
   5227	F5B3  57			     push    di		     ; сохранить указатель	       +
   5228				     области
   5229	F5B4  56			     push    si		     ; сохранить указатель кода
   5230	F5B5  B6 04			     mov     dh,4	     ; количество циклов
   5231	F5B7			     s4:
   5232	F5B7  AC			     lodsb		     ; выборка четного байта
   5233	F5B8  F6 C3 80			     test    bl,80h
   5234	F5BB  75 16			     jnz     s6
   5235	F5BD  AA			     stosb
   5236	F5BE  AC			     lodsb
   5237	F5BF			     s5:
   5238	F5BF  26: 88 85	1FFF		     mov es:[di+1fffh],al    ; запомнить во второй части
   5239	F5C4  83 C7 4F			     add     di,79	     ; передать	следующую строку
   5240	F5C7  FE CE			     dec     dh		     ; выполнить цикл
   5241	F5C9  75 EC			     jnz     s4
   5242	F5CB  5E			     pop     si
   5243	F5CC  5F			     pop     di		     ; восстановить	указатель     +
   5244				     области
   5245	F5CD  47			     inc     di	     ; указать на следующую позицию   +
   5246				     символа
   5247	F5CE  E2 E3			     loop    s3		     ; записать	последующие	       +
   5248				     символы
   5249	F5D0  E9 FBF4			     jmp     video_return
   5250
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 106
1840v4.asm



   5251	F5D3			     s6:
   5252	F5D3  26: 32 05			     xor al,es:[di]
   5253	F5D6  AA			     stosb		     ; запомнить код
   5254	F5D7  AC			     lodsb		     ; выборка нечетного символа
   5255	F5D8  26: 32 85	1FFF		     xor  al,es:[di+1fffh]
   5256	F5DD  EB E0			     jmp     s5		     ; повторить
   5257
   5258				     ;	 Средняя	разрешающая способность записи
   5259	F5DF			     s7:
   5260	F5DF  8A D3			     mov     dl,bl	     ; сохранить старший бит	       +
   5261				     цвета
   5262	F5E1  D1 E7			     sal     di,1    ; умножить	на 2,	т.к. два		       +
   5263				     байта/символа
   5264	F5E3  E8 00D1			     call    s19	     ; расширение BL до полного     +
   5265				     слова	цвета
   5266	F5E6			     s8:
   5267	F5E6  57			     push    di
   5268	F5E7  56			     push    si
   5269	F5E8  B6 04			     mov     dh,4	     ; число циклов
   5270	F5EA			     s9:
   5271	F5EA  AC			     lodsb		     ; получить	код точки
   5272	F5EB  E8 00DE			     call    s21	     ; продублировать
   5273	F5EE  23 C3			     and     ax,bx	     ; окрашивание в заданный      +
   5274				     цвет
   5275	F5F0  F6 C2 80			     test    dl,80h
   5276	F5F3  74 07			     jz	     s10
   5277	F5F5  26: 32 25			     xor     ah,es:[di]	     ; выполнить функцию XOR со      +
   5278				     "старым"
   5279	F5F8  26: 32 45	01		     xor     al,es:[di+1]    ; и "новым" цветами
   5280	F5FC  26: 88 25		     s10:    mov  es:[di],ah	     ; запомнить первый байт
   5281	F5FF  26: 88 45	01		     mov es:[di+1],al	     ; запомнить второй байт
   5282	F603  AC			     lodsb		     ; получить	код точки
   5283	F604  E8 00C5			     call    s21
   5284	F607  23 C3			     and     ax,bx	     ; окрашивание нечетного       +
   5285				     байта
   5286	F609  F6 C2 80			     test    dl,80h
   5287	F60C  74 0A			     jz	 s11
   5288	F60E  26: 32 A5	2000		     xor     ah,es:[di+2000h]	; из первой половины
   5289	F613  26: 32 85	2001		     xor     al,es:[di+2001h]	; и из второй половины
   5290	F618  26: 88 A5	2000	     s11:    mov     es:[di+2000h],ah
   5291	F61D  26: 88 85	2001		     mov     es:[di+2001h],al	; запомнить вторую часть   +
   5292				     буфера
   5293	F622  83 C7 50			     add     di,80	     ; указать следующую ячейку
   5294	F625  FE CE			     dec     dh
   5295	F627  75 C1			     jnz     s9		     ; повторить
   5296	F629  5E			     pop     si
   5297	F62A  5F			     pop     di
   5298	F62B  83 C7 02			     add     di,2	     ; переход к следующему	       +
   5299				     символу
   5300	F62E  E2 B6			     loop    s8		     ; режим записи
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 107
1840v4.asm



   5301	F630  E9 FB94			     jmp     video_return
   5302	F633			     graphics_write  endp
   5303				     ;-------------------------------------
   5304				     ;graphics_read
   5305				     ;
   5306				     ;	 Программа считывает символ в режиме	       +
   5307				     графики
   5308				     ;
   5309				     ;-------------------------------------
   5310	F633			     graphics_read   proc    near
   5311	F633  E8 00D6			     call    s26
   5312	F636  8B F0			     mov     si,ax	     ; сохранить в SI
   5313	F638  83 EC 08			     sub     sp,8	     ; зарезервировать в стеке 8  +
   5314				     байт для
   5315								     ; записи символа из	буфера   +
   5316				     дисплея
   5317	F63B  8B EC			     mov     bp,sp	     ; указатель для хранения      +
   5318				     области
   5319
   5320				     ;	 Определение	режима графики
   5321
   5322	F63D  80 3E 0049r 06		     cmp     crt_mode,6
   5323	F642  06			     push    es
   5324	F643  1F			     pop     ds		     ; указать сегмент
   5325	F644  72 1A			     jc	     s13	     ; средняя разрешающая	       +
   5326				     способность
   5327
   5328				     ;	Высокая разрешающая способность для	       +
   5329				     считавания
   5330
   5331	F646  B6 04			     mov     dh,4
   5332	F648			     s12:
   5333	F648  8A 04			     mov     al,byte ptr [si]	; получить первый	байт
   5334	F64A  88 46 00			     mov byte ptr [bp],al	; запомнить в	памяти
   5335	F64D  45			     inc     bp
   5336	F64E  8A 84 2000		     mov al,byte ptr [si+2000h]	  ; получить младший байт
   5337	F652  88 46 00			     mov byte ptr [bp],al
   5338	F655  45			     inc     bp
   5339	F656  83 C6 50			     add     si,80	     ; переход на следующую	       +
   5340				     четную строку
   5341	F659  FE CE			     dec     dh
   5342	F65B  75 EB			     jnz     s12	     ; повторить
   5343	F65D  EB 17			     jmp     short s15	     ; переход к хранению кодов   +
   5344				     точек
   5345	F65F  90			     nop
   5346
   5347				     ;	 Средняя	разрешающая способность для	       +
   5348				     считывания
   5349	F660			     s13:
   5350	F660  D1 E6			     sal     si,1      ; смещение умножить на	2, т.к. 2    +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 108
1840v4.asm



   5351				     байта/символа
   5352	F662  B6 04			     mov     dh,4
   5353	F664			     s14:
   5354	F664  E8 0088			     call    s23
   5355	F667  81 C6 2000		     add     si,2000h
   5356	F66B  E8 0081			     call    s23
   5357	F66E  81 EE 1FB0		     sub     si,2000h-80
   5358	F672  FE CE			     dec     dh
   5359	F674  75 EE			     jnz     s14	     ; повторить
   5360
   5361				     ;	 Сохранить
   5362	F676			     s15:
   5363	F676  BF FA6Er			     mov     di,offset crt_char_gen   ;	смещение
   5364	F679  0E			     push    cs
   5365	F67A  07			     pop     es
   5366	F67B  83 ED 08			     sub     bp,8	     ; восстановить	начальный     +
   5367				     адрес
   5368	F67E  8B F5			     mov     si,bp
   5369	F680  FC			     cld		     ; установить направление
   5370	F681  B0 00			     mov     al,0
   5371	F683			     s16:
   5372	F683  16			     push    ss
   5373	F684  1F			     pop     ds
   5374	F685  BA 0080			     mov     dx,128	     ; количество символов
   5375	F688			     s17:
   5376	F688  56			     push    si
   5377	F689  57			     push    di
   5378	F68A  B9 0008			     mov     cx,8	     ; количество байт в	символе
   5379	F68D  F3> A6			     repe    cmpsb	     ; сравнить
   5380	F68F  5F			     pop     di
   5381	F690  5E			     pop     si
   5382	F691  74 1E			     jz	     s18	     ; если	признак = 0,символы      +
   5383				     сравнились
   5384	F693  FE C0			     inc     al		     ; не сравнились
   5385	F695  83 C7 08			     add     di,8	     ; следующий код точки
   5386	F698  4A			     dec     dx		     ; - 1 из	счетчика
   5387	F699  75 ED			     jnz     s17	     ; повторить
   5388
   5389
   5390	F69B  3C 00			     cmp     al,0
   5391	F69D  74 12			     je	     s18    ; переход, если все сканировано,  +
   5392				     но символ
   5393							    ; не найден
   5394	F69F  2B C0			     sub     ax,ax
   5395	F6A1  8E D8			     mov     ds,ax	     ; установить адресацию	       +
   5396				     вектора
   5397					     assume  ds:abs0
   5398	F6A3  C4 3E 007Cr		     les     di,ext_ptr
   5399	F6A7  8C C0			     mov     ax,es
   5400	F6A9  0B C7			     or	     ax,di
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 109
1840v4.asm



   5401	F6AB  74 04			     jz	     s18
   5402	F6AD  B0 80			     mov     al,128	     ; начало второй части
   5403	F6AF  EB D2			     jmp     short s16	     ; вернуться и повторить
   5404					     assume  ds:data
   5405
   5406	F6B1			     s18:
   5407	F6B1  83 C4 08			     add     sp,8
   5408	F6B4  E9 FB10			     jmp     video_return
   5409	F6B7			     graphics_read   endp
   5410
   5411				     ;---------------------------------
   5412				     ;
   5413				     ;	 Эта	программа заполняет регистр BX	двумя     +
   5414				     младшими битами
   5415				     ; регистра	BL.
   5416				     ;
   5417				     ;	 ВХОД
   5418				     ;		BL - используемый цвет (младшие два бита).
   5419				     ;
   5420				     ;	 ВЫХОД
   5421				     ;		BX - используемый цвет (восемь		       +
   5422				     повторений двух битов цвета).
   5423				     ;
   5424				     ;---------------------------------
   5425	F6B7			     s19     proc    near
   5426	F6B7  80 E3 03			     and     bl,3	     ; выделить	биты цвета
   5427	F6BA  8A C3			     mov     al,bl	     ; переписать в AL
   5428	F6BC  51			     push    cx		     ; сохранить регистр
   5429	F6BD  B9 0003			     mov     cx,3	     ; количество повторений
   5430	F6C0			     s20:
   5431	F6C0  D0 E0			     sal     al,1
   5432	F6C2  D0 E0			     sal     al,1	     ; сдвиг влево на 2
   5433	F6C4  0A D8			     or	     bl,al	     ; в BL накапливается		       +
   5434				     результат
   5435	F6C6  E2 F8			     loop    s20	     ; цикл
   5436	F6C8  8A FB			     mov     bh,bl	     ; заполнить
   5437	F6CA  59			     pop     cx
   5438	F6CB  C3			     ret		     ; все выполнено
   5439	F6CC			     s19     endp
   5440				     ;--------------------------------------
   5441				     ;
   5442				     ;	 Эта	программа берет байт в AL и	удваивает     +
   5443				     все биты, превращая
   5444				     ; 8 бит	в 16 бит. Результат помещается в AX.
   5445				     ;--------------------------------------
   5446	F6CC			     s21     proc    near
   5447	F6CC  52			     push    dx		     ; сохранить регистры
   5448	F6CD  51			     push    cx
   5449	F6CE  53			     push    bx
   5450	F6CF  BA 0000			     mov     dx,0	     ; результат удвоения
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 110
1840v4.asm



   5451	F6D2  B9 0001			     mov     cx,1	     ; маска
   5452	F6D5			     s22:
   5453	F6D5  8B D8			     mov     bx,ax
   5454	F6D7  23 D9			     and     bx,cx	     ; выделение бита
   5455	F6D9  0B D3			     or	     dx,bx	     ; накапливание	результата
   5456	F6DB  D1 E0			     shl     ax,1
   5457	F6DD  D1 E1			     shl     cx,1	     ; сдвинуть	базу и маску на 1
   5458	F6DF  8B D8			     mov     bx,ax
   5459	F6E1  23 D9			     and     bx,cx
   5460	F6E3  0B D3			     or	     dx,bx
   5461	F6E5  D1 E1			     shl     cx,1    ; сдиг	маски, для выделения	       +
   5462				     следующего бита
   5463	F6E7  73 EC			     jnc     s22
   5464	F6E9  8B C2			     mov     ax,dx
   5465	F6EB  5B			     pop     bx		     ; восстановить	регистры
   5466	F6EC  59			     pop     cx
   5467	F6ED  5A			     pop     dx
   5468	F6EE  C3			     ret		     ; к выходу из прерывания
   5469	F6EF			     s21     endp
   5470
   5471				     ;----------------------------------
   5472				     ;
   5473				     ;	 Эта	программа преобразовывает		       +
   5474				     двух-битовое представление	точки
   5475				     ; (C1,C0) в однобитовое
   5476				     ; (C1,C0) к однобитовому.
   5477				     ;
   5478				     ;----------------------------------
   5479	F6EF			     s23     proc    near
   5480	F6EF  8A 24			     mov     ah,byte ptr [si]	; получить первый	байт
   5481	F6F1  8A 44 01			     mov     al,byte ptr [si+1]	  ; получить второй байт
   5482	F6F4  B9 C000			     mov     cx,0c000h	     ; 2 бита маски
   5483	F6F7  B2 00			     mov     dl,0	     ; регистр результата
   5484	F6F9			     s24:
   5485	F6F9  85 C1			     test    ax,cx	     ; проверка	2 младших бит	AX на+
   5486				     0
   5487	F6FB  F8			     clc		     ; сбросить	признак переноса+
   5488				     CF
   5489	F6FC  74 01			     jz	     s25	     ; переход если 0
   5490	F6FE  F9			     stc		     ; нет -	установить CF
   5491	F6FF  D0 D2		     s25:    rcl     dl,1	     ; циклический сдвиг
   5492	F701  D1 E9			     shr     cx,1
   5493	F703  D1 E9			     shr     cx,1
   5494	F705  73 F2			     jnc     s24	     ; повторить, если CF=1
   5495	F707  88 56 00			     mov byte ptr [bp],dl    ; запомнить результат
   5496	F70A  45			     inc     bp
   5497	F70B  C3			     ret		     ; к выходу из прерывания
   5498	F70C			     s23     endp
   5499
   5500				     ;---------------------------------------
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 111
1840v4.asm



   5501				     ;
   5502				     ;	 Эта	программа определает	положение	       +
   5503				     курсора относительно	мяти и
   5504				     ; начала буфера в режиме графики			       +
   5505				     /символ
   5506				     ;
   5507				     ;	 ВЫХОД
   5508				     ;		AX  содержит смещение курсора
   5509				     ;
   5510				     ;-----------------------------------------
   5511	F70C			     s26     proc    near
   5512	F70C  A1 0050r			     mov     ax,cursor_posn  ; получить	текущее		       +
   5513				     положение	курсора
   5514	F70F			     graph_posn	     label   near
   5515	F70F  53			     push    bx		     ; сохранить регистр
   5516	F710  8B D8			     mov     bx,ax	     ; сохранить текущее	       +
   5517				     положение	курсора
   5518	F712  8A C4			     mov     al,ah	     ; строка
   5519	F714  F6 26 004Ar		     mul     byte ptr crt_cols	 ; умножить на байт/колонку
   5520	F718  D1 E0			     shl     ax,1	     ; умножить	на 4
   5521	F71A  D1 E0			     shl     ax,1
   5522	F71C  2A FF			     sub     bh,bh	     ; выделить	значение колонки
   5523	F71E  03 C3			     add     ax,bx	     ; определить смещение
   5524	F720  5B			     pop     bx
   5525	F721  C3			     ret		     ; к выходу из прерывания
   5526	F722			     s26     endp
   5527
   5528				     ;----------------------------------------
   5529				     ;
   5530				     ;	 Записать телетайп (INT	10H, AH=14)
   5531				     ;
   5532				     ;	 Эта	программа выводит символ в буфер ЭЛИ с +
   5533				     одновременной	уста-
   5534				     ; новкой позиции курсора и передвижением	       +
   5535				     курсора на экране.
   5536				     ;	 После записи символа	в последнюю позицию   +
   5537				     строки выполняется ав-
   5538				     ; томатический	переход на новую строку. Если  +
   5539				     страница экрана за-
   5540				     ; полнена (позиция курсора 24,79/39),	выполняется +
   5541				     перемещение экрана
   5542				     ; на одну строку вверх. Освободившаяся строка+
   5543				     заполняется значением
   5544				     ; атрибута	символа (для алфавитно-цифрового   +
   5545				     режима). Для графики цвет=00
   5546				     ; После записи очередного символа курсор	       +
   5547				     установлен в следующую	позицию.
   5548				     ;
   5549				     ;	 ВХОД
   5550				     ;		AL - код выводимого символа,
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 112
1840v4.asm



   5551				     ;		BL - цвет переднего плана для графики.
   5552				     ;
   5553				     ;----------------------------------------
   5554
   5555					     assume  cs:code,ds:data
   5556	F722			     write_tty	     proc    near
   5557	F722  50			     push    ax		     ; сохранить регистры
   5558	F723  50			     push    ax
   5559	F724  B4 03			     mov     ah,3
   5560	F726  CD 10			     int     10h	     ; считать положение	       +
   5561				     текущего курсора
   5562	F728  58			     pop     ax		     ; восстановить	символ
   5563
   5564				     ;	 DX содержит текущую позицию курсора
   5565
   5566	F729  3C 08			     cmp     al,8	     ; есть	возврат на одну	       +
   5567				     позицию ?
   5568	F72B  74 59			     je	     u8		     ; возврат на одну позицию
   5569	F72D  3C 0D			     cmp     al,0dh	     ; есть	возврат каретки ?
   5570	F72F  74 5E			     je	     u9		     ; возврат каретки
   5571	F731  3C 0A			     cmp     al,0ah	     ; есть	граница поля	?
   5572	F733  74 5E			     je	     u10	     ; граница поля
   5573	F735  3C 07			     cmp     al,07h	     ; звуковой	сигнал ?
   5574	F737  74 61			     je	     u11	     ; звуковой	сигнал
   5575
   5576				     ;	 Запись символа на экран
   5577
   5578	F739  8A 3E 0062r		     mov     bh,active_page
   5579	F73D  B4 0A			     mov     ah,10	     ; запись символа без	       +
   5580				     атрибута
   5581	F73F  B9 0001			     mov     cx,1
   5582	F742  CD 10			     int     10h
   5583
   5584				     ;	 Положение курсора для следующего символа
   5585
   5586	F744  FE C2			     inc     dl
   5587	F746  3A 16 004Ar		     cmp     dl,byte ptr crt_cols
   5588	F74A  75 36			     jnz     u7		     ; переход к установке	       +
   5589				     курсора
   5590	F74C  B2 00			     mov     dl,0
   5591	F74E  80 FE 18			     cmp     dh,24	     ; проверка	граничной строки
   5592	F751  75 2D			     jnz     u6		     ; установить курсор
   5593
   5594				     ;	 Сдвиг экрана
   5595	F753			     u1:
   5596
   5597	F753  B4 02			     mov     ah,2
   5598	F755  B7 00			     mov     bh,0
   5599	F757  CD 10			     int     10h	     ; установить курсор
   5600
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 113
1840v4.asm



   5601
   5602	F759  A0 0049r			     mov     al,crt_mode     ; получить	текущий режим
   5603	F75C  3C 04			     cmp     al,4
   5604	F75E  72 06			     jc	     u2		     ; считывание курсора
   5605	F760  3C 07			     cmp     al,7
   5606	F762  B7 00			     mov     bh,0	     ; цвет	заднего плана
   5607	F764  75 06			     jne     u3
   5608
   5609	F766			     u2:			     ; считывание курсора
   5610	F766  B4 08			     mov     ah,8
   5611	F768  CD 10			     int     10h	; считать символ/атрибут	       +
   5612				     текущего курсора
   5613	F76A  8A FC			     mov     bh,ah	     ; запомнить в BH
   5614
   5615				     ;	 Перемещение	экрана на одну строку	вверх
   5616
   5617	F76C			     u3:
   5618	F76C  B8 0601			     mov     ax,601h
   5619	F76F  B9 0000			     mov     cx,0	     ; верхний левый угол
   5620	F772  B6 18			     mov     dh,24	     ; координаты нижнего	       +
   5621				     правого
   5622	F774  8A 16 004Ar		     mov     dl,byte ptr crt_cols    ; угла
   5623	F778  FE CA			     dec     dl
   5624	F77A			     u4:
   5625	F77A  CD 10			     int     10h
   5626
   5627				     ;	 Выход из прерывания
   5628
   5629	F77C			     u5:
   5630	F77C  58			     pop     ax		     ; восстановить	символ
   5631	F77D  E9 FA47			     jmp     video_return    ; возврат к программе
   5632
   5633	F780			     u6:			     ; установить курсор
   5634	F780  FE C6			     inc     dh		     ; следующая строка
   5635	F782			     u7:			     ; установить курсор
   5636	F782  B4 02			     mov     ah,2
   5637	F784  EB F4			     jmp     short u4	     ; установить новый курсор
   5638
   5639				     ;	 Сдвиг курсора на	одну позицию	влево
   5640
   5641	F786			     u8:
   5642	F786  80 FA 00			     cmp     dl,0
   5643	F789  74 F7			     je	     u7		     ; установить курсор
   5644	F78B  FE CA			     dec     dl		     ; нет -	снова его передать
   5645	F78D  EB F3			     jmp     short u7
   5646
   5647				     ;	 Перемещение	курсора в начало строки
   5648
   5649	F78F			     u9:
   5650	F78F  B2 00			     mov     dl,0
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 114
1840v4.asm



   5651	F791  EB EF			     jmp     short u7	     ; установить курсор
   5652
   5653				     ;	 Перемещение	курсора на следующую строку
   5654
   5655	F793			     u10:
   5656	F793  80 FE 18			     cmp     dh,24	     ; последняя строка экрана
   5657	F796  75 E8			     jne     u6		     ; да - сдвиг экрана
   5658	F798  EB B9			     jmp     short u1	     ; нет -	снова установить	       +
   5659				     курсор
   5660
   5661				     ;	 Звуковой сигнал
   5662
   5663	F79A			     u11:
   5664	F79A  B3 02			     mov     bl,2	     ; уст длительность		       +
   5665				     звукового	сигнала
   5666	F79C  E8 EE0A			     call    beep	     ; звук
   5667	F79F  EB DB			     jmp     short u5	     ; возврат
   5668	F7A1			     write_tty	     endp
   5669
   5670				     ;
   5671				     ;----------------------------------------
   5672				     ;
   5673				     ;	 Эта	программа считывает положение	       +
   5674				     светового	пера.
   5675				     ; Проверяется переключатель и триггер	       +
   5676				     светового	пера. Если бит 1 ре-
   5677				     ; гистра состояния (порт 3DA)=1, то триггер	       +
   5678				     установлен. Если бит 2 порта
   5679				     ; 3DA=0, то установлен	переключатель.
   5680				     ;	 Порты 3BD	и 3DC используются	для установки и   +
   5681				     сброса триггера и пере-
   5682				     ; ключателя светового пера.
   5683				     ;	 В регистрах R16 и R17 контроллера содержится  +
   5684				     адрес	координат пера
   5685				     ; относительно	начала буфера дисплея.
   5686				     ;	 Если триггер и переключатель установлены, +
   5687				     то программа определяет
   5688				     ; положение светового пера, в противном	       +
   5689				     случае, возврат без выдачи
   5690				     ; информации.
   5691				     ;
   5692				     ;	 В ППЭВМ ЕС1841	функция не поддерживается
   5693				     ;-------------------------------------------------
   5694
   5695
   5696
   5697
   5698					     assume  cs:code,ds:data
   5699
   5700				     ;	 Таблица	поправок для	получения		       +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 115
1840v4.asm



   5701				     фактических координат светового пера
   5702
   5703	F7A1			     v1	     label   byte
   5704	F7A1  03 03 05 05 03 03	03+	     db	     3,3,5,5,3,3,3,4
   5705	      04
   5706
   5707	F7A9			     read_lpen	     proc    near
   5708
   5709
   5710	F7A9  B4 00			     mov     ah,0	     ; код возврата,	если перо не +
   5711				     включено
   5712	F7AB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес 6845
   5713	F7AF  83 C2 06			     add     dx,6	     ; указать регистр состояния
   5714	F7B2  EC			     in	     al,dx	     ; получить	регистр		       +
   5715				     состояния
   5716	F7B3  A8 04			     test    al,4	     ; проверить переключатель   +
   5717				     светового	пера
   5718	F7B5  75 78			     jnz     v6		     ; не установлено, возврат
   5719
   5720				     ;	 Проверка триггера светового пера
   5721
   5722	F7B7  A8 02			     test    al,2	     ; проверить триггер	       +
   5723				     светового	пера
   5724	F7B9  74 7E			     jz	     v7		     ; возврат без сброса	       +
   5725				     триггера
   5726
   5727				     ;	 Триггер	был установлен, считать значение в+
   5728				     AH
   5729
   5730	F7BB  B4 10			     mov     ah,16	     ; уст регистры светового      +
   5731				     пера 6845
   5732
   5733				     ;	 Ввод регистров, указанных AH и			       +
   5734				     преобразование в строки колонки в DX
   5735
   5736	F7BD  8B 16 0063r		     mov     dx,addr_6845
   5737	F7C1  8A C4			     mov     al,ah
   5738	F7C3  EE			     out     dx,al	     ; вывести в порт
   5739	F7C4  42			     inc     dx
   5740	F7C5  EC			     in	     al,dx	     ; получить	значение из порта
   5741	F7C6  8A E8			     mov     ch,al	     ; сохранить его в CX
   5742	F7C8  4A			     dec     dx		     ; регистр адреса
   5743	F7C9  FE C4			     inc     ah
   5744	F7CB  8A C4			     mov     al,ah	     ; второй регистр данных
   5745	F7CD  EE			     out     dx,al
   5746	F7CE  42			     inc     dx
   5747	F7CF  EC			     in	     al,dx	     ; получить	второе значение  +
   5748				     данных
   5749	F7D0  8A E5			     mov     ah,ch	     ; AX содержит координаты	       +
   5750				     светового	пера
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 116
1840v4.asm



   5751
   5752
   5753	F7D2  8A 1E 0049r		     mov     bl,crt_mode
   5754	F7D6  2A FF			     sub     bh,bh	     ; выделить	значение режима  +
   5755				     в	BX
   5756	F7D8  2E: 8A 9F	F7A1r		     mov     bl,cs:v1[bx]    ; значение	поправки
   5757	F7DD  2B C3			     sub     ax,bx
   5758	F7DF  2B 06 004Er		     sub     ax,crt_start
   5759
   5760	F7E3  79 03			     jns     v2
   5761	F7E5  B8 0000			     mov     ax,0	     ; поместить 0
   5762
   5763				     ;	 Определить режим
   5764
   5765	F7E8			     v2:
   5766	F7E8  B1 03			     mov     cl,3	     ; установить счетчик
   5767	F7EA  80 3E 0049r 04		     cmp     crt_mode,4	     ; определить, режим	графики +
   5768				     или
   5769								     ; альфа
   5770	F7EF  72 2A			     jb	     v4		     ; альфа-перо
   5771	F7F1  80 3E 0049r 07		     cmp     crt_mode,7
   5772	F7F6  74 23			     je	     v4		     ; альфа-перо
   5773
   5774				     ;	 Графический	режим
   5775
   5776	F7F8  B2 28			     mov     dl,40	     ; делитель	для графики
   5777	F7FA  F6 F2			     div     dl	     ; определение строки (AL)	и	       +
   5778				     колонки (AH)
   5779								     ; пределы AL 0-99, AH 0-39
   5780
   5781				     ;	 Определение	положения строки	для графики
   5782
   5783	F7FC  8A E8			     mov     ch,al	     ; сохранить значение строки+
   5784				     в	CH
   5785	F7FE  02 ED			     add     ch,ch	     ; умножить	на 2			       +
   5786				     четно/нечетное поле
   5787	F800  8A DC			     mov     bl,ah	     ; значение	колонки в BX
   5788	F802  2A FF			     sub     bh,bh	     ; умножить	на 8 для среднего +
   5789				     результата
   5790	F804  80 3E 0049r 06		     cmp     crt_mode,6	     ; определить среднюю или      +
   5791				     наивысшую
   5792								     ; разрешающую способность
   5793	F809  75 04			     jne     v3		     ; не наивысшая разрешающая  +
   5794				     способность
   5795	F80B  B1 04			     mov     cl,4     ;	сдвинуть значение наивысшей   +
   5796				     разрешающей
   5797							      ;	способности
   5798	F80D  D0 E4			     sal     ah,1    ; сдвиг на 1 разряд влево	       +
   5799				     значения колонки
   5800	F80F			     v3:			     ; не наивысшая разрешающая  +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 117
1840v4.asm



   5801				     способность
   5802	F80F  D3 E3			     shl     bx,cl   ; умножить	на 16	для наивысшей      +
   5803				     разрешающей
   5804							     ; способности
   5805
   5806				     ;	 Определение	положения символа для альфа
   5807
   5808	F811  8A D4			     mov     dl,ah	     ; значение	колонки для	       +
   5809				     возврата
   5810	F813  8A F0			     mov     dh,al	     ; значение	строки
   5811	F815  D0 EE			     shr     dh,1	     ; делить на 4
   5812	F817  D0 EE			     shr     dh,1	     ; для значения в пределах 0-24
   5813	F819  EB 12			     jmp     short v5	     ; возврат светового пера
   5814
   5815				     ;	 Режим альфа светового пера
   5816
   5817	F81B			     v4:			     ; альфа светового пера
   5818	F81B  F6 36 004Ar		     div     byte ptr crt_cols	; строка,	колонка
   5819	F81F  8A F0			     mov     dh,al	     ; строка в DH
   5820	F821  8A D4			     mov     dl,ah	     ; колонка в DL
   5821	F823  D2 E0			     sal     al,cl	     ; умножение строк на 8
   5822	F825  8A E8			     mov     ch,al
   5823	F827  8A DC			     mov     bl,ah
   5824	F829  32 FF			     xor     bh,bh
   5825	F82B  D3 E3			     sal     bx,cl
   5826	F82D			     v5:
   5827	F82D  B4 01			     mov     ah,1	     ; указать, что все		       +
   5828				     установлено
   5829	F82F			     v6:
   5830	F82F  52			     push    dx		     ; сохранить значение	       +
   5831				     возврата
   5832	F830  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   5833	F834  83 C2 07			     add     dx,7
   5834	F837  EE			     out     dx,al	     ; вывод
   5835	F838  5A			     pop     dx		     ; восстановить	значение
   5836	F839			     v7:
   5837	F839  5F			     pop     di		      ;	восстановить регистры
   5838	F83A  5E			     pop     si
   5839	F83B  1F			     pop     ds
   5840	F83C  1F			     pop     ds
   5841	F83D  1F			     pop     ds
   5842	F83E  1F			     pop     ds
   5843	F83F  07			     pop     es
   5844	F840  CF			     iret
   5845	F841			     read_lpen	     endp
   5846
   5847				     ;--- int 12 ------------------------------------
   5848				     ;
   5849				     ;	  Программа определения размера памяти.
   5850				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 118
1840v4.asm



   5851				     ;	  Эта программа передает в	регистр AX об'ем    +
   5852				     памяти в Кбайтах.
   5853				     ;
   5854				     ;-----------------------------------------
   5855
   5856					     assume  cs:code,ds:data
   5857	F841			     memory_size_determine   proc    far
   5858	F841  FB			     sti		     ; установить бит разрешения+
   5859				     прерывания
   5860	F842  1E			     push    ds		     ; сохранить сегмент
   5861	F843  B8 0040			     mov     ax,dat	     ; установить адресацию
   5862	F846  8E D8			     mov     ds,ax
   5863	F848  A1 0013r			     mov     ax,memory_size  ; получить	значение размера+
   5864				     памяти
   5865	F84B  1F			     pop     ds		     ; восстановить	сегмент
   5866	F84C  CF			     iret		     ; возврат из прерывания
   5867	F84D			     memory_size_determine   endp
   5868
   5869				     ;--- int 11-------------------------------
   5870				     ;
   5871				     ;	  Программа определения состава		       +
   5872				     оборудования.
   5873				     ;
   5874				     ;	 Эта	программа передает в регистр AX	       +
   5875				     конфигурацию системы.
   5876				     ;
   5877				     ;	 Разряды	регистра AX имеют следующее	       +
   5878				     значение:
   5879				     ;	 0	 - загрузка системы с НГМД;
   5880				     ;	 5,4	 - тип подключенного ЭЛИ и режим его       +
   5881				     работы:
   5882				     ;		   00 -	не используется;
   5883				     ;		   01 -	40х25,	черно-белый режим цветного      +
   5884				     графического
   5885				     ;			ЭЛИ;
   5886				     ;		   10 -	80х25,	черно-белый режим цветного      +
   5887				     графического
   5888				     ;			ЭЛИ;
   5889				     ;		   11 -	80х25,	черно-белый режим		       +
   5890				     монохромного ЭЛИ.
   5891				     ;	 7,6	 - количество	НГМД;
   5892				     ;	 11,10,9 - количество	адаптеров стыка С2;
   5893				     ;	 12	 - адаптер игр;
   5894				     ;	 15,14	 - количество	печатающих устройств.
   5895				     ;	 Разряды	6 и 7 устанавливаются только в том   +
   5896				     случае, если
   5897				     ; разряд 0 установлен в "1".
   5898				     ;
   5899				     ;----------------------------------------------
   5900
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 119
1840v4.asm



   5901					     assume  cs:code,ds:data
   5902	F84D			     equipment	     proc    far
   5903	F84D  FB			     sti		     ; установить признак	       +
   5904				     разрешения прерывания
   5905	F84E  1E			     push    ds		     ; сохранить сегмент
   5906	F84F  B8 0040			     mov     ax,dat	     ; установить адресацию
   5907	F852  8E D8			     mov     ds,ax
   5908	F854  A1 0010r			     mov     ax,equip_flag   ; получить	конфигурацию       +
   5909				     системы
   5910	F857  1F			     pop     ds		     ; восстановить	сегмент
   5911	F858  CF			     iret		     ; возврат из прерывания
   5912	F859			     equipment	     endp
   5913
   5914				     ;****************************************
   5915				     ;
   5916				     ;	 Загрузка знакогенератора
   5917				     ;
   5918				     ;****************************************
   5919
   5920	F859			     bct     proc    near
   5921	F859  B8 DC00			     mov     ax,0dc00h
   5922	F85C  8E C0			     mov     es,ax
   5923	F85E  B9 1400			     mov     cx,1400h
   5924	F861  BA 03B8			     mov     dx,3b8h
   5925	F864  33 C0			     xor     ax,ax
   5926	F866  EE			     out     dx,al
   5927	F867  33 FF			     xor     di,di
   5928	F869  FC			     cld
   5929	F86A  F3> AB			     rep     stosw
   5930	F86C  BE FA6Er		     bct3:   mov     si,offset crt_char_gen
   5931	F86F  33 FF			     xor     di,di
   5932	F871  33 C0			     xor     ax,ax
   5933	F873  B1 80			     mov     cl,128
   5934	F875			     bct1:
   5935	F875  B3 08			     mov     bl,8
   5936	F877  2E: 8A 04		     bct2:   mov     al,cs:[si]
   5937	F87A  46			     inc     si
   5938	F87B  26: 89 05			     mov     word ptr es:[di],ax
   5939	F87E  47			     inc     di
   5940	F87F  47			     inc     di
   5941	F880  FE CB			     dec     bl
   5942	F882  75 F3			     jnz     bct2
   5943	F884  83 C7 10			     add     di,10h
   5944	F887  FE C9			     dec     cl
   5945	F889  75 EA				     jnz     bct1
   5946	F88B  B0 01				     mov     al, 1
   5947	F88D  EE				     out     dx, al
   5948	F88E  B8 B800				     mov     ax, 0B800h
   5949	F891  8E C0				     mov     es, ax
   5950	F893  B0 01				     mov     al, 1
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 120
1840v4.asm



   5951	F895  BA 03DF				     mov     dx, 3DFh
   5952	F898  EE				     out     dx, al
   5953	F899  BA 03D8				     mov     dx, 3D8h
   5954	F89C  EC				     in	     al, dx
   5955	F89D  8A D8				     mov     bl, al
   5956	F89F  B0 00				     mov     al, 0
   5957	F8A1  EE				     out     dx, al
   5958	F8A2  33 FF				     xor     di, di
   5959	F8A4  B9 0400				     mov     cx, 1024
   5960	F8A7  33 C0				     xor     ax, ax
   5961	F8A9  FC				     cld
   5962	F8AA  F3> AB				     repe stosw
   5963	F8AC  BE FA6Er				     mov     si, offset	crt_char_gen
   5964	F8AF  B9 0400				     mov     cx, 1024
   5965	F8B2  33 FF				     xor     di, di
   5966
   5967	F8B4			     bct4:
   5968	F8B4  2E: 8A 04				     mov     al, cs:[si]
   5969	F8B7  26: 88 05				     mov     es:[di], al
   5970	F8BA  46				     inc     si
   5971	F8BB  47				     inc     di
   5972	F8BC  E2 F6				     loop    bct4
   5973	F8BE  B0 00				     mov     al, 0
   5974	F8C0  BA 03DF				     mov     dx, 3DFh
   5975	F8C3  EE				     out     dx, al
   5976	F8C4  BA 03D8				     mov     dx, 3D8h
   5977	F8C7  8A C3				     mov     al, bl
   5978	F8C9  EE				     out     dx, al
   5979	F8CA  C3				     ret
   5980	F8CB			     bct     endp
   5981
   5982				     ;
   5983				     ;	 Таблица	кодов русских маленьких букв	       +
   5984				     (строчных)
   5985				     ;
   5986	F8CB			     rust    label   byte
   5987	F8CB  1B 31 32 33 34 35	36+	     db	     1bh,'1234567890-='
   5988	      37 38 39 30 2D 3D
   5989
   5990
   5991	F8D8  08 09			     db	     08h,09h
   5992	F8DA  D9 E6 E3 DA D5 DD	D3+	     db	     0d9h,0e6h,0e3h,0dah,0d5h,0ddh,0d3h,0e8h
   5993	      E8
   5994
   5995	F8E2  E9 D7 D6 ED 0D FF	E4+	     db	     0e9h,0d7h,0d6h,0edh,0dh,-1,0e4h,0ebh
   5996	      EB
   5997
   5998	F8EA  D2 D0 DF E0 DE DB	D4+	     db	     0d2h,0d0h,0dfh,0e0h,0deh,0dbh,0d4h,';:'
   5999	      3B 3A
   6000
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 121
1840v4.asm



   6001	F8F3  D1 EE 5C EF E7 E1	DC+	     db	     0d1h,0eeh,5ch,0efh,0e7h,0e1h,0dch,0d8h
   6002	      D8
   6003
   6004	F8FB  E2 EC 2C 2E 2F E5	2A	     db	     0e2h,0ech,',./',0e5h,'*'
   6005
   6006	F902  FF 20 EA			     db	     -1,' ',0eah
   6007
   6008
   6009	F905			     k30     label   byte
   6010	F905  52 4F 50 51 4B 4C	4D	     db	     82,79,80,81,75,76,77
   6011
   6012	F90C  47 48 49			     db	     71,72,73
   6013				     ;---
   6014	F90F  10 11 12 13 14 15	16+	     db	     16,17,18,19,20,21,22,23
   6015	      17
   6016
   6017	F917  18 19 1E 1F 20 21	22+	     db	     24,25,30,31,32,33,34,35
   6018	      23
   6019
   6020	F91F  24 25 26 2C 2D 2E	2F+	     db	     36,37,38,44,45,46,47,48
   6021	      30
   6022
   6023	F927  31 32			     db	     49,50
   6024
   6025				     ;	     Временный	обработчик прерываний стыка С2
   6026
   6027	F929			     rs232_io:
   6028	F929  B8 61F0				     mov     ax, 61F0h
   6029	F92C  CF				     iret
   6030
   6031	F92D			     ex_memory:
   6032	F92D  F9				     stc
   6033	F92E  B4 86				     mov     ah, 86h
   6034	F930  CA 0002				     retf    2
   6035
   6036				     ;---
   6037	F933  F6 06 0017r 03	     k89:    test    kb_flag,left_shift+right_shift
   6038	F938  74 11			     jz	     k80
   6039	F93A  3C F0			     cmp     al,0f0h
   6040	F93C  74 23			     je	     k89a
   6041	F93E  3C B0			     cmp     al,0b0h
   6042	F940  72 06			     jb	     k81
   6043	F942  3C CF			     cmp     al,0cfh
   6044	F944  77 02			     ja	     k81
   6045	F946  04 20			     add     al,20h
   6046	F948  E9 EE94		     k81:    jmp     k61
   6047	F94B  3C F1		     k80:    cmp     al,0f1h
   6048	F94D  74 0D			     je	     k89b
   6049	F94F  3C D0			     cmp     al,0d0h
   6050	F951  72 F5			     jb	     k81
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 122
1840v4.asm



   6051	F953  3C FE			     cmp     al,0feh
   6052	F955  77 F1			     ja	     k81
   6053	F957  2C 20			     sub     al,20h
   6054	F959  E9 EE83			     jmp     k61
   6055	F95C  2C 01		     k89b:   sub     al,01h
   6056	F95E  E9 EE7E			     jmp     k61
   6057	F961  04 01		     k89a:   add     al,01h
   6058	F963  E9 EE79			     jmp     k61
   6059
   6060	F966			     write_tty2:
   6061	F966  8A 3E 0062r			     mov     bh, ds:active_page
   6062	F96A  E9 FDB5				     jmp     write_tty
   6063
   6064	F96D			     f19a:
   6065	F96D  42				     inc     dx
   6066	F96E  B0 08				     mov     al, 8
   6067	F970  EE				     out     dx, al
   6068	F971  BA 03FE				     mov     dx, 3FEh
   6069	F974  EE				     out     dx, al
   6070	F975  B0 A4				     mov     al, 0A4h
   6071	F977  E6 21				     out     inta01, al
   6072	F979  8B C6				     mov     ax, si
   6073	F97B  B1 03				     mov     cl, 3
   6074	F97D  E9 EBDC				     jmp     f19b
   6075
   6076	F980			     f20a:
   6077	F980  B0 80				     mov     al, 80h
   6078	F982  E6 A0				     out     0A0h, al
   6079	F984  B0 BC				     mov     al, 0BCh
   6080	F986  E6 21				     out     21h, al
   6081	F988  E9 EBE9				     jmp     f20b
   6082				     ;
   6083	F98B  50		     dummm_return:   push    ax
   6084	F98C  B0 20				     mov     al,20h
   6085	F98E  E6 20				     out     20h,al
   6086	F990  58				     pop     ax
   6087	F991  CF				     iret
   6088
   6089	F992  DC*(00)				     db	220 dup(0)
   6090
   6091				     ;**************************************
   6092				     ;
   6093				     ;	 Знакогенератор графический 320х200 и 640х200
   6094				     ;
   6095				     ;***************************************
   6096
   6097
   6098
   6099	FA6E			     crt_char_gen  label  byte
   6100	FA6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;d_00
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 123
1840v4.asm



   6101	      00
   6102
   6103	FA76  7E 81 A5 81 BD 99	81+	     db	     07eh,081h,0a5h,081h,0bdh,099h,081h,07eh ;d_01
   6104	      7E
   6105
   6106	FA7E  7E FF DB FF C3 E7	FF+	     db	     07eh,0ffh,0dbh,0ffh,0c3h,0e7h,0ffh,07eh ;d_02
   6107	      7E
   6108
   6109	FA86  6C FE FE FE 7C 38	10+	     db	     06ch,0feh,0feh,0feh,07ch,038h,010h,000h ;d_03
   6110	      00
   6111
   6112	FA8E  10 38 7C FE 7C 38	10+	     db	     010h,038h,07ch,0feh,07ch,038h,010h,000h ;d_04
   6113	      00
   6114
   6115	FA96  38 7C 38 FE FE 7C	38+	     db	     038h,07ch,038h,0feh,0feh,07ch,038h,07ch ;d_05
   6116	      7C
   6117
   6118	FA9E  10 10 38 7C FE 7C	38+	     db	     010h,010h,038h,07ch,0feh,07ch,038h,07ch ;d_06
   6119	      7C
   6120
   6121	FAA6  00 00 18 3C 3C 18	00+	     db	     000h,000h,018h,03ch,03ch,018h,000h,000h ;d_07
   6122	      00
   6123
   6124	FAAE  FF FF E7 C3 C3 E7	FF+	     db	     0ffh,0ffh,0e7h,0c3h,0c3h,0e7h,0ffh,0ffh ;d_08
   6125	      FF
   6126
   6127	FAB6  00 3C 66 42 42 66	3C+	     db	     000h,03ch,066h,042h,042h,066h,03ch,000h ;d_09
   6128	      00
   6129
   6130	FABE  FF C3 99 BD BD 99	C3+	     db	     0ffh,0c3h,099h,0bdh,0bdh,099h,0c3h,0ffh ;d_0a
   6131	      FF
   6132
   6133	FAC6  0F 07 0F 7D CC CC	CC+	     db	     00fh,007h,00fh,07dh,0cch,0cch,0cch,078h ;d_0b
   6134	      78
   6135
   6136	FACE  3C 66 66 66 3C 18	7E+	     db	     03ch,066h,066h,066h,03ch,018h,07eh,018h ;d_0c
   6137	      18
   6138
   6139	FAD6  3F 33 3F 30 30 70	F0+	     db	     03fh,033h,03fh,030h,030h,070h,0f0h,0e0h ;d_0d
   6140	      E0
   6141
   6142	FADE  7F 63 7F 63 63 67	E6+	     db	     07fh,063h,07fh,063h,063h,067h,0e6h,0c0h ;d_0e
   6143	      C0
   6144
   6145	FAE6  99 5A 3C E7 E7 3C	5A+	     db	     099h,05ah,03ch,0e7h,0e7h,03ch,05ah,099h ;d_0f
   6146	      99
   6147
   6148
   6149	FAEE  80 E0 F8 FE F8 E0	80+	     db	     080h,0e0h,0f8h,0feh,0f8h,0e0h,080h,000h ;d_10
   6150	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 124
1840v4.asm



   6151
   6152	FAF6  02 0E 3E FE 3E 0E	02+	     db	     002h,00eh,03eh,0feh,03eh,00eh,002h,000h ;d_11
   6153	      00
   6154
   6155	FAFE  18 3C 7E 18 18 7E	3C+	     db	     018h,03ch,07eh,018h,018h,07eh,03ch,018h ;d_12
   6156	      18
   6157
   6158	FB06  66 66 66 66 66 00	66+	     db	     066h,066h,066h,066h,066h,000h,066h,000h ;d_13
   6159	      00
   6160
   6161	FB0E  7F DB DB 7B 1B 1B	1B+	     db	     07fh,0dbh,0dbh,07bh,01bh,01bh,01bh,000h ;d_14
   6162	      00
   6163
   6164	FB16  3E 63 38 6C 6C 38	CC+	     db	     03eh,063h,038h,06ch,06ch,038h,0cch,078h ;d_15
   6165	      78
   6166
   6167	FB1E  00 00 00 00 7E 7E	7E+	     db	     000h,000h,000h,000h,07eh,07eh,07eh,000h ;d_16
   6168	      00
   6169
   6170	FB26  18 3C 7E 18 7E 3C	18+	     db	     018h,03ch,07eh,018h,07eh,03ch,018h,0ffh ;d_17
   6171	      FF
   6172
   6173	FB2E  18 3C 7E 18 18 18	18+	     db	     018h,03ch,07eh,018h,018h,018h,018h,000h ;d_18
   6174	      00
   6175
   6176	FB36  18 18 18 18 7E 3C	18+	     db	     018h,018h,018h,018h,07eh,03ch,018h,000h ;d_19
   6177	      00
   6178
   6179	FB3E  00 18 0C FE 0C 18	00+	     db	     000h,018h,00ch,0feh,00ch,018h,000h,000h ;d_1a
   6180	      00
   6181
   6182	FB46  00 30 60 FE 60 30	00+	     db	     000h,030h,060h,0feh,060h,030h,000h,000h ;d_1b
   6183	      00
   6184
   6185	FB4E  00 00 C0 C0 C0 FE	00+	     db	     000h,000h,0c0h,0c0h,0c0h,0feh,000h,000h ;d_1c
   6186	      00
   6187
   6188	FB56  00 24 66 FF 66 24	00+	     db	     000h,024h,066h,0ffh,066h,024h,000h,000h ;d_1d
   6189	      00
   6190
   6191	FB5E  00 18 3C 7E FF FF	00+	     db	     000h,018h,03ch,07eh,0ffh,0ffh,000h,000h ;d_1e
   6192	      00
   6193
   6194	FB66  00 FF FF 7E 3C 18	00+	     db	     000h,0ffh,0ffh,07eh,03ch,018h,000h,000h ;d_1f
   6195	      00
   6196
   6197
   6198	FB6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;sp d_20
   6199	      00
   6200
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 125
1840v4.asm



   6201	FB76  30 78 78 30 30 00	30+	     db	     030h,078h,078h,030h,030h,000h,030h,000h ;!	d_21
   6202	      00
   6203
   6204	FB7E  6C 6C 6C 00 00 00	00+	     db	     06ch,06ch,06ch,000h,000h,000h,000h,000h ;"d_22
   6205	      00
   6206
   6207	FB86  6C 6C FE 6C FE 6C	6C+	     db	     06ch,06ch,0feh,06ch,0feh,06ch,06ch,000h ;#	d_23
   6208	      00
   6209
   6210	FB8E  30 7C C0 78 0C F8	30+	     db	     030h,07ch,0c0h,078h,00ch,0f8h,030h,000h ;$	d_24
   6211	      00
   6212
   6213	FB96  00 C6 CC 18 30 66	C6+	     db	     000h,0c6h,0cch,018h,030h,066h,0c6h,000h ;per cent d_25
   6214	      00
   6215
   6216	FB9E  38 6C 38 76 DC CC	76+	     db	     038h,06ch,038h,076h,0dch,0cch,076h,000h ;&	d_26
   6217	      00
   6218
   6219	FBA6  60 60 C0 00 00 00	00+	     db	     060h,060h,0c0h,000h,000h,000h,000h,000h ;'	d_27
   6220	      00
   6221
   6222	FBAE  18 30 60 60 60 30	18+	     db	     018h,030h,060h,060h,060h,030h,018h,000h ;(	d_28
   6223	      00
   6224
   6225	FBB6  60 30 18 18 18 30	60+	     db	     060h,030h,018h,018h,018h,030h,060h,000h ;)	d_29
   6226	      00
   6227
   6228	FBBE  00 66 3C FF 3C 66	00+	     db	     000h,066h,03ch,0ffh,03ch,066h,000h,000h ;*	d_2a
   6229	      00
   6230
   6231	FBC6  00 30 30 FC 30 30	00+	     db	     000h,030h,030h,0fch,030h,030h,000h,000h ;+	d_2b
   6232	      00
   6233
   6234	FBCE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,060h ;,	d_2c
   6235	      60
   6236
   6237	FBD6  00 00 00 FC 00 00	00+	     db	     000h,000h,000h,0fch,000h,000h,000h,000h ;-	d_2d
   6238	      00
   6239
   6240	FBDE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,000h ;.	d_2e
   6241	      00
   6242
   6243	FBE6  06 0C 18 30 60 C0	80+	     db	     006h,00ch,018h,030h,060h,0c0h,080h,000h ;/	d_2f
   6244	      00
   6245
   6246
   6247	FBEE  7C C6 CE DE F6 E6	7C+	     db	     07ch,0c6h,0ceh,0deh,0f6h,0e6h,07ch,000h ;0	d_30
   6248	      00
   6249
   6250	FBF6  30 70 30 30 30 30	FC+	     db	     030h,070h,030h,030h,030h,030h,0fch,000h ;1	d_31
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 126
1840v4.asm



   6251	      00
   6252
   6253	FBFE  78 CC 0C 38 60 CC	FC+	     db	     078h,0cch,00ch,038h,060h,0cch,0fch,000h ;2	d_32
   6254	      00
   6255
   6256	FC06  78 CC 0C 38 0C CC	78+	     db	     078h,0cch,00ch,038h,00ch,0cch,078h,000h ;3	d_33
   6257	      00
   6258
   6259	FC0E  1C 3C 6C CC FE 0C	1E+	     db	     01ch,03ch,06ch,0cch,0feh,00ch,01eh,000h ;4	d_34
   6260	      00
   6261
   6262	FC16  FC C0 F8 0C 0C CC	78+	     db	     0fch,0c0h,0f8h,00ch,00ch,0cch,078h,000h ;5	d_35
   6263	      00
   6264
   6265	FC1E  38 60 C0 F8 CC CC	78+	     db	     038h,060h,0c0h,0f8h,0cch,0cch,078h,000h ;6	d_36
   6266	      00
   6267
   6268	FC26  FC CC 0C 18 30 30	30+	     db	     0fch,0cch,00ch,018h,030h,030h,030h,000h ;7	d_37
   6269	      00
   6270
   6271	FC2E  78 CC CC 78 CC CC	78+	     db	     078h,0cch,0cch,078h,0cch,0cch,078h,000h ;8	d_38
   6272	      00
   6273
   6274	FC36  78 CC CC 7C 0C 18	70+	     db	     078h,0cch,0cch,07ch,00ch,018h,070h,000h ;9	d_39
   6275	      00
   6276
   6277	FC3E  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,000h ;:	d_3a
   6278	      00
   6279
   6280	FC46  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,060h ;;	d_3b
   6281	      60
   6282
   6283	FC4E  18 30 60 C0 60 30	18+	     db	     018h,030h,060h,0c0h,060h,030h,018h,000h ;<	d_3c
   6284	      00
   6285
   6286	FC56  00 00 FC 00 00 FC	00+	     db	     000h,000h,0fch,000h,000h,0fch,000h,000h ;=	d_3d
   6287	      00
   6288
   6289	FC5E  60 30 18 0C 18 30	60+	     db	     060h,030h,018h,00ch,018h,030h,060h,000h ;>	d_3e
   6290	      00
   6291
   6292	FC66  78 CC 0C 18 30 00	30+	     db	     078h,0cch,00ch,018h,030h,000h,030h,000h ;?	d_3f
   6293	      00
   6294
   6295
   6296	FC6E  7C C6 DE DE DE C0	78+	     db	     07ch,0c6h,0deh,0deh,0deh,0c0h,078h,000h ;@	d_40
   6297	      00
   6298
   6299	FC76  30 78 CC CC FC CC	CC+	     db	     030h,078h,0cch,0cch,0fch,0cch,0cch,000h ;A	d_41
   6300	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 127
1840v4.asm



   6301
   6302	FC7E  FC 66 66 7C 66 66	FC+	     db	     0fch,066h,066h,07ch,066h,066h,0fch,000h ;B	d_42
   6303	      00
   6304
   6305	FC86  3C 66 C0 C0 C0 66	3C+	     db	     03ch,066h,0c0h,0c0h,0c0h,066h,03ch,000h ;C	d_43
   6306	      00
   6307
   6308	FC8E  F8 6C 66 66 66 6C	F8+	     db	     0f8h,06ch,066h,066h,066h,06ch,0f8h,000h ;D	d_44
   6309	      00
   6310
   6311	FC96  FE 62 68 78 68 62	FE+	     db	     0feh,062h,068h,078h,068h,062h,0feh,000h ;E	d_45
   6312	      00
   6313
   6314	FC9E  FE 62 68 78 68 60	F0+	     db	     0feh,062h,068h,078h,068h,060h,0f0h,000h ;F	d_46
   6315	      00
   6316
   6317	FCA6  3C 66 C0 C0 CE 66	3E+	     db	     03ch,066h,0c0h,0c0h,0ceh,066h,03eh,000h ;G	d_47
   6318	      00
   6319
   6320	FCAE  CC CC CC FC CC CC	CC+	     db	     0cch,0cch,0cch,0fch,0cch,0cch,0cch,000h ;H	d_48
   6321	      00
   6322
   6323	FCB6  78 30 30 30 30 30	78+	     db	     078h,030h,030h,030h,030h,030h,078h,000h ;I	d_49
   6324	      00
   6325
   6326	FCBE  1E 0C 0C 0C CC CC	78+	     db	     01eh,00ch,00ch,00ch,0cch,0cch,078h,000h ;J	d_4a
   6327	      00
   6328
   6329	FCC6  E6 66 6C 78 6C 66	E6+	     db	     0e6h,066h,06ch,078h,06ch,066h,0e6h,000h ;K	d_4b
   6330	      00
   6331
   6332	FCCE  F0 60 60 60 62 66	FE+	     db	     0f0h,060h,060h,060h,062h,066h,0feh,000h ;L	d_4c
   6333	      00
   6334
   6335	FCD6  C6 EE FE FE D6 C6	C6+	     db	     0c6h,0eeh,0feh,0feh,0d6h,0c6h,0c6h,000h ;M	d_4d
   6336	      00
   6337
   6338	FCDE  C6 E6 F6 DE CE C6	C6+	     db	     0c6h,0e6h,0f6h,0deh,0ceh,0c6h,0c6h,000h ;N	d_4e
   6339	      00
   6340
   6341	FCE6  38 6C C6 C6 C6 6C	38+	     db	     038h,06ch,0c6h,0c6h,0c6h,06ch,038h,000h ;O	d_4f
   6342	      00
   6343
   6344
   6345	FCEE  FC 66 66 7C 60 60	F0+	     db	     0fch,066h,066h,07ch,060h,060h,0f0h,000h ;P	d_50
   6346	      00
   6347
   6348	FCF6  78 CC CC CC DC 78	1C+	     db	     078h,0cch,0cch,0cch,0dch,078h,01ch,000h ;Q	d_51
   6349	      00
   6350
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 128
1840v4.asm



   6351	FCFE  FC 66 66 7C 6C 66	E6+	     db	     0fch,066h,066h,07ch,06ch,066h,0e6h,000h ;R	d_52
   6352	      00
   6353
   6354	FD06  78 CC E0 70 1C CC	78+	     db	     078h,0cch,0e0h,070h,01ch,0cch,078h,000h ;S	d_53
   6355	      00
   6356
   6357	FD0E  FC B4 30 30 30 30	78+	     db	     0fch,0b4h,030h,030h,030h,030h,078h,000h ;T	d_54
   6358	      00
   6359
   6360	FD16  CC CC CC CC CC CC	FC+	     db	     0cch,0cch,0cch,0cch,0cch,0cch,0fch,000h ;U	d_55
   6361	      00
   6362
   6363	FD1E  CC CC CC CC CC 78	30+	     db	     0cch,0cch,0cch,0cch,0cch,078h,030h,000h ;V	d_56
   6364	      00
   6365
   6366	FD26  C6 C6 C6 D6 FE EE	C6+	     db	     0c6h,0c6h,0c6h,0d6h,0feh,0eeh,0c6h,000h ;W	d_57
   6367	      00
   6368
   6369	FD2E  C6 C6 6C 38 38 6C	C6+	     db	     0c6h,0c6h,06ch,038h,038h,06ch,0c6h,000h ;X	d_58
   6370	      00
   6371
   6372	FD36  CC CC CC 78 30 30	78+	     db	     0cch,0cch,0cch,078h,030h,030h,078h,000h ;Y	d_59
   6373	      00
   6374
   6375	FD3E  FE C6 8C 18 32 66	FE+	     db	     0feh,0c6h,08ch,018h,032h,066h,0feh,000h ;Z	d_5a
   6376	      00
   6377
   6378	FD46  78 60 60 60 60 60	78+	     db	     078h,060h,060h,060h,060h,060h,078h,000h ;(	d_5b
   6379	      00
   6380
   6381	FD4E  C0 60 30 18 0C 06	02+	     db	     0c0h,060h,030h,018h,00ch,006h,002h,000h ;backslash
   6382	      00
   6383
   6384	FD56  78 18 18 18 18 18	78+	     db	     078h,018h,018h,018h,018h,018h,078h,000h ;)	d_5d
   6385	      00
   6386
   6387	FD5E  10 38 6C C6 00 00	00+	     db	     010h,038h,06ch,0c6h,000h,000h,000h,000h ;cimpqumflex
   6388	      00
   6389
   6390	FD66  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,0ffh ;_	d_5f
   6391	      FF
   6392
   6393
   6394	FD6E  30 30 18 00 00 00	00+	     db	     030h,030h,018h,000h,000h,000h,000h,000h ;	d_60
   6395	      00
   6396
   6397	FD76  00 00 78 0C 7C CC	76+	     db	     000h,000h,078h,00ch,07ch,0cch,076h,000h ;lower case a
   6398	      00
   6399
   6400	FD7E  E0 60 60 7C 66 66	DC+	     db	     0e0h,060h,060h,07ch,066h,066h,0dch,000h ;b	d_62
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 129
1840v4.asm



   6401	      00
   6402
   6403	FD86  00 00 78 CC C0 CC	78+	     db	     000h,000h,078h,0cch,0c0h,0cch,078h,000h ;c	d_63
   6404	      00
   6405
   6406	FD8E  1C 0C 0C 7C CC CC	76+	     db	     01ch,00ch,00ch,07ch,0cch,0cch,076h,000h ;d	d_64
   6407	      00
   6408
   6409	FD96  00 00 78 CC FC C0	78+	     db	     000h,000h,078h,0cch,0fch,0c0h,078h,000h ;e	d_65
   6410	      00
   6411
   6412	FD9E  38 6C 60 F0 60 60	F0+	     db	     038h,06ch,060h,0f0h,060h,060h,0f0h,000h ;f	d_66
   6413	      00
   6414
   6415	FDA6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,0f8h ;g	d_67
   6416	      F8
   6417
   6418	FDAE  E0 60 6C 76 66 66	E6+	     db	     0e0h,060h,06ch,076h,066h,066h,0e6h,000h ;h	d_68
   6419	      00
   6420
   6421	FDB6  30 00 70 30 30 30	78+	     db	     030h,000h,070h,030h,030h,030h,078h,000h ;i	d_69
   6422	      00
   6423
   6424	FDBE  0C 00 0C 0C 0C CC	CC+	     db	     00ch,000h,00ch,00ch,00ch,0cch,0cch,078h ;j	d_6a
   6425	      78
   6426
   6427	FDC6  E0 60 66 6C 78 6C	E6+	     db	     0e0h,060h,066h,06ch,078h,06ch,0e6h,000h ;k	d_6b
   6428	      00
   6429
   6430	FDCE  70 30 30 30 30 30	78+	     db	     070h,030h,030h,030h,030h,030h,078h,000h ;l	d_6c
   6431	      00
   6432
   6433	FDD6  00 00 CC FE FE D6	C6+	     db	     000h,000h,0cch,0feh,0feh,0d6h,0c6h,000h ;m	d_6d
   6434	      00
   6435
   6436	FDDE  00 00 F8 CC CC CC	CC+	     db	     000h,000h,0f8h,0cch,0cch,0cch,0cch,000h ;n	d_6e
   6437	      00
   6438
   6439	FDE6  00 00 78 CC CC CC	78+	     db	     000h,000h,078h,0cch,0cch,0cch,078h,000h ;o	d_6f
   6440	      00
   6441
   6442
   6443	FDEE  00 00 DC 66 66 7C	60+	     db	     000h,000h,0dch,066h,066h,07ch,060h,0f0h ;p	d_70
   6444	      F0
   6445
   6446	FDF6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,01eh ;q	d_71
   6447	      1E
   6448
   6449	FDFE  00 00 DC 76 66 60	F0+	     db	     000h,000h,0dch,076h,066h,060h,0f0h,000h ;r	d_72
   6450	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 130
1840v4.asm



   6451
   6452	FE06  00 00 7C C0 78 0C	F8+	     db	     000h,000h,07ch,0c0h,078h,00ch,0f8h,000h ;s	d_73
   6453	      00
   6454
   6455	FE0E  10 30 7C 30 30 34	18+	     db	     010h,030h,07ch,030h,030h,034h,018h,000h ;t	d_74
   6456	      00
   6457
   6458	FE16  00 00 CC CC CC CC	76+	     db	     000h,000h,0cch,0cch,0cch,0cch,076h,000h ;u	d_75
   6459	      00
   6460
   6461	FE1E  00 00 CC CC CC 78	30+	     db	     000h,000h,0cch,0cch,0cch,078h,030h,000h ;v	d_76
   6462	      00
   6463
   6464	FE26  00 00 C6 D6 FE FE	6C+	     db	     000h,000h,0c6h,0d6h,0feh,0feh,06ch,000h ;w	d_77
   6465	      00
   6466
   6467	FE2E  00 00 C6 6C 38 6C	C6+	     db	     000h,000h,0c6h,06ch,038h,06ch,0c6h,000h ;x	d_78
   6468	      00
   6469
   6470	FE36  00 00 CC CC CC 7C	0C+	     db	     000h,000h,0cch,0cch,0cch,07ch,00ch,0f8h ;y	d_79
   6471	      F8
   6472
   6473	FE3E  00 00 FC 98 30 64	FC+	     db	     000h,000h,0fch,098h,030h,064h,0fch,000h ;z	d_7a
   6474	      00
   6475
   6476	FE46  1C 30 30 E0 30 30	1C+	     db	     01ch,030h,030h,0e0h,030h,030h,01ch,000h ;	d_7b
   6477	      00
   6478
   6479	FE4E  18 18 18 00 18 18	18+	     db	     018h,018h,018h,000h,018h,018h,018h,000h ;	d_7c
   6480	      00
   6481
   6482	FE56  E0 30 30 1C 30 30	E0+	     db	     0e0h,030h,030h,01ch,030h,030h,0e0h,000h ;	d_7d
   6483	      00
   6484
   6485	FE5E  76 DC 00 00 00 00	00+	     db	     076h,0dch,000h,000h,000h,000h,000h,000h ;	d_7e
   6486	      00
   6487
   6488	FE66  00 10 38 6C C6 C6	FE+	     db	     000h,010h,038h,06ch,0c6h,0c6h,0feh,000h ;delta d_7f
   6489	      00
   6490
   6491
   6492				     ;---int 1a-------------------------------
   6493				     ;
   6494				     ;	 Программа установки-считывания времени     +
   6495				     суток
   6496				     ;
   6497				     ;	 Эта	программа обеспечивает выполнение       +
   6498				     двух функций, код которых
   6499				     ; задается	в регистре AH:
   6500				     ;	 AH=0 -	считать текущее состояние часов. После+
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 131
1840v4.asm



   6501				     выполнения коман-
   6502				     ; ды регистры CX	и DX содержат старшую и младшую+
   6503				     части	счетчика.
   6504				     ;	 Если регистр AL содержит "0", то счет	идет в    +
   6505				     течение одних
   6506				     ; суток, при любом другом значении счет	       +
   6507				     переходит	на следующие
   6508				     ; сутки;
   6509				     ;
   6510				     ;	 AH=1 -	записать текущее	состояние часов.	       +
   6511				     Регистры CX и DX
   6512				     ; содержат	старшую и младшую части счетчика.
   6513				     ;
   6514				     ;------------------------------------------
   6515					     assume  cs:code,ds:data
   6516	FE6E			     time_of_day     proc    far
   6517	FE6E  FB			     sti	     ; уст признак разрешения	       +
   6518				     прерывания
   6519	FE6F  1E			     push    ds	     ; сохранить сегмент
   6520	FE70  50			     push    ax	     ; сохранить параметры
   6521	FE71  B8 0040			     mov     ax,dat
   6522	FE74  8E D8			     mov     ds,ax
   6523	FE76  58			     pop     ax
   6524	FE77  0A E4			     or	     ah,ah   ; AH=0 ?
   6525	FE79  74 07			     jz	     t2	 ; да, переход	к считыванию		       +
   6526				     текущего состояния
   6527	FE7B  FE CC			     dec     ah	     ; AH=1 ?
   6528	FE7D  74 16			     jz	     t3	 ; да, переход	к установке текущего +
   6529				     состояния
   6530
   6531	FE7F			     t1:     ; Возврат из программы
   6532
   6533	FE7F  FB			     sti	     ; уст признак разрешения	       +
   6534				     прерывания
   6535	FE80  1F			     pop     ds	     ; возврат сегмента
   6536	FE81  CF			     iret	     ; возврат к программе,вызвавшей +
   6537				     процедуру
   6538
   6539	FE82			     t2:     ; Считать текущее состояния	часов
   6540
   6541	FE82  FA			     cli	     ; сбросить	признак разрешения    +
   6542				     прерывания
   6543	FE83  A0 0070r			     mov     al,timer_ofl  ; считать в AL флажок перехода+
   6544				     на сле-
   6545	FE86  C6 06 0070r 00		     mov     timer_ofl,0   ; дующие сутки и	сбросить его+
   6546				     в	памяти
   6547	FE8B  8B 0E 006Er		     mov     cx,timer_high	     ; установить старшую и  +
   6548				     младшую
   6549	FE8F  8B 16 006Cr		     mov     dx,timer_low	     ; части счетчика
   6550	FE93  EB EA			     jmp     short t1
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 132
1840v4.asm



   6551
   6552	FE95			     t3:     ; Установить текущее состояние часов
   6553
   6554	FE95  FA			     cli	     ; сброс признака разрешения	       +
   6555				     прерывания
   6556	FE96  89 16 006Cr		     mov     timer_low,dx	     ; установить младшую и  +
   6557				     старшую
   6558	FE9A  89 0E 006Er		     mov     timer_high,cx	     ; части счетчика
   6559	FE9E  C6 06 0070r 00		     mov     timer_ofl,0     ; сброс флажка перехода	       +
   6560				     через	сутки
   6561	FEA3  EB DA			     jmp     short t1	     ; возврат из программы	       +
   6562				     отсчета времени
   6563	FEA5			     time_of_day     endp
   6564
   6565				     ;-------int 08-------------------
   6566				     ;
   6567				     ;	 Программа обработки прерывания таймера     +
   6568				     КР580ВИ53 (INT	8H) об-
   6569				     ; рабатывает прерывания, аппаратурно	       +
   6570				     возникающие от нулевого канала
   6571				     ; таймера, на вход которого подаются сигналы  +
   6572				     с	частотой 1,228 МГц,
   6573				     ; делящиеся на 56263 для обеспечения 18,2		       +
   6574				     прерываний в секунду.
   6575				     ;	 При	обработке прерывания	корректируется   +
   6576				     программный счетчик,
   6577				     ; хранящийся в памяти по адресу 0046CH (младшая   +
   6578				     часть	счетчика) и
   6579				     ; адресу 0047EH (старшая часть счетчика)	и	       +
   6580				     используемый для уста-
   6581				     ; новки времени суток.
   6582				     ;	 В функции программы входит коррекция	       +
   6583				     счетчика, управляющего
   6584				     ; двигателем НГМД. После обнуления счетчика   +
   6585				     двигатель	выключается.
   6586				     ;	 Вектор 1CH дает возможность пользователю     +
   6587				     входить в заданную
   6588				     ; программу с частотой прерывания таймера (18.2+
   6589				     прерываний в секун-
   6590				     ; ду). Для этого	в таблице векторов прерываний+
   6591				     по адресу 007CH
   6592				     ; необходимо задать адрес пользовательской   +
   6593				     программы.
   6594				     ;
   6595				     ;---------------------------------------------------
   6596
   6597	FEA5			     timer_int	     proc    far
   6598	FEA5  FB			     sti	     ; уст признак разрешения	       +
   6599				     прерывания
   6600	FEA6  1E			     push    ds
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 133
1840v4.asm



   6601	FEA7  50			     push    ax
   6602	FEA8  52			     push    dx
   6603	FEA9  B8 0040			     mov     ax,dat
   6604	FEAC  8E D8			     mov     ds,ax
   6605	FEAE  FF 06 006Cr		     inc     timer_low	  ; +1 к старшей части счетчика
   6606	FEB2  75 04			     jnz     t4
   6607	FEB4  FF 06 006Er		     inc     timer_high	  ; +1 к старшей части счетчика
   6608
   6609	FEB8			     t4:     ; Опрос счетчика = 24	часам
   6610
   6611	FEB8  83 3E 006Er 18		     cmp     timer_high,018h
   6612	FEBD  75 19			     jnz     t5
   6613	FEBF  81 3E 006Cr 00B0		     cmp     timer_low,0b0h
   6614	FEC5  75 11			     jnz     t5
   6615
   6616				     ;	 Таймер исчерпал 24 часа
   6617
   6618	FEC7  C7 06 006Er 0000		     mov     timer_high,0   ; сброс старшей	и младшей      +
   6619				     частей
   6620	FECD  C7 06 006Cr 0000		     mov     timer_low,0    ; счетчика и установка	       +
   6621				     флажка пере-
   6622	FED3  C6 06 0070r 01		     mov     timer_ofl,1    ; хода счета на следующие      +
   6623				     сутки
   6624
   6625				     ;	 Выключение мотора НГМД, если счетчик	       +
   6626				     управления мотором
   6627				     ; исчерпан
   6628
   6629	FED8			     t5:
   6630	FED8  FE 0E 0040r		     dec     motor_count
   6631	FEDC  75 0B			     jnz     t6		     ; переход, если	счетчик не    +
   6632				     установлен
   6633	FEDE  80 26 003Fr F0		     and     motor_status,0f0h
   6634	FEE3  B0 0C			     mov     al,0ch
   6635	FEE5  BA 03F2			     mov     dx,03f2h
   6636	FEE8  EE			     out     dx,al	     ; выключить мотор
   6637
   6638	FEE9			     t6:
   6639	FEE9  CD 1C			     int     1ch     ; передача	управления программе+
   6640				     пользователя
   6641	FEEB  B0 20			     mov     al,eoi
   6642	FEED  E6 20			     out     020h,al	    ; конец прерывания
   6643	FEEF  5A			     pop     dx
   6644	FEF0  58			     pop     ax
   6645	FEF1  1F			     pop     ds
   6646	FEF2  CF			     iret		     ; возврат из прерывания
   6647	FEF3			     timer_int	     endp
   6648				     ;---------------------------------
   6649				     ;
   6650				     ;	 Эти	вектора передаются в область		       +
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 134
1840v4.asm



   6651				     прерывания 8086 во время
   6652				     ; включения питания.
   6653				     ;
   6654				     ;---------------------------------
   6655	FEF3			     vector_table    label   word    ; таблица векторов		       +
   6656				     прерываний
   6657
   6658	FEF3  FEA5r			     dw	     offset timer_int	     ; прерывание 8
   6659	FEF5  F000			     dw	     cod
   6660
   6661	FEF7  E987r			     dw	     offset kb_int	     ; прерывание 9
   6662	FEF9  F000			     dw	     cod
   6663
   6664	FEFB  FF53r			     dw	     offset dummy_return     ; прерывание А
   6665	FEFD  F000			     dw	     cod
   6666	FEFF  F98Br			     dw	     offset dummm_return     ; прерывание B
   6667	FF01  F000			     dw	     cod
   6668	FF03  F98Br			     dw	     offset dummm_return     ; прерывание C
   6669	FF05  F000			     dw	     cod
   6670	FF07  FF53r			     dw	     offset dummy_return     ; прерывание D
   6671	FF09  F000			     dw	     cod
   6672	FF0B  EF57r			     dw	     offset disk_int	     ; прерывание E
   6673	FF0D  F000			     dw	     cod
   6674
   6675	FF0F  FF53r			     dw	     offset dummy_return     ; прерывание F
   6676	FF11  F000			     dw	     cod
   6677	FF13  F065r			     dw	     offset video_io	     ; прерывание 10H
   6678	FF15  F000			     dw	     cod
   6679
   6680	FF17  F84Dr			     dw	     offset equipment	     ; прерывание 11H
   6681	FF19  F000			     dw	     cod
   6682
   6683	FF1B  F841r			     dw	     offset memory_size_determine    ; прерывание 12H
   6684	FF1D  F000			     dw	     cod
   6685
   6686	FF1F  EC59r			     dw	     offset diskette_io	     ; прерывание 13H
   6687	FF21  F000			     dw	     cod
   6688
   6689	FF23  F929r			     dw	     offset rs232_io	     ; прерывание  14H
   6690	FF25  F000			     dw	     cod
   6691
   6692	FF27  F92Dr			     dw	     offset ex_memory	     ; int 15h
   6693	FF29  F000			     dw	     cod
   6694
   6695	FF2B  E82Er			     dw	     offset keyboard_io	     ; прерывание 16H
   6696	FF2D  F000			     dw	     cod
   6697
   6698	FF2F  EFD2r			     dw	     offset printer_io	     ; прерывание 17H
   6699	FF31  F000			     dw	     cod
   6700
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 135
1840v4.asm



   6701	FF33  0000				     dw	0		     ; прерывание 18H
   6702	FF35  F600				     dw	0F600h		     ; ROM BASIC ???
   6703
   6704	FF37  E6F7r			     dw	     offset boot_strap	     ; прерывание 19H
   6705	FF39  F000			     dw	     cod
   6706
   6707	FF3B  FE6Er			     dw	     time_of_day     ; прерывание 1АH - время суток
   6708	FF3D  F000			     dw	     cod
   6709
   6710	FF3F  FF53r			     dw	     dummy_return    ; прерывание 1BH	- прерывание +
   6711				     клавиатуры
   6712	FF41  F000			     dw	     cod
   6713
   6714	FF43  FF53r			     dw	     dummy_return    ; прерывание 1C - прерывание  +
   6715				     таймера
   6716	FF45  F000			     dw	     cod
   6717
   6718	FF47  F0A4r			     dw	     video_parms     ; прерывание 1D - параметры    +
   6719				     видео
   6720	FF49  F000			     dw	     cod
   6721
   6722	FF4B  EFC7r			     dw	     offset  disk_base	 ;прерывание 1EH - параметры+
   6723				     НГМД
   6724	FF4D  F000			     dw	     cod
   6725
   6726	FF4F  0000			     dw	     0		     ; 1FH - адрес	таблицы пользова-
   6727	FF51  0000			     dw	     0		     ; тельского			       +
   6728				     дополнительного знакогенератора
   6729
   6730	FF53			     dummy_return:
   6731	FF53  CF			     iret
   6732
   6733				     ;---int 5----------------------
   6734				     ;
   6735				     ;	 Программа вывода на печать содержимого      +
   6736				     буфера ЭЛИ вызывается
   6737				     ; одновременным нажатием клавиши ПЕЧ и	       +
   6738				     клавиши переключения регист-
   6739				     ; ров. Позиция курсора сохраняется до	       +
   6740				     завершения процедуры обработки
   6741				     ; прерывания. Повторное	нажатие названных      +
   6742				     клавиш во время обработки
   6743				     ; прерывания игнорируется.
   6744				     ;	 При	выполнении программы	в постоянно	       +
   6745				     распределенной рабочей
   6746				     ; области памяти по	адресу 0500H			       +
   6747				     устанавливается следующая
   6748				     ; информация:
   6749				     ;	 0    -	содержимое буфера ЭЛИ еще	не выведено  +
   6750				     на печать,	либо
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 136
1840v4.asm



   6751				     ; вывод уже завершен;
   6752				     ;	 1    -	в процессе вывода содержимого	буфера   +
   6753				     ЭЛИ на печать;
   6754				     ;	 255  -	при печати обнаружена ошибка.
   6755				     ;-----------------------------------------------------
   6756
   6757					     assume  cs:code,ds:xxdata
   6758
   6759	FF54			     print_screen    proc    far
   6760	FF54  FB			     sti		  ; уст признак разрешения	       +
   6761				     прерывания
   6762	FF55  1E			     push    ds
   6763	FF56  50			     push    ax
   6764	FF57  53			     push    bx
   6765	FF58  51			     push    cx	  ; будет использоваться заглавная +
   6766				     буква	для курсора
   6767	FF59  52			     push    dx	  ; будет содержать текущее	       +
   6768				     положение	курсора
   6769	FF5A  B8 0050			     mov     ax,xxdat	     ; адрес 50
   6770	FF5D  8E D8			     mov     ds,ax
   6771	FF5F  80 3E 0000r 01		     cmp     status_byte,1   ; печать готова ?
   6772	FF64  74 5F			     jz	     exit	     ; переход, если	печать	       +
   6773				     готова
   6774	FF66  C6 06 0000r 01		     mov     status_byte,1   ;
   6775	FF6B  B4 0F			     mov     ah,15	     ; требуется текущий режим    +
   6776				     экрана
   6777	FF6D  CD 10			     int     10h	     ; AL - режим,	AH - число		       +
   6778				     строк/колонок
   6779								     ; BH - страница,выведенная на +
   6780				     экран
   6781
   6782
   6783				     ;*************************************8
   6784				     ;
   6785				     ;	 В этом месте:
   6786				     ;			 AX - колонка, строка,
   6787				     ;			 BH - номер отображаемой страницы.
   6788				     ;
   6789				     ;	 Стек содержит DS, AX, BX, CX, DX.
   6790				     ;
   6791				     ;			 AL - режим
   6792				     ;
   6793				     ;**************************************
   6794
   6795	FF6F  8A CC			     mov     cl,ah
   6796	FF71  B5 19			     mov     ch,25
   6797	FF73  E8 0055			     call    crlf
   6798	FF76  51			     push    cx
   6799	FF77  B4 03			     mov     ah,3
   6800	FF79  CD 10			     int     10h
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 137
1840v4.asm



   6801	FF7B  59			     pop     cx
   6802	FF7C  52			     push    dx
   6803	FF7D  33 D2			     xor     dx,dx
   6804
   6805				     ;**************************************
   6806				     ;
   6807				     ;	  Считывание знака, находящегося в текущей  +
   6808				     позиции курсора
   6809				     ; и вывод на печать
   6810				     ;
   6811				     ;**************************************
   6812
   6813	FF7F  B4 02		     pri10:  mov     ah,2
   6814	FF81  CD 10			     int     10h
   6815	FF83  B4 08			     mov     ah,8
   6816	FF85  CD 10			     int     10h
   6817	FF87  0A C0			     or	     al,al
   6818	FF89  75 02			     jnz     pri15
   6819	FF8B  B0 20			     mov     al,' '
   6820	FF8D			     pri15:
   6821	FF8D  52			     push    dx
   6822	FF8E  33 D2			     xor     dx,dx
   6823	FF90  32 E4			     xor     ah,ah
   6824	FF92  CD 17			     int     17h
   6825	FF94  5A			     pop     dx
   6826	FF95  F6 C4 25			     test    ah,25h
   6827	FF98  75 21			     jnz     err10
   6828	FF9A  FE C2			     inc     dl
   6829	FF9C  3A CA			     cmp     cl,dl
   6830	FF9E  75 DF			     jnz     pri10
   6831	FFA0  32 D2			     xor     dl,dl
   6832	FFA2  8A E2			     mov     ah,dl
   6833	FFA4  52			     push    dx
   6834	FFA5  E8 0023			     call    crlf
   6835	FFA8  5A			     pop     dx
   6836	FFA9  FE C6			     inc     dh
   6837	FFAB  3A EE			     cmp     ch,dh
   6838	FFAD  75 D0			     jnz     pri10
   6839	FFAF  5A			     pop     dx
   6840	FFB0  B4 02			     mov     ah,2
   6841	FFB2  CD 10			     int     10h
   6842	FFB4  C6 06 0000r 00		     mov     status_byte,0
   6843	FFB9  EB 0A			     jmp     short exit
   6844	FFBB  5A		     err10:  pop     dx
   6845	FFBC  B4 02			     mov     ah,2
   6846	FFBE  CD 10			     int     10h
   6847	FFC0  C6 06 0000r FF		     mov     status_byte,0ffh
   6848
   6849	FFC5  5A		     exit:   pop     dx
   6850	FFC6  59			     pop     cx
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 138
1840v4.asm



   6851	FFC7  5B			     pop     bx
   6852	FFC8  58			     pop     ax
   6853	FFC9  1F			     pop     ds
   6854	FFCA  CF			     iret
   6855	FFCB			     print_screen    endp
   6856
   6857				     ;	 Возврат	каретки
   6858
   6859	FFCB			     crlf    proc    near
   6860	FFCB  33 D2			     xor     dx,dx
   6861	FFCD  32 E4			     xor     ah,ah
   6862	FFCF  B0 0A			     mov     al,12q
   6863	FFD1  CD 17			     int     17h
   6864	FFD3  32 E4			     xor     ah,ah
   6865	FFD5  B0 0D			     mov     al,15q
   6866	FFD7  CD 17			     int     17h
   6867	FFD9  C3			     ret
   6868	FFDA			     crlf    endp
   6869
   6870	FFDA  16*(00)				     db	22 dup(0)
   6871
   6872				     ;--------------------------------------
   6873				     ;
   6874				     ;	 Включение питания
   6875				     ;
   6876				     ;--------------------------------------
   6877
   6878				     ;vector segment at	0ffffh
   6879
   6880				     ;	 Переход	по включению	питания
   6881
   6882	FFF0  EA		     POST:	     db	     0eah	     ; db    0eah,5bh,0e0h,00h,0f0h  ; jmp reset
   6883	FFF1  E05Br F000			     dw	     offset reset, cod	     ; ###Gleb###
   6884
   6885	FFF5  30 34 2F 32 34 2F	38+		     db	'04/24/81'
   6886	      31
   6887
   6888	FFFD  00 00				     db	   0, 0
   6889
   6890	FFFF  00				     db	   0 ;
   6891				     ;vector ends
   6892
   6893
   6894
   6895
   6896
   6897
   6898	0000			     code    ends
   6899					     end     POST
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 139
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "10-04-21"
??FILENAME			  Text	 "1840v4  "
??TIME				  Text	 "23:42:03"
??VERSION			  Number 0500
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 1840V4
@WORDSIZE			  Text	 2
A5700051COPR_IB			  Byte	 CODE:E000
ACTIVE_PAGE			  Byte	 DATA:0062
ACT_DISP_PAGE			  Near16 CODE:F230
ADDR_6845			  Word	 DATA:0063
ALT_INPUT			  Byte	 DATA:0019
ALT_KEY				  Number 0038
ALT_SHIFT			  Number 0008
ASCII_TBL			  Byte	 CODE:E41D
B1				  Near16 CODE:EFF5
B2				  Near16 CODE:EFFB
B3				  Near16 CODE:F002
B4				  Near16 CODE:F017
B5				  Near16 CODE:F01F
B6				  Near16 CODE:F020
B7				  Near16 CODE:F02B
B8				  Near16 CODE:F033
B9				  Near16 CODE:F03D
BAD_ADDR_MARK			  Number 0002
BAD_CMD				  Number 0001
BAD_CRC				  Number 0010
BAD_DMA				  Number 0008
BAD_NEC				  Number 0020
BAD_SEEK			  Number 0040
BCT				  Near16 CODE:F859
BCT1				  Near16 CODE:F875
BCT2				  Near16 CODE:F877
BCT3				  Near16 CODE:F86C
BCT4				  Near16 CODE:F8B4
BEEP				  Near16 CODE:E5A9
BIOS_BREAK			  Byte	 DATA:0071
BOOT_LOCN			  Far16	 ABS0:7C00
BOOT_STRAP			  Near16 CODE:E6F7
BOOT_VEC			  Dword	 ABS0:0064
BUFFER_END			  Word	 DATA:0082
BUFFER_HEAD			  Word	 DATA:001A
BUFFER_START			  Word	 DATA:0080
BUFFER_TAIL			  Word	 DATA:001C
C1				  Word	 CODE:E016
C10				  Near16 CODE:E0B1
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 140
Symbol Table



C11				  Near16 CODE:E0D9
C12				  Near16 CODE:E0EB
C13				  Near16 CODE:E0FC
C14				  Near16 CODE:E102
C15				  Near16 CODE:E110
C16				  Near16 CODE:E11C
C17				  Near16 CODE:E126
C18				  Near16 CODE:E136
C19				  Near16 CODE:E178
C20				  Near16 CODE:E17D
C21				  Near16 CODE:E18C
C22				  Near16 CODE:E1CB
C23				  Near16 CODE:E1D7
C25				  Near16 CODE:E1E5
C26				  Near16 CODE:E202
C2A				  Near16 CODE:E02A
C2B				  Near16 CODE:E02C
C3				  Near16 CODE:E030
C3A				  Near16 CODE:E045
C7X				  Near16 CODE:E05A
C8				  Near16 CODE:E08E
C9				  Near16 CODE:E0AB
CA3				  Near16 CODE:E1E0
CAPS_KEY			  Number 0056
CAPS_SHIFT			  Number 0040
CAPS_STATE			  Number 0040
CAW				  Word	 CODE:E018
CHK_STAT_2			  Near16 CODE:EF0F
CMD_BLOCK			  Byte	 DATA:0042
CMD_PORT			  Number 0063
COD				  Number F000
CONTROL_BYTE			  Byte	 DATA:0076
CRLF				  Near16 CODE:FFCB
CRT_CHAR_GEN			  Byte	 CODE:FA6E
CRT_COLS			  Word	 DATA:004A
CRT_LEN				  Word	 DATA:004C
CRT_MODE			  Byte	 DATA:0049
CRT_MODE_SET			  Byte	 DATA:0065
CRT_PALLETTE			  Byte	 DATA:0066
CRT_START			  Word	 DATA:004E
CSI				  Word	 ABS0:04D0
CTL_KEY				  Number 001D
CTL_SHIFT			  Number 0004
CURSOR_MODE			  Word	 DATA:0060
CURSOR_POSN			  Word	 DATA:0050
D1				  Byte	 CODE:E20B
D10				  Near16 CODE:E29E
D11				  Near16 CODE:E2A8
D12				  Near16 CODE:E2C4
D13				  Near16 CODE:E2CE
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 141
Symbol Table



D14				  Near16 CODE:E2D8
D1L				  Number 000E
D2				  Byte	 CODE:E219
D2L				  Number 000E
D3				  Near16 CODE:E255
D4				  Near16 CODE:E267
D5				  Near16 CODE:E269
D6				  Near16 CODE:E26F
D7				  Near16 CODE:E277
D8				  Near16 CODE:E289
D9				  Near16 CODE:E292
DAL				  Near16 CODE:E4E9
DAT				  Number 0040
DECIMAL_LOOP			  Near16 CODE:E653
DEL_KEY				  Number 0053
DISKETTE_IO			  Far16	 CODE:EC59
DISKETTE_PARM			  Dword	 ABS0:0078
DISKETTE_STATUS			  Byte	 DATA:0041
DISKW_STATUS			  Byte	 DATA:0074
DISK_BASE			  Byte	 CODE:EFC7
DISK_FORMAT			  Near16 CODE:ED1B
DISK_INT			  Far16	 CODE:EF57
DISK_POINTER			  Dword	 ABS0:0078
DISK_READ			  Near16 CODE:ED0E
DISK_RESET			  Near16 CODE:ECB9
DISK_STATUS			  Near16 CODE:ED0A
DISK_VECTOR			  Dword	 ABS0:0100
DISK_VERF			  Near16 CODE:ED17
DISK_WRITE			  Near16 CODE:ED41
DMA				  Number 0000
DMA08				  Number 0008
DMA_BOUNDARY			  Number 0009
DMA_SETUP			  Near16 CODE:EEC9
DUMMM_RETURN			  Near16 CODE:F98B
DUMMY_RETURN			  Near16 CODE:FF53
E1				  Byte	 CODE:E2DA
E10				  Near16 CODE:E369
E11				  Near16 CODE:E387
E12				  Near16 CODE:E389
E13				  Near16 CODE:E38B
E14				  Near16 CODE:E394
E15				  Near16 CODE:E396
E16				  Near16 CODE:E39F
E17				  Near16 CODE:E3A7
E18				  Near16 CODE:E3AD
E19				  Near16 CODE:E3B2
E190				  Near16 CODE:E613
E1L				  Number 0004
E20A				  Near16 CODE:E622
E20B				  Near16 CODE:E627
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 142
Symbol Table



E20C				  Near16 CODE:E637
E21A				  Near16 CODE:E689
E22				  Near16 CODE:E3FF
E3				  Near16 CODE:E301
E300				  Byte	 CODE:E69F
E3A				  Near16 CODE:E30C
E7				  Near16 CODE:E31A
E8				  Near16 CODE:E32A
E9				  Near16 CODE:E34C
EOI				  Number 0020
EQUIPMENT			  Far16	 CODE:F84D
EQUIP_FLAG			  Word	 DATA:0010
EQ_FL				  Byte	 ABS0:0410
ERR01				  Near16 CODE:E0AF
ERR10				  Near16 CODE:FFBB
ERROR_BEEP			  Near16 CODE:E768
ERR_BEEP			  Near16 CODE:E580
ERR_WAIT			  Near16 CODE:E4E0
EXIT				  Near16 CODE:FFC5
EXT_PTR				  Dword	 ABS0:007C
EX_MEMORY			  Near16 CODE:F92D
F1				  Byte	 CODE:E411
F10				  Near16 CODE:E490
F11				  Near16 CODE:E4A5
F12				  Near16 CODE:E4A7
F13				  Near16 CODE:E4BD
F14				  Near16 CODE:E4C6
F15				  Near16 CODE:E4CC
F16				  Near16 CODE:E502
F17				  Near16 CODE:E516
F18				  Near16 CODE:E542
F19				  Near16 CODE:E559
F19A				  Near16 CODE:F96D
F19B				  Near16 CODE:E55C
F1L				  Number 0004
F2				  Byte	 CODE:E415
F20				  Near16 CODE:E570
F20A				  Near16 CODE:F980
F20B				  Near16 CODE:E574
F21				  Near16 CODE:E57A
F23				  Near16 CODE:E57D
F2L				  Number 0003
F3				  Byte	 CODE:E418
F39				  Byte	 CODE:E6A6
F3L				  Number 0003
F4				  Word	 CODE:E41B
F4E				  Word	 CODE:E41D
F5				  Near16 CODE:E44A
F6				  Near16 CODE:E462
F7				  Near16 CODE:E46B
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 143
Symbol Table



FIND_POSITION			  Near16 CODE:F3A7
G1				  Near16 CODE:E58C
G10				  Near16 CODE:E5EC
G12				  Near16 CODE:E5FC
G2				  Near16 CODE:E591
G3				  Near16 CODE:E597
G4				  Near16 CODE:E59C
G5				  Near16 CODE:E5A2
G6				  Near16 CODE:E5A4
G7				  Near16 CODE:E5C0
G8				  Near16 CODE:E5D2
G9				  Near16 CODE:E5E5
GET_PARM			  Near16 CODE:EE51
GRAPHICS_DOWN			  Near16 CODE:F4F7
GRAPHICS_READ			  Near16 CODE:F633
GRAPHICS_UP			  Near16 CODE:F49E
GRAPHICS_WRITE			  Near16 CODE:F581
GRAPH_POSN			  Near16 CODE:F70F
H1				  Near16 CODE:E707
H2				  Near16 CODE:E722
H3				  Near16 CODE:E727
H4				  Near16 CODE:E72A
HDISK_INT			  Dword	 ABS0:0034
HD_ERROR			  Byte	 DATA:0042
HF_NUM				  Byte	 DATA:0075
HF_TBL_VEC			  Dword	 ABS0:0104
HOLD_STATE			  Number 0008
IDNPOL				  Word	 DATA:0090
INF_KEY				  Number 0059
INS_KEY				  Number 0052
INS_SHIFT			  Number 0080
INS_STATE			  Number 0080
INT5_PTR			  Word	 ABS0:0014
INTA00				  Number 0020
INTA01				  Number 0021
INT_ADDR			  Word	 ABS0:0020
INT_FLAG			  Number 0080
INT_PTR				  Dword	 ABS0:0020
INV_KEY_L			  Number 0058
INV_KEY_R			  Number 005A
INV_SHIFT			  Number 0004
IO_RAM_SIZE			  Word	 DATA:0015
IO_ROM_INIT			  Word	 DATA:0067
IO_ROM_SEG			  Word	 DATA:0069
J1				  Near16 CODE:EC87
J10				  Near16 CODE:ED29
J11				  Near16 CODE:ED57
J12				  Near16 CODE:EDA0
J13				  Near16 CODE:EDA4
J14				  Near16 CODE:EDAA
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 144
Symbol Table



J15				  Near16 CODE:EDD4
J16				  Near16 CODE:EDF9
J17				  Near16 CODE:EE00
J18				  Near16 CODE:EE3D
J19				  Near16 CODE:EE3F
J2				  Near16 CODE:ECAB
J20				  Near16 CODE:EE46
J21				  Near16 CODE:EE47
J22				  Near16 CODE:EE4B
J23				  Near16 CODE:E736
J24				  Near16 CODE:E73D
J25				  Near16 CODE:E747
J26				  Near16 CODE:E749
J27				  Near16 CODE:E752
J28				  Near16 CODE:EE95
J29				  Near16 CODE:EEB9
J3				  Near16 CODE:ECB3
J30				  Near16 CODE:EEC0
J300				  Near16 CODE:EEAB
J31				  Near16 CODE:EEC6
J32				  Near16 CODE:EEC8
J33				  Near16 CODE:EEDE
J34				  Near16 CODE:EF28
J35				  Near16 CODE:EF29
J36				  Near16 CODE:EF37
J37				  Near16 CODE:EF4A
J38				  Near16 CODE:EF74
J39				  Near16 CODE:EF79
J4				  Near16 CODE:ECD2
J40				  Near16 CODE:EF85
J40A				  Near16 CODE:EF8A
J41				  Near16 CODE:EF8F
J42				  Near16 CODE:EF96
J43				  Near16 CODE:EF9E
J44				  Near16 CODE:EFAC
J45				  Near16 CODE:EFC4
J5				  Near16 CODE:ECD4
J6				  Near16 CODE:ECD6
J7				  Near16 CODE:ECF8
J8				  Near16 CODE:ED09
J9				  Near16 CODE:ED10
K1				  Near16 CODE:E845
K10				  Byte	 CODE:E8DC
K11				  Byte	 CODE:E916
K12				  Byte	 CODE:E950
K13				  Byte	 CODE:E95A
K14				  Byte	 CODE:E964
K15				  Byte	 CODE:E971
K16				  Near16 CODE:E9AF
K17				  Near16 CODE:E9D9
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 145
Symbol Table



K18				  Near16 CODE:EA4B
K19				  Near16 CODE:EA60
K2				  Near16 CODE:E85E
K20				  Near16 CODE:EA6E
K21				  Near16 CODE:EA74
K22				  Near16 CODE:EA7B
K23				  Near16 CODE:EA9F
K24				  Near16 CODE:EAC3
K25				  Near16 CODE:EACC
K26				  Near16 CODE:EAEB
K26A				  Near16 CODE:EA48
K27				  Near16 CODE:EAF0
K28				  Near16 CODE:EAFF
K29				  Near16 CODE:EB09
K3				  Near16 CODE:E86F
K30				  Byte	 CODE:F905
K300				  Near16 CODE:EA1D
K301				  Near16 CODE:EA22
K302				  Near16 CODE:EA37
K303				  Near16 CODE:EA93
K304				  Near16 CODE:EAAF
K307				  Near16 CODE:EAF9
K31				  Near16 CODE:EB1F
K32				  Near16 CODE:EB28
K33				  Near16 CODE:EB44
K34				  Near16 CODE:EB55
K35				  Near16 CODE:EB65
K36				  Near16 CODE:EB69
K37				  Near16 CODE:EB6B
K38				  Near16 CODE:EB75
K39				  Near16 CODE:EB98
K4				  Near16 CODE:E75B
K40				  Near16 CODE:EBB3
K400				  Near16 CODE:EA06
K401				  Near16 CODE:EA0E
K406				  Near16 CODE:E9C2
K406B				  Near16 CODE:EADB
K407				  Near16 CODE:E9D6
K41				  Near16 CODE:EBBD
K42				  Near16 CODE:EBC7
K43				  Near16 CODE:EBD1
K44				  Near16 CODE:EBD7
K45				  Near16 CODE:EBEF
K46				  Near16 CODE:EBFC
K47				  Near16 CODE:EC06
K48				  Near16 CODE:EC19
K49				  Near16 CODE:EC27
K5				  Near16 CODE:E767
K50				  Near16 CODE:EC37
K51				  Near16 CODE:EC3D
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 146
Symbol Table



K52				  Near16 CODE:EC43
K53				  Near16 CODE:EC4A
K54				  Near16 CODE:E78D
K54A				  Near16 CODE:EBEC
K55				  Near16 CODE:E796
K56				  Near16 CODE:E7A0
K57				  Near16 CODE:E7A4
K58				  Near16 CODE:E7AD
K59				  Near16 CODE:E7D2
K6				  Byte	 CODE:E875
K60				  Near16 CODE:E7D5
K61				  Near16 CODE:E7DF
K62				  Near16 CODE:E7FC
K63				  Near16 CODE:E802
K64				  Near16 CODE:E804
K65				  Near16 CODE:E771
K66				  Near16 CODE:E778
K67				  Near16 CODE:E781
K6L				  Number 000C
K7				  Byte	 CODE:E881
K8				  Byte	 CODE:E889
K80				  Near16 CODE:F94B
K81				  Near16 CODE:F948
K88				  Near16 CODE:E7BE
K89				  Near16 CODE:F933
K89A				  Near16 CODE:F961
K89B				  Near16 CODE:F95C
K9				  Byte	 CODE:E8C3
K98				  Near16 CODE:EC13
K99				  Near16 CODE:E7F7
KBDINT				  Number 0002
KBD_IN				  Number 0060
KBD_RESET			  Near16 CODE:E5CB
KB_BUFFER			  Word	 DATA:001E
KB_BUFFER_END			  Word	 DATA:003E
KB_CTL				  Number 0061
KB_DAT				  Number 0060
KB_FLAG				  Byte	 DATA:0017
KB_FLAG_1			  Byte	 DATA:0018
KB_INT				  Far16	 CODE:E987
KB_OK				  Near16 CODE:E66C
KEYBOARD_IO			  Far16	 CODE:E82E
LAST_VAL			  Byte	 DATA:006B
LAT				  Number 0002
LAT_KEY				  Number 0057
LAT_SHIFT			  Number 0001
LEFT_KEY			  Number 0054
LEFT_SHIFT			  Number 0002
M1				  Word	 CODE:F045
M10				  Near16 CODE:F144
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 147
Symbol Table



M11				  Near16 CODE:F16F
M12				  Near16 CODE:F172
M13				  Near16 CODE:F175
M14				  Near16 CODE:F1C3
M15				  Near16 CODE:F1CA
M16				  Near16 CODE:F1DA
M17				  Near16 CODE:F207
M18				  Near16 CODE:F209
M19				  Near16 CODE:F269
M1L				  Number 0020
M2				  Near16 CODE:F080
M20				  Near16 CODE:F270
M3				  Near16 CODE:F098
M4				  Number 0010
M5				  Word	 CODE:F0E4
M6				  Byte	 CODE:F0EC
M7				  Byte	 CODE:F0F4
M8				  Near16 CODE:F10D
M9				  Near16 CODE:F141
MAX_PERIOD			  Number 0540
MEMORY_SIZE			  Word	 DATA:0013
MEMORY_SIZE_DETERMINE		  Far16	 CODE:F841
MEM_SIZ				  Word	 ABS0:0413
MFG_TST				  Byte	 DATA:0012
MIN_PERIOD			  Number 0410
MOTOR_COUNT			  Byte	 DATA:0040
MOTOR_STATUS			  Byte	 DATA:003F
MOTOR_WAIT			  Number 0025
N1				  Near16 CODE:F2AB
N10				  Near16 CODE:F331
N11				  Near16 CODE:F33A
N12				  Near16 CODE:F351
N13				  Near16 CODE:F35F
N14				  Near16 CODE:F36A
N15				  Near16 CODE:F36D
N16				  Near16 CODE:F379
N2				  Near16 CODE:F2B9
N3				  Near16 CODE:F2C4
N4				  Near16 CODE:F2C7
N5				  Near16 CODE:F2D0
N6				  Near16 CODE:F2E3
N7				  Near16 CODE:F2E6
N8				  Near16 CODE:F2FD
N9				  Near16 CODE:F30A
NEC_OP				  Near16 CODE:EE64
NEC_OUTPUT			  Near16 CODE:E72F
NEC_STATUS			  Byte	 DATA:0042
NMI_INT				  Near16 CODE:E2B5
NMI_PTR				  Word	 ABS0:0008
NUM_KEY				  Number 0045
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 148
Symbol Table



NUM_SHIFT			  Number 0020
NUM_STATE			  Number 0020
NUM_TRANS			  Near16 CODE:EFB0
ORG_VECTOR			  Dword	 ABS0:004C
OSH				  Near16 CODE:E3D4
P1				  Near16 CODE:F38A
P10				  Near16 CODE:F403
P11				  Near16 CODE:F40C
P12				  Near16 CODE:F413
P13				  Near16 CODE:F419
P2				  Near16 CODE:F398
P3				  Near16 CODE:F39E
P4				  Near16 CODE:F3B7
P5				  Near16 CODE:F3BD
P6				  Near16 CODE:F3D0
P7				  Near16 CODE:F3DB
P8				  Near16 CODE:F3E2
P9				  Near16 CODE:F3E8
PARM_PTR			  Dword	 ABS0:0074
PORT_A				  Number 0060
PORT_B				  Number 0061
PORT_C				  Number 0062
PORT_OFF			  Byte	 DATA:0077
POSITION			  Near16 CODE:F28B
POST				  Near16 CODE:FFF0
PRI10				  Near16 CODE:FF7F
PRI15				  Near16 CODE:FF8D
PRINTER_BASE			  Word	 DATA:0008
PRINTER_IO			  Far16	 CODE:EFD2
PRINT_SCREEN			  Far16	 CODE:FF54
PRT_DEC_LOOP			  Near16 CODE:E660
PRT_HEX				  Near16 CODE:E698
PRT_SIZ				  Near16 CODE:E64C
P_MSG				  Near16 CODE:E5F5
R1				  Near16 CODE:F450
R10				  Near16 CODE:F4E5
R11				  Near16 CODE:F4F3
R12				  Near16 CODE:F517
R13				  Near16 CODE:F533
R14				  Near16 CODE:F542
R15				  Near16 CODE:F544
R16				  Near16 CODE:F553
R17				  Near16 CODE:F557
R18				  Near16 CODE:F570
R2				  Near16 CODE:F457
R3				  Near16 CODE:F45B
R4				  Near16 CODE:F46E
R5				  Near16 CODE:F486
R6				  Near16 CODE:F490
R7				  Near16 CODE:F4BC
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 149
Symbol Table



R8				  Near16 CODE:F4D4
R9				  Near16 CODE:F4E3
READ_AC_CURRENT			  Near16 CODE:F37D
READ_CURSOR			  Near16 CODE:F21A
READ_DOT			  Near16 CODE:F427
READ_LPEN			  Near16 CODE:F7A9
RECORD_NOT_FND			  Number 0004
REGEN				  Byte	 VIDEO_RAM:0000
REGENW				  Word	 VIDEO_RAM:0000
RESET				  Near16 CODE:E05B
RESET_FLAG			  Word	 DATA:0072
RESULTS				  Near16 CODE:EF6B
RES_FL				  Word	 ABS0:0472
RIGHT_KEY			  Number 0055
RIGHT_SHIFT			  Number 0001
ROS				  Near16 CODE:E0DB
ROS_CHECKSUM			  Near16 CODE:E1FD
RS232_BASE			  Word	 DATA:0000
RS232_IO			  Near16 CODE:F929
RUST				  Byte	 CODE:F8CB
RUST2				  Byte	 CODE:E6BD
RUS_KEY				  Number 005B
RW_OPN				  Near16 CODE:ED4D
S1				  Near16 CODE:F594
S10				  Near16 CODE:F5FC
S11				  Near16 CODE:F618
S12				  Near16 CODE:F648
S13				  Near16 CODE:F660
S14				  Near16 CODE:F664
S15				  Near16 CODE:F676
S16				  Near16 CODE:F683
S17				  Near16 CODE:F688
S18				  Near16 CODE:F6B1
S19				  Near16 CODE:F6B7
S2				  Near16 CODE:F5A3
S20				  Near16 CODE:F6C0
S21				  Near16 CODE:F6CC
S22				  Near16 CODE:F6D5
S23				  Near16 CODE:F6EF
S24				  Near16 CODE:F6F9
S25				  Near16 CODE:F6FF
S26				  Near16 CODE:F70C
S3				  Near16 CODE:F5B3
S4				  Near16 CODE:F5B7
S5				  Near16 CODE:F5BF
S6				  Near16 CODE:F5D3
S7				  Near16 CODE:F5DF
S8				  Near16 CODE:F5E6
S9				  Near16 CODE:F5EA
SCROLL_DOWN			  Near16 CODE:F341
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 150
Symbol Table



SCROLL_KEY			  Number 0046
SCROLL_POSITION			  Near16 CODE:F2EA
SCROLL_SHIFT			  Number 0010
SCROLL_STATE			  Number 0010
SCROLL_UP			  Near16 CODE:F29C
SEEK				  Near16 CODE:EE67
SEEK_STATUS			  Byte	 DATA:003E
SET_COLOR			  Near16 CODE:F254
SET_CPOS			  Near16 CODE:F1F0
SET_CTYPE			  Near16 CODE:F1CF
SET_MODE			  Near16 CODE:F0FC
SP_TEST				  Near16 CODE:E5D8
STA				  Number 0030
START				  Near16 CODE:E05B
STATUS_BYTE			  Byte	 XXDATA:0000
STAT_OFFSET			  Byte	 DATA:007C
STGTST				  Near16 CODE:E01A
STGTST_CNT			  Near16 CODE:E01D
STG_LOC0			  Byte	 ABS0:0000
T1				  Near16 CODE:FE7F
T2				  Near16 CODE:FE82
T3				  Near16 CODE:FE95
T4				  Near16 CODE:FEB8
T5				  Near16 CODE:FED8
T6				  Near16 CODE:FEE9
TABL				  Word	 DATA:00E0
TABL1				  Word	 ABS0:04E0
TIMER				  Number 0040
TIMERO				  Number 0040
TIMER_HIGH			  Word	 DATA:006E
TIMER_INT			  Far16	 CODE:FEA5
TIMER_LOW			  Word	 DATA:006C
TIMER_OFL			  Byte	 DATA:0070
TIME_OF_DAY			  Far16	 CODE:FE6E
TIME_OUT			  Number 0080
TIM_CTL				  Number 0043
TMINT				  Number 0001
TMP_TOS				  Word	 DATA:3FF0
TOS				  Word	 STAC:0100
TST12				  Near16 CODE:E42D
TST6				  Near16 CODE:E227
TST8				  Near16 CODE:E2DE
U1				  Near16 CODE:F753
U10				  Near16 CODE:F793
U11				  Near16 CODE:F79A
U2				  Near16 CODE:F766
U3				  Near16 CODE:F76C
U4				  Near16 CODE:F77A
U5				  Near16 CODE:F77C
U6				  Near16 CODE:F780
Turbo Assembler	 Version 5.0	    10-04-21 23:42:03	    Page 151
Symbol Table



U7				  Near16 CODE:F782
U8				  Near16 CODE:F786
U9				  Near16 CODE:F78F
V1				  Byte	 CODE:F7A1
V2				  Near16 CODE:F7E8
V3				  Near16 CODE:F80F
V4				  Near16 CODE:F81B
V5				  Near16 CODE:F82D
V6				  Near16 CODE:F82F
V7				  Near16 CODE:F839
VECTOR_TABLE			  Word	 CODE:FEF3
VIDEO_INT			  Word	 ABS0:0040
VIDEO_IO			  Near16 CODE:F065
VIDEO_PARMS			  Byte	 CODE:F0A4
VIDEO_RA			  Number B800
VIDEO_RETURN			  Near16 CODE:F1C7
VIDEO_STATE			  Near16 CODE:F27A
WAIT_INT			  Near16 CODE:EF30
WRITE_AC_CURRENT		  Near16 CODE:F3C3
WRITE_C_CURRENT			  Near16 CODE:F3F6
WRITE_DOT			  Near16 CODE:F438
WRITE_PROTECT			  Number 0003
WRITE_TTY			  Near16 CODE:F722
WRITE_TTY2			  Near16 CODE:F966
X1				  Near16 CODE:ED8B
X2				  Near16 CODE:ED87
XLAT_PRINT_COD			  Near16 CODE:E402
XXDAT				  Number 0050
ZB				  Byte	 ABS0:0000
ZW				  Word	 ABS0:0000

Groups & Segments		  Bit Size Align  Combine Class

ABS0				  16  7C00 Para	  none
CODE				  16  00010000 Para   none
DATA				  16  3FF0 Para	  none
STAC				  16  0100 Para	  Stack
VIDEO_RAM			  16  4000 Para	  none
XXDATA				  16  0001 Para	  none

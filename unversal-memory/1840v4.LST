Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 1
1840v4.asm



      1				     ;___________________
      2				     ; v4 - ??/??/???? (Other version than 24/04/1981) новая клавиатура
      3				     ;	БАЗОВАЯ	СИСТЕМА	ВВОДА/ВЫВОДА (БСУВВ)
      4				     ;___________________
      5	      =0060		     port_a  equ     60h
      6	      =F000		     cod     equ     0f000h
      7	      =0040		     dat     equ     0040h
      8	      =0030		     sta     equ     0030h
      9	      =0050		     xxdat   equ     0050h
     10	      =B800		     video_ra equ    0b800h
     11	      =0061		     port_b  equ     61h
     12	      =0062		     port_c  equ     62h
     13	      =0063		     cmd_port equ    63h
     14	      =0020		     inta00  equ     20h
     15	      =0021		     inta01  equ     21h
     16	      =0020		     eoi     equ     20h
     17	      =0040		     timer   equ     40h
     18	      =0043		     tim_ctl equ     43h
     19	      =0040		     timero  equ     40h
     20	      =0001		     tmint   equ     01
     21	      =0008		     dma08   equ     08
     22	      =0000		     dma     equ     00
     23	      =0540		     max_period	equ  540h
     24	      =0410		     min_period	equ  410h
     25	      =0060		     kbd_in  equ     60h
     26	      =0002		     kbdint  equ     02
     27	      =0060		     kb_dat  equ     60h
     28	      =0061		     kb_ctl  equ     61h
     29				     ;_______________
     30				     ;	Расположение прерываний	8086
     31				     ;_________________________
     32	0000			     abs0    segment para
     33	0000			     zb	     label   byte
     34	0000			     zw	     label   word
     35	0000			     stg_loc0 label  byte
     36					     org     2*4
     37	0008			     nmi_ptr label   word
     38					     org     5*4
     39	0014			     int5_ptr label  word
     40					     org     8*4
     41	0020			     int_addr label  word
     42	0020			     int_ptr label   dword
     43					     org     0dh*4
     44	0034			     hdisk_int	label  dword
     45					     org     10h*4
     46	0040			     video_int label word
     47					     org     13h*4
     48	004C			     org_vector	 label	dword
     49					     org     19h*4
     50	0064			     boot_vec  label  dword
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 2
1840v4.asm



     51					     org     1dh*4
     52	0074			     parm_ptr label  dword
     53					     org     01eh*4
     54	0078			     disk_pointer label	dword
     55	0078			     diskette_parm  label  dword
     56					     org     01fh*4
     57	007C			     ext_ptr label   dword
     58					     org     040h*4
     59	0100			     disk_vector  label	 dword
     60					     org     041h*4
     61
     62	0104			     hf_tbl_vec	 label	dword
     63					     org     410h
     64	0410			     eq_fl   label   byte
     65
     66					     org     413h
     67	0413			     mem_siz label   word
     68					     org     472h
     69	0472			     res_fl  label   word
     70					     org     4d0h
     71	04D0			     csi     label   word
     72					     org     4e0h
     73	04E0			     tabl1   label   word
     74					     org     7c00h
     75	7C00			     boot_locn label far
     76	7C00			     abs0    ends
     77
     78				     ;______________________
     79				     ;	Использование стека только во время инициализации
     80				     ;______________________
     81	0000			     stac    segment para stack
     82	0000  80*(????)			     dw	     128 dup(?)
     83
     84
     85
     86	0100			     tos     label   word
     87	0100			     stac    ends
     88
     89				     ;______________________
     90				     ;	Область	данных ПЗУ
     91				     ;____________________
     92	0000			     data segment    para
     93	0000  04*(????)		     rs232_base	dw 4 dup(?)
     94
     95
     96
     97	0008  04*(????)		     printer_base dw 4 dup(?)
     98
     99
    100
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 3
1840v4.asm



    101	0010  ????		     equip_flag	dw ?
    102	0012  ??		     mfg_tst db	     ?
    103	0013  ????		     memory_size dw  ?
    104	0015  ????		     io_ram_size dw  ?
    105				     ;_______________
    106				     ;	Область	данных клавиатуры
    107				     ;_________________
    108	0017  ??		     kb_flag db	     ?
    109
    110				     ;	Размещение флажков в kb_flag
    111
    112	      =0080		     ins_state equ   80h
    113	      =0040		     caps_state	equ  40h
    114	      =0020		     num_state equ   20h
    115	      =0010		     scroll_state equ 10h
    116	      =0008		     alt_shift equ   08h
    117	      =0004		     ctl_shift equ   04h
    118	      =0002		     left_shift	equ  02h
    119	      =0001		     right_shift equ 01h
    120
    121	0018  ??		     kb_flag_1 db    ?
    122
    123	      =0080		     ins_shift equ   80h
    124	      =0040		     caps_shift	equ  40h
    125	      =0020		     num_shift equ   20h
    126	      =0010		     scroll_shift equ 10h
    127	      =0008		     hold_state	equ  08h
    128	      =0004		     inv_shift equ   04h
    129	      =0002		     lat	     equ     02h
    130	      =0001		     lat_shift	     equ     01h
    131
    132
    133
    134	0019  ??		     alt_input db    ?
    135	001A  ????		     buffer_head dw  ?
    136	001C  ????		     buffer_tail dw  ?
    137	001E  10*(????)		     kb_buffer dw    16	dup(?)
    138
    139
    140
    141	003E			     kb_buffer_end label word
    142
    143				     ;	head=tail указывает на заполнение буфера
    144
    145	      =0045		     num_key equ     69
    146	      =0046		     scroll_key	equ  70
    147	      =0038		     alt_key equ     56
    148	      =001D		     ctl_key equ     29
    149	      =0056		     caps_key equ    86
    150	      =0054		     left_key equ    84
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 4
1840v4.asm



    151	      =0055		     right_key equ   85
    152	      =0052		     ins_key equ     82
    153	      =0053		     del_key equ     83
    154	      =0059		     inf_key   equ   89
    155	      =0058		     inv_key_l	equ  88
    156	      =005A		     inv_key_r equ   90
    157	      =005B		     rus_key	equ  91
    158	      =0057		     lat_key equ     87
    159
    160				     ;____________________
    161				     ;	Область	данных НГМД
    162				     ;____________________
    163	003E  ??		     seek_status db  ?
    164				     ;
    165				     ;
    166	      =0080		     int_flag equ    080h
    167	003F  ??		     motor_status db ?
    168				     ;
    169				     ;
    170	0040  ??		     motor_count db  ?
    171	      =0025		     motor_wait	equ  37
    172
    173				     ;
    174	0041  ??		     diskette_status db	?
    175	      =0080		     time_out equ    80h
    176	      =0040		     bad_seek equ    40h
    177	      =0020		     bad_nec  equ    20h
    178	      =0010		     bad_crc  equ    10h
    179	      =0009		     dma_boundary equ 09h
    180	      =0008		     bad_dma  equ    08h
    181	      =0004		     record_not_fnd equ	04h
    182	      =0003		     write_protect equ 03h
    183	      =0002		     bad_addr_mark equ 02h
    184	      =0001		     bad_cmd equ     01h
    185
    186	0042			     cmd_block	label  byte
    187	0042			     hd_error  label  byte
    188	0042  07*(??)		     nec_status	db   7 dup(?)
    189
    190
    191
    192
    193				     ;_____________________
    194				     ;	Область	данных ЭЛИ
    195				     ;_____________________
    196	0049  ??		     crt_mode db     ?
    197	004A  ????		     crt_cols dw     ?
    198	004C  ????		     crt_len  dw     ?
    199	004E  ????		     crt_start dw    ?
    200	0050  08*(????)		     cursor_posn dw  8 dup(?)
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 5
1840v4.asm



    201
    202
    203
    204	0060  ????		     cursor_mode dw  ?
    205	0062  ??		     active_page db  ?
    206	0063  ????		     addr_6845 dw    ?
    207	0065  ??		     crt_mode_set db ?
    208	0066  ??		     crt_pallette db ?
    209
    210				     ;___________________
    211				     ;	Область	данных НМД
    212				     ;___________________
    213	0067  ????		     io_rom_init dw  ?
    214	0069  ????		     io_rom_seg	dw   ?
    215	006B  ??		     last_val db     ?
    216
    217				     ;___________________
    218				     ;	Область	данных таймера
    219				     ;___________________
    220	006C  ????		     timer_low dw    ?
    221	006E  ????		     timer_high	dw   ?
    222	0070  ??		     timer_ofl db    ?
    223				     ;___________________
    224				     ;	Область	данных системы
    225				     ;___________________
    226	0071  ??		     bios_break	db   ?
    227	0072  ????		     reset_flag	dw   ?
    228	0074  ??		     diskw_status  db  ?
    229	0075  ??		     hf_num  db	  ?
    230	0076  ??		     control_byte  db  ?
    231	0077  ??		     port_off  db  ?
    232						     org     7ch
    233	007C			     stat_offset     label   byte ; смещение для хранения состояний модема
    234
    235					     org     80h
    236	0080  ????		     buffer_start    dw	     ?
    237	0082  ????		     buffer_end	     dw	     ?
    238					     org     0090h
    239	0090  ????		     idnpol  dw	     ?
    240					     org     0e0h
    241	00E0			     tabl    label   word
    242
    243					     org     3ff0h
    244	3FF0			     tmp_tos label   word
    245				     ;
    246	3FF0			     data    ends
    247
    248				     ;___________________
    249				     ;	Область	расширения данных
    250				     ;_________________________________
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 6
1840v4.asm



    251	0000			     xxdata segment  para
    252	0000  ??		     status_byte db  ?
    253	0001			     xxdata  ends
    254
    255				     ;_________________
    256				     ;	Буфер ЭЛИ
    257				     ;___________________
    258	0000			     video_ram segment para
    259	0000			     regen   label   byte
    260	0000			     regenw  label   word
    261	0000  4000*(??)			     db	     16384 dup(?)
    262
    263
    264
    265	4000			     video_ram ends
    266				     ;____________________
    267				     ;	Основной массив	в ПЗУ (сегмент code)
    268				     ;____________________
    269
    270	0000			     code segment para
    271
    272						     org 0E000h
    273
    274	E000  35 37 30 30 30 35	31+  a5700051Copr_Ib db	'5700051 copr. ibm 1981'
    275	      20 63 6F 70 72 2E	20+
    276	      69 62 6D 20 31 39	38+
    277	      31
    278	E016  E0D9r		     c1		     dw	offset c11	     ; адрес возврата
    279	E018  E1E0r		     caw	     dw	offset ca3
    280					     assume cs:code,ss:code,es:abs0,ds:data
    281
    282	E01A			     stgtst:
    283	E01A  B9 4000				     mov     cx,4000h
    284
    285	E01D			     stgtst_cnt	     proc    near
    286	E01D  FC				     cld
    287	E01E  8B D9				     mov     bx, cx
    288	E020  B8 FFFF				     mov     ax, 0FFFFh
    289	E023  BA AA55				     mov     dx, 0AA55h
    290	E026  2B FF				     sub     di, di
    291	E028  F3> AA				     repe stosb
    292
    293	E02A			     c2a:
    294	E02A  4F				     dec     di
    295	E02B  FD				     std
    296
    297	E02C			     c2b:
    298	E02C  8B F7				     mov     si, di
    299	E02E  8B CB				     mov     cx, bx
    300
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 7
1840v4.asm



    301	E030			     c3:
    302	E030  AC				     lodsb
    303	E031  32 C4				     xor     al, ah
    304	E033  75 25				     jnz     c7x
    305	E035  E4 62				     in	     al, 62h
    306	E037  24 40				     and     al, 40h
    307	E039  B0 00				     mov     al, 0
    308	E03B  75 1D				     jnz     c7x
    309	E03D  80 FC 00				     cmp     ah, 0
    310	E040  74 03				     jz	     c3a
    311	E042  8A C2				     mov     al, dl
    312	E044  AA				     stosb
    313
    314	E045			     c3a:
    315	E045  E2 E9				     loop    c3
    316	E047  80 FC 00				     cmp     ah, 0
    317	E04A  74 0E				     jz	     c7x
    318	E04C  8A E0				     mov     ah, al
    319	E04E  86 F2				     xchg    dh, dl
    320	E050  FC				     cld
    321	E051  47				     inc     di
    322	E052  74 D8				     jz	     c2b
    323	E054  4F				     dec     di
    324	E055  BA 0001				     mov     dx, 1
    325	E058  EB D0				     jmp     short c2a
    326
    327	E05A			     c7x:
    328	E05A  C3				     retn
    329	E05B			     stgtst_cnt	     endp
    330
    331
    332				     ;____________________
    333				     ;	Сброс системы -	фаза 1
    334				     ;____________________
    335				     ;_____________________
    336				     ;	Проверка 16К памяти
    337				     ;_____________________
    338				     ;___________________
    339				     ;	ТЕСТ.01
    340				     ;	     Тест процессора 8086. Осуществляет	проверку регистра
    341				     ;	     признаков,	команд перехода	и считывания-записи
    342				     ;	     общих и сегментных	регистров.
    343				     ;_____________________________________
    344	E05B			     reset   label   near
    345	E05B  FA		     start:  cli		     ; сброс признака разрешения прерывания
    346	E05C  B4 D5			     mov     ah,0d5h	     ;уст признаки SF,CF,ZF,AF
    347	E05E  9E			     sahf
    348	E05F  73 4E			     jnc     err01	     ;CF=0,в программу ошибок
    349	E061  75 4C			     jnz     err01	     ;ZF=0,в программу ошибок
    350	E063  7B 4A			     jnp     err01	     ;PF=0,в программу ошибок
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 8
1840v4.asm



    351	E065  79 48			     jns     err01	     ;SF=0,в программу ошибок
    352	E067  9F			     lahf		     ;загрузить	признаки в AH
    353	E068  B1 05			     mov     cl,5	     ;загрузить	счетчик
    354	E06A  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    355	E06C  73 41			     jnc     err01	     ;признак AF=0
    356	E06E  B0 40			     mov     al,40h	     ;уст признак переполнения
    357	E070  D0 E0			     shl     al,1	     ;уст для контроля
    358	E072  71 3B			     jno     err01	     ;признак OF не уст
    359	E074  32 E4			     xor     ah,ah	     ;уст AH=0
    360	E076  9E			     sahf		     ;уст в исходное состояние SF,CF,ZF,PF
    361	E077  72 36			     jc	     err01	     ;признак CF=1
    362	E079  74 34			     jz	     err01	     ;признак ZF=1
    363	E07B  78 32			     js	     err01	     ;признак SF=1
    364	E07D  7A 30			     jp	     err01	     ;признак PF=1
    365	E07F  9F			     lahf		     ;загрузить	признаки в AH
    366	E080  B1 05			     mov     cl,5	     ;загрузить	счетчик
    367	E082  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    368	E084  72 29			     jc	     err01	     ;признак IF=1
    369	E086  D0 E4			     shl     ah,1	     ;контроль,	что OF сброшен
    370	E088  70 25			     jo	     err01
    371	E08A  B8 FFFF			     mov     ax,0ffffh	     ;уст эталона в AX
    372	E08D  F9			     stc
    373	E08E  8E D8		     c8:     mov     ds,ax	     ;запись во	все регистры
    374	E090  8C DB			     mov     bx,ds
    375	E092  8E C3			     mov     es,bx
    376	E094  8C C1			     mov     cx,es
    377	E096  8E D1			     mov     ss,cx
    378	E098  8C D2			     mov     dx,ss
    379	E09A  8B E2			     mov     sp,dx
    380	E09C  8B EC			     mov     bp,sp
    381	E09E  8B F5			     mov     si,bp
    382	E0A0  8B FE			     mov     di,si
    383	E0A2  73 07			     jnc     c9
    384	E0A4  33 C7			     xor     ax,di	     ;проверка всех регистров
    385								     ;эталонами	"FFFF",	"0000"
    386	E0A6  75 07			     jnz     err01
    387	E0A8  F8			     clc
    388	E0A9  73 E3			     jnc     c8
    389	E0AB			     c9:
    390	E0AB  0B C7			     or	     ax,di	     ;нулевым шаблоном все регистры проверены ?
    391	E0AD  74 02			     jz	     c10	     ;ДА - переход к следующему	тесту
    392	E0AF  EB AA		     err01:  jmp   short  start
    393				     ;_______________________
    394				     ; ТЕСТ.02
    395				     ;_______________________
    396	E0B1			     c10:
    397	E0B1  B0 00			     mov     al,0	     ;запретить	прерывaния NMI
    398	E0B3  E6 A0			     out     0a0h,al
    399	E0B5  E6 83			     out     83h,al	     ;инициализация регистрa страниц ПДП
    400	E0B7  B0 99			     mov     al,99h	     ;уст A,C -ввод, B - вывод
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 9
1840v4.asm



    401	E0B9  E6 63			    out	     cmd_port,al	     ;запись в регистр режима
    402									     ;трехканального порта
    403	E0BB  B0 FC			     mov     al,0fch		     ;блокировка контроля по четности
    404	E0BD  E6 61			     out     port_b,al
    405	E0BF  2A C0			     sub     al,al
    406	E0C1  BA 03D8			     mov     dx,3d8h
    407	E0C4  EE			     out     dx,al	     ;блокировка цветного ЭЛИ
    408	E0C5  FE C0			     inc     al
    409	E0C7  BA 03B8			     mov     dx,3b8h
    410	E0CA  EE			     out     dx,al	     ;блокировка черно-белого ЭЛИ
    411	E0CB  B8 F000			     mov     ax,cod	     ;уст сегментного регистра SS
    412	E0CE  8E D0			     mov     ss,ax
    413	E0D0  BB E000			     mov     bx,0e000h		     ;уст начального адреса памяти
    414	E0D3  BC E016r			     mov     sp,offset c1	     ;уст адреса возврата
    415	E0D6  EB 03			     jmp     short ros
    416	E0D8  90				     nop
    417	E0D9  75 D4		     c11:    jne     err01
    418				     ;------------------------
    419				     ;	ТЕСТ.03
    420				     ;	 Осуществляет проверку,	инициализацию и	запуск ПДП и
    421				     ; таймера 1 для регенерации памяти
    422				     ;_________________________
    423				     ;	 Блокировка контроллера	ПДП
    424
    425	E0DB  B0 04		     ros:    mov     al,04
    426	E0DD  E6 08			     out     dma08,al
    427
    428				     ;	 Проверка правильности функционирования
    429				     ;	 таймера 1
    430
    431	E0DF  B0 54			     mov     al,54h	     ;выбор таймера 1,LSB, режим 2
    432	E0E1  E6 43			     out     timer+3,al
    433	E0E3  2B C9			     sub     cx,cx
    434	E0E5  8A D9			     mov     bl,cl
    435	E0E7  8A C1			     mov     al,cl	     ;уст начального счетчика таймера в	0
    436	E0E9  E6 41			     out     timer+1,al
    437	E0EB			     c12:
    438	E0EB  B0 40			     mov     al,40h
    439	E0ED  E6 43			     out     timer+3,al
    440	E0EF  E4 41			     in	     al,timer+1	     ;считывание счетчика таймера 1
    441	E0F1  0A D8			     or	     bl,al	     ;все биты таймера включены	?
    442	E0F3  80 FB FF			     cmp     bl,0ffh	     ;ДА - сравнение с FF
    443	E0F6  74 04			     je	     c13	     ;биты таймера сброшены
    444	E0F8  E2 F1			     loop    c12	     ;биты таймера установлены
    445	E0FA  EB B3			     jmp     short err01     ;сбой таймера 1, останов системы
    446	E0FC			     c13:
    447	E0FC  8A C3			     mov     al,bl	     ;уст счетчика таймера 1
    448	E0FE  2B C9			     sub     cx,cx
    449	E100  E6 41			     out     timer+1,al
    450	E102			     c14:	     ;цикл таймера
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 10
1840v4.asm



    451	E102  B0 40			     mov     al,40h
    452	E104  E6 43			     out     timer+3,al
    453	E106  E4 41			     in	     al,timer+1		     ;считывание счетчика таймера 1
    454	E108  22 D8			     and     bl,al
    455	E10A  74 04			     jz	     c15
    456	E10C  E2 F4			     loop    c14	     ;цикл таймера
    457	E10E  EB 9F			     jmp     short err01
    458
    459				     ;	 Инициализация таймера 1
    460
    461	E110			     c15:
    462	E110  B0 54			     mov     al,54h
    463	E112  E6 43			     out     timer+3,al	     ;запись в регистр режима таймера
    464	E114  B0 07			     mov     al,7    ;уст коэффициента деления для регенерации
    465	E116  E6 41			     out     timer+1,al	     ;запись в счетчик таймера 1
    466	E118  E6 0D			     out     dma+0dh,al	     ;послать гашение ПДП
    467
    468				     ;	 Цикл проверки регистров ПДП
    469
    470	E11A  B0 FF			     mov     al,0ffh	     ;запись шаблона FF	во все регистры
    471	E11C  8A D8		     c16:    mov     bl,al	     ;сохранить	шаблон для сравнения
    472	E11E  8A F8			     mov     bh,al
    473	E120  B9 0008			     mov     cx,8	     ;уст цикла	счетчика
    474	E123  BA 0000			     mov     dx,dma	     ;уст адреса регистра порта	ввода/вывода
    475	E126  EE		     c17:    out     dx,al	     ;запись  шаблона в	регистр
    476	E127  EE			     out     dx,al	     ;старшие 16 бит регистра
    477	E128  B8 0101			     mov     ax,0101h	     ;изменение	AX перед считыванием
    478	E12B  EC			     in	     al,dx
    479	E12C  8A E0			     mov     ah,al	     ;сохранить	младшие	16 бит регистра
    480	E12E  EC			     in	     al,dx
    481	E12F  3B D8			     cmp     bx,ax	     ;считан тот же шаблон ?
    482	E131  74 03			     je	     c18	     ;ДА - проверка следующего регистра
    483	E133  E9 FF79			     jmp     err01	     ;НЕТ - ошибка
    484	E136			     c18:			     ;выбор следующего регистра	ПДП
    485	E136  42			     inc     dx		     ;установка	адреса следующего
    486								     ;регистра ПДП
    487	E137  E2 ED			     loop    c17	     ;запись шаблона для следующего регистра
    488	E139  F6 D0			     not     al		       ;уст шаблона в 0
    489	E13B  74 DF			     jz	     c16
    490
    491				     ;	 Инициализация и запуск	ПДП
    492
    493	E13D  B0 FF			     mov     al,0ffh	     ;уст счетчика 64K для регенерации
    494	E13F  E6 01			     out     dma+1,al
    495	E141  E6 01			     out     dma+1,al
    496	E143  B0 58			     mov     al,058h	     ;уст режим	ПДП, счетчик 0,	считывание
    497	E145  E6 0B			     out     dma+0bh,al	     ;запись в регистр режима ПДП
    498	E147  B0 00			     mov     al,0	     ;доступность контроллера ПДП
    499	E149  E6 08			     out     dma+8,al	     ;уст регистр команд ПДП
    500	E14B  E6 0A			     out     dma+10,al	     ;доступность канала 0 для регенерации
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 11
1840v4.asm



    501	E14D  B0 41			     mov     al,41h	     ;уст режим	дла канала 1
    502	E14F  E6 0B			     out     dma+0bh,al
    503	E151  B0 42			     mov     al,42h	     ;уст режим	для канала 2
    504	E153  E6 0B			     out     dma+0bh,al
    505	E155  B0 43			     mov     al,43h	     ;уст режим	для канала 3
    506	E157  E6 0B			     out     dma+0bh,al
    507	E159  B8 0040				     mov     ax, dat
    508	E15C  8E D8				     mov     ds, ax
    509
    510	E15E  8B 1E 0072r			     mov     bx, ds:reset_flag
    511	E162  2B C0				     sub     ax, ax
    512	E164  8E C0				     mov     es, ax
    513	E166  8E D8				     mov     ds, ax
    514	E168  E4 62				     in	     al, port_c
    515	E16A  24 0F				     and     al, 0Fh
    516	E16C  FE C0				     inc     al
    517	E16E  02 C0				     add     al, al
    518	E170  BA 0000				     mov     dx, 0
    519	E173  8A E0				     mov     ah, al
    520	E175  B0 00				     mov     al, 0
    521	E177  FC				     cld
    522
    523	E178			     c19:
    524	E178  2B FF				     sub     di, di
    525	E17A  B9 0000				     mov     cx, 0
    526
    527	E17D			     c20:
    528	E17D  AA				     stosb
    529	E17E  E2 FD				     loop    c20
    530	E180  81 C2 1000			     add     dx, 4096
    531	E184  8E C2				     mov     es, dx
    532	E186  FE CC				     dec     ah
    533	E188  74 02				     jz	     c21
    534	E18A  EB EC				     jmp     short c19
    535				     ;____________________
    536				     ;	 Инициализация контроллера
    537				     ;	 прерываний 8259
    538				     ;____________________
    539	E18C			     c21:
    540	E18C  B0 13			     mov     al,13h	     ;ICW1 - EDGE, SNGL, ICW4
    541	E18E  E6 20			     out     inta00,al
    542	E190  B0 08			     mov     al,8	     ;УСТ ICW2 - прерывание типа 8(8-F)
    543	E192  E6 21			     out     inta01,al
    544	E194  B0 09			     mov     al,9	     ;уст ICW4 - BUFFERD , режим 8086
    545	E196  E6 21			     out     inta01,al
    546	E198  2B C0				     sub     ax, ax
    547	E19A  8E C0				     mov     es, ax
    548	E19C  BE 0040				     mov     si, dat
    549	E19F  8E DE				     mov     ds, si
    550
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 12
1840v4.asm



    551	E1A1  89 1E 0072r			     mov     ds:reset_flag, bx
    552	E1A5  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
    553	E1AB  74 38				     jz	     c25
    554	E1AD  8E D8				     mov     ds, ax
    555	E1AF  BC 3FF0r				     mov     sp, offset	tmp_tos
    556	E1B2  8E D0				     mov     ss, ax
    557	E1B4  8B F8				     mov     di, ax
    558	E1B6  BB 0024				     mov     bx, 9*4	     ; int 9 (KBD)
    559	E1B9  C7 07 E2A8r			     mov     word ptr [bx], offset d11
    560	E1BD  43				     inc     bx
    561	E1BE  43				     inc     bx
    562	E1BF  8C 0F				     mov     [bx], cs
    563	E1C1  E8 0407				     call    kbd_reset
    564	E1C4  80 FB 65				     cmp     bl, 65h	     ; Manufacturing test mode - viz document  +
    565				     in	BIOS root or http://www.vcfed.org/forum/archive/index.php/t-12377.html
    566	E1C7  75 0E				     jnz     c23
    567	E1C9  B2 FF				     mov     dl, 0FFh
    568
    569	E1CB			     c22:
    570	E1CB  E8 040A				     call    sp_test
    571	E1CE  8A C3				     mov     al, bl
    572	E1D0  AA				     stosb
    573	E1D1  FE CA				     dec     dl
    574	E1D3  75 F6				     jnz     c22
    575	E1D5  CD 3E				     int     3Eh
    576
    577	E1D7			     c23:
    578	E1D7  0E				     push    cs
    579	E1D8  17				     pop     ss
    580						     assume ss:code
    581	E1D9  FA				     cli
    582	E1DA  BC E018r				     mov     sp, offset	caw  ; [caw] = offset ca3 (next	jmp -> indirect+
    583				     call)
    584	E1DD  E9 FE3A				     jmp     stgtst
    585
    586	E1E0			     ca3:
    587	E1E0  74 03				     jz	     c25
    588	E1E2  E9 FECA				     jmp     err01
    589
    590				     ;	 Установка сегмента стека и SP
    591
    592	E1E5			     c25:
    593	E1E5  B8 0030			     mov     ax,sta	     ;получить величину	стека
    594	E1E8  8E D0			     mov     ss,ax	     ;уст стек
    595	E1EA  BC 0100r			     mov     sp,offset tos   ;стек готов
    596
    597				     ;	 Установка указателя вектора прерывания	NMI
    598
    599	E1ED  26: C7 06	0008r	  +	     mov     es:nmi_ptr,offset nmi_int
    600	      E2B5r
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 13
1840v4.asm



    601	E1F4  26: C7 06	000Ar F000	     mov     es:nmi_ptr+2,cod
    602	E1FB  EB 2A			     jmp     short tst6	     ;переход к	следующему тесту
    603
    604	E1FD			     ros_checksum proc	near
    605	E1FD  B9 2000			     mov     cx,8192	     ;число байт для сложения
    606	E200  32 C0			     xor     al,al
    607	E202  2E: 02 07		     c26:    add     al,cs:[bx]
    608	E205  43			     inc     bx		     ;указание следующего байта
    609	E206  E2 FA			     loop    c26	     ;сложить все байты	в модуле ROS
    610	E208  0A C0			     or	     al,al	     ;сумма = 0	?
    611	E20A  C3			     ret
    612	E20B			     ros_checksum endp
    613				     ;______________________
    614				     ;	 Начальный тест	надежности
    615				     ;______________________
    616					     assume  cs:code,es:abs0
    617
    618	E20B  70 61 72 69 74 79	20+  d1		     db	'parity	check 2'
    619	      63 68 65 63 6B 20	32
    620
    621
    622	      =000E		     d1l     equ     14
    623	E219  70 61 72 69 74 79	20+  d2		     db	'parity	check 1'
    624	      63 68 65 63 6B 20	31
    625
    626
    627	      =000E		     d2l     equ     14
    628				     ;______________________
    629				     ;	 ТЕСТ.06
    630				     ;	      Тест контроллера прерываний
    631				     ;	      8259
    632				     ;_______________________
    633	E227			     tst6:
    634	E227  2B C0			     sub     ax,ax	     ;уст регистра ES
    635	E229  8E C0			     mov     es,ax
    636
    637				     ;-----уст вектора прерываний 5
    638
    639	E22B  26: C7 06	0014r	  +	     mov     es:int5_ptr,offset	print_screen   ; печать	экрана
    640	      FF54r
    641	E232  26: C7 06	0016r F000	     mov     es:int5_ptr+2,cod
    642
    643				     ;	 Проверка регистра масок прерываний (IMR)
    644
    645	E239  FA			     cli		     ;сброс признака разрешения	прерываний
    646	E23A  B0 00			     mov     al,0	     ;уст IMR в	0
    647	E23C  E6 21			     out     inta01,al
    648	E23E  E4 21			     in	     al,inta01	     ;считывание IMR
    649	E240  0A C0			     or	     al,al	     ;IMR=0 ?
    650	E242  75 2B			     jnz     d6		     ;IMR не 0,в программу ошибок
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 14
1840v4.asm



    651	E244  B0 FF			     mov     al,0ffh	     ;недоступность прерываний
    652	E246  E6 21			     out     inta01,al	     ;запись в IMR
    653	E248  E4 21			     in	     al,inta01	     ;считывание IMR
    654	E24A  04 01			     add     al,1	     ;все биты IMR установлены ?
    655	E24C  75 21			     jnz     d6		     ;НЕТ - в программу	ошибок
    656
    657				     ;	 Контроль ожидания прерывания
    658
    659	E24E  FC			     cld		     ; уст признак направления
    660	E24F  B9 0008			     mov     cx,8
    661	E252  BF 0020r			     mov     di,offset int_ptr	     ; уст адресацию таблицы
    662	E255			     d3:
    663	E255  B8 E2A8r			     mov     ax,offset d11   ; установить адрес	процедуры прерываний
    664	E258  AB			     stosw
    665	E259  B8 F000			     mov     ax,cod  ; получить	адрес сегмента процедуры
    666	E25C  AB			     stosw
    667	E25D  83 C3 04			     add     bx,4    ;уст BX для указания следующего значения
    668	E260  E2 F3			     loop    d3
    669
    670				     ;	 Прерывания размаскированы
    671
    672	E262  32 E4			     xor     ah,ah	     ;очистить регистр AH
    673	E264  FB			     sti		     ; установка признака разрешения прерывания
    674	E265  2B C9			     sub     cx,cx	     ; ожидание	1 сек любого прерывания,
    675	E267  E2 FE		     d4:     loop    d4		     ; которое может произойти
    676	E269  E2 FE		     d5:     loop    d5
    677	E26B  0A E4			     or	     ah,ah	     ; прерывание возникло ?
    678	E26D  74 08			     jz	     d7		     ; нет - к следующему тесту
    679	E26F  BA 0101		     d6:     mov     dx,101h	     ; уст длительности	звукового сигнала
    680	E272  E8 030B			     call    err_beep	     ; идти в программу	звукового сигнала
    681	E275  FA			     cli
    682	E276  F4			     hlt		     ; останов системы
    683				     ;__________________
    684				     ;	 ТЕСТ.07
    685				     ;	      Проверка таймера 8253
    686				     ;___________________
    687	E277			     d7:
    688	E277  B4 00			     mov     ah,0	     ; сброс признака прерывания таймера
    689	E279  32 ED			     xor     ch,ch	     ; очистить	регистр	CH
    690	E27B  B0 FE			     mov     al,0feh   ; маскировать все прерывания, кроме LVL 0
    691	E27D  E6 21			     out     inta01,al	     ; запись IMR
    692	E27F  B0 10			     mov     al,00010000b    ; выбрать TIM 0, LSD, режим 0, BINARY
    693	E281  E6 43			     out     tim_ctl,al	 ;записать регистр режима управления таймера
    694	E283  B1 16			     mov     cl,16h	     ; уст счетчик программного	цикла
    695	E285  8A C1			     mov     al,cl	     ; установить счетчик таймера 0
    696	E287  E6 40			     out     timero,al	     ; записать	счетчик	таймера	0
    697	E289  F6 C4 FF		     d8:     test    ah,0ffh	     ; прерывание таймера 0 произошло ?
    698	E28C  75 04			     jnz     d9		     ; да - таймер считал медленно
    699	E28E  E2 F9			     loop    d8		     ; ожидание	прерывания определенное	время
    700	E290  EB DD			     jmp     short d6	;прерывание таймера 0 не произошло - ошибка
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 15
1840v4.asm



    701	E292  B1 12		     d9:     mov     cl,18	     ; уст счетчик программного	цикла
    702	E294  B0 FF			     mov     al,0ffh	     ; записать	счетчик	таймера	0
    703	E296  E6 40			     out     timero,al
    704	E298  B4 00			     mov     ah,0	     ; сброс признака,полученного прерывания
    705	E29A  B0 FE			     mov     al,0feh	     ; недоступность прерываний	таймера	0
    706	E29C  E6 21			     out     inta01,al
    707	E29E  F6 C4 FF		     d10:    test    ah,0ffh	     ; прерывание таймера 0 произошло ?
    708	E2A1  75 CC			     jnz     d6		     ; да - таймер считает быстро
    709	E2A3  E2 F9			     loop    d10	     ; ожидание	прерывания определенное	время
    710	E2A5  EB 37			     jmp     short tst8		     ; переход к следующему тесту
    711	E2A7  90			     nop
    712				     ;____________________
    713				     ;	 Программа обслуживания
    714				     ;	 временного прерывания
    715				     ;____________________
    716	E2A8			     d11     proc    near
    717	E2A8  B4 01			     mov     ah,1
    718	E2AA  50			     push    ax		     ; хранить регистр AX
    719	E2AB  B0 FF			     mov     al,0ffh	     ; размаскировать все прерывания
    720	E2AD  E6 21			     out     inta01,al
    721	E2AF  B0 20			     mov     al,eoi
    722	E2B1  E6 20			     out     inta00,al
    723	E2B3  58			     pop     ax		     ; восстановить регистр AX
    724	E2B4  CF			     iret
    725	E2B5			     d11     endp
    726
    727	E2B5			     nmi_int proc    near
    728	E2B5  50			     push    ax		     ; хранить регистр AX
    729	E2B6  E4 62			     in	     al,port_c
    730	E2B8  A8 40			     test    al,40h	     ; ошибка паритета при вводе/выводе	?
    731	E2BA  74 08			     jz	     d12	     ; да - признак сбрасывается в 0
    732	E2BC  BE E20Br			     mov     si,offset d1    ; адрес поля сообщения об ошибке
    733	E2BF  B9 000E			     mov     cx,d1l	     ; длина поля сообщения об ошибке
    734	E2C2  EB 0A			     jmp     short d13	     ; отобразить ошибку на дисплее
    735	E2C4			     d12:
    736	E2C4  A8 80			     test    al,80h
    737	E2C6  74 10			     jz	     d14
    738	E2C8  BE E219r			     mov     si,offset d2    ; адрес поля сообщения об ошибке
    739	E2CB  B9 000E			     mov     cx,d2l	     ; длина поля сообщения об ошибке
    740	E2CE			     d13:
    741	E2CE  B8 0000			     mov     ax,0	     ; инициировать и установить режим ЭЛИ
    742	E2D1  CD 10			     int     10h	     ; вызвать процедуру VIDEO_IO
    743	E2D3  E8 031F			     call    p_msg	     ; распечатать ошибку
    744	E2D6  FA			     cli
    745	E2D7  F4			     hlt		     ; останов системы
    746	E2D8			     d14:
    747	E2D8  58			     pop     ax		     ; восстановить AX
    748	E2D9  CF			     iret
    749	E2DA			     nmi_int endp
    750				     ;____________________
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 16
1840v4.asm



    751				     ;	 Начальный тест	надежности
    752				     ;____________________
    753					     assume  cs:code,ds:data
    754
    755	E2DA  20 32 30 31	     e1	     db	     ' 201'
    756	      =0004		     e1l     equ     04h
    757
    758				     ;	 Выполнение программы БСУВВ,
    759				     ;	 генерирующей вектора прерываний
    760
    761	E2DE			     tst8:
    762	E2DE  FC			     cld		     ; установить признак направления вперед
    763	E2DF  BF 0040r			     mov     di,offset video_int   ; уст адреса	области	прерываний
    764	E2E2  0E			     push    cs
    765	E2E3  1F			     pop     ds		     ; уст адреса таблицы векторов
    766	E2E4  BE FF13r			     mov     si,offset vector_table+20h	 ; смещение VECTOR_TABLE+32
    767	E2E7  B9 0020			     mov     cx,20h
    768	E2EA  F3> A5			     rep     movsw	     ; передать	таблицу	векторов в память
    769
    770				     ;	 Установка таймера 0 в режим 3
    771
    772	E2EC  B0 FF			     mov     al,0ffh
    773	E2EE  E6 21			     out     inta01,al
    774	E2F0  B0 36			     mov     al,36h	     ; выбор счетчика 0,считывания-за-
    775				     ; писи младшего,затем старшего байта счетчика,уст режима 3
    776	E2F2  E6 43			     out     timer+3,al	     ; запись режима таймера
    777	E2F4  B0 C7			     mov     al,0c7h
    778	E2F6  E6 40			     out     timer,al	     ; записать	младшую	часть счетчика
    779	E2F8  B0 DB			     mov     al,0dbh
    780	E2FA  E6 40			     out     timer,al	     ; записать	старшую	часть счетчика
    781
    782
    783					     assume  ds:data
    784	E2FC  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    785	E2FF  8E D8			     mov     ds,ax
    786	E301			     e3:
    787	E301  81 3E 0072r 1234		     cmp     reset_flag,1234h
    788	E307  74 03			     jz	     e3a
    789	E309  E8 154D			     call    bct     ;загрузка знакогенератора Ч/Б ЭЛИ
    790				     ;_____________________
    791				     ;	 ТЕСТ.08
    792				     ;	      Инициализация и запуск
    793				     ;	      контроллера ЭЛИ
    794				     ;______________________
    795	E30C  E4 60		     e3a:    in	     al,port_a	     ; считывание состояния переключателей
    796	E30E  B4 00			     mov     ah,0
    797	E310  A3 0010r			     mov     equip_flag,ax   ; запомнить считанное состояние пере-
    798								     ; ключателей
    799	E313  24 30			     and     al,30h	     ; выделить	переключатели ЭЛИ
    800	E315  75 03			     jnz     e7		     ; переключатели ЭЛИ установлены в 0 ?
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 17
1840v4.asm



    801	E317  E9 0098			     jmp     e19	     ; пропустить тест ЭЛИ
    802	E31A			     e7:
    803	E31A  86 E0			     xchg    ah,al
    804	E31C  80 FC 30			     cmp     ah,30h	     ; адаптер ч/б ?
    805	E31F  74 09			     je	     e8		     ; да - установить режим для ч/б адаптера
    806	E321  FE C0			     inc     al	      ;	уст цветной режим для цветного адаптера
    807	E323  80 FC 20			     cmp     ah,20h	     ; режим 80х25 установлен ?
    808	E326  75 02			     jne     e8		     ; нет - уст режим для 40х25
    809	E328  B0 03			     mov     al,3	     ; установить режим	80х25
    810	E32A			     e8:
    811	E32A  50			     push    ax		     ; хранить режим ЭЛИ в стеке
    812	E32B  2A E4			     sub     ah,ah	     ;
    813	E32D  CD 10			     int     10h
    814	E32F  58			     pop     ax
    815	E330  50			     push    ax
    816	E331  BB B000			     mov     bx,0b000h
    817	E334  BA 03B8			     mov     dx,3b8h	     ; регистр режима для ч/б
    818	E337  B9 1000			     mov     cx,4096	     ; счетчик байт для	ч/б адаптера
    819	E33A  B0 01			     mov     al,1	     ; уст режим для ч/б адаптера
    820	E33C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер ЭЛИ подключен ?
    821	E33F  74 0B			     je	     e9		     ; переход к проверке буфера ЭЛИ
    822	E341  BB B800			     mov     bx,0b800h
    823	E344  BA 03D8			     mov     dx,3d8h	     ; регистр режима для цветного адаптера
    824	E347  B9 4000			     mov     cx,4000h
    825	E34A  FE C8			     dec     al		     ; уст режим в 0 для цветного адаптера
    826				     ;
    827				     ;	     Проверка буфера ЭЛИ
    828				     ;
    829	E34C			     e9:
    830	E34C  EE			     out     dx,al	     ; блокировка ЭЛИ для цветного адаптера
    831	E34D  8E C3			     mov     es,bx
    832	E34F  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    833	E352  8E D8			     mov     ds,ax
    834	E354  81 3E 0072r 1234		     cmp     reset_flag,1234h
    835	E35A  74 0D			     je	     e10
    836	E35C  8E DB			     mov     ds,bx	     ;
    837	E35E  E8 FCBC			     call    stgtst_cnt	     ; переход к проверке памяти
    838	E361  74 06			     je	     e10
    839	E363  BA 0102			     mov     dx,102h
    840	E366  E8 0217			     call    err_beep
    841
    842				     ;___________________________
    843				     ;
    844				     ;	 ТЕСТ.09
    845				     ;	      Осуществляет проверку формирования строк в буфере	ЭЛИ
    846				     ;_________________________
    847	E369			     e10:
    848	E369  58			     pop     ax	  ; получить считанные переключатели ЭЛИ в AH
    849	E36A  50			     push    ax		     ; сохранить их
    850	E36B  B4 00			     mov     ah,0
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 18
1840v4.asm



    851	E36D  CD 10			     int     10h
    852	E36F  B8 7020			     mov     ax,7020h	     ; запись пробелов в режиме	реверса
    853	E372  2B FF			     sub     di,di	     ; установка начала	области
    854	E374  B9 0028			     mov     cx,40	     ;
    855	E377  FC			     cld	 ; установить признак направления для уменьшения
    856	E378  F3> AB			     rep     stosw	     ; записать	в память
    857				     ;______________________
    858				     ;	  ТЕСТ.10
    859				     ;	       Осуществляет проверку линий интерфейса ЭЛИ
    860				     ;______________________
    861	E37A  58			     pop     ax		     ; получить	считанные переключатели
    862	E37B  50			     push    ax		     ; сохранить их
    863	E37C  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер подключен ?
    864	E37F  BA 03BA			     mov     dx,03bah	     ; уст адрес порта состояния ч/б дисплея
    865	E382  74 03			     je	     e11	     ; да - переход к следующей	строке
    866	E384  BA 03DA			     mov     dx,03dah	     ; цветной адаптер подключен
    867				     ;
    868				     ;	     Тест строчной развертки
    869				     ;
    870	E387			     e11:
    871	E387  B4 08			     mov     ah,8
    872	E389			     e12:
    873	E389  2B C9			     sub     cx,cx
    874	E38B  EC		     e13:    in	     al,dx	 ;считывание порта состояния контроллера СМ607
    875	E38C  22 C4			     and     al,ah	     ; проверка	строки
    876	E38E  75 04			     jnz     e14
    877	E390  E2 F9			     loop    e13
    878	E392  EB 13			     jmp     short e17	     ; переход к сообщению об ошибке
    879	E394  2B C9		     e14:    sub     cx,cx
    880	E396  EC		     e15:    in	     al,dx     ;считывание порта состояния контроллера СМ607
    881	E397  22 C4			     and     al,ah
    882	E399  74 04			     jz	     e16
    883	E39B  E2 F9			     loop    e15
    884	E39D  EB 08			     jmp     short e17
    885				     ;
    886				     ;	     Следующий строчный	импульс
    887				     ;
    888	E39F			     e16:
    889	E39F  B1 03			     mov     cl,3	     ; получить	следующий бит для контроля
    890	E3A1  D2 EC			     shr     ah,cl
    891	E3A3  75 E4			     jnz     e12
    892	E3A5  EB 06			     jmp     short e18	     ; отобразить курсор на экране
    893				     ;
    894				     ;	     Сообщение об ошибке конттроллера СМ607
    895				     ;
    896	E3A7			     e17:
    897	E3A7  BA 0103			     mov     dx,103h
    898	E3AA  E8 01D3			     call    err_beep
    899				     ;
    900				     ;	     Отображение курсора на экране
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 19
1840v4.asm



    901				     ;
    902	E3AD			     e18:
    903	E3AD  58			     pop     ax		     ; получить	считанные переключатели	в AH
    904	E3AE  B4 00			     mov     ah,0	     ; установить режим
    905	E3B0  CD 10			     int     10h
    906				     ;______________________
    907				     ;	 ТЕСТ.11
    908				     ;	      Дополнительный тест памяти
    909				     ;______________________
    910					     assume  ds:data
    911	E3B2			     e19:
    912	E3B2  B8 0040			     mov     ax,dat
    913	E3B5  8E D8			     mov     ds,ax
    914	E3B7  E4 62				     in	     al, port_c
    915	E3B9  24 0F				     and     al, 0Fh
    916	E3BB  FE C0				     inc     al
    917	E3BD  B4 80				     mov     ah, 80h
    918	E3BF  F6 E4				     mul     ah
    919	E3C1  A3 0015r				     mov     ds:io_ram_size, ax	; Reserved in original IBM PC
    920	E3C4  8B D0				     mov     dx, ax
    921	E3C6  A3 0013r				     mov     ds:memory_size, ax
    922	E3C9  81 3E 0072r 1234		     cmp     reset_flag,1234h
    923	E3CF  74 2E			     je	     e22
    924
    925				     ;	 Проверка любой	действительной памяти
    926				     ;	 на считывание и запись
    927
    928	E3D1  E9 023F			     jmp     e190
    929
    930				     ;	 Печать	адреса и эталона, если
    931				     ;	 произошла ошибка данных
    932
    933
    934	E3D4			     osh:
    935	E3D4  8A E8			     mov     ch,al	     ;
    936	E3D6  8A C6			     mov     al,dh	     ; получить	измененный адрес
    937	E3D8  B1 04			     mov     cl,4
    938	E3DA  D2 E8			     shr     al,cl	     ;
    939	E3DC  E8 0023			     call    xlat_print_cod  ; преобразование и	печать кода
    940	E3DF  8A C6			     mov     al,dh
    941	E3E1  24 0F			     and     al,0fh
    942	E3E3  E8 001C			     call    xlat_print_cod  ; преобразование и	печать кода
    943	E3E6  8A C5			     mov     al,ch	     ; получить	следующий шаблон
    944	E3E8  B1 04			     mov     cl,4
    945	E3EA  D2 E8			     shr     al,cl
    946	E3EC  E8 0013			     call    xlat_print_cod  ; преобразование и	печать кода
    947	E3EF  8A C5			     mov     al,ch	     ;
    948	E3F1  24 0F			     and     al,0fh	     ;
    949	E3F3  E8 000C			     call    xlat_print_cod  ; преобразование и	печать кода
    950	E3F6  BE E2DAr			     mov     si,offset e1    ; установить адрес	поля сообщения
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 20
1840v4.asm



    951								     ; об ошибке
    952	E3F9  B9 0004			     mov     cx,e1l	     ; получить	счетчик	поля сообщения об ошибке
    953	E3FC  E8 01F6			     call    p_msg	     ; печать ошибки
    954	E3FF			     e22:
    955	E3FF  EB 2C			     jmp     short tst12	     ; переход к следующему тесту
    956	E401  90			     nop
    957				     ;_____________________
    958				     ;
    959				     ;	 Процедура вывода на экран сообщения об	ошибке в коде ASCII
    960				     ;
    961				     ;_______________________
    962
    963	E402			     xlat_print_cod proc near
    964	E402  1E			     push    ds		     ; сохранить DS
    965	E403  0E			     push    cs
    966	E404  1F			     pop     ds
    967	E405  BB E41Dr			     mov     bx,offset f4e   ; адрес таблицы кодов ASCII
    968	E408  D7			     xlatb
    969	E409  B4 0E			     mov     ah,14
    970	E40B  B7 00			     mov     bh,0
    971	E40D  CD 10			     int     10h
    972	E40F  1F			     pop     ds
    973	E410  C3			     ret
    974	E411			     xlat_print_cod endp
    975				     ;______________________
    976				     ;	 Сброс системы - фаза 4
    977				     ;______________________
    978				     ;
    979				     ;	 Коды сообщений	об ошибках
    980				     ;_______________________
    981
    982					     assume  cs:code,ds:data
    983	E411  20 33 30 31	     f1	     db	     ' 301'
    984	      =0004		     f1l     equ     4h		     ; сообщение клавиатуры
    985	E415  31 33 31		     f2	     db	     '131'
    986	      =0003		     f2l     equ     3h		     ; сообщение кассеты
    987	E418  36 30 31		     f3	     db	     '601'
    988	      =0003		     f3l     equ     3h		     ; сообщение НГМД
    989
    990	E41B			     f4	     label   word
    991	E41B  0378			     dw	     378h
    992	E41D			     f4e     label   word
    993	E41D  30 31 32 33 34 35	36+  ascii_tbl db    '0123456789abcdef'
    994	      37 38 39 61 62 63	64+
    995	      65 66
    996
    997
    998				     ;______________________
    999				     ;	 ТЕСТ.12
   1000				     ;	 Тест клавиатуры
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 21
1840v4.asm



   1001				     ;______________________
   1002	E42D			     tst12:
   1003
   1004	E42D  B8 0040			     mov     ax,dat
   1005	E430  8E D8			     mov     ds,ax
   1006	E432  E8 0196			     call    kbd_reset	     ; Сброс клавиатуры
   1007	E435  B0 4D			     mov     al,4dh	     ; доступность клавиатуры
   1008	E437  E6 61			     out     port_b,al
   1009	E439  E3 27			     jcxz    f6		     ; нет - печать ошибки
   1010	E43B  80 FB AA			     cmp     bl,0aah	     ; код сканирования	'AA' ?
   1011	E43E  75 22			     jne     f6		     ; нет - печать ошибки
   1012
   1013				     ;	 Поиск "залипших" клавиш
   1014
   1015	E440  B0 CC			     mov     al,0cch	   ; сброс клавиатуры, уст синхронизации
   1016	E442  E6 61			     out     port_b,al
   1017	E444  B0 4C			     mov     al,4ch	   ; доступность клавиатуры
   1018	E446  E6 61			     out     port_b,al
   1019	E448  2B C9			     sub     cx,cx
   1020				     ;
   1021				     ;	     Ожидание прерывания клавиатуры
   1022				     ;
   1023	E44A			     f5:
   1024	E44A  E2 FE			     loop    f5		     ; задержка
   1025	E44C  E4 60			     in	     al,kbd_in	     ; получение кода сканирования
   1026	E44E  3C 00			     cmp     al,0	     ; код сканирования	равен 0	?
   1027	E450  74 19			     je	     f7		     ; да - продолжение	тестирования
   1028	E452  8A E8			     mov     ch,al	     ; сохранить код сканирования
   1029	E454  B1 04			     mov     cl,4
   1030	E456  D2 E8			     shr     al,cl
   1031	E458  E8 FFA7			     call    xlat_print_cod  ; преобразование и	печать
   1032	E45B  8A C5			     mov     al,ch	     ; восстановить код	сканирования
   1033	E45D  24 0F			     and     al,0fh	     ; выделить	младший	байт
   1034	E45F  E8 FFA0			     call    xlat_print_cod  ; преобразование и	печать
   1035	E462  BE E411r		     f6:     mov     si,offset f1    ; получить	адрес поля сообщения об
   1036								     ; ошибке
   1037	E465  B9 0004			     mov     cx,f1l	      ;	длина поля сообщения об	ошибке
   1038	E468  E8 018A			     call    p_msg	      ;	вывод сообщения	об ошибке на экран
   1039
   1040				     ;	 Установка таблицы векторов прерываний
   1041
   1042	E46B			     f7:
   1043	E46B  2B C0			     sub     ax,ax
   1044	E46D  8E C0			     mov     es,ax
   1045	E46F  B9 0030			     mov     cx,24*2	     ; получить	счетчик	векторов
   1046	E472  0E			     push    cs
   1047	E473  1F			     pop     ds
   1048	E474  BE FEF3r			     mov     si,offset vector_table   ;	адрес таблицы векторов
   1049	E477  BF 0020r			     mov     di,offset int_ptr
   1050	E47A  FC			     cld
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 22
1840v4.asm



   1051	E47B  F3> A5			     rep     movsw
   1052				     ;______________________
   1053				     ;	 ТЕСТ.14
   1054				     ;	 Осуществляет проверку НГМД
   1055				     ;______________________
   1056	E47D  B8 0040			     mov     ax,dat	     ; уст. регистр DS
   1057	E480  8E D8			     mov     ds,ax
   1058	E482  B0 FC			     mov     al,0fch  ;	доступность прерываний таймера и клавиатуры
   1059	E484  E6 21			     out     inta01,al
   1060	E486  A0 0010r			     mov     al,byte ptr equip_flag  ; получить	состояние переклю-
   1061									     ; чателей
   1062	E489  A8 01			     test    al,01h	     ; первоначальная загрузка с НГМД ?
   1063	E48B  75 03			     jnz     f10	     ; да - проверка управления	НГМД
   1064	E48D  E9 00ED			     jmp     f23
   1065	E490			     f10:
   1066	E490  B0 BC			     mov     al,0bch	     ; доступность прерываний с	НГМД,
   1067	E492  E6 21			     out     inta01,al	     ; клавиатуры и таймера
   1068	E494  B4 00			     mov     ah,0	     ; сброс контроллера НГМД
   1069	E496  CD 13			     int     13h	     ; переход к сбросу	НГМД
   1070	E498  F6 C4 FF			     test    ah,0ffh	     ; состояние верно ?
   1071	E49B  75 20			     jnz     f13	     ; нет - сбой устройства
   1072
   1073				     ;	 Включить мотор	устройства 0
   1074
   1075	E49D  BA 03F2			     mov     dx,03f2h	     ; получить	адрес адаптера НГМД
   1076	E4A0  B0 1C			     mov     al,1ch	     ; включить	мотор
   1077	E4A2  EE			     out     dx,al
   1078	E4A3  2B C9			     sub     cx,cx
   1079
   1080				     ;	  Ожидание включения мотора НГМД
   1081
   1082	E4A5			     f11:
   1083	E4A5  E2 FE			     loop    f11
   1084	E4A7			     f12:			     ; ожидание	мотора 1
   1085	E4A7  E2 FE			     loop    f12
   1086	E4A9  33 D2			     xor     dx,dx
   1087	E4AB  B5 01			     mov     ch,1	     ; выбор первой дорожки
   1088	E4AD  88 16 003Er		     mov seek_status,dl
   1089	E4B1  E8 09B3			     call    seek	     ; переход к рекалибровке НГМД
   1090	E4B4  72 07			     jc	     f13	     ; перейти в программу ошибок
   1091	E4B6  B5 22			     mov     ch,34	     ; выбор 34	дорожки
   1092	E4B8  E8 09AC			     call    seek
   1093	E4BB  73 09			     jnc     f14	     ; выключить мотор
   1094
   1095				     ;	  Ошибки НГМД
   1096
   1097	E4BD			     f13:
   1098	E4BD  BE E418r			     mov     si,offset f3    ; получить	адрес поля сообщения об
   1099								     ; ошибке
   1100	E4C0  B9 0003			     mov     cx,f3l	     ; установить счетчик
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 23
1840v4.asm



   1101	E4C3  E8 012F			     call    p_msg	     ; идти в программу	ошибок
   1102
   1103				     ;	 Выключить мотор устройства 0
   1104
   1105	E4C6			     f14:
   1106	E4C6  B0 0C			     mov     al,0ch	     ; выключить мотор устройства 0
   1107	E4C8  BA 03F2			     mov     dx,03f2h	     ; уст адрес порта управления НГМД
   1108	E4CB  EE			     out     dx,al
   1109
   1110				     ;	 Установка печати и базового адреса
   1111				     ;	 адаптера стыка	С2, если устройства подключены
   1112
   1113	E4CC			     f15:
   1114	E4CC  83 FD 00			     cmp     bp,0000h
   1115	E4CF  74 18			     jz	     dal
   1116	E4D1  BA 0003			     mov     dx,3
   1117	E4D4  E8 00A9			     call    err_beep
   1118	E4D7  BE E6A6r			     mov     si,offset f39
   1119	E4DA  B9 0017				     mov     cx, 23
   1120	E4DD  E8 0115			     call    p_msg
   1121	E4E0			     err_wait:
   1122	E4E0  B4 00			     mov     ah,0
   1123	E4E2  CD 16			     int     16h
   1124	E4E4  80 FC 3B			     cmp     ah,3bh
   1125	E4E7  75 F7			     jnz     err_wait
   1126	E4E9  2A E4		     dal:    sub     ah,ah
   1127	E4EB  A0 0049r			     mov     al,crt_mode
   1128	E4EE  CD 10			     int     10h
   1129	E4F0  C7 06 001Ar 001Er			     mov     ds:buffer_head, offset kb_buffer ;	ERROR -	Must be	approx.+
   1130				     6 lines upper, before int 16h
   1131	E4F6  C7 06 001Cr 001Er			     mov     ds:buffer_tail, offset kb_buffer ;	ERROR -	Must be	approx.+
   1132				     6 lines upper, before int 16h
   1133	E4FC  BD E41Br			     mov     bp,offset f4    ; таблица PRT_SRC
   1134	E4FF  BE 0000			     mov     si,0
   1135	E502			     f16:
   1136	E502  2E: 8B 56	00		     mov     dx,cs:[bp]	     ; получить	базовый	адрес печати
   1137	E506  B0 AA			     mov     al,0aah	     ; записать	данные в порт А
   1138	E508  EE			     out     dx,al
   1139	E509  2A C0			     sub     al,al
   1140	E50B  EC			     in	     al,dx	     ; считывание порта	А
   1141	E50C  3C AA			     cmp     al,0aah	     ; шаблон данных тот же
   1142	E50E  75 06			     jne     f17	 ; нет - проверка следующего устройства	печати
   1143	E510  89 94 0008r		     mov     word ptr printer_base[si],dx  ;да-уст базовый адрес
   1144	E514  46			     inc     si		     ; вычисление следующего слова
   1145	E515  46			     inc     si
   1146	E516			     f17:
   1147	E516  45			     inc     bp		     ; указать следующий базовый адрес
   1148	E517  45			     inc     bp
   1149	E518  81 FD E41Dr		     cmp     bp,offset f4e   ; все возможные адреса проверены ?
   1150	E51C  75 E4			     jne     f16	     ; нет, к проверке следующего адреса печати
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 24
1840v4.asm



   1151	E51E  BB 0000			     mov     bx,0
   1152	E521  BA 03FF			     mov     dx,3ffh	     ; проверка	подключения адаптера 1 стыка С2
   1153	E524  B0 8A			     mov     al,8ah
   1154	E526  EE			     out     dx,al
   1155	E527  BA 02FF			     mov     dx,2ffh
   1156	E52A  EE			     out     dx,al
   1157	E52B  BA 03FC			     mov     dx,3fch
   1158	E52E  B0 AA			     mov     al,0aah
   1159	E530  EE			     out     dx,al
   1160	E531  42			     inc     dx
   1161	E532  33 C0				     xor     ax, ax
   1162	E534  EE				     out     dx, al
   1163	E535  EC			     in	     al,dx
   1164	E536  3C AA			     cmp     al,0aah
   1165	E538  75 08			     jnz     f18
   1166	E53A  C7 87 0000r 03F8		     mov  word ptr rs232_base[bx],3f8h	; уст адрес адаптера 1
   1167	E540  43			     inc     bx
   1168	E541  43			     inc     bx
   1169	E542  BA 02FC		     f18:    mov     dx,2fch	     ; проверка	подключения адаптера 2 стыка С2
   1170	E545  B0 AA			     mov     al,0aah
   1171	E547  EE			     out     dx,al
   1172	E548  42			     inc     dx
   1173	E549  33 C0				     xor     ax, ax
   1174	E54B  EE				     out     dx, al
   1175	E54C  EC			     in	     al,dx
   1176	E54D  3C AA			     cmp     al,0aah
   1177	E54F  75 08			     jnz     f19
   1178	E551  C7 87 0000r 02F8		     mov  word ptr rs232_base[bx],2f8h	 ; уст адрес адаптера 2
   1179	E557  43			     inc     bx
   1180	E558  43			     inc     bx
   1181
   1182
   1183
   1184				     ;_____Установка EQUIP_FLAG	для инди-
   1185				     ;	   кации номера	печати
   1186
   1187	E559			     f19:
   1188	E559  E9 1411				     jmp     f19a
   1189
   1190	E55C			     f19b:
   1191	E55C  D2 C8			     ror     al,cl
   1192	E55E  0A C3			     or	     al,bl
   1193	E560  A2 0011r			     mov     byte ptr equip_flag+1,al
   1194	E563  BA 0201			     mov     dx,201h
   1195	E566  EC			     in	     al,dx
   1196	E567  A8 0F			     test    al,0fh
   1197	E569  75 05			     jnz     f20			; проверка адаптера игр
   1198	E56B  80 0E 0011r 10		     or	     byte ptr equip_flag+1,16
   1199	E570			     f20:
   1200	E570  E9 140D				     jmp     f20a
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 25
1840v4.asm



   1201	E573  90				     nop
   1202
   1203	E574			     f20b:
   1204	E574  BA 0001				     mov     dx, 1
   1205	E577  E8 0006			     call    err_beep	     ; переход к подпрограмме звукового	сигнала
   1206	E57A			     f21:
   1207	E57A  E9 017A				     jmp     boot_strap
   1208
   1209	E57D			     f23:
   1210	E57D  E9 FF4C			     jmp     f15
   1211
   1212				     ;	  Установка длительности звукового сигнала
   1213
   1214					     assume  cs:code,ds:data
   1215	E580			     err_beep proc   near
   1216	E580  9C			     pushf		     ; сохранить признаки
   1217	E581  FA			     cli		     ; сброс признака разрешения прерывания
   1218	E582  1E			     push    ds		     ; сохранить DS
   1219	E583  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
   1220	E586  8E D8			     mov     ds,ax
   1221	E588  0A F6			     or	     dh,dh
   1222	E58A  74 0B			     jz	     g3
   1223	E58C			     g1:			      ;	длинный	звуковой сигнал
   1224	E58C  B3 06			     mov     bl,6	      ;	счетчик	для звуковых сигналов
   1225	E58E  E8 0018			     call    beep	      ;	выполнить звуковой сигнал
   1226	E591  E2 FE		     g2:     loop    g2		      ;	задержка между звуковыми сигналами
   1227	E593  FE CE			     dec     dh
   1228	E595  75 F5			     jnz     g1
   1229	E597			     g3:			      ;	короткий звуковой сигнал
   1230	E597  B3 01			     mov     bl,1   ; счетчик для короткого звукового сигнала
   1231	E599  E8 000D			     call    beep	     ; выполнить звуковой сигнал
   1232	E59C  E2 FE		     g4:     loop    g4		     ; задержка	между звуковыми	сигналами
   1233	E59E  FE CA			     dec     dl		     ;
   1234	E5A0  75 F5			     jnz     g3		     ; выполнить
   1235	E5A2  E2 FE		     g5:     loop    g5		     ; длинная задержка	перед возвратом
   1236	E5A4  E2 FE		     g6:     loop    g6
   1237	E5A6  1F			     pop     ds		     ; восстановление DS
   1238	E5A7  9D			     popf		; восстановление первоначальных	признаков
   1239	E5A8  C3			     ret		     ; возврат к программе
   1240	E5A9			     err_beep	     endp
   1241
   1242				     ;	 Подпрограмма звукового	сигнала
   1243
   1244	E5A9			     beep    proc    near
   1245	E5A9  B0 B6			     mov     al,10110110b    ; таймер 2,младший	и старший счет-
   1246								     ; чики, двоичный счет
   1247	E5AB  E6 43			     out     timer+3,al	     ; записать	в регистр режима
   1248	E5AD  B8 045E			     mov     ax,45eh	     ; делитель
   1249	E5B0  E6 42			     out     timer+2,al	     ; записать	младший	счетчик
   1250	E5B2  8A C4			     mov     al,ah
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 26
1840v4.asm



   1251	E5B4  E6 42			     out     timer+2,al	     ; записать	старший	счетчик
   1252	E5B6  E4 61			     in	     al,port_b	     ; получить	текущее	состояние порта
   1253	E5B8  8A E0			     mov     ah,al	     ; сохранить это состояние
   1254	E5BA  0C 03			     or	     al,03	     ; включить	звук
   1255	E5BC  E6 61			     out     port_b,al
   1256	E5BE  2B C9			     sub     cx,cx	     ; установить счетчик ожидания
   1257	E5C0  E2 FE		     g7:     loop    g7		     ; задержка	перед выключением
   1258	E5C2  FE CB			     dec     bl		     ; задержка	счетчика закончена ?
   1259	E5C4  75 FA			     jnz     g7	     ; нет - продолжение подачи	звукового сигнала
   1260	E5C6  8A C4			     mov     al,ah	     ; восстановить значение порта
   1261	E5C8  E6 61			     out     port_b,al
   1262	E5CA  C3			     ret		     ; возврат к программе
   1263	E5CB			     beep    endp
   1264				     ;_____________________
   1265				     ;	 Эта процедура вызывает	программный
   1266				     ;	 сброс клавиатуры
   1267				     ;_____________________
   1268	E5CB			     kbd_reset proc  near
   1269	E5CB  B0 0C			     mov     al,0ch	; установить низкий уровень синхронизации
   1270	E5CD  E6 61			     out     port_b,al	     ; записать	порт B
   1271	E5CF  B9 7530			     mov     cx,30000	     ; время длительности низкого уровня
   1272	E5D2  E2 FE		     g8:     loop    g8
   1273	E5D4  B0 CC			     mov     al,0cch	     ; уст CLK
   1274	E5D6  E6 61			     out     port_b,al
   1275	E5D8			     sp_test:
   1276	E5D8  B0 4C			     mov     al,4ch	     ; уст высокий уровень синхронизации
   1277	E5DA  E6 61			     out     port_b,al
   1278	E5DC  B0 FD			     mov     al,0fdh	     ; разрешить прерывания клавиатуры
   1279	E5DE  E6 21			     out     inta01,al	     ; записать	регистр	масок
   1280	E5E0  FB			     sti		     ; уст признака разрешения прерывания
   1281	E5E1  B4 00			     mov     ah,0
   1282	E5E3  2B C9			     sub     cx,cx	     ; уст счетчика ожидания прерываний
   1283	E5E5  F6 C4 FF		     g9:     test    ah,0ffh	     ; прерывание клавиатуры возникло ?
   1284	E5E8  75 02			     jnz     g10   ;  да - считывание возвращенного кода сканирования
   1285	E5EA  E2 F9			     loop    g9		     ; нет - цикл ожидания
   1286	E5EC  E4 60		     g10:    in	     al,port_a	 ; считать код сканирования клавиатуры
   1287	E5EE  8A D8			     mov     bl,al	     ; сохранить этот код
   1288	E5F0  B0 CC			     mov     al,0cch	     ; очистка клавиатуры
   1289	E5F2  E6 61			     out     port_b,al
   1290	E5F4  C3			     ret		     ; возврат к программе
   1291	E5F5			     kbd_reset	     endp
   1292				     ;_____________________
   1293				     ;	 Эта программа выводит на экран	дисплея
   1294				     ;	 сообщения об ошибках
   1295				     ;
   1296				     ;	   Необходимые условия:
   1297				     ;	 SI = адрес поля сообщения об ошибке
   1298				     ;	 CX = длина поля сообщения об ошибке
   1299				     ;	 Максимальный размер передаваемой
   1300				     ;	 информации - 36 знаков
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 27
1840v4.asm



   1301				     ;
   1302				     ;______________________
   1303	E5F5			     p_msg   proc    near
   1304	E5F5  B8 0040			     mov     ax,dat
   1305	E5F8  8E D8			     mov     ds,ax
   1306	E5FA  8B EE			     mov     bp,si
   1307	E5FC			     g12:
   1308	E5FC  2E: 8A 04			     mov     al,cs:[si]	     ; поместить знак в	AL
   1309	E5FF  46			     inc     si		     ; указать следующий знак
   1310	E600  B7 00			     mov     bh,0	     ; установить страницу
   1311	E602  B4 0E			     mov     ah,14	     ; уст функцию записи знака
   1312	E604  CD 10			     int     10h	     ; и записать знак
   1313	E606  E2 F4			     loop    g12     ; продолжать до записи всего сообщения
   1314	E608  B8 0E0D			     mov     ax,0e0dh	; переместить курсор в начало строки
   1315	E60B  CD 10			     int     10h
   1316	E60D  B8 0E0A			     mov     ax,0e0ah  ; переместить курсор на следующую строку
   1317	E610  CD 10			     int     10h
   1318	E612  C3			     ret
   1319	E613			     p_msg   endp
   1320
   1321
   1322	E613			     e190:
   1323	E613  1E				     push    ds
   1324	E614  B8 0010				     mov     ax, 16
   1325	E617  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
   1326	E61D  75 03				     jnz     e20a
   1327	E61F  E9 FDDD				     jmp     e22
   1328
   1329	E622			     e20a:
   1330	E622  B8 0010				     mov     ax, 16
   1331	E625  EB 25				     jmp     short prt_siz
   1332
   1333	E627			     e20b:
   1334	E627  8B 1E 0013r			     mov     bx, ds:memory_size
   1335	E62B  83 EB 10				     sub     bx, 16
   1336	E62E  B1 04				     mov     cl, 4
   1337	E630  D3 EB				     shr     bx, cl
   1338	E632  8B CB				     mov     cx, bx
   1339	E634  BB 0400				     mov     bx, 400h
   1340
   1341	E637			     e20c:
   1342	E637  8E DB				     mov     ds, bx
   1343
   1344	E639  8E C3				     mov     es, bx
   1345	E63B  81 C3 0400			     add     bx, 400h
   1346	E63F  52				     push    dx
   1347	E640  51				     push    cx
   1348	E641  53				     push    bx
   1349	E642  50				     push    ax
   1350	E643  E8 F9D4				     call    stgtst
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 28
1840v4.asm



   1351	E646  75 41				     jnz     e21a
   1352	E648  58				     pop     ax
   1353	E649  05 0010				     add     ax, 16
   1354
   1355	E64C			     prt_siz:
   1356	E64C  50				     push    ax
   1357	E64D  BB 000A				     mov     bx, 10
   1358	E650  B9 0003				     mov     cx, 3
   1359
   1360	E653			     decimal_loop:
   1361	E653  33 D2				     xor     dx, dx
   1362	E655  F7 F3				     div     bx
   1363	E657  80 CA 30				     or	     dl, 30h
   1364	E65A  52				     push    dx
   1365	E65B  E2 F6				     loop    decimal_loop
   1366	E65D  B9 0003				     mov     cx, 3
   1367
   1368	E660			     prt_dec_loop:
   1369	E660  58				     pop     ax
   1370	E661  E8 0034				     call    prt_hex
   1371	E664  E2 FA				     loop    prt_dec_loop
   1372	E666  B9 0007				     mov     cx, 7
   1373	E669  BE E69Fr				     mov     si, offset	e300 ; " Kb OK\r"
   1374
   1375	E66C			     kb_ok:
   1376	E66C  2E: 8A 04				     mov     al, cs:[si]
   1377	E66F  46				     inc     si
   1378	E670  E8 0025				     call    prt_hex
   1379	E673  E2 F7				     loop    kb_ok
   1380	E675  58				     pop     ax
   1381	E676  3D 0010				     cmp     ax, 16
   1382	E679  74 AC				     jz	     e20b
   1383	E67B  5B				     pop     bx
   1384	E67C  59				     pop     cx
   1385	E67D  5A				     pop     dx
   1386	E67E  E2 B7				     loop    e20c
   1387	E680  B0 0A				     mov     al, 10
   1388	E682  E8 0013				     call    prt_hex
   1389	E685  1F				     pop     ds
   1390
   1391	E686  E9 FD76				     jmp     e22
   1392
   1393	E689			     e21a:
   1394	E689  5B				     pop     bx
   1395	E68A  83 C4 06				     add     sp, 6
   1396	E68D  8C DA				     mov     dx, ds
   1397	E68F  1F				     pop     ds
   1398	E690  1E				     push    ds
   1399	E691  89 1E 0013r			     mov     ds:memory_size, bx
   1400	E695  E9 FD3C				     jmp     osh
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 29
1840v4.asm



   1401
   1402	E698			     prt_hex	     proc near
   1403	E698  B4 0E				     mov     ah, 14
   1404	E69A  B7 00				     mov     bh, 0
   1405	E69C  CD 10				     int     10h
   1406	E69E  C3				     retn
   1407	E69F			     prt_hex	     endp
   1408
   1409	E69F  20 4B 62 20 4F 4B	0D   e300	     db	' Kb OK',0Dh
   1410	E6A6  45 52 52 4F 52 20	28+  f39	     db	'ERROR (RESUME="F1" KEY)'
   1411	      52 45 53 55 4D 45	3D+
   1412	      22 46 31 22 20 4B	45+
   1413	      59 29
   1414
   1415				     ;	 Таблица кодов русских больших букв (заглавных)
   1416
   1417	E6BD			     rust2   label   byte
   1418	E6BD  1B 21 40 23 24 25	5E+	     db	     1bh,'!@#$',37,05eh,'&*()_+'
   1419	      26 2A 28 29 5F 2B
   1420
   1421
   1422	E6CA  08 00			     db	     08h,0
   1423	E6CC  B9 C6 C3 BA B5 BD	B3+	     db	     0b9h,0c6h,0c3h,0bah,0b5h,0bdh,0b3h,0c8h
   1424	      C8
   1425
   1426	E6D4  C9 B7 B6 CD 0D FF	C4+	     db	     0c9h,0b7h,0b6h,0cdh,0dh,-1,0c4h,0cbh
   1427	      CB
   1428
   1429	E6DC  B2 B0 BF C0 BE BB	B4+	     db	     0b2h,0b0h,0bfh,0c0h,0beh,0bbh,0b4h,27h
   1430	      27
   1431
   1432	E6E4  22 B1 CE 7C CF C7	C1+	     db	     '"',0b1h,0ceh,7ch,0cfh,0c7h,0c1h,0bch,0b8h
   1433	      BC B8
   1434
   1435	E6ED  C2 CC 3C 3E 3F C5	00+	     db	     0c2h,0cch,'<>?',0c5h,000,-1,' ',0cah
   1436	      FF 20 CA
   1437
   1438
   1439
   1440
   1441				     ;___int 19_____________
   1442				     ;	 Программа загрузки системы с НГМД
   1443				     ;
   1444				     ; Программа считывает содержимое дорожки 0	сектора	1 в
   1445				     ; ячейку boot_locn	(адрес 7C00,сегмент 0)
   1446				     ;	 Если НГМД отсутствует или произошла аппаратная	ошибка,
   1447				     ; устанавливается прерывание типа INT 18H,	которое	вызывает
   1448				     ; выполнение программ тестирования	и инициализации
   1449				     ; системы
   1450				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 30
1840v4.asm



   1451				     ;_________________________
   1452					     assume  cs:code,ds:data
   1453	E6F7			     boot_strap	proc near
   1454
   1455	E6F7  FB			     sti		   ; установить	признак	разрешения прерывания
   1456	E6F8  B8 0040			     mov     ax,dat	   ; установить	адресацию
   1457	E6FB  8E D8			     mov     ds,ax
   1458	E6FD  A1 0010r			     mov     ax,equip_flag ; получить состояние	переключателей
   1459	E700  A8 01			     test    al,1	   ; опрос первоначальной загрузки
   1460	E702  74 23			     jz	     h3
   1461
   1462				     ;	 Система загружается с НГМД
   1463				     ;	 CX содержит счетчик повторений
   1464
   1465	E704  B9 0004			     mov     cx,4	     ; установить счетчик повторений
   1466	E707			     h1:			     ; первоначальная загрузка
   1467	E707  51			     push    cx		     ; сохранить счетчик повторений
   1468	E708  B4 00			     mov     ah,0	     ; сброс НГМД
   1469	E70A  CD 13			     int     13h
   1470	E70C  72 14			     jc	     h2		     ; если ошибка,повторить
   1471	E70E  B4 02			     mov     ah,2	     ; считать сектор 1
   1472	E710  BB 0000			     mov     bx,0	     ;
   1473	E713  8E C3			     mov     es,bx
   1474	E715  BB 7C00r			     mov     bx,offset boot_locn
   1475	E718  BA 0000			     mov     dx,0	     ;
   1476	E71B  B9 0001			     mov     cx,1	     ; сектор 1	, дорожка 0
   1477	E71E  B0 01			     mov     al,1	     ; считывание первого сектора
   1478	E720  CD 13			     int     13h
   1479	E722  59		     h2:     pop     cx		     ; восстановить счетчик повторений
   1480	E723  73 05			     jnc     h4		     ; уст CF при безуспешном считывании
   1481	E725  E2 E0			     loop    h1		     ; цикл повторения
   1482
   1483				     ;	 Загрузка с НГМД недоступна
   1484
   1485	E727			     h3:			     ; кассета
   1486	E727  E9 F985			     jmp     err01   ; отсутствует дискет загрузки
   1487
   1488				     ;	 Загрузка завершилась успешно
   1489
   1490	E72A			     h4:				     ;
   1491	E72A  EA 00007C00sr			     jmp far ptr boot_locn   ; db 0EAh,	00h, 7Ch, 00h, 00h   ;	       +
   1492				     (0000:7C00)   ; ###Gleb###
   1493
   1494	E72F			     boot_strap	     endp
   1495				     ;--------------------
   1496				     ;	 Эта программа посылает	байт в контроллер адаптера НГМД
   1497				     ; после проверки корректности управления и	готовности
   1498				     ; контроллера.
   1499				     ;	 Программа ожидает байт	состояния определенное время
   1500				     ; и проверяет готовность НГМД к работе.
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 31
1840v4.asm



   1501				     ;
   1502				     ;	 ВВОД	(AH) - выводимый байт
   1503				     ;
   1504				     ;	 ВЫВОД	CY=0 - успешно,
   1505				     ;		CY=1 - не успешно.Состояние
   1506				     ;		НГМД анализируется.
   1507				     ;-----------------------
   1508	E72F			     nec_output	proc near
   1509	E72F  52			     push    dx		     ; сохранить регистры
   1510	E730  51			     push    cx
   1511	E731  BA 03F4			     mov     dx,03f4h	     ; состояние порта
   1512	E734  33 C9			     xor     cx,cx	     ; счетчик времени вывода
   1513	E736			     j23:
   1514	E736  EC			     in	     al,dx	     ; получить	состояние
   1515	E737  A8 40			     test    al,040h	     ; проверка	управляющих бит
   1516	E739  74 0C			     jz	     j25	     ; биты управления нормальные
   1517	E73B  E2 F9			     loop    j23
   1518	E73D			     j24:
   1519	E73D  80 0E 0041r 80		     or	     diskette_status,time_out
   1520	E742  59			     pop     cx
   1521	E743  5A			     pop     dx	     ; установить код ошибки и восстановить регистры
   1522	E744  58			     pop     ax		     ; адрес возврата
   1523	E745  F9			     stc		     ;
   1524	E746  C3			     ret
   1525
   1526	E747			     j25:
   1527	E747  33 C9			     xor     cx,cx	     ; обнуление счетчика
   1528	E749			     j26:
   1529	E749  EC			     in	     al,dx	     ; получить	состояние
   1530	E74A  A8 80			     test    al,080h	     ; проверка	готовности
   1531	E74C  75 04			     jnz     j27	     ; да - идти на выход
   1532	E74E  E2 F9			     loop    j26	     ; повторить
   1533	E750  EB EB			     jmp     short j24	     ; ошибка состояния
   1534	E752			     j27:			     ; выход
   1535	E752  8A C4			     mov     al,ah	     ; получить	байт
   1536	E754  BA 03F5			     mov     dx,03f5h	     ; переслать байт данных в порт
   1537	E757  EE			     out     dx,al
   1538	E758  59			     pop     cx		     ; восстановить регистры
   1539	E759  5A			     pop     dx
   1540	E75A  C3			     ret		     ;
   1541	E75B			     nec_output	     endp
   1542
   1543				     ;___int 16_________________
   1544				     ;
   1545				     ;	 Программа поддержки клавиатуры
   1546				     ;
   1547				     ;	 Эта программа считывает в регистр
   1548				     ; AX код сканирования клавиши и код
   1549				     ; ASCII из	буфера клавиатуры.
   1550				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 32
1840v4.asm



   1551				     ;	 Программа выполняет три функции, код
   1552				     ; которых задается	в регистре AH:
   1553				     ;
   1554				     ;	  AH=0 - считать следующий символ
   1555				     ;		  из буфера.При	выходе код
   1556				     ;		  сканирования в AH,код
   1557				     ;		  ASCII	в AL.
   1558				     ;	 AH=1 -	установить ZF, если код
   1559				     ;		  ASCII	прочитан:
   1560				     ;
   1561				     ;		  ZF=0 - буфер заполнен,
   1562				     ;		  ZF=1 - буфер пустой.
   1563				     ;	 При выходе в AX помещен адрес вершины буфера клавиатуры.
   1564				     ;	 AH=2 -	возврат	текущего состояния в регистр AL
   1565				     ;		   из постоянно	распределенной области памяти с
   1566				     ;		адресом	00417H.
   1567				     ;
   1568				     ;	 При выполнении	программ клавиатуры используются флажки,
   1569				     ; которые устанавливаются в постоянно распределенной области
   1570				     ; памяти по адресам 00417H	и 00418H и имеют значение:
   1571				     ;	 00417H
   1572				     ;	       0 - правое переключение регистра;
   1573				     ;	       1 - левое переключение регистра;
   1574				     ;		  2 - УПР;
   1575				     ;	       3 - ДОП;
   1576				     ;	       4 - ФСД;
   1577				     ;	       5 - ЦИФ;
   1578				     ;	       6 - ФПБ;
   1579				     ;	       7 - ВСТ;
   1580				     ;	 00418H
   1581				     ;	       0 - состояние клавиши ЛАТ между нажатием	и отжатием;
   1582				     ;	       1 - ЛАТ;
   1583				     ;	       2 - Р/Л;
   1584				     ;	       3 - пауза;
   1585				     ;	       4 - ФСД;
   1586				     ;	       5 - ЦИФ;
   1587				     ;	       6 - ФПБ;
   1588				     ;	       7 - ВСТ.
   1589				     ;
   1590				     ;	 Флажки, соответствующие разрядам 4-7 постоянно	распределенной
   1591				     ; области памяти с	адресом	00417H,	устанавливаются	по нажатию
   1592				     ; клавиш ВСТ, ФПБ,	ЦИФ, ФСД и сохраняют свои значения до сле-
   1593				     ; дующего нажатия соответствующей клавиши.
   1594				     ; Одноименные флажки, соответствующие разрядам 4-7	постоянно
   1595				     ; распределенной области памяти с адресом 00418H, и флажки
   1596				     ; ДОП, УПР, левое переключение регистра, правое переключение
   1597				     ; регистра, Р/Л устанавливаются по	нажатию	клавиш и сбрасываются
   1598				     ; по отжатию.
   1599				     ;
   1600				     ;------------------------------
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 33
1840v4.asm



   1601					     assume  cs:code,ds:data
   1602
   1603
   1604	E75B			     k4	     proc    near
   1605	E75B  83 C3 02			     add     bx,2
   1606	E75E  81 FB 003Er		     cmp  bx, offset kb_buffer_end	      ;	конец буфера ?
   1607	E762  75 03			     jne     k5			      ;	нет - продолжить
   1608	E764  BB 001Er			     mov     bx, offset	kb_buffer     ;	да - уст начала	буфера
   1609	E767			     k5:
   1610	E767  C3			     ret
   1611	E768			     k4	     endp
   1612
   1613	E768			     error_beep	proc near
   1614	E768  50			     push    ax
   1615	E769  53			     push    bx
   1616	E76A  51			     push    cx
   1617	E76B  BB 00C0			     mov     bx,0c0h
   1618	E76E  E4 61			     in	     al,kb_ctl
   1619	E770  50			     push    ax
   1620	E771			     k65:
   1621	E771  24 FC			     and     al,0fch
   1622	E773  E6 61			     out     kb_ctl,al
   1623	E775  B9 0048			     mov     cx,48h
   1624	E778  E2 FE		     k66:    loop    k66
   1625	E77A  0C 02			     or	     al,2
   1626	E77C  E6 61			     out     kb_ctl,al
   1627	E77E  B9 0048			     mov     cx,48h
   1628	E781  E2 FE		     k67:    loop    k67
   1629	E783  4B			     dec     bx
   1630	E784  75 EB			     jnz     k65
   1631	E786  58			     pop     ax
   1632	E787  E6 61			     out     kb_ctl,al
   1633	E789  59			     pop     cx
   1634	E78A  5B			     pop     bx
   1635	E78B  58			     pop     ax
   1636	E78C  C3			     ret
   1637	E78D			     error_beep	     endp
   1638
   1639				     ;---
   1640
   1641	E78D			     k54:
   1642	E78D  3C 3B			     cmp     al,59
   1643	E78F  72 05			     jb	     k55
   1644	E791  B0 00			     mov     al,0
   1645	E793  EB 0F				     jmp     short k57
   1646	E795  90				     nop
   1647
   1648	E796  BB E8DCr		     k55:    mov     bx,offset k10
   1649	E799  F6 06 0018r 02		     test    kb_flag_1,lat
   1650	E79E  74 57			     jz	     k99
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 34
1840v4.asm



   1651
   1652				     ;---
   1653
   1654	E7A0			     k56:
   1655	E7A0  FE C8			     dec     al
   1656	E7A2  2E: D7			     xlat    cs:k11
   1657
   1658				     ;---
   1659
   1660	E7A4			     k57:
   1661	E7A4  3C FF			     cmp     al,-1
   1662	E7A6  74 2A			     je	     k59
   1663	E7A8  80 FC FF			     cmp     ah,-1
   1664	E7AB  74 25			     je	     k59
   1665				     ;---
   1666
   1667	E7AD			     k58:
   1668	E7AD  F6 06 0017r 40		     test    kb_flag,caps_state
   1669	E7B2  74 2B			     jz	     k61
   1670
   1671				     ;---
   1672	E7B4  F6 06 0018r 02		     test    kb_flag_1,lat
   1673	E7B9  75 03			     jnz     k88
   1674	E7BB  E9 1175			     jmp     k89
   1675	E7BE			     k88:
   1676	E7BE  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   1677	E7C3  74 10			     jz	     k60
   1678
   1679				     ;----------
   1680
   1681	E7C5  3C 41			     cmp     al,'A'
   1682	E7C7  72 16			     jb	     k61
   1683	E7C9  3C 5A			     cmp     al,'Z'
   1684	E7CB  77 12			     ja	     k61
   1685	E7CD  04 20			     add     al,'a'-'A'
   1686	E7CF  EB 0E				     jmp     short k61
   1687	E7D1  90				     nop
   1688
   1689	E7D2			     k59:
   1690	E7D2  E9 0316			     jmp     k26
   1691
   1692
   1693	E7D5			     k60:
   1694	E7D5  3C 61			     cmp     al,'a'
   1695	E7D7  72 06			     jb	     k61
   1696	E7D9  3C 7A			     cmp     al,'z'
   1697	E7DB  77 02			     ja	     k61
   1698	E7DD  2C 20			     sub     al,'a'-'A'
   1699
   1700	E7DF			     k61:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 35
1840v4.asm



   1701	E7DF  8B 1E 001Cr		     mov     bx,buffer_tail
   1702	E7E3  8B F3			     mov     si,bx
   1703	E7E5  E8 FF73			     call   k4
   1704	E7E8  3B 1E 001Ar		     cmp     bx,buffer_head
   1705	E7EC  74 0E			     je	     k62
   1706	E7EE  89 04			     mov     word ptr [si],ax
   1707	E7F0  89 1E 001Cr		     mov     buffer_tail,bx
   1708	E7F4  E9 02F4			     jmp     k26
   1709	E7F7  BB F8CBr		     k99:    mov     bx,offset rust
   1710	E7FA  EB A4			     jmp k56
   1711
   1712				     ;---
   1713
   1714	E7FC			     k62:
   1715	E7FC  E8 FF69			     call    error_beep
   1716	E7FF  E9 02E9			     jmp     k26
   1717
   1718				     ;---
   1719
   1720	E802			     k63:
   1721	E802  2C 3B			     sub     al,59
   1722	E804			     k64:
   1723	E804  2E: D7			     xlat    cs:k9
   1724	E806  8A E0			     mov     ah,al
   1725	E808  B0 00			     mov     al,0
   1726	E80A  EB 98				     jmp     short k57
   1727	E80C  22*(00)				     db	34 dup(0)
   1728
   1729				     ;---
   1730
   1731	E82E			     keyboard_io proc	     far
   1732	E82E  FB			     sti		     ;
   1733	E82F  1E			     push    ds
   1734	E830  53			     push    bx
   1735	E831  BB 0040			     mov     bx,dat
   1736	E834  8E DB			     mov     ds,bx	     ; установить сегмент данных
   1737	E836  0A E4			     or	     ah,ah	     ; AH=0
   1738	E838  74 0B			     jz	     k1		  ; переход к считыванию следующего символа
   1739	E83A  FE CC			     dec     ah		     ; AH=1
   1740	E83C  74 20			     jz	     k2		  ; переход к считыванию кода ASCII
   1741	E83E  FE CC			     dec     ah			  ; AH=2
   1742	E840  74 2D			     jz	     k3		  ; переход к получению	байта состояния
   1743	E842  5B			     pop     bx			  ; восстановить регистр
   1744	E843  1F			     pop     ds
   1745	E844  CF			     iret
   1746
   1747				     ;	 Считывание кода сканирования и	кода ASCII из буфера клавиатуры
   1748				     ;
   1749	E845			     k1:
   1750	E845  FB			     sti	     ; уст признака разрешения прерывания
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 36
1840v4.asm



   1751	E846  90			     nop		     ; задержка
   1752	E847  FA			     cli	     ; сброс признака разрешения прерывания
   1753	E848  8B 1E 001Ar		     mov     bx,buffer_head  ; уст вершину буфера по чтению
   1754	E84C  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной буфера по записи
   1755	E850  74 F3			     jz	     k1
   1756	E852  8B 07			     mov     ax,word ptr [bx] ;	получить код сканирования и код	ASCII
   1757	E854  E8 FF04			     call    k4
   1758	E857  89 1E 001Ar		     mov     buffer_head,bx  ; запомнить вершину буфера	по чтению
   1759	E85B  5B			     pop     bx		     ; восстановить регистр
   1760	E85C  1F			     pop     ds		     ; восстановить сегмент
   1761	E85D  CF			     iret		     ; возврат к программе
   1762
   1763				     ;	 Считать код ASCII
   1764
   1765	E85E			     k2:
   1766	E85E  FA			     cli	     ; Сброс признака разрешения прерывания
   1767	E85F  8B 1E 001Ar		     mov     bx,buffer_head  ; получить	указатель вершины буфера
   1768								     ; по чтению
   1769	E863  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной буфера по записи
   1770	E867  8B 07			     mov     ax,word ptr [bx]
   1771	E869  FB			     sti		     ; уст признак разрешения прерывания
   1772	E86A  5B			     pop     bx		     ; восстановить регистр
   1773	E86B  1F			     pop     ds		     ; восстановить сегмент
   1774	E86C  CA 0002			     ret     2
   1775
   1776				     ;	 Получение младшего байта состояния (флажков)
   1777
   1778	E86F			     k3:
   1779	E86F  A0 0017r			     mov     al,kb_flag	     ; получить	младший	байт состояния	   на
   1780	E872  5B			     pop     bx		     ; восстановить регистр
   1781	E873  1F			     pop     ds		     ; восстановить сегмент
   1782	E874  CF			     iret		     ; возврат к программе
   1783	E875			     keyboard_io     endp
   1784
   1785				     ;	 Таблица кодов сканирования управляющих	клавиш
   1786
   1787	E875			     k6	     label   byte
   1788	E875  52			     db	     ins_key
   1789	E876  56 45 46 38 1D		     db	     caps_key,num_key,scroll_key,alt_key,ctl_key
   1790	E87B  54 55			     db	     left_key,right_key
   1791	E87D  58			     db	     inv_key_l
   1792	E87E  5A 57 5B			     db	     inv_key_r,lat_key,rus_key
   1793	      =000C		     k6l     equ     0ch
   1794
   1795				     ;	 Таблица масок нажатых управляющих клавиш
   1796
   1797	E881			     k7	     label   byte
   1798	E881  80			     db	     ins_shift
   1799	E882  40 20 10 08 04		     db	     caps_shift,num_shift,scroll_shift,alt_shift,ctl_shift
   1800	E887  02 01			     db	     left_shift,right_shift
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 37
1840v4.asm



   1801
   1802
   1803				     ;	 Таблица кодов сканирования при	нажатой	клавише	УПР для
   1804				     ; кодов сканирования клавиш меньше	59
   1805
   1806	E889  1B FF 00 FF FF FF	1E+  k8	     db	     27,-1,0,-1,-1,-1,30,-1
   1807	      FF
   1808
   1809	E891  FF FF FF 1F FF 7F	FF+	     db	     -1,-1,-1,31,-1,127,-1,17
   1810	      11
   1811
   1812	E899  17 05 12 14 19 15	09+	     db	     23,5,18,20,25,21,9,15
   1813	      0F
   1814
   1815	E8A1  10 1B 1D 0A FF 01	13	     db	     16,27,29,10,-1,1,19
   1816
   1817	E8A8  04 06 07 08 0A 0B	0C+	     db	     4,6,7,8,10,11,12,-1,-1
   1818	      FF FF
   1819
   1820	E8B1  FF FF 1C 1A 18 03	16+	     db	     -1,-1,28,26,24,3,22,2
   1821	      02
   1822
   1823	E8B9  0E 0D FF FF FF FF	FF+	     db	     14,13,-1,-1,-1,-1,-1,-1
   1824	      FF
   1825
   1826	E8C1  20 FF			     db	     ' ',-1
   1827
   1828				     ;	 Таблица кодов сканирования при	нажатой	клавише	УПР для
   1829				     ; кодов сканирования клавиш больше	59
   1830	E8C3			     k9	     label   byte
   1831	E8C3  5E 5F 60 61 62 63	64+	     db	     94,95,96,97,98,99,100,101
   1832	      65
   1833
   1834	E8CB  66 67 FF FF 77 FF	84+	     db	     102,103,-1,-1,119,-1,132,-1
   1835	      FF
   1836
   1837	E8D3  73 FF 74 FF 75 FF	76+	     db	     115,-1,116,-1,117,-1,118,-1
   1838	      FF
   1839
   1840	E8DB  FF			     db	     -1
   1841
   1842				     ;	 Таблица кодов ASCII нижнего регистра клавиатуры
   1843
   1844	E8DC			     k10     label   byte
   1845	E8DC  1B 31 32 33 34 35	36+	     db	     27,'1234567890-='
   1846	      37 38 39 30 2D 3D
   1847
   1848
   1849	E8E9  08 09			     db	     08h,09h
   1850	E8EB  71 77 65 72 74 79	75+	     db	     'qwertyuiop[]',0dh,-1,'asdfghjkl;:',60h,7eh
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 38
1840v4.asm



   1851	      69 6F 70 5B 5D 0D	FF+
   1852	      61 73 64 66 67 68	6A+
   1853	      6B 6C 3B 3A 60 7E
   1854
   1855
   1856
   1857
   1858	E906  5C 7A 78 63 76 62	6E+	     db	     05ch,'zxcvbnm',',./{'
   1859	      6D 2C 2E 2F 7B
   1860
   1861	E912  2A FF 20 7D		     db	     '*',-1,' }'
   1862
   1863				     ;	 Таблица кодов ASCII верхнего регистра клавиатуры
   1864
   1865	E916			     k11     label   byte
   1866	E916  1B 21 40 23 24 25	5E+	     db	     27,'!@#$',37,05eh,'&*()_+'
   1867	      26 2A 28 29 5F 2B
   1868
   1869
   1870	E923  08 00			     db	     08h,0
   1871	E925  51 57 45 52 54 59	55+	     db	     'QWERTYUIOP',-1,-1,0dh,-1
   1872	      49 4F 50 FF FF 0D	FF
   1873
   1874
   1875	E933  41 53 44 46 47 48	4A+	     db	     'ASDFGHJKL'
   1876	      4B 4C
   1877
   1878	E93C  27 22 FF FF 7C		     db	     027h,'"',-1,-1,7ch
   1879	E941  5A 58 43 56 42 4E	4D	     db	     'ZXCVBNM'
   1880
   1881	E948  3C 3E 3F FF 00 FF	20+	     db	     '<>?',-1,0,-1,' ',-1
   1882	      FF
   1883
   1884
   1885				     ;	 Таблица кодов сканирования клавиш Ф11 - Ф20 (на верхнем
   1886				     ; регистре	Ф1 - Ф10)
   1887
   1888	E950			     k12     label   byte
   1889	E950  54 55 56 57 58 59	5A	     db	     84,85,86,87,88,89,90
   1890
   1891	E957  5B 5C 5D			     db	     91,92,93
   1892
   1893				     ;	 Таблица кодов сканирования одновременно нажатых клавиш
   1894				     ; ДОП и Ф1	- Ф10
   1895
   1896	E95A			     k13     label byte
   1897	E95A  68 69 6A 6B 6C		     db	     104,105,106,107,108
   1898	E95F  6D 6E 6F 70 71		     db	     109,110,111,112,113
   1899
   1900				     ;	 Таблица кодов правого пятнадцатиклавишного поля на верхнем
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 39
1840v4.asm



   1901				     ; регистре
   1902
   1903	E964			     k14     label   byte
   1904	E964  37 38 39 2D 34 35	36+	     db	     '789-456+1230.'
   1905	      2B 31 32 33 30 2E
   1906
   1907
   1908
   1909				     ;	 Таблица кодов правого пятнадцатиклавишного поля на нижнем
   1910				     ; регистре
   1911
   1912	E971			     k15     label byte
   1913	E971  47 48 49 FF 4B FF	4D	     db	     71,72,73,-1,75,-1,77
   1914
   1915	E978  FF 4F 50 51 52 53		     db	     -1,79,80,81,82,83
   1916
   1917	E97E  09*(00)				     db	9 dup(0)
   1918
   1919				     ;----INT 9--------------------------
   1920				     ;
   1921				     ;	  Программа обработки прерывания клавиатуры
   1922				     ;
   1923				     ; Программа считывает код сканирования клавиши в регистр AL.
   1924				     ; Единичное состояние разряда 7 в коде сканирования означает,
   1925				     ; что клавиша отжата.
   1926				     ;	 В результате выполнения программы в регистре AX формируется
   1927				     ; слово, старший байт которого (AH) содержит код сканирования,
   1928				     ; а младший (AL) -	код ASCII. Эта информация помещается в буфер
   1929				     ; клавиатуры. После заполнения буфера подается звуковой сигнал.
   1930				     ;
   1931				     ;-----------------------------------
   1932
   1933	E987			     kb_int proc far
   1934	E987  FB			     sti		; установка признака разрешения	прерывания
   1935	E988  50			     push    ax
   1936	E989  53			     push    bx
   1937	E98A  51			     push    cx
   1938	E98B  52			     push    dx
   1939	E98C  56			     push    si
   1940	E98D  57			     push    di
   1941	E98E  1E			     push    ds
   1942	E98F  06			     push    es
   1943	E990  FC			     cld		    ; установить признак направления вперед
   1944	E991  B8 0040			     mov     ax,dat	    ; установить адресацию
   1945	E994  8E D8			     mov     ds,ax
   1946	E996  E4 60			     in	     al,kb_dat	    ; считать код сканирования
   1947	E998  50			     push    ax
   1948	E999  E4 61			     in	     al,kb_ctl	    ; считать значение порта 61
   1949	E99B  8A E0			     mov     ah,al	    ; сохранить	считанное значение
   1950	E99D  0C 80			     or	     al,80h	    ; установить бит 7 порта 61
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 40
1840v4.asm



   1951	E99F  E6 61			     out     kb_ctl,al	    ; для работы с клавиатурой
   1952	E9A1  86 E0			     xchg    ah,al	    ; восстановить значение порта 61
   1953	E9A3  E6 61			     out     kb_ctl,al
   1954	E9A5  58			     pop     ax		    ; восстановить код сканирования
   1955	E9A6  8A E0			     mov     ah,al	    ; и	сохранить его в	AH
   1956
   1957				     ;---
   1958
   1959	E9A8  3C FF			     cmp     al,0ffh  ;	сравнение с кодом заполнения буфера
   1960							      ;	клавиатуры
   1961	E9AA  75 03			     jnz     k16	     ; продолжить
   1962	E9AC  E9 FE4D			     jmp     k62     ; переход на звуковой сигнал по заполнению
   1963							     ; буфера клавиатуры
   1964
   1965	E9AF			     k16:
   1966	E9AF  24 7F			     and     al,07fh	     ; сброс бита отжатия клавиши
   1967	E9B1  0E			     push    cs
   1968	E9B2  07			     pop     es
   1969	E9B3  BF E875r			     mov     di,offset k6  ; установить	адрес таблицы сканирования
   1970								   ; управляющих клавиш
   1971	E9B6  B9 000C			     mov     cx,k6l
   1972	E9B9  F2> AE			     repne scasb     ; сравнение полученного кода ска-
   1973							     ; нирования с содержимым таблицы
   1974	E9BB  8A C4			     mov     al,ah	     ; запомнить код сканирования
   1975	E9BD  74 1A			     je	     k17	     ; переход по совпадению
   1976	E9BF  E9 010A			     jmp     k25	     ; переход по несовпадению
   1977	E9C2			     k406:
   1978	E9C2  F6 06 0018r 02		     test    kb_flag_1,lat
   1979	E9C7  75 7F			     jnz     k26a
   1980	E9C9  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   1981	E9CE  B8 5CF1			     mov     ax,5cf1h
   1982	E9D1  74 03			     jz	     k407
   1983	E9D3  B8 5CF0			     mov     ax,5cf0h
   1984
   1985				     ;	 Получение маски нажатой управляющей клавиши
   1986
   1987	E9D6			     k407:
   1988	E9D6  E9 FDCB			     jmp     k57
   1989
   1990	E9D9  81 EF E876r	     k17:    sub     di,offset k6+1
   1991	E9DD  83 FF 08			     cmp     di,8
   1992	E9E0  72 3B			     jb	     k300
   1993	E9E2  B4 06			     mov     ah,6
   1994	E9E4  83 FF 0A			     cmp     di,0ah
   1995	E9E7  72 39			     jb	     k301
   1996	E9E9  A8 80			     test    al,80h
   1997	E9EB  74 5B			     jz	     k26a
   1998	E9ED  80 26 0018r FC		     and     kb_flag_1,not lat+lat_shift
   1999	E9F2  83 FF 0B			     cmp     di,0bh
   2000	E9F5  74 17			     je	     k401
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 41
1840v4.asm



   2001	E9F7  F6 06 0018r 04		     test    kb_flag_1,inv_shift
   2002	E9FC  74 08			     jz	     k400
   2003	E9FE  80 0E 0018r 01		     or	     kb_flag_1,lat_shift
   2004	EA03  EB 43				     jmp     short k26a
   2005	EA05  90				     nop
   2006	EA06  80 0E 0018r 03	     k400:   or	     kb_flag_1,lat+lat_shift
   2007	EA0B  EB 3B				     jmp     short k26a
   2008	EA0D  90				     nop
   2009	EA0E  F6 06 0018r 04	     k401:   test    kb_flag_1,inv_shift
   2010	EA13  74 33			     jz	     k26a
   2011	EA15  80 0E 0018r 02		     or	     kb_flag_1,lat
   2012	EA1A  EB 2C				     jmp     short k26a
   2013	EA1C  90				     nop
   2014	EA1D  2E: 8A A5	E881r	     k300:   mov     ah,cs:k7[di]
   2015	EA22			     k301:
   2016	EA22  A8 80			     test    al,80h	     ; клавиша отжата ?
   2017	EA24  75 79			     jnz     k23     ; переход,	если клавиша отжата
   2018
   2019				     ;	 Управляющая клавиша нажата
   2020
   2021	EA26  80 FC 10			     cmp     ah,scroll_shift ; нажата управляющая клавиша с
   2022								     ;	запоминанием ?
   2023	EA29  73 20			     jae     k18	     ; переход,	если да
   2024
   2025				     ;---
   2026	EA2B  80 FC 06			     cmp     ah,6
   2027	EA2E  74 07			     je	     k302
   2028
   2029	EA30  08 26 0017r		     or	     kb_flag,ah	     ; установка масок управляющих клавиш
   2030								     ; без запоминания
   2031	EA34  E9 00B4			     jmp     k26	     ; к выходу	из прерывания
   2032	EA37  80 0E 0018r 06	     k302:   or	     kb_flag_1,inv_shift+lat
   2033	EA3C  F6 06 0018r 01		     test    kb_flag_1,lat_shift
   2034	EA41  74 05			     jz	     k26a
   2035	EA43  80 26 0018r FD		     and     kb_flag_1,not lat
   2036	EA48			     k26a:
   2037	EA48  E9 00A0			     jmp     k26
   2038
   2039				     ;	 Опрос нажатия клавиши с запоминанием
   2040
   2041	EA4B			     k18:
   2042	EA4B  F6 06 0017r 04		     test    kb_flag,ctl_shift	       ; опрос клавиши УПР
   2043	EA50  75 7A			     jnz     k25
   2044	EA52  3C 52			     cmp     al,ins_key		       ; опрос клавиши ВСТ
   2045	EA54  75 25			     jnz     k22
   2046	EA56  F6 06 0017r 08		     test    kb_flag,alt_shift	       ; опрос клавиши ДОП
   2047	EA5B  74 03			     jz	     k19
   2048	EA5D  EB 6D				     jmp     short k25
   2049	EA5F  90				     nop
   2050	EA60  F6 06 0017r 20	     k19:    test    kb_flag,num_state	; опрос	клавиши	ЦИФ
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 42
1840v4.asm



   2051	EA65  75 0D			     jnz     k21
   2052	EA67  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift ; опрос клавиш левого
   2053								  ; и правого переключения регистров
   2054	EA6C  74 0D			     jz	     k22
   2055
   2056	EA6E			     k20:
   2057	EA6E  B8 5230			     mov     ax,5230h
   2058	EA71  E9 FD30			     jmp     k57	   ; установка кода нуля
   2059	EA74			     k21:
   2060	EA74  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2061	EA79  74 F3			     jz	     k20
   2062
   2063	EA7B			     k22:
   2064	EA7B  84 26 0018r		     test    ah,kb_flag_1
   2065	EA7F  75 6A			     jnz     k26
   2066	EA81  08 26 0018r		     or	     kb_flag_1,ah
   2067	EA85  30 26 0017r		     xor     kb_flag,ah
   2068	EA89  3C 52			     cmp     al,ins_key
   2069	EA8B  75 5E			     jne     k26
   2070	EA8D  B8 5200			     mov     ax,ins_key*256
   2071	EA90  E9 FD11			     jmp     k57
   2072
   2073	EA93			     k303:
   2074	EA93  80 26 0018r FB		     and     kb_flag_1,not inv_shift
   2075	EA98  80 36 0018r 02		     xor     kb_flag_1,lat
   2076	EA9D  EB 10			     jmp     short k304
   2077
   2078				     ;	 Управляющая клавиша отжата
   2079
   2080	EA9F			     k23:
   2081
   2082	EA9F  80 FC 10			     cmp     ah,scroll_shift
   2083	EAA2  73 1F			     jae     k24
   2084	EAA4  F6 D4			     not     ah
   2085	EAA6  80 FC F9			     cmp     ah,0f9h
   2086	EAA9  74 E8			     je	     k303
   2087	EAAB  20 26 0017r		     and     kb_flag,ah
   2088	EAAF			     k304:
   2089	EAAF  3C B8			     cmp     al,alt_key+80h
   2090	EAB1  75 38			     jne     k26
   2091
   2092				     ;---
   2093
   2094	EAB3  A0 0019r			     mov     al,alt_input
   2095	EAB6  B4 00			     mov     ah,0
   2096	EAB8  88 26 0019r		     mov     alt_input,ah
   2097	EABC  3C 00			     cmp     al,0
   2098	EABE  74 2B			     je	     k26
   2099	EAC0  E9 FCEA			     jmp     k58
   2100
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 43
1840v4.asm



   2101	EAC3			     k24:
   2102	EAC3  F6 D4			     not     ah
   2103	EAC5  20 26 0018r		     and     kb_flag_1,ah
   2104	EAC9  EB 20				     jmp     short k26
   2105	EACB  90				     nop
   2106
   2107	EACC			     k25:
   2108	EACC  3C 80			     cmp     al,80h
   2109	EACE  73 1B			     jae     k26
   2110	EAD0  3C 59			     cmp     al,inf_key
   2111	EAD2  74 25			     je	     k307
   2112	EAD4  3C 5C			     cmp     al,92
   2113	EAD6  75 03			     jne     k406b
   2114	EAD8  E9 FEE7			     jmp     k406
   2115	EADB			     k406b:
   2116	EADB  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2117	EAE0  74 1D			     jz	     k28
   2118	EAE2  3C 45			     cmp     al,num_key
   2119	EAE4  74 05			     je	     k26
   2120	EAE6  80 26 0018r F7		     and     kb_flag_1,not hold_state
   2121
   2122	EAEB			     k26:
   2123	EAEB  FA			     cli
   2124	EAEC  B0 20			     mov     al,eoi
   2125	EAEE  E6 20			     out     020h,al
   2126	EAF0			     k27:
   2127	EAF0  07			     pop     es
   2128	EAF1  1F			     pop     ds
   2129	EAF2  5F			     pop     di
   2130	EAF3  5E			     pop     si
   2131	EAF4  5A			     pop     dx
   2132	EAF5  59			     pop     cx
   2133	EAF6  5B			     pop     bx
   2134	EAF7  58			     pop     ax
   2135	EAF8  CF			     iret
   2136
   2137	EAF9  B8 A000		     k307:   mov     ax,0a000h
   2138	EAFC  E9 FCA5			     jmp     k57
   2139
   2140
   2141				     ;---
   2142
   2143	EAFF			     k28:
   2144	EAFF  F6 06 0017r 08		     test    kb_flag,alt_shift
   2145	EB04  75 03			     jnz     k29
   2146	EB06  EB 6D				     jmp     short k38
   2147	EB08  90				     nop
   2148
   2149				     ;---
   2150
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 44
1840v4.asm



   2151	EB09			     k29:
   2152	EB09  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2153	EB0E  74 0F			     jz	     k31
   2154	EB10  3C 53			     cmp     al,del_key
   2155	EB12  75 0B			     jne     k31
   2156
   2157				     ;---
   2158
   2159	EB14  C7 06 0072r 1234		     mov     reset_flag,1234h
   2160	EB1A  EA			     db	     0eah		     ;	     db	     0eah,5bh,0e0h,00h,0f0h  ; +
   2161				     jmp far ptr start
   2162	EB1B  E05Br F000		     dw	     offset start, cod	     ;	     ###Gleb###
   2163
   2164				     ;---
   2165
   2166
   2167
   2168
   2169	EB1F			     k31:
   2170	EB1F  3C 39			     cmp     al,57
   2171	EB21  75 05			     jne     k32
   2172	EB23  B0 20			     mov     al,' '
   2173	EB25  E9 FC7C			     jmp     k57
   2174
   2175				     ;---
   2176
   2177	EB28			     k32:
   2178	EB28  BF F905r			     mov     di,offset k30
   2179	EB2B  B9 000A			     mov     cx,10
   2180	EB2E  F2> AE				     repne scasb
   2181	EB30  75 12			     jne     k33
   2182	EB32  81 EF F906r		     sub     di,offset k30+1
   2183	EB36  A0 0019r			     mov     al,alt_input
   2184	EB39  B4 0A			     mov     ah,10
   2185	EB3B  F6 E4			     mul     ah
   2186	EB3D  03 C7			     add     ax,di
   2187	EB3F  A2 0019r			     mov     alt_input,al
   2188	EB42  EB A7				     jmp     short k26
   2189
   2190				     ;---
   2191
   2192	EB44			     k33:
   2193	EB44  C6 06 0019r 00		     mov     alt_input,00h
   2194	EB49  B9 001A			     mov     cx,0026
   2195	EB4C  F2> AE				     repne scasb
   2196	EB4E  75 05			     jne     k34
   2197	EB50  B0 00			     mov     al,0
   2198	EB52  E9 FC4F			     jmp     k57
   2199
   2200				     ;---
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 45
1840v4.asm



   2201
   2202	EB55			     k34:
   2203	EB55  3C 02			     cmp     al,2
   2204	EB57  72 0C			     jb	     k35
   2205	EB59  3C 0E			     cmp     al,14
   2206	EB5B  73 08			     jae     k35
   2207	EB5D  80 C4 76			     add     ah,118
   2208	EB60  B0 00			     mov     al,0
   2209	EB62  E9 FC3F			     jmp     k57
   2210
   2211				     ;---
   2212
   2213	EB65			     k35:
   2214	EB65  3C 3B			     cmp     al,59
   2215	EB67  73 02			     jae     k37
   2216	EB69			     k36:
   2217	EB69  EB 80				     jmp     short k26
   2218	EB6B			     k37:
   2219	EB6B  3C 47			     cmp     al,71
   2220	EB6D  73 FA			     jae     k36
   2221	EB6F  BB E95Ar			     mov     bx,offset k13
   2222	EB72  E9 FC8D			     jmp     k63
   2223
   2224				     ;---
   2225
   2226	EB75			     k38:
   2227	EB75  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2228	EB7A  74 5B			     jz	     k44
   2229
   2230				     ;---
   2231				     ;---
   2232
   2233	EB7C  3C 46			     cmp     al,scroll_key
   2234	EB7E  75 18			     jne     k39
   2235	EB80  BB 001Er			     mov     bx,offset kb_buffer
   2236	EB83  89 1E 001Ar		     mov     buffer_head,bx
   2237	EB87  89 1E 001Cr		     mov     buffer_tail,bx
   2238	EB8B  C6 06 0071r 80		     mov     bios_break,80h
   2239	EB90  CD 1B			     int     1bh
   2240	EB92  B8 0000			     mov     ax,0
   2241	EB95  E9 FC0C			     jmp     k57
   2242
   2243	EB98			     k39:
   2244	EB98  3C 45			     cmp     al,num_key
   2245	EB9A  75 21			     jne     k41
   2246	EB9C  80 0E 0018r 08		     or	     kb_flag_1,hold_state
   2247	EBA1  B0 20			     mov     al,eoi
   2248	EBA3  E6 20			     out     020h,al
   2249
   2250				     ;---
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 46
1840v4.asm



   2251
   2252	EBA5  80 3E 0049r 07		     cmp     crt_mode,7
   2253	EBAA  74 07			     je	     k40
   2254	EBAC  BA 03D8			     mov     dx,03d8h
   2255	EBAF  A0 0065r			     mov     al,crt_mode_set
   2256	EBB2  EE			     out     dx,al
   2257	EBB3			     k40:
   2258	EBB3  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2259	EBB8  75 F9			     jnz     k40
   2260	EBBA  E9 FF33			     jmp     k27
   2261	EBBD			     k41:
   2262
   2263				     ;---
   2264
   2265	EBBD  3C 37			     cmp     al,55
   2266	EBBF  75 06			     jne     k42
   2267	EBC1  B8 7200			     mov     ax,114*256
   2268	EBC4  E9 FBDD			     jmp     k57
   2269
   2270				     ;---
   2271
   2272	EBC7			     k42:
   2273	EBC7  BB E889r			     mov     bx,offset k8
   2274	EBCA  3C 3B			     cmp     al,59
   2275	EBCC  73 03			     jae     k43
   2276	EBCE  E9 FBCF			     jmp     k56
   2277	EBD1			     k43:
   2278	EBD1  BB E8C3r			     mov     bx,offset k9
   2279	EBD4  E9 FC2B			     jmp     k63
   2280
   2281				     ;---
   2282
   2283	EBD7			     k44:
   2284
   2285	EBD7  3C 47			     cmp     al,71
   2286	EBD9  73 3E			     jae     k48
   2287	EBDB  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2288	EBE0  74 0A			     jz	     k54a
   2289
   2290				     ;---
   2291
   2292	EBE2  3C 0F			     cmp     al,15
   2293	EBE4  75 09			     jne     k45
   2294	EBE6  B8 0F00			     mov     ax,15*256
   2295	EBE9  E9 FBB8			     jmp     k57
   2296
   2297	EBEC			     k54a:
   2298	EBEC  E9 FB9E			     jmp k54
   2299
   2300	EBEF			     k45:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 47
1840v4.asm



   2301	EBEF  3C 37			     cmp     al,55
   2302	EBF1  75 09			     jne     k46
   2303
   2304				     ;---
   2305
   2306	EBF3  B0 20			     mov     al,eoi
   2307	EBF5  E6 20			     out     020h,al
   2308	EBF7  CD 05			     int     5h
   2309	EBF9  E9 FEF4			     jmp     k27
   2310
   2311	EBFC			     k46:
   2312	EBFC  3C 3B			     cmp     al,59
   2313	EBFE  72 06			     jb	     k47
   2314	EC00  BB E950r			     mov     bx,offset k12
   2315	EC03  E9 FBFC			     jmp     k63
   2316
   2317	EC06			     k47:
   2318	EC06  F6 06 0018r 02		     test    kb_flag_1,lat
   2319	EC0B  74 06			     jz	     k98
   2320	EC0D  BB E916r			     mov     bx,offset k11
   2321	EC10  E9 FB8D			     jmp      k56
   2322	EC13  BB E6BDr		     k98:    mov     bx,offset rust2
   2323	EC16  E9 FB87			     jmp     k56
   2324
   2325				     ;---
   2326
   2327	EC19			     k48:
   2328	EC19  F6 06 0017r 20		     test    kb_flag,num_state
   2329	EC1E  75 23			     jnz     k52
   2330	EC20  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2331	EC25  75 23			     jnz     k53
   2332
   2333				     ;---
   2334
   2335	EC27			     k49:
   2336
   2337	EC27  3C 4A			     cmp     al,74
   2338	EC29  74 0C			     je	     k50
   2339	EC2B  3C 4E			     cmp     al,78
   2340	EC2D  74 0E			     je	     k51
   2341	EC2F  2C 47			     sub     al,71
   2342	EC31  BB E971r			     mov     bx,offset k15
   2343	EC34  E9 FBCD			     jmp       k64
   2344
   2345	EC37  B8 4A2D		     k50:    mov     ax,74*256+'-'
   2346	EC3A  E9 FB67			     jmp      k57
   2347
   2348	EC3D  B8 4E2B		     k51:    mov     ax,78*256+'+'
   2349	EC40  E9 FB61			     jmp      k57
   2350
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 48
1840v4.asm



   2351				     ;---
   2352
   2353	EC43			     k52:
   2354	EC43  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2355	EC48  75 DD			     jnz     k49
   2356
   2357	EC4A			     k53:
   2358	EC4A  2C 46			     sub     al,70
   2359	EC4C  BB E964r			     mov     bx,offset k14
   2360	EC4F  E9 FB4E			     jmp      k56
   2361	EC52			     kb_int  endp
   2362
   2363	EC52  07*(00)				     db	7 dup(0)
   2364
   2365				     ;--- int 13H---------
   2366				     ;	 Программа обслуживания	накопителя на гибком магнитном
   2367				     ; диске выполняет шесть функций, код которых задается
   2368				     ; в регистре AH:
   2369				     ;	 AH=0 -	сбросить  НГМД;
   2370				     ;	 AH=1 -	считать	байт состояния НГМД. Состояние соответствует
   2371				     ; последней выполняемой операции и	передается в регистр AL	из
   2372				     ; постоянно распределенной	области	оперативной памяти с адресом
   2373				     ; 00441H;
   2374				     ;	  AH=2H	- считать указанный сектор в память;
   2375				     ;	  AH=3H	- записать указанный сектор из памяти;
   2376				     ;	  AH=4H	- верификация;
   2377				     ;	  AH=5H	- форматизация.
   2378				     ;	  Для выполнения функций записи, считывания, верификации,
   2379				     ; форматизации в регистрах	задается следующая информация:
   2380				     ;	  DL - номер устройства	(0-3, контролируемое значение);
   2381				     ;	  DH - номер головки (0-1, неконтролируемое значение);
   2382				     ;	  CH - номер дорожки (0-39, неконтролируемое значение);
   2383				     ;	  CL - номер сектора (1-8, неконтролируемое значение);
   2384				     ;	  AL - количество секторов (1-8, неконтролируемое значение).
   2385				     ;
   2386				     ;	  Для выполнения форматизации необходимо сформировать в
   2387				     ; памяти четырехбайтную таблицу для каждого сектора, содержащую
   2388				     ; следующую информацию:
   2389				     ;	  номер	дорожки;
   2390				     ;	  номер	головки;
   2391				     ;	  номер	сектора;
   2392				     ;	  количество байт в секторе (00	- 128 байт, 01 - 256 байт,
   2393				     ; 02 - 512	байт, 03 - 1024	байта).
   2394				     ;	  Адрес	таблицы	задается в регистрах ES:BX.
   2395				     ;
   2396				     ;	  После	выполнения программы в регистре	AH находится
   2397				     ; байт состояния НГМД.
   2398				     ;
   2399				     ;	  Байт состояния НГМД имеет следующее значение:
   2400				     ;	  80 - тайм-аут;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 49
1840v4.asm



   2401				     ;	  40 - сбой позиционирования;
   2402				     ;	  20 - сбой контроллера;
   2403				     ;	  10 - ошибка кода циклического	контроля при считывании;
   2404				     ;	  09 - переход адреса через сегмент (64К байт);
   2405				     ;	  08 - переполнение;
   2406				     ;	  04 - сектор не найден;
   2407				     ;	  03 - защита записи;
   2408				     ;	  02 - не обнаружен маркер идентификатора сектора;
   2409				     ;	  01 - команда отвергнута.
   2410				     ;	  При успешном завершении программы признак CF=0,  в про-
   2411				     ; тивном случае - признак CF=1 (регистр AH	содержит код ошибки).
   2412				     ;	  Регистр AL содержит количество реально считанных секторов.
   2413				     ;	  Адрес	программы обслуживания накопителя на гибком магнитном
   2414				     ; диске записывается в вектор 40H в процедуре сброса по включению
   2415				     ; питания.
   2416				     ;-------------------------
   2417					     assume  cs:code,ds:data,es:data
   2418	EC59			     diskette_io proc	     far
   2419	EC59  FB			     sti		     ; установить признак прерывания
   2420	EC5A  53			     push    bx		     ; сохранить адрес
   2421	EC5B  51			     push    cx
   2422	EC5C  1E			     push    ds		; сохранить сегментное значение	регистра
   2423	EC5D  56			     push    si		; сохранить все	регистры во время операции
   2424	EC5E  57			     push    di
   2425	EC5F  55			     push    bp
   2426	EC60  52			     push    dx
   2427	EC61  8B EC			     mov     bp,sp	; установить указатель вершины стека
   2428	EC63  BE 0040			     mov     si,dat
   2429	EC66  8E DE			     mov     ds,si	     ; установить область данных
   2430	EC68  E8 001C			     call    j1		     ;
   2431	EC6B  BB 0004			     mov     bx,4	     ; получить	параметры ожидания мотора
   2432	EC6E  E8 01E0			     call    get_parm
   2433	EC71  88 26 0040r		     mov     motor_count,ah  ; уст время отсчета для мотора
   2434	EC75  8A 26 0041r		     mov     ah,diskette_status	 ; получить состояние операции
   2435	EC79  80 FC 01			     cmp     ah,1	     ; уст признак CF для индикации
   2436	EC7C  F5			     cmc		     ; успешной	операции
   2437	EC7D  5A			     pop     dx		     ; восстановить все	регистры
   2438	EC7E  5D			     pop     bp
   2439	EC7F  5F			     pop     di
   2440	EC80  5E			     pop     si
   2441	EC81  1F			     pop     ds
   2442	EC82  59			     pop     cx
   2443	EC83  5B			     pop     bx
   2444	EC84  CA 0002			     ret     2
   2445	EC87			     diskette_io     endp
   2446	EC87			     j1	     proc    near
   2447	EC87  8A F0			     mov     dh,al	     ; сохранить количество секторов
   2448	EC89  80 26 003Fr 7F		     and     motor_status,07fh	 ; указать операцию считывания
   2449	EC8E  0A E4			     or	     ah,ah	     ; AH=0
   2450	EC90  74 27			     jz	     disk_reset
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 50
1840v4.asm



   2451	EC92  FE CC			     dec     ah		     ; AH=1
   2452	EC94  74 74			     jz	     disk_status
   2453	EC96  C6 06 0041r 00		     mov     diskette_status,0	 ; сброс состояния
   2454	EC9B  80 FA 04			     cmp     dl,4	     ; проверка	количества устройств
   2455	EC9E  73 13			     jae     j3		     ; переход по ошибке
   2456	ECA0  FE CC			     dec     ah		     ; AH=2
   2457	ECA2  74 6A			     jz	     disk_read
   2458	ECA4  FE CC			     dec     ah		     ; AH=3
   2459	ECA6  75 03			     jnz     j2
   2460	ECA8  E9 0096			     jmp     disk_write
   2461	ECAB			     j2:
   2462	ECAB  FE CC			     dec     ah		     ; AH=4
   2463	ECAD  74 68			     jz	     disk_verf
   2464	ECAF  FE CC			     dec     ah		     ; AH=5
   2465	ECB1  74 68			     jz	     disk_format
   2466	ECB3			     j3:
   2467	ECB3  C6 06 0041r 01		     mov     diskette_status,bad_cmd   ; неверная команда
   2468
   2469	ECB8  C3			     ret		     ; операция	не определена
   2470	ECB9			     j1	     endp
   2471
   2472				     ;	 Сбросить НГМД
   2473
   2474	ECB9			     disk_reset	proc near
   2475	ECB9  BA 03F2			     mov     dx,03f2h
   2476	ECBC  FA			     cli		     ; сброс признака разрешения прерывания
   2477	ECBD  A0 003Fr			     mov     al,motor_status  ;	какой мотор включен
   2478	ECC0  B1 04			     mov     cl,4	     ; счетчик сдвига
   2479	ECC2  D2 E0			     sal     al,cl
   2480	ECC4  A8 20			     test    al,20h	     ; выбрать соответствующее устройство
   2481	ECC6  75 0C			     jnz     j5		     ; переход,	если включен мотор первого
   2482								     ; устройства
   2483	ECC8  A8 40			     test    al,40h
   2484	ECCA  75 06			     jnz     j4		     ; переход,	если включен мотор второго
   2485								     ; устройства
   2486	ECCC  A8 80			     test    al,80h
   2487	ECCE  74 06			     jz	     j6		     ; переход,	если включен мотор нулевого
   2488								     ; устройства
   2489	ECD0  FE C0			     inc     al
   2490	ECD2  FE C0		     j4:     inc     al
   2491	ECD4  FE C0		     j5:     inc     al
   2492	ECD6  0C 08		     j6:     or	     al,8	     ; включить	доступность прерывания
   2493	ECD8  EE			     out     dx,al	     ; сброс адаптера
   2494	ECD9  C6 06 003Er 00		     mov     seek_status,0
   2495	ECDE  C6 06 0041r 00		     mov     diskette_status,0	; уст нормальное состояние НГМД
   2496	ECE3  0C 04			     or	     al,4	     ; выключить сброс
   2497	ECE5  EE			     out     dx,al
   2498	ECE6  FB			     sti		     ; установить бит разрешения прерывания
   2499	ECE7  E8 0225			     call    chk_stat_2	     ; выполнить прерывание после сброса
   2500	ECEA  A0 0042r			     mov     al,nec_status
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 51
1840v4.asm



   2501	ECED  3C C0			     cmp     al,0c0h	; проверка готовности устройства для передачи
   2502	ECEF  74 07			     jz	     j7		     ; устройство готово
   2503	ECF1  80 0E 0041r 20		     or	     diskette_status,bad_nec  ;	уст код	ошибки
   2504	ECF6  EB 11			     jmp     short j8
   2505
   2506				     ;	 Послать команду в контроллер
   2507
   2508	ECF8			     j7:
   2509	ECF8  B4 03			     mov     ah,03h	     ; установить команду
   2510	ECFA  E8 FA32			     call    nec_output	     ; передать	команду
   2511	ECFD  BB 0001			     mov     bx,1	     ; передача	первого	байта параметров
   2512	ED00  E8 014E			     call    get_parm	     ; в контроллер
   2513	ED03  BB 0003			     mov     bx,3	     ; передача	второго	байта параметров
   2514	ED06  E8 0148			     call    get_parm	     ; в контроллер
   2515	ED09			     j8:
   2516	ED09  C3			     ret		     ; возврат к прерванной программе
   2517	ED0A			     disk_reset	     endp
   2518
   2519				     ;
   2520				     ; Считать байт состояния НГМД (AH=1)
   2521				     ;
   2522
   2523	ED0A			     disk_status proc near
   2524	ED0A  A0 0041r			     mov     al,diskette_status
   2525	ED0D  C3			     ret
   2526	ED0E			     disk_status     endp
   2527
   2528				     ;	 Считать указанный сектор в память (AH=2)
   2529
   2530	ED0E			     disk_read proc near
   2531	ED0E  B0 46			     mov     al,046h	     ; установить команду
   2532	ED10			     j9:
   2533	ED10  E8 01B6			     call    dma_setup	     ; установить ПДП
   2534	ED13  B4 E6			     mov     ah,0e6h	 ; уст команду считывания  контроллера
   2535	ED15  EB 36			     jmp     short rw_opn    ; переход к выполнению операции
   2536	ED17			     disk_read	     endp
   2537
   2538				     ;	 Верификация (AH=4)
   2539
   2540	ED17			     disk_verf proc near
   2541	ED17  B0 42			     mov     al,042h	     ; установить команду
   2542	ED19  EB F5			     jmp     short j9
   2543	ED1B			     disk_verf	     endp
   2544
   2545				     ;	 Форматизация (AH=5)
   2546
   2547	ED1B			     disk_format proc near
   2548	ED1B  80 0E 003Fr 80		     or	     motor_status,80h  ; индикация операции записи
   2549	ED20  B0 4A			     mov     al,04ah	       ; установить команду
   2550	ED22  E8 01A4			     call    dma_setup	       ; установить ПДП
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 52
1840v4.asm



   2551	ED25  B4 4D			     mov     ah,04dh	       ; установить команду
   2552	ED27  EB 24			     jmp     short rw_opn
   2553	ED29			     j10:
   2554	ED29  BB 0007			     mov     bx,7	       ; получить значение сектора
   2555	ED2C  E8 0122			     call    get_parm
   2556	ED2F  BB 0009			     mov     bx,9	     ; получить	значение дорожки на секторе
   2557	ED32  E8 011C			     call    get_parm
   2558	ED35  BB 000F			     mov     bx,15	     ; получить	значение длины интервала
   2559	ED38  E8 0116			     call    get_parm	     ; для контроллера
   2560	ED3B  BB 0011			     mov     bx,17	     ; получить	полный байт
   2561	ED3E  E9 00B8			     jmp     j16
   2562	ED41			     disk_format     endp
   2563
   2564				     ;	 Записать указанный сектор из памяти (AH=3)
   2565
   2566	ED41			     disk_write	proc near
   2567	ED41  80 0E 003Fr 80		     or	     motor_status,80h	     ; индикация операции записи
   2568	ED46  B0 4A			     mov     al,04ah		     ; уст код операции	записи
   2569	ED48  E8 017E			     call    dma_setup
   2570	ED4B  B4 C5			     mov     ah,0c5h		     ; команда записи на НГМД
   2571	ED4D			     disk_write	     endp
   2572
   2573				     ;______________________
   2574				     ; rw_opn
   2575				     ;	 Программа выполнения операций
   2576				     ;	 считывания, записи, верификации
   2577				     ;----------------------
   2578	ED4D			     rw_opn  proc    near
   2579	ED4D  73 08			     jnc     j11	     ; проверка	ошибки ПДП
   2580	ED4F  C6 06 0041r 09		     mov     diskette_status,dma_boundary   ; установить ошибку
   2581	ED54  B0 00			     mov     al,0	     ;
   2582	ED56  C3			     ret		     ; возврат к основной программе
   2583	ED57			     j11:
   2584	ED57  50			     push    ax		     ; сохранить команду
   2585
   2586				     ;	 Включить мотор	и выбрать устройство
   2587
   2588	ED58  51			     push    cx
   2589	ED59  8A CA			     mov     cl,dl	     ; уст номер устройства, как счетчик сдвига
   2590	ED5B  B0 01			     mov     al,1	     ; маска для определения мотора устройства
   2591	ED5D  D2 E0			     sal     al,cl	     ; сдвиг
   2592	ED5F  FA			     cli		     ; сбросить	бит разрешения прерывания
   2593	ED60  C6 06 0040r FF		     mov     motor_count,0ffh  ; установить счетчик
   2594	ED65  84 06 003Fr		     test    al,motor_status
   2595	ED69  75 3F			     jnz     j14
   2596	ED6B  80 26 003Fr F0		     and     motor_status,0f0h	; выключить все	биты мотора
   2597	ED70  08 06 003Fr		     or	     motor_status,al	; включить мотор
   2598	ED74  FB			     sti		     ; установить бит разрешения прерывания
   2599	ED75  B0 10			     mov     al,10h	     ; бит маски
   2600	ED77  D2 E0			     sal     al,cl	     ; уст бит маски для доступности мотора
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 53
1840v4.asm



   2601	ED79  0A C2			     or	     al,dl	     ; включить	бит выбора устройства
   2602	ED7B  0C 0C			     or	     al,0ch	     ; нет сброса, доступность прерывания ПДП
   2603	ED7D  52			     push    dx
   2604	ED7E  BA 03F2			     mov     dx,03f2h	     ; установить адрес	порта
   2605	ED81  EE			     out     dx,al
   2606	ED82  5A			     pop     dx		     ; восстановить регистры
   2607	ED83  51			     push    cx		     ;задержка для включения мотора устройства
   2608	ED84  B9 0003			     mov     cx,3
   2609	ED87  51		     x2:     push    cx
   2610	ED88  B9 0000			     mov     cx,0
   2611	ED8B  E2 FE		     x1:     loop    x1
   2612	ED8D  59			     pop     cx
   2613	ED8E  E2 F7			     loop    x2
   2614	ED90  59			     pop     cx
   2615
   2616				     ;	 Ожидание включения мотора для операции	записи
   2617
   2618	ED91  F6 06 003Fr 80		     test    motor_status,80h  ; запись	?
   2619	ED96  74 12			     jz	     j14     ; нет - продолжать	без ожидания
   2620	ED98  BB 0014			     mov     bx,20	     ; установить ожидание включения мотора
   2621	ED9B  E8 00B3			     call    get_parm	     ; получить	параметры
   2622	ED9E  0A E4			     or	     ah,ah
   2623	EDA0			     j12:
   2624	EDA0  74 08			     jz	     j14	     ; выход по	окончании времени ожидания
   2625	EDA2  2B C9			     sub     cx,cx	     ; установить счетчик
   2626	EDA4  E2 FE		     j13:    loop    j13	     ; ожидать требуемое время
   2627	EDA6  FE CC			     dec     ah		     ; уменьшеть значение времени
   2628	EDA8  EB F6			     jmp     short j12	     ; повторить цикл
   2629
   2630	EDAA			     j14:
   2631	EDAA  FB			     sti		     ; уст признак разрешения прерывания
   2632	EDAB  59			     pop     cx
   2633
   2634				     ;	 Выполнить операцию поиска
   2635
   2636	EDAC  E8 00B8			     call    seek	     ; установить дорожку
   2637	EDAF  58			     pop     ax		     ; восстановить команду
   2638	EDB0  8A FC			     mov     bh,ah	     ; сохранить команду в BH
   2639	EDB2  B6 00			     mov     dh,0	     ; уст 0 сектор в случае ошибки
   2640	EDB4  72 4A			     jc	     j17	     ; выход, если ошибка
   2641	EDB6  BE EE00r			     mov     si,offset j17
   2642
   2643	EDB9  56			     push    si
   2644
   2645				     ;	 Послать параметры в контроллер
   2646
   2647	EDBA  E8 F972			     call    nec_output	     ; передача	команды
   2648	EDBD  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; уст номер головки
   2649	EDC0  D0 E4			     sal     ah,1	     ; сдвиг на	2
   2650	EDC2  D0 E4			     sal     ah,1
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 54
1840v4.asm



   2651	EDC4  80 E4 04			     and     ah,4	     ; выделить	бит
   2652	EDC7  0A E2			     or	     ah,dl	     ; операция	OR с номером устройства
   2653	EDC9  E8 F963			     call    nec_output
   2654
   2655				     ;	 Проверка операции форматизации
   2656
   2657	EDCC  80 FF 4D			     cmp     bh,04dh	     ; форматизация ?
   2658	EDCF  75 03			     jne     j15    ; нет - продолжать запись/считывание/верификацию
   2659	EDD1  E9 FF55			     jmp     j10
   2660
   2661	EDD4  8A E5		     j15:    mov     ah,ch	     ; номер цилиндра
   2662	EDD6  E8 F956			     call    nec_output
   2663	EDD9  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; номер головки
   2664	EDDC  E8 F950			     call    nec_output
   2665	EDDF  8A E1			     mov     ah,cl	     ; номер сектора
   2666	EDE1  E8 F94B			     call    nec_output
   2667	EDE4  BB 0007			     mov     bx,7
   2668	EDE7  E8 0067			     call    get_parm
   2669	EDEA  BB 0009			     mov     bx,9
   2670	EDED  E8 0061			     call    get_parm
   2671	EDF0  BB 000B			     mov     bx,11
   2672	EDF3  E8 005B			     call    get_parm
   2673	EDF6  BB 000D			     mov     bx,13
   2674	EDF9			     j16:
   2675	EDF9  E8 0055			     call    get_parm
   2676	EDFC  5E			     pop     si
   2677
   2678				     ;	 Операция запущена
   2679
   2680	EDFD  E8 0130			     call    wait_int	     ; ожидание	прерывания
   2681	EE00			     j17:
   2682	EE00  72 45			     jc	     j21	     ; поиск ошибки
   2683	EE02  E8 0166			     call    results	     ; получить	состояние контроллера
   2684	EE05  72 3F			     jc	     j20	     ; поиск ошибки
   2685
   2686				     ;	 Проверка  состояния, полученного из контроллера
   2687
   2688	EE07  FC			     cld		     ; установить направление коррекции
   2689	EE08  BE 0042r			     mov     si,offset nec_status
   2690	EE0B  AC			     lods    nec_status
   2691	EE0C  24 C0			     and     al,0c0h	     ; проверить нормальное окончание
   2692	EE0E  74 3B			     jz	     j22
   2693	EE10  3C 40			     cmp     al,040h	     ; проверить неверное окончание
   2694	EE12  75 29			     jnz     j18
   2695
   2696				     ;	 Обнаруженно неверное окончание
   2697
   2698	EE14  AC			     lods    nec_status
   2699	EE15  D0 E0			     sal     al,1
   2700	EE17  B4 04			     mov     ah,record_not_fnd
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 55
1840v4.asm



   2701	EE19  72 24			     jc	     j19
   2702	EE1B  D0 E0			     sal     al,1
   2703	EE1D  D0 E0			     sal     al,1
   2704	EE1F  B4 10			     mov     ah,bad_crc
   2705	EE21  72 1C			     jc	     j19
   2706	EE23  D0 E0			     sal     al,1
   2707	EE25  B4 08			     mov     ah,bad_dma
   2708	EE27  72 16			     jc	     j19
   2709	EE29  D0 E0			     sal     al,1
   2710	EE2B  D0 E0			     sal     al,1
   2711	EE2D  B4 04			     mov     ah,record_not_fnd
   2712	EE2F  72 0E			     jc	     j19
   2713	EE31  D0 E0			     sal     al,1
   2714	EE33  B4 03			     mov     ah,write_protect  ; проверка защиты записи
   2715	EE35  72 08			     jc	     j19
   2716	EE37  D0 E0			     sal     al,1
   2717	EE39  B4 02			     mov     ah,bad_addr_mark
   2718	EE3B  72 02			     jc	     j19
   2719
   2720				     ;	 Контроллер вышел из строя
   2721
   2722	EE3D			     j18:
   2723	EE3D  B4 20			     mov     ah,bad_nec
   2724	EE3F			     j19:
   2725	EE3F  08 26 0041r		     or	     diskette_status,ah
   2726	EE43  E8 016A			     call    num_trans
   2727	EE46			     j20:
   2728	EE46  C3			     ret	     ; возврат к программе, вызвавшей прерывание
   2729
   2730	EE47			     j21:
   2731	EE47  E8 0121			     call    results	     ; вызов результатов в буфер
   2732	EE4A  C3			     ret
   2733
   2734				     ;	 Операция была успешной
   2735
   2736	EE4B			     j22:
   2737	EE4B  E8 0162			     call    num_trans
   2738	EE4E  32 E4			     xor     ah,ah	     ; нет ошибок
   2739	EE50  C3			     ret
   2740	EE51			     rw_opn  endp
   2741				     ;------------------------
   2742				     ;get_parm
   2743				     ;
   2744				     ;	 ВХОД	BX - индекс байта,деленный
   2745				     ;		     на	2,который будет
   2746				     ;		     выбран,если младший
   2747				     ;		     бит BX установлен,то
   2748				     ;		     байт немедленно пере-
   2749				     ;		     дается контроллеру.
   2750				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 56
1840v4.asm



   2751				     ;	 ВЫХОД	AH - байт из блока.
   2752				     ;-------------------------
   2753	EE51			     get_parm proc   near
   2754	EE51  1E			     push    ds		     ; сохранить сегмент
   2755	EE52  2B C0			     sub     ax,ax	     ; AX=0
   2756	EE54  8E D8			     mov     ds,ax
   2757					     assume  ds:abs0
   2758	EE56  C5 36 0078r		     lds     si,disk_pointer
   2759	EE5A  D1 EB			     shr     bx,1	     ; делить BX на 2, уст флаг	для выхода
   2760	EE5C  8A A0 0000r		     mov     ah,zb[si+bx]    ; получить	слово
   2761	EE60  1F			     pop     ds		     ; восстановить сегмент
   2762					     assume  ds:data
   2763	EE61  72 01			     jc	     nec_op	      ;если флаг установлен, выход
   2764	EE63  C3			     ret	     ; возврат к программе, вызвавшей прерывание
   2765	EE64  E9 F8C8		     nec_op: jmp     nec_output
   2766	EE67			     get_parm endp
   2767				     ;----------------------------
   2768				     ;	 Позиционирование
   2769				     ;
   2770				     ;	 Эта программа позиционирует голов-
   2771				     ; ку обозначенного	устройства на нуж-
   2772				     ; ную дорожку. Если устройство не
   2773				     ; было выбрано до тех пор,	пока не
   2774				     ; была сброшена команда,то	устройство
   2775				     ; будет рекалибровано.
   2776				     ;
   2777				     ;	 ВВОД
   2778				     ;	     (DL) - номер усройства для
   2779				     ;		    позиционирования,
   2780				     ;	     (CH) - номер дорожки.
   2781				     ;
   2782				     ;	 ВЫВОД
   2783				     ;	      CY=0 - успешно,
   2784				     ;	      CY=1 - сбой (состояние НГМД установить
   2785				     ;		     согласно  AX).
   2786				     ;----------------------------
   2787	EE67			     seek    proc    near
   2788	EE67  B0 01			     mov     al,1	     ; уст маску
   2789	EE69  51			     push    cx
   2790	EE6A  8A CA			     mov     cl,dl	     ; установить номер	устройства
   2791	EE6C  D2 C0			     rol     al,cl	     ; циклический сдвиг влево
   2792	EE6E  59			     pop     cx
   2793	EE6F  84 06 003Er		     test    al,seek_status
   2794	EE73  75 20			     jnz     j28
   2795	EE75  08 06 003Er		     or	     seek_status,al
   2796	EE79  B4 07			     mov     ah,07h
   2797	EE7B  E8 F8B1			     call    nec_output
   2798	EE7E  8A E2			     mov     ah,dl
   2799	EE80  E8 F8AC			     call    nec_output
   2800	EE83  E8 0089			     call    chk_stat_2	  ; получить и обработать прерывание
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 57
1840v4.asm



   2801	EE86  B4 07			     mov     ah,07h	     ; команда рекалибровки
   2802	EE88  E8 F8A4			     call    nec_output
   2803	EE8B  8A E2			     mov     ah,dl
   2804	EE8D  E8 F89F			     call    nec_output
   2805	EE90  E8 007C			     call    chk_stat_2
   2806	EE93  72 33			     jc	     j32	     ; сбой позиционирования
   2807
   2808
   2809	EE95			     j28:
   2810	EE95  B4 0F			     mov     ah,0fh
   2811	EE97  E8 F895			     call    nec_output
   2812	EE9A  8A E2			     mov     ah,dl	     ; номер устройства
   2813	EE9C  E8 F890			     call    nec_output
   2814	EE9F  8A E5			     mov     ah,ch	     ; номер дорожки
   2815	EEA1  90				     nop
   2816	EEA2  F6 06 0010r 04		     test    byte ptr equip_flag,4
   2817	EEA7  75 02			     jnz     j300
   2818	EEA9  02 E4			     add     ah,ah	     ; удвоение	номера дорожки
   2819	EEAB			     j300:
   2820	EEAB  E8 F881			     call    nec_output
   2821	EEAE  E8 005E			     call    chk_stat_2	     ; получить	конечное прерывание и
   2822								     ; считать состояние
   2823
   2824
   2825	EEB1  9C			     pushf		     ; сохранить значение флажков
   2826	EEB2  BB 0012			     mov     bx,18
   2827	EEB5  E8 FF99			     call    get_parm
   2828	EEB8  51			     push    cx		     ; сохранить регистр
   2829	EEB9			     j29:
   2830	EEB9  B9 0226			     mov     cx,550	     ; организовать цикл = 1 ms
   2831	EEBC  0A E4			     or	     ah,ah	     ; проверка	окончания времени
   2832	EEBE  74 06			     jz	     j31
   2833	EEC0  E2 FE		     j30:    loop    j30	     ; задержка	1ms
   2834	EEC2  FE CC			     dec     ah		     ; вычитание из счетчика
   2835	EEC4  EB F3			     jmp     short j29	     ; возврат к началу	цикла
   2836	EEC6			     j31:
   2837	EEC6  59			     pop     cx		     ; восстановить состояние
   2838	EEC7  9D			     popf
   2839	EEC8			     j32:			     ; ошибка позиционирования
   2840	EEC8  C3			     ret	     ; возврат к программе, вызвавшей прерывание
   2841	EEC9			     seek    endp
   2842				     ;-----------------------
   2843				     ; dma_setup
   2844				     ;	 Программа установки ПДП для операций записи,считывания,верифи-
   2845				     ; кации.
   2846				     ;
   2847				     ;	 ВВОД
   2848				     ;
   2849				     ;	     (AL) - байт режима	для ПДП,
   2850				     ;	     (ES:BX) - адрес считывания/записи информации.
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 58
1840v4.asm



   2851				     ;
   2852				     ;------------------------
   2853	EEC9			     dma_setup proc  near
   2854	EEC9  51			     push    cx		     ; сохранить регистр
   2855	EECA  E6 0C			     out     dma+12,al
   2856	EECC  E6 0B			     out     dma+11,al	     ; вывод байта состояния
   2857	EECE  8C C0			     mov     ax,es	     ; получить	значение ES
   2858	EED0  B1 04			     mov     cl,4	     ; счетчик для сдвига
   2859	EED2  D3 C0			     rol ax,cl		     ; циклический сдвиг влево
   2860	EED4  8A E8			     mov     ch,al	     ;
   2861	EED6  24 F0			     and     al,0f0h	     ;
   2862	EED8  03 C3			     add     ax,bx
   2863	EEDA  73 02			     jnc     j33
   2864	EEDC  FE C5			     inc     ch		     ; перенос означает, что старшие 4 бита
   2865								     ; должны быть прибавлены
   2866	EEDE			     j33:
   2867	EEDE  50			     push    ax		     ; сохранить начальный адрес
   2868	EEDF  E6 04			     out     dma+4,al	     ; вывод младшей половины адреса
   2869	EEE1  8A C4			     mov     al,ah
   2870	EEE3  E6 04			     out     dma+4,al	     ; вывод старшей половины адреса
   2871	EEE5  8A C5			     mov     al,ch	     ; получить	4 старших бита
   2872	EEE7  24 0F			     and     al,0fh
   2873	EEE9  E6 81			     out     081h,al   ; вывод 4 старших бит на	регистр	страниц
   2874
   2875				     ;	 Определение счетчика
   2876
   2877	EEEB  8A E6			     mov     ah,dh	     ; номер сектора
   2878	EEED  2A C0			     sub     al,al	     ;
   2879	EEEF  D1 E8			     shr     ax,1	     ;
   2880	EEF1  50			     push    ax
   2881	EEF2  BB 0006			     mov     bx,6	     ; получить	параметры байт/сектор
   2882	EEF5  E8 FF59			     call    get_parm
   2883	EEF8  8A CC			     mov     cl,ah	     ; счетчик сдига (0=128, 1=256 и т.д)
   2884	EEFA  58			     pop     ax
   2885	EEFB  D3 E0			     shl     ax,cl	     ; сдвиг
   2886	EEFD  48			     dec     ax		     ; -1
   2887	EEFE  50			     push    ax		     ; сохранить значение счетчика
   2888	EEFF  E6 05			     out     dma+5,al	     ; вывести младший байт счетчика
   2889	EF01  8A C4			     mov     al,ah
   2890	EF03  E6 05			     out     dma+5,al	     ; вывести старший байт счетчика
   2891	EF05  59			     pop     cx		     ; восстановить значение счетчика
   2892	EF06  58			     pop     ax		     ; восстановить значение адреса
   2893	EF07  03 C1			     add     ax,cx	     ; проверка	заполнения 64K
   2894	EF09  59			     pop     cx		     ; восстановить регистр
   2895	EF0A  B0 02			     mov     al,2	     ; режим для 8237
   2896	EF0C  E6 0A			     out     dma+10,al	     ; инициализация канала НГМД
   2897	EF0E  C3			     ret	     ; возврат к программе, вызвавшей прерывание
   2898	EF0F			     dma_setup	     endp
   2899				     ;-----------------------
   2900				     ;chk_stat_2
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 59
1840v4.asm



   2901				     ;	 Эта программа обрабатывает прерывания ,полученные после
   2902				     ; рекалибровки, позиционирования или сброса адаптера. Прерывание
   2903				     ; ожидается, принимается, обрабатывается и	результат выдается программе,
   2904				     ; вызвавшей прерывание.
   2905				     ;
   2906				     ;	 ВЫВОД
   2907				     ;	       CY=0 - успешно,
   2908				     ;	       CY=1 - сбой (ошибка в состоянии НГМД),
   2909				     ;--------------------------
   2910	EF0F			     chk_stat_2	proc near
   2911	EF0F  E8 001E			     call    wait_int	     ; ожидание	прерывания
   2912	EF12  72 14			     jc	     j34	     ; если ошибка, то возврат
   2913	EF14  B4 08			     mov     ah,08h	     ; команда получения состояния
   2914	EF16  E8 F816			     call    nec_output
   2915	EF19  E8 004F			     call    results	     ; считать результаты
   2916	EF1C  72 0A			     jc	     j34
   2917	EF1E  A0 0042r			     mov     al,nec_status   ; получить	первый байт состояния
   2918	EF21  24 60			     and     al,060h	     ; выделить	биты
   2919	EF23  3C 60			     cmp     al,060h	     ; проверка
   2920	EF25  74 02			     jz	     j35	; если ошибка, то идти на метку
   2921	EF27  F8			     clc		     ; возврат
   2922	EF28			     j34:
   2923	EF28  C3			     ret	     ; возврат к программе, вызвавшей прерывание
   2924	EF29			     j35:
   2925	EF29  80 0E 0041r 40		     or	     diskette_status,bad_seek
   2926	EF2E  F9			     stc		     ; ошибка в	возвращенном коде
   2927	EF2F  C3			     ret
   2928	EF30			     chk_stat_2	     endp
   2929				     ;---------------------------------
   2930				     ; wait_int
   2931				     ;	 Эта программа ожидает прерывание, которое возникает во	время
   2932				     ; программы вывода. Если устройство не готово, ошибка может быть
   2933				     ; возвращена.
   2934				     ;
   2935				     ;
   2936				     ;	 ВЫВОД
   2937				     ;		   CY=0	- успешно,
   2938				     ;		   CY=1	- сбой(состояние НГМД устанавливается),
   2939				     ;-----------------------------------
   2940	EF30			     wait_int proc   near
   2941	EF30  FB			     sti		     ; установить признак разрешения прерывания
   2942	EF31  53			     push    bx
   2943	EF32  51			     push    cx		     ; сохранить регистр
   2944	EF33  B3 02			     mov     bl,2	     ; количество циклов
   2945	EF35  33 C9			     xor     cx,cx	     ; длителность одного цикла	ожидания
   2946	EF37			     j36:
   2947	EF37  F6 06 003Er 80		     test    seek_status,int_flag  ; опрос наличия прерывания
   2948	EF3C  75 0C			     jnz     j37
   2949	EF3E  E2 F7			     loop    j36	     ; возврат к началу	цикла
   2950	EF40  FE CB			     dec     bl
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 60
1840v4.asm



   2951	EF42  75 F3			     jnz     j36
   2952	EF44  80 0E 0041r 80		     or	     diskette_status,time_out
   2953	EF49  F9			     stc		     ; возврат при ошибке
   2954	EF4A			     j37:
   2955	EF4A  9C			     pushf		     ; сохранить текущие признаки
   2956	EF4B  80 26 003Er 7F		     and     seek_status,not int_flag
   2957	EF50  9D			     popf		     ; восстановить признаки
   2958	EF51  59			     pop     cx
   2959	EF52  5B			     pop     bx		     ; восстановить регистр
   2960	EF53  C3			     ret	     ; возврат к программе, вызвавшей прерывание
   2961	EF54			     wait_int	     endp
   2962
   2963	EF54  03*(00)				     db	3 dup(0)
   2964
   2965				     ;---------------------------
   2966				     ;disk_int
   2967				     ;	 Эта программа обрабатывает прерывания НГМД
   2968				     ;
   2969				     ;	 ВЫВОД	- признак прерывания устанавливается в SEEK_STATUS.
   2970				     ;---------------------------
   2971	EF57			     disk_int proc   far
   2972	EF57  FB			     sti		     ; установить признак разрешения прерывания
   2973	EF58  1E			     push    ds
   2974	EF59  50			     push    ax
   2975	EF5A  B8 0040			     mov     ax,dat
   2976	EF5D  8E D8			     mov     ds,ax
   2977	EF5F  80 0E 003Er 80		     or	     seek_status,int_flag
   2978	EF64  B0 20			     mov     al,20h	     ; установить конец	прерывания
   2979	EF66  E6 20			     out     20h,al	     ; послать конец прерывания	в порт
   2980	EF68  58			     pop     ax
   2981	EF69  1F			     pop     ds
   2982	EF6A  CF			     iret		     ; возврат из прерывания
   2983	EF6B			     disk_int	     endp
   2984				     ;----------------------------
   2985				     ;
   2986				     ;	 Эта программа считывет	все, что контроллер адаптера НГМД указывает
   2987				     ; программе, следующей за прерыванием.
   2988				     ;
   2989				     ;
   2990				     ;	 ВЫВОД
   2991				     ;		CF=0 - успешно,
   2992				     ;		CF=1 - сбой
   2993				     ;----------------------------
   2994	EF6B			     results proc    near
   2995	EF6B  FC			     cld
   2996	EF6C  BF 0042r			     mov     di,offset nec_status
   2997	EF6F  51			     push    cx		     ; сохранить счетчик
   2998	EF70  52			     push    dx
   2999	EF71  53			     push    bx
   3000	EF72  B3 07			     mov     bl,7	     ; установить длину	области	состояния
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 61
1840v4.asm



   3001
   3002
   3003	EF74			     j38:
   3004	EF74  33 C9			     xor     cx,cx	     ; длительность одного цикла
   3005	EF76  BA 03F4			     mov     dx,03f4h	     ; адрес порта
   3006	EF79			     j39:
   3007	EF79  EC			     in	     al,dx	     ; получить	состояние
   3008	EF7A  A8 80			     test    al,080h	     ; готово ?
   3009	EF7C  75 0C			     jnz     j40a
   3010	EF7E  E2 F9			     loop    j39
   3011	EF80  80 0E 0041r 80		     or	     diskette_status,time_out
   3012	EF85			     j40:			     ; ошибка
   3013	EF85  F9			     stc		     ; возврат по ошибке
   3014	EF86  5B			     pop     bx
   3015	EF87  5A			     pop     dx
   3016	EF88  59			     pop     cx
   3017	EF89  C3			     ret
   3018
   3019				     ;	 Проверка признака направления
   3020
   3021	EF8A  EC		     j40a:   in	     al,dx	     ; получить	регистр	состояния
   3022	EF8B  A8 40			     test    al,040h	     ; сбой позиционирования
   3023	EF8D  75 07			     jnz     j42     ; если все	нормально, считать состояние
   3024	EF8F			     j41:
   3025	EF8F  80 0E 0041r 20		     or	     diskette_status,bad_nec
   3026	EF94  EB EF			     jmp     short j40	     ; ошибка
   3027
   3028				     ;	 Считывание состояния
   3029
   3030	EF96			     j42:
   3031	EF96  42			     inc     dx		     ; указать порт
   3032	EF97  EC			     in	     al,dx	     ; ввести данные
   3033	EF98  88 05			     mov    byte ptr [di],al  ;	сохранить байт
   3034	EF9A  47			     inc     di		     ; увеличить адрес
   3035	EF9B  B9 000A			     mov     cx,000ah	     ; счетчик
   3036	EF9E  E2 FE		     j43:    loop    j43
   3037	EFA0  4A			     dec     dx
   3038	EFA1  EC			     in	     al,dx	     ; получить	состояние
   3039	EFA2  A8 10			     test    al,010h
   3040	EFA4  74 06			     jz	     j44
   3041	EFA6  FE CB			     dec     bl		     ; -1 из количества	циклов
   3042	EFA8  75 CA			     jnz     j38
   3043	EFAA  EB E3			     jmp     short j41	     ; сигнал неверен
   3044
   3045	EFAC			     j44:
   3046	EFAC  5B			     pop     bx		     ; восстановить регистры
   3047	EFAD  5A			     pop     dx
   3048	EFAE  59			     pop     cx
   3049	EFAF  C3			     ret		     ; возврат из прерывания
   3050	EFB0			     results endp
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 62
1840v4.asm



   3051				     ;-----------------------------
   3052				     ; num_trans
   3053				     ;	 Эта программа вычисляет количество секторов, которое действительно
   3054				     ; было записано или считано с НГМД
   3055				     ;
   3056				     ;	 ВВОД
   3057				     ;	      (CH) - цилиндр,
   3058				     ;	      (CL) - сектор.
   3059				     ;
   3060				     ;	 ВЫВОД
   3061				     ;	      (AL) - количество	действительно переданных секторов.
   3062				     ;
   3063				     ;------------------------------
   3064	EFB0			     num_trans proc  near
   3065	EFB0  A0 0045r			     mov     al,nec_status+3  ;	получить последний цилиндр
   3066	EFB3  3A C5			     cmp     al,ch	     ; сравнить	со стартовым
   3067	EFB5  A0 0047r			     mov     al,nec_status+5  ;	получить последний сектор
   3068	EFB8  74 0A			     jz	     j45
   3069	EFBA  BB 0008			     mov     bx,8
   3070	EFBD  E8 FE91			     call    get_parm	     ; получить	значение EOT
   3071	EFC0  8A C4			     mov     al,ah	     ; AH в AL
   3072	EFC2  FE C0			     inc     al		     ; EOT+1
   3073	EFC4  2A C1		     j45:    sub     al,cl	 ; вычисление стартового номера	из конечного
   3074	EFC6  C3			     ret
   3075	EFC7			     num_trans endp
   3076
   3077				     ;-------------------------------
   3078				     ; disk_base
   3079				     ;	 Эта программа устанавливает параметры,требуемые для операций
   3080				     ; НГМД.
   3081				     ;--------------------------------
   3082
   3083	EFC7			     disk_base label byte
   3084	EFC7  CF			     db	     11001111b	     ;
   3085	EFC8  02			     db	     2		     ;
   3086	EFC9  25			     db	     motor_wait	     ;
   3087	EFCA  02			     db	     2		     ;
   3088	EFCB  08			     db	     8		     ;
   3089	EFCC  2A			     db	     02ah	     ;
   3090	EFCD  FF			     db	     0ffh	     ;
   3091	EFCE  50			     db	     050h	     ;
   3092	EFCF  F6			     db	     0f6h	     ;
   3093	EFD0  19			     db	     25		     ;
   3094	EFD1  04			     db	     4		     ;
   3095				     ;--- int 17-------------------
   3096				     ;	 Программа связи с печатающим устройством
   3097				     ;
   3098				     ;	 Эта программа выполняет три функции, код которых задается
   3099				     ; в регистре AH:
   3100				     ;	 AH=0 -	печать знака, заданного	в регистре AL. Если в
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 63
1840v4.asm



   3101				     ; результате выполнения функции знак не напечатается, то в	регистре
   3102				     ; AL устанавливается "1" (тайм-аут);
   3103				     ;	 AH=1 -	инициализация порта печати. После выполнения функции
   3104				     ; в регистре AH находится байт состояния печатающего устройства;
   3105				     ;	 AH=2H - считывание байта состояния печатающего	устройства.
   3106				     ;	 В регистре DX необходимо задать ноль.
   3107				     ;	 Значение разрядов байта состояния печатающего устройства:
   3108				     ;	 0 - тайм-аут;
   3109				     ;	 3 - ошибка ввода-вывода;
   3110				     ;	 4 - выбран (SLCT);
   3111				     ;	 5 - конец бумаги (PE);
   3112				     ;	 6 - подтверждение;
   3113				     ;	 7 - занято.
   3114				     ;------------------------------
   3115
   3116					     assume  cs:code,ds:data
   3117	EFD2			     printer_io	proc far
   3118	EFD2  FB			     sti		     ; установить признак разрешения прерывания
   3119	EFD3  1E			     push    ds		     ; сохранить сегмент
   3120	EFD4  52			     push    dx
   3121	EFD5  56			     push    si
   3122	EFD6  51			     push    cx
   3123	EFD7  53			     push    bx
   3124	EFD8  BE 0040			     mov     si,dat
   3125	EFDB  8E DE			     mov     ds,si	     ; установить сегмент
   3126	EFDD  8B F2			     mov     si,dx
   3127	EFDF  D1 E6			     shl     si,1
   3128	EFE1  8B 94 0008r		     mov     dx,printer_base[si]  ; получить базовый адрес
   3129									  ; печатающего	устройства
   3130	EFE5  0B D2			     or	     dx,dx		; печать подключена ?
   3131	EFE7  74 0C			     jz	     b1			; нет, возврат
   3132	EFE9  0A E4			     or	     ah,ah		; AH=0 ?
   3133	EFEB  74 0E			     jz	     b2			; да, переход к	печати знака
   3134	EFED  FE CC			     dec     ah			; AH=1 ?
   3135	EFEF  74 42			     jz	     b8			; да, переход к	инициализации
   3136	EFF1  FE CC			     dec     ah			; AH=2 ?
   3137	EFF3  74 2A			     jz	     b5		; да, переход к	считыванию байта состояния
   3138
   3139				     ;	  Выход	из программы
   3140
   3141	EFF5			     b1:
   3142	EFF5  5B			     pop     bx		     ; восстановить регистры
   3143	EFF6  59			     pop     cx
   3144	EFF7  5E			     pop     si
   3145	EFF8  5A			     pop     dx
   3146	EFF9  1F			     pop     ds
   3147	EFFA  CF			     iret
   3148
   3149				     ;	 Печать	знака, заданного в AL
   3150
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 64
1840v4.asm



   3151	EFFB			     b2:
   3152	EFFB  50			     push    ax
   3153	EFFC  B3 0A			     mov     bl,10	     ; количество циклов ожидания
   3154	EFFE  33 C9			     xor     cx,cx	     ; длительность одного цикла
   3155	F000  EE			     out     dx,al	     ; вывести символ в	порт
   3156	F001  42			     inc     dx		     ; -1 из адреса порта
   3157	F002			     b3:			     ; ожидание	BUSY
   3158	F002  EC			     in	     al,dx	     ; получить	состояние
   3159	F003  8A E0			     mov     ah,al	     ; переслать состояние в AH
   3160	F005  A8 80			     test    al,80h	     ; печать занята ?
   3161	F007  75 0E			     jnz     b4		     ; переход,	если да
   3162	F009  E2 F7			     loop    b3		     ; цикл ожидания закончился	?
   3163	F00B  FE CB			     dec     bl		     ; да, -1 из количества циклов
   3164	F00D  75 F3			     jnz     b3		     ; время ожидания истекло ?
   3165	F00F  80 CC 01			     or	     ah,1	     ; да, уст бит "тайм-аут"
   3166	F012  80 E4 F9			     and     ah,0f9h	     ;
   3167	F015  EB 14			     jmp     short b7
   3168	F017			     b4:			     ; OUT_STROBE
   3169	F017  B0 0D			     mov     al,0dh	     ; установить высокий строб
   3170	F019  42			     inc     dx	     ; стробирование битом 0 порта C для 8255
   3171	F01A  EE			     out     dx,al
   3172	F01B  B0 0C			     mov     al,0ch	     ; установить низкий строб
   3173	F01D  EE			     out     dx,al
   3174	F01E  58			     pop     ax		     ;
   3175
   3176				     ;	 Считывание байта состояния печатающего	устройства
   3177
   3178	F01F			     b5:
   3179	F01F  50			     push    ax		     ; сохранить регистр
   3180	F020			     b6:
   3181	F020  8B 94 0008r		     mov     dx,printer_base[si]  ; получить адрес печати
   3182	F024  42			     inc     dx
   3183	F025  EC			     in	     al,dx	     ; получить	состояние печати
   3184	F026  8A E0			     mov     ah,al
   3185	F028  80 E4 F8			     and     ah,0f8h
   3186	F02B			     b7:
   3187	F02B  5A			     pop     dx
   3188	F02C  8A C2			     mov     al,dl
   3189	F02E  80 F4 48			     xor     ah,48h
   3190	F031  EB C2			     jmp     short b1	     ; к выходу	из программы
   3191
   3192				     ;	 Инициализация порта печатающего устройства
   3193
   3194	F033			     b8:
   3195	F033  50			     push    ax
   3196	F034  83 C2 02			     add     dx,2	     ; указать порт
   3197	F037  B0 08			     mov     al,8
   3198	F039  EE			     out     dx,al
   3199	F03A  B8 03E8			     mov     ax,1000	      ;	время задержки
   3200	F03D			     b9:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 65
1840v4.asm



   3201	F03D  48			     dec     ax		      ;	цикл задержки
   3202	F03E  75 FD			     jnz     b9
   3203	F040  B0 0C			     mov     al,0ch
   3204	F042  EE			     out     dx,al
   3205	F043  EB DB			     jmp     short b6	 ; переход к считыванию	байта состояния
   3206	F045			     printer_io	     endp
   3207				     ;--- int 10------------------
   3208				     ;
   3209				     ;	 Программа обработки прерывания	ЭЛИ
   3210				     ;
   3211				     ;	 Эта программа обеспечивает выполнение функций обслуживания
   3212				     ; адаптера	ЭЛИ, код которых задается в регистре AH:
   3213				     ;
   3214				     ;	  AH=0	 - установить режим работы адаптера ЭЛИ. В результате
   3215				     ; выполнения функции в регистре AL	могут устанавливаться следу-
   3216				     ; ющие режимы:
   3217				     ;	  0 - 40х25, черно-белый, алфавитно-цифровой;
   3218				     ;	  1 - 40х25, цветной, алфавитно-цифровой;
   3219				     ;	  2 - 80х25, черно-белый, алфавитно-цифровой;
   3220				     ;	  3 - 80х25, цветной, алфавитно-цифровой;
   3221				     ;	  4 - 320х200, цветной,	графический;
   3222				     ;	  5 - 320х200, черно-белый, графический;
   3223				     ;	  6 - 640х200, черно-белый, графический;
   3224				     ;	  7 - 80х25, черно-белый, алфавитно-цифровой.
   3225				     ;	  Режимы 0 - 6 используются для	ЭМ адаптера ЭЛИ, режим 7
   3226				     ; используется для	монохромного черно-белого 80х25	адаптера.
   3227				     ;
   3228				     ;	  AH=1	 - установить размер курсора. Функция задает размер кур-
   3229				     ; сора и управление им.
   3230				     ;	 Разряды 0 - 4 регистра	CL определяют конечную границу курсора,
   3231				     ; разряды 0 - 4 регистра CH - начальную границу курсора.
   3232				     ;	  Разряды 6 и 5	задают управление курсором:
   3233				     ;	  00 - курсор мерцает с	частотой, задаваемой аппаратурно;
   3234				     ;	  01 - курсор отсутствует.
   3235				     ;	  Аппаратурно всегда вызывается	мерцание курсора с частотой,
   3236				     ; равной 1/16 частоты кадровой развертки.
   3237				     ;
   3238				     ;	  AH=2	 - установить текущую позицию курсора. Для выполнения
   3239				     ; функции необходимо задать следующие координаты курсора:
   3240				     ;	  BH - страница;
   3241				     ;	  DX - строка и	колонка.
   3242				     ; При графическом режиме регистр BH=0.
   3243				     ;
   3244				     ;	  AH=3	 - считать текущее положение курсора. Функция вос-
   3245				     ; станавливает текущее положение курсора. Перед выполнением
   3246				     ; функции в регистре BH необходимо	задать страницу.
   3247				     ;	  После	выполнения программы регистры содержат следующую
   3248				     ; информацию:
   3249				     ;	  DH - строка;
   3250				     ;	  DL - колонка;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 66
1840v4.asm



   3251				     ;	  CX - размер курсора и	управление им.
   3252				     ;
   3253				     ;	  AH=5	- установить активную страницу буфера адаптера.
   3254				     ; Функция используется только в алфавитно-цифровом	режиме.
   3255				     ; Для ее выполнения необходимо в регистре AL задать страницу:
   3256				     ;	  0-7 -	для режимов 0 и	1;
   3257				     ;	  0-3 -	для режимов 2 и	3.
   3258				     ;	  Значения режимов те же, что и	для функции AH=0.
   3259				     ;
   3260				     ;	  AH=6	 - переместить блок символов вверх по экрану.
   3261				     ; Функция перемещает символы в пределах заданной области вверх
   3262				     ; по экрану, заполняя нижние строки пробелами с заданным атрибу-
   3263				     ; том.
   3264				     ;	  Для выполнения функции необходимо задать следующие пара-
   3265				     ; метры;
   3266				     ;	  AL - количество перемещаемых строк. Для очистки блока	AL=0;
   3267				     ;	  CX - координаты левого верхнего угла блока (строка,колонка);
   3268				     ;	  DX - координаты правого нижнего угла блока;
   3269				     ;	  BH - атрибут символа пробела.
   3270				     ;
   3271				     ;	  AH=7	 - переместить блок символов вниз. Функция перемещает
   3272				     ; символы в пределах заданной области вниз	по экрану, заполняя
   3273				     ; верхние строки пробелами	с заданным атрибутом.
   3274				     ;	  Для выполнения функции необходимо задать те же параметры,
   3275				     ; что и для функции AH=6H.
   3276				     ;
   3277				     ;	  AH=8	 - считать атрибут и код символа, находящегося в теку-
   3278				     ; щей позиции курсора. Функция считывает атрибут и	код символа
   3279				     ; и помещает их в регистр AX (AL -	код символа, AH	- атрибут
   3280				     ; символа).
   3281				     ;	  Для выполнения функции необходимо в регистре BH задать
   3282				     ; страницу	(только	для алфавитно-цифрового	режима).
   3283				     ;
   3284				     ;	  AH=9	 - записать атрибут и код символа в текущую позицию
   3285				     ; курсора.	Функция	помещает код символа и его атрибут в текущую
   3286				     ; позицию курсора.
   3287				     ;	  Для выполнения функции необходимо задать следующие параметры:
   3288				     ;	  BH - отображаемая страница (только для алфавитно-цифрового
   3289				     ; режима;
   3290				     ;	  CX - количество записываемых символов;
   3291				     ;	  AL - код символа;
   3292				     ;	  BL - атрибут символа для алфавитно-цифрового режима или
   3293				     ; цвет знака для графики. При записи точки	разряд 7 регистра BL=1.	   =1
   3294				     ;
   3295				     ;	  AH=10	- записать символ в текущую позицию курсора. Атрибут
   3296				     ; не изменяется.
   3297				     ;	  Для выполнения функции необходимо задать следующие параметры:
   3298				     ;	  BH - отображаемая страница (только для алфавитно-цифрового
   3299				     ; режима);
   3300				     ;	  CX - количество повторений символа;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 67
1840v4.asm



   3301				     ;	  AL - код записываемого символа.				   ся
   3302				     ;									   -
   3303				     ;	  AH=11	- установить цветовую палитру.				   ь
   3304				     ;	  При выполнении функции используются два варианта.
   3305				     ;	  Для первого варианта в регистре BH задается ноль,а в регистре
   3306				     ; BL - значения пяти младших разрядов, используемых для выбора
   3307				     ; цветовой	палитры	(цвет заднего плана для	цветного графического
   3308				     ; режима 320х200 или цвет каймы для цветного графического режима
   3309				     ; 40х25).
   3310				     ;	  Для второго варианта в регистре BH задается "1", а в регистре
   3311				     ; BL - номер цветовой палитры (0 или 1).
   3312				     ;	  Палитра 0 состоит из зеленого	(1), красного (2) и желтого (3)
   3313				     ; цветов, палитра 1 - из голубого (1), фиолетового	(2) и белого (3).
   3314				     ; При работе с видеомонитором цвета палитры заменяются соответству-
   3315				     ; ющими градациями	цвета.
   3316				     ;	  Результатом выполнения функции является установка цветовой	   )
   3317				     ; палитры в регистре выбора цвета (3D9).
   3318				     ;
   3319				     ;	  AH=12	 - записать точку. Функция определяет относительный
   3320				     ; адрес байта внутри буфера ЭЛИ, по которому должна быть записана
   3321				     ; точка с заданными координатами.
   3322				     ;	  Для выполнения функции необходимо задать следующие параметры:	   ,
   3323				     ;	  DX - строка;
   3324				     ;	  CX - колонка;
   3325				     ;	  AL - цвет выводимой точки. Если разряд 7 регистра AL уста-	   3)
   3326				     ; новлен в	"1", то	выполняется операция XOR над значением точки
   3327				     ; из буфера и значением точки из регистра AL.
   3328				     ;
   3329				     ;	  AH=13	- считать точку. Функция определяет относительный
   3330				     ; адрес байта внутри буфера ЭЛИ, по которому должна быть считана
   3331				     ; точка с заданными координатами.
   3332				     ;	  Перед	выполнением программы в	регистрах задаются те же парамет-
   3333				     ; ры, что и для функции AH=12.
   3334				     ;	 После выполнения программы в регистре AL находится значение
   3335				     ; считанной точки.
   3336				     ;
   3337				     ;	  AH=14	- записать телетайп. Функция выводит символ в буфер
   3338				     ; ЭЛИ с одновременной установкой позиции курсора и	передвижением
   3339				     ; курсора на экране.
   3340				     ;	  После	записи символа в последнюю позицию строки выполняется
   3341				     ; автоматический переход на новую строку. Если страница экрана
   3342				     ; заполнена, выполняется перемещение на одну строку вверх.	Осво-
   3343				     ; бодившаяся строка заполняется значением атрибута	символа	для
   3344				     ; алфавитно-цифрового режима или нулями - для графики.
   3345				     ;	  После	записи очередного символа курсор устанавливается
   3346				     ; в следующую позицию.
   3347				     ;	  Для выполнения программы необходимо задать следующие параметры:
   3348				     ;	  AL - код выводимого символа;
   3349				     ;	  BL - цвет переднего плана (для графического режима).
   3350				     ;	  Программа обрабатывает следующие служебные символы:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 68
1840v4.asm



   3351				     ;	  0BH -	сдвиг курсора на одну позицию (без очистки);
   3352				     ;	  0DH -	перемещение курсора в начало строки;
   3353				     ;	  0AH -	перемещение курсора на следующую строку;
   3354				     ;	  07H -	звуковой сигнал.
   3355				     ;
   3356				     ;	  AH=15	- получить текущее состояние ЭЛИ. Функция считывает
   3357				     ; текущее состояние ЭЛИ из	памяти и размещает его в следующих
   3358				     ; регистрах;
   3359				     ;	  AH - количество колонок (40 или 80);
   3360				     ;	  AL - текущий режим (0-7). Значения режимов те	же, что	и для
   3361				     ; функции AH=0;
   3362				     ;	  BH - номер активной страницы.
   3363				     ;
   3364				     ;	 AH=17 - загрузить знакогенератор пользователя.	Функция	дает
   3365				     ; возможность пользователю	загружать знакогенератор любым,	необ-
   3366				     ; ходимым ему алфавитом.
   3367				     ;	  Для выполнения программы необходимо задать следующие параметры:
   3368				     ;	  ES:BP	- адрес	таблицы, сформированной	пользователем;
   3369				     ;	  CX	- количество передаваемых символов;
   3370				     ;	  BL	- код символа, начиная с которого загружается таблица
   3371				     ; пользователя;
   3372				     ;	  BH - количество байт на знакоместо;
   3373				     ;	  DL - идентификатор таблицы пользователя;
   3374				     ;	  AL - режим:
   3375				     ;		       AL=0   -	 загрузить знакогенератор
   3376				     ;		       AL=1   -	 выдать	идентификатор таблицы
   3377				     ;		       AL=3   -	 загрузить вторую половину знакогенератора:
   3378				     ;				 BL=0 -	загрузить вторую половину знакогене
   3379				     ;				 ратора	из ПЗУ кодовой таблицы с русским
   3380				     ;				 алфавитом,
   3381				     ;				 BL=1 -	загрузить вторую половину знакогене
   3382				     ;				 ратора	из ПЗУ стандартной кодовой таблицей
   3383				     ;				 ASCII (USA)
   3384				     ;	 На выходе:
   3385				     ;	     AH	  -  количество	байт на	знакоместо
   3386				     ;	     AL	  -  идентификатор таблицы пользователя
   3387				     ;	     CF=1   -	операция завершена успешно
   3388				     ;
   3389				     ;	  AH=19	- переслать цепочку символов. Функция позволяет	пере-
   3390				     ; сылать символы четырьмя способами, тип которых задается в
   3391				     ; регистре	AL:
   3392				     ;	  AL=0 - символ, символ, символ, ...
   3393				     ; В регистре BL задается атрибут, курсор не движется;
   3394				     ;	  AL=1 - символ, символ, символ, ...
   3395				     ; В регистре BL задается атрибут, курсор движется;
   3396				     ;	  AL=2H	- символ, атрибут, символ, атрибут, ...
   3397				     ; Курсор не движется;
   3398				     ;	  AL=3H	- символ, атрибут, символ, атрибут, ...
   3399				     ; Курсор движется.
   3400				     ;	   Кроме того необходимо задать	в регистрах:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 69
1840v4.asm



   3401				     ;	  ES:BP	- начальный адрес цепочки символов;
   3402				     ;	  CX	- количество символов;
   3403				     ;	  DH,DL	- строку и колонку для начала записи;
   3404				     ;	  BH	- номер	страницы.
   3405				     ;-----------------------------------------------------------
   3406
   3407					     assume cs:code,ds:data,es:video_ram
   3408
   3409	F045			     m1	     label   word	     ; таблица функций адаптера	ЭЛИ
   3410	F045  F0FCr			     dw	     offset  set_mode
   3411	F047  F1CFr			     dw	     offset  set_ctype
   3412	F049  F1F0r			     dw	     offset  set_cpos
   3413	F04B  F21Ar			     dw	     offset  read_cursor
   3414	F04D  F7A9r			     dw	     offset  read_lpen
   3415	F04F  F230r			     dw	     offset  act_disp_page
   3416	F051  F29Cr			     dw	     offset  scroll_up
   3417	F053  F341r			     dw	     offset  scroll_down
   3418	F055  F37Dr			     dw	     offset  read_ac_current
   3419	F057  F3C3r			     dw	     offset  write_ac_current
   3420	F059  F3F6r			     dw	     offset  write_c_current
   3421	F05B  F254r			     dw	     offset  set_color
   3422	F05D  F438r			     dw	     offset  write_dot
   3423	F05F  F427r			     dw	     offset  read_dot
   3424	F061  F966r			     dw	     offset  write_tty2
   3425	F063  F27Ar			     dw	     offset  video_state
   3426	      =0020		     m1l     equ     20h
   3427
   3428	F065			     video_io proc   near
   3429	F065  FB			     sti		 ; установить признак разрешения прерывания
   3430	F066  FC			     cld
   3431	F067  06			     push    es
   3432	F068  1E			     push    ds
   3433	F069  52			     push    dx
   3434	F06A  51			     push    cx
   3435	F06B  53			     push    bx
   3436	F06C  56			     push    si
   3437	F06D  57			     push    di
   3438	F06E  50			     push    ax		     ; сохранить значение AX
   3439	F06F  8A C4			     mov     al,ah	     ; переслать AH в AL
   3440	F071  32 E4			     xor     ah,ah	     ; обнулить	старший	байт
   3441	F073  D1 E0			     sal     ax,1	     ; умножить	на 2
   3442	F075  8B F0			     mov     si,ax	     ; поместить в SI
   3443	F077  3D 0020			     cmp     ax,m1l	     ; проверка	длины таблицы функций
   3444	F07A  72 04			     jb	     m2		     ; адаптера	ЭЛИ
   3445	F07C  58			     pop     ax		     ; восстановить AX
   3446	F07D  E9 0147			     jmp     video_return    ; выход, если AX неверно
   3447	F080  B8 0040		     m2:     mov     ax,dat
   3448	F083  8E D8			     mov     ds,ax
   3449	F085  B8 B800			     mov     ax,0b800h	     ; сегмент для цветного адаптера
   3450	F088  8B 3E 0010r		     mov     di,equip_flag   ; получить	тип адаптера
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 70
1840v4.asm



   3451	F08C  81 E7 0030		     and     di,30h	     ; выделить	биты режима ; db 81h,0E7h,30h,00h    ; +
   3452				     ###Gleb###
   3453	F090  83 FF 30			     cmp     di,30h	     ; есть установка ч/б адаптера ?
   3454	F093  75 03			     jne     m3
   3455	F095  B8 B000			     mov     ax,0b000h	     ; уст адреса буфера для ч/б адаптера
   3456	F098  8E C0		     m3:     mov     es,ax
   3457	F09A  58			     pop     ax		     ; восстановить значение
   3458	F09B  8A 26 0049r		     mov     ah,crt_mode     ; получить	текущий	режим в	AH
   3459	F09F  2E: FF A4	F045r		     jmp   cs:m1[si]
   3460	F0A4			     video_io	     endp
   3461				     ;-------------------------
   3462				     ; set mode
   3463
   3464				     ;	 Эта программа устанавливает режим работы адаптера ЭЛИ
   3465				     ;
   3466				     ;	 ВХОД
   3467				     ;		(AL) - содержит	значение режима.
   3468				     ;
   3469				     ;--------------------------
   3470
   3471				     ;	 Таблицы параметров ЭЛИ
   3472
   3473	F0A4			     video_parms label	     byte
   3474
   3475				     ;	 Таблица инициализации
   3476
   3477	F0A4  38 28 2D 0A 1F 06	19	     db	     38h,28h,2dh,0ah,1fh,6,19h	 ; уст для 40х25
   3478
   3479	F0AB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3480	F0B0  00 00 00 00		     db	     0,0,0,0
   3481	      =0010		     m4	     equ     10h
   3482
   3483	F0B4  71 50 5A 0A 1F 06	19	     db	     71h,50h,5ah,0ah,1fh,6,19h	 ; уст для 80х25
   3484
   3485	F0BB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   3486	F0C0  00 00 00 00		     db	     0,0,0,0
   3487
   3488	F0C4  38 28 2D 0A 7F 06	64	     db	     38h,28h,2dh,0ah,7fh,6,64h	 ; уст для графики
   3489
   3490	F0CB  70 02 01 06 07		     db	     70h,2,1,6,7
   3491	F0D0  00 00 00 00		     db	     0,0,0,0
   3492
   3493	F0D4  62 50 50 0F 19 06	19	     db	     62h,50h,50h,0fh,19h,6,19h	 ; уст для 80х25 ч/б адаптера
   3494
   3495	F0DB  19 02 0D 0B 0C		     db	     19h,2,0dh,0bh,0ch
   3496	F0E0  00 00 00 00		     db	     0,0,0,0
   3497
   3498	F0E4			     m5	     label   word	     ; таблица для восстановления длины
   3499	F0E4  0800			     dw	     2048
   3500	F0E6  1000			     dw	     4096
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 71
1840v4.asm



   3501	F0E8  4000			     dw	     16384
   3502	F0EA  4000			     dw	     16384
   3503
   3504				     ;	 Колонки
   3505	F0EC			     m6	     label   byte
   3506	F0EC  28 28 50 50 28 28	50+	     db	     40,40,80,80,40,40,80,80
   3507	      50
   3508
   3509
   3510				     ;--- c_reg_tab
   3511	F0F4			     m7	     label   byte	     ; таблица установки режима
   3512	F0F4  2C 28 2D 29 2A 2E	1E+	     db	     2ch,28h,2dh,29h,2ah,2eh,1eh,29h
   3513	      29
   3514
   3515
   3516	F0FC			     set_mode proc   near
   3517	F0FC  BA 03D4			     mov     dx,03d4h	     ; адрес цветного адаптера
   3518	F0FF  B3 00			     mov     bl,0     ;	уст значение для цветного адаптера
   3519	F101  83 FF 30			     cmp     di,30h	     ; установлен ч/б адаптер ?
   3520	F104  75 07			     jne     m8		     ; переход,	если указан цветной
   3521	F106  B0 07			     mov     al,7	     ; указать ч/б режим
   3522	F108  BA 03B4			     mov     dx,03b4h	     ; адрес для ч/б адаптера
   3523	F10B  FE C3			     inc     bl		     ; установить режим	для ч/б	адаптера
   3524	F10D  8A E0		     m8:     mov     ah,al	     ; сохранить режим в AH
   3525	F10F  A2 0049r			     mov     crt_mode,al
   3526	F112  89 16 0063r		     mov     addr_6845,dx    ; сохранить адрес управляющего порта
   3527								     ; для активного дисплея
   3528	F116  1E			     push    ds
   3529	F117  50			     push    ax		     ; сохранить режим
   3530	F118  52			     push    dx		     ; сохранить значение порта	вывода
   3531	F119  83 C2 04			     add     dx,4	     ; указать адрес регистра управления
   3532	F11C  8A C3			     mov     al,bl	     ; получить	режим для адаптера
   3533	F11E  EE			     out     dx,al	     ; сброс экрана
   3534	F11F  5A			     pop     dx		     ; восстановить DX
   3535	F120  2B C0			     sub     ax,ax
   3536	F122  8E D8			     mov     ds,ax	     ; установить адрес	таблицы	векторов
   3537					     assume  ds:abs0
   3538	F124  C5 1E 0074r		     lds     bx,parm_ptr ; получить значение параметров	адаптера ЭЛИ
   3539	F128  58			     pop     ax		     ; восстановить AX
   3540					     assume  ds:code
   3541	F129  B9 0010			     mov     cx,m4	; установить длину таблицы параметров
   3542	F12C  80 FC 02			     cmp     ah,2	     ; определение режима
   3543	F12F  72 10			     jc	     m9		     ; режим 0 или 1 ?
   3544	F131  03 D9			     add     bx,cx	     ; уст начало таблицы параметров
   3545	F133  80 FC 04			     cmp     ah,4
   3546	F136  72 09			     jc	     m9		     ; режим 2 или 3
   3547	F138  03 D9			     add     bx,cx	     ; начало таблицы для графики
   3548	F13A  80 FC 07			     cmp     ah,7
   3549	F13D  72 02			     jc	     m9		     ; режимы 4, 5 или 6 ?
   3550	F13F  03 D9			     add     bx,cx	     ; уст начало таблицы для ч/б адаптера
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 72
1840v4.asm



   3551
   3552				     ;	 BX указывает на строку	таблицы	инициализации
   3553
   3554	F141			     m9:			     ; OUT_INIT
   3555	F141  50			     push    ax		     ; сохранить режим в AH
   3556	F142  32 E4			     xor     ah,ah	     ;
   3557
   3558				     ;	 Цикл таблицы, устанавливающий адреса регистров	и выводящий значения
   3559				     ; из таблицы
   3560
   3561	F144			     m10:
   3562	F144  8A C4			     mov     al,ah	     ;
   3563	F146  EE			     out     dx,al
   3564	F147  42			     inc     dx		     ; указать адрес порта
   3565	F148  FE C4			     inc     ah		     ;
   3566	F14A  8A 07			     mov     al,byte ptr [bx]	; получить значение таблицы
   3567	F14C  EE			     out     dx,al	     ; послать строку из таблицы в порт
   3568	F14D  43			     inc     bx		     ; +1 к адресу таблицы
   3569	F14E  4A			     dec     dx		     ; -1 из адреса порта
   3570	F14F  E2 F3			     loop    m10	     ; передана	вся таблица ?
   3571	F151  58			     pop     ax		     ; вернуть режимы
   3572	F152  1F			     pop     ds		     ; вернуть сегмент
   3573					     assume  ds:data
   3574
   3575				     ;	 Инициализация буфера дисплея
   3576
   3577	F153  33 FF			     xor     di,di	     ; DI=0
   3578	F155  89 3E 004Er		     mov     crt_start,di    ; сохранить начальный адрес
   3579	F159  C6 06 0062r 00		     mov     active_page,0   ; установить активную страницу
   3580	F15E  B9 2000			     mov     cx,8192	     ; количество слов в цветном адаптере
   3581	F161  80 FC 04			     cmp     ah,4	     ; опрос графики
   3582	F164  72 0C			     jc	     m12	     ; нет инициализации графики
   3583	F166  80 FC 07			     cmp     ah,7	     ; опрос ч/б адаптера
   3584	F169  74 04			     je	     m11	     ; инициализация ч/б адаптера
   3585	F16B  33 C0			     xor     ax,ax	     ; для графического	режима
   3586	F16D  EB 06			     jmp     short m13	     ; очистить	буфер
   3587	F16F			     m11:			     ; инициализация ч/б адаптера
   3588	F16F  B9 0800			     mov     cx,2048	     ; об'ем буфера ч/б	адаптера
   3589	F172			     m12:
   3590	F172  B8 0720			     mov     ax,' '+7*256    ; заполнить характеристики	для альфа
   3591	F175			     m13:			     ; очистить	буфер
   3592	F175  F3> AB			     rep     stosw	     ; заполнить область буфера	пробелами
   3593
   3594				     ;	 Формирование порта управления режимом
   3595
   3596	F177  C7 06 0060r 0067		     mov     cursor_mode,67h   ; установить режим текущего курсора (ERROR - MUS+
   3597				     BE	607h)
   3598	F17D  A0 0049r			     mov     al,crt_mode     ; получить	режим в	регистре AX
   3599	F180  32 E4			     xor     ah,ah
   3600	F182  8B F0			     mov     si,ax	     ; таблица указателей режима
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 73
1840v4.asm



   3601	F184  8B 16 0063r		     mov     dx,addr_6845    ; подготовить адрес порта для вывода
   3602	F188  83 C2 04			     add     dx,4
   3603	F18B  2E: 8A 84	F0F4r		     mov al,cs:m7[si]
   3604	F190  EE			     out     dx,al
   3605	F191  A2 0065r			     mov     crt_mode_set,al
   3606
   3607				     ;	 Форморование количества колонок
   3608
   3609	F194  2E: 8A 84	F0ECr		     mov al,cs:m6[si]
   3610	F199  32 E4			     xor     ah,ah
   3611	F19B  A3 004Ar			     mov     crt_cols,ax     ; коичество колонок на экране
   3612
   3613				     ;	 Установить позицию курсора
   3614
   3615	F19E  81 E6 000E		     and     si,0eh	     ; db 81h,0E6h,0Eh,00h   ; ###Gleb###
   3616	F1A2  2E: 8B 8C	F0E4r		     mov cx,cs:m5[si]  ; длина для очистки
   3617	F1A7  89 0E 004Cr		     mov     crt_len,cx
   3618	F1AB  B9 0008			     mov     cx,8	     ; очистить	все позиции курсора
   3619	F1AE  BF 0050r			     mov     di,offset cursor_posn
   3620	F1B1  1E			     push    ds		     ; восстановить сегмент
   3621	F1B2  07			     pop     es
   3622	F1B3  33 C0			     xor     ax,ax
   3623	F1B5  F3> AB			     rep     stosw	     ; заполнить нулями
   3624
   3625				     ;	 Установка регистра сканирования
   3626
   3627	F1B7  42			     inc     dx		     ; уст порт	сканирования по	умолчанию
   3628	F1B8  B0 30			     mov     al,30h	     ; значение	30H для	всех режимов,
   3629								     ; исключая	640х200
   3630	F1BA  80 3E 0049r 06		     cmp     crt_mode,6	     ; режим ч/б 640х200
   3631	F1BF  75 02			     jnz     m14	     ; если не 640х200
   3632	F1C1  B0 3F			     mov     al,3fh	     ; если 640х200, то	поместить в 3FH
   3633	F1C3  EE		     m14:    out     dx,al	     ; вывод правильного значения в порт 3D9
   3634	F1C4  A2 0066r			     mov     crt_pallette,al   ; сохранить значение для	использования
   3635
   3636				     ;	 Нормальный возврат
   3637
   3638	F1C7			     video_return:
   3639	F1C7  5F			     pop     di
   3640	F1C8  5E			     pop     si
   3641	F1C9  5B			     pop     bx
   3642	F1CA			     m15:
   3643	F1CA  59			     pop     cx		     ; восстановление регистров
   3644	F1CB  5A			     pop     dx
   3645	F1CC  1F			     pop     ds
   3646	F1CD  07			     pop     es
   3647	F1CE  CF			     iret		     ; возврат из прерывания
   3648	F1CF			     set_mode	     endp
   3649				     ;--------------------
   3650				     ; set_ctype
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 74
1840v4.asm



   3651				     ;
   3652				     ;	 Эта программа устанавливает размер курсора и управление им
   3653				     ;
   3654				     ;	 ВХОД
   3655				     ;		(CX) - содержит	размер курсора.	(CH - начальная	граница,
   3656				     ;		       CL - конечная граница)
   3657				     ;
   3658				     ;--------------------
   3659	F1CF			     set_ctype proc  near
   3660	F1CF  B4 0A			     mov     ah,10	     ; установить регистр 6845 для курсора
   3661	F1D1  89 0E 0060r		     mov     cursor_mode,cx   ;	сохранить в области данных
   3662	F1D5  E8 0002			     call    m16	     ; вывод регистра CX
   3663	F1D8  EB ED			     jmp     short video_return
   3664
   3665	F1DA			     m16:
   3666	F1DA  8B 16 0063r		     mov     dx,addr_6845    ; адрес регистра
   3667	F1DE  8A C4			     mov     al,ah	     ; получить	значение
   3668	F1E0  EE			     out     dx,al	     ; установить регистр
   3669	F1E1  42			     inc     dx		     ; регистр данных
   3670	F1E2  8A C5			     mov     al,ch	     ; данные
   3671	F1E4  EE			     out     dx,al
   3672	F1E5  4A			     dec     dx
   3673	F1E6  8A C4			     mov     al,ah
   3674	F1E8  FE C0			     inc     al		     ; указать другой регистр данных
   3675	F1EA  EE			     out     dx,al	     ; установить второй регистр
   3676	F1EB  42			     inc     dx
   3677	F1EC  8A C1			     mov     al,cl	     ; второе значение данных
   3678	F1EE  EE			     out     dx,al
   3679	F1EF  C3			     ret		     ; возврат
   3680	F1F0			     set_ctype	     endp
   3681				     ;----------------------------
   3682				     ; set_cpos
   3683				     ;
   3684				     ;	 Установить текущую позицию курсора
   3685				     ;
   3686				     ;	 ВХОД
   3687				     ;		DX - строка, колонка,
   3688				     ;		BH - номер страницы.
   3689				     ;
   3690				     ;-----------------------------
   3691	F1F0			     set_cpos proc   near
   3692	F1F0  8A CF			     mov     cl,bh
   3693	F1F2  32 ED			     xor     ch,ch	     ; установить счетчик
   3694	F1F4  D1 E1			     sal     cx,1	     ; сдвиг слова
   3695	F1F6  8B F1			     mov     si,cx
   3696	F1F8  89 94 0050r		     mov word ptr [si +	offset cursor_posn],dx	;сохранить указатель
   3697	F1FC  38 3E 0062r		     cmp     active_page,bh
   3698	F200  75 05			     jnz     m17
   3699	F202  8B C2			     mov     ax,dx	     ; получить	строку/колонку в AX
   3700	F204  E8 0002			     call    m18	     ; установить курсор
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 75
1840v4.asm



   3701	F207			     m17:
   3702	F207  EB BE			     jmp     short video_return	 ; возврат
   3703	F209			     set_cpos	     endp
   3704
   3705				     ;	 Установить позицию курсора, AX	содержит  строку/колонку
   3706
   3707	F209			     m18     proc    near
   3708	F209  E8 007F			     call    position
   3709	F20C  8B C8			     mov     cx,ax
   3710	F20E  03 0E 004Er		     add     cx,crt_start    ; сложить с начальным адресом страницы
   3711	F212  D1 F9			     sar     cx,1	     ; делить на 2
   3712	F214  B4 0E			     mov     ah,14
   3713	F216  E8 FFC1			     call    m16
   3714	F219  C3			     ret
   3715	F21A			     m18     endp
   3716				     ;---------------------------
   3717				     ; read_cursor
   3718				     ;
   3719				     ;	 Считать текущее положение курсора
   3720				     ;
   3721				     ;	 Эта программа восстанавливает текущее положение курсора
   3722				     ;
   3723				     ;	 ВХОД
   3724				     ;		BH - номер страницы
   3725				     ;
   3726				     ;	 ВЫХОД
   3727				     ;		DX - строка/колонка текущей позиции курсора,
   3728				     ;		CX - размер курсора и управление им
   3729				     ;
   3730				     ;---------------------------
   3731	F21A			     read_cursor proc near
   3732	F21A  8A DF			     mov     bl,bh
   3733	F21C  32 FF			     xor     bh,bh
   3734	F21E  D1 E3			     sal     bx,1
   3735	F220  8B 97 0050r		     mov dx,word ptr [bx+offset	cursor_posn]
   3736	F224  8B 0E 0060r		     mov     cx,cursor_mode
   3737	F228  5F			     pop     di		     ; восстановить регистры
   3738	F229  5E			     pop     si
   3739	F22A  5B			     pop     bx
   3740	F22B  58			     pop     ax
   3741	F22C  58			     pop     ax
   3742	F22D  1F			     pop     ds
   3743	F22E  07			     pop     es
   3744	F22F  CF			     iret
   3745	F230			     read_cursor     endp
   3746				     ;-----------------------------
   3747				     ; act_disp_page
   3748				     ;
   3749				     ;	  Эта программа	устанавливает активную страницу	буфера адаптера	ЭЛИ
   3750				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 76
1840v4.asm



   3751				     ;	 ВХОД
   3752				     ;		AL - страница.
   3753				     ;
   3754				     ;	 ВЫХОД
   3755				     ;		Выполняется сброс контроллера для установки новой страницы.
   3756				     ;
   3757				     ;-----------------------------
   3758	F230			     act_disp_page proc	     near
   3759	F230  A2 0062r			     mov     active_page,al  ; сохранить значение активной страницы
   3760	F233  8B 0E 004Cr		     mov     cx,crt_len	     ; получить	длину области буфера
   3761	F237  98			     cbw		     ; преобразовать AL
   3762	F238  50			     push    ax		     ; сохранить значение страницы
   3763	F239  F7 E1			     mul     cx
   3764	F23B  A3 004Er			     mov     crt_start,ax    ; сохранить начальный адрес
   3765								     ; для следующего требования
   3766	F23E  8B C8			     mov     cx,ax	     ; переслать начальный адрес в CX
   3767	F240  D1 F9			     sar     cx,1	     ; делить на 2
   3768	F242  B4 0C			     mov     ah,12
   3769	F244  E8 FF93			     call    m16
   3770	F247  5B			     pop     bx		     ; восстановить значение страницы
   3771	F248  D1 E3			     sal     bx,1
   3772	F24A  8B 87 0050r		     mov ax,word ptr [bx+offset	cursor_posn]   ; получить курсор
   3773	F24E  E8 FFB8			     call    m18	     ; установить позицию курсора
   3774	F251  E9 FF73			     jmp     video_return
   3775	F254			     act_disp_page   endp
   3776				     ;------------------------------
   3777				     ; set color
   3778				     ;
   3779				     ;	 Эта программа устанавливает цветовую палитру.
   3780				     ;
   3781				     ;	 ВХОД
   3782				     ;		BH=0
   3783				     ;		     BL	- значение пяти	младших	бит, используемых для выбора
   3784				     ;			  цветовой палитры (цвет заднего плана для цветной
   3785				     ;			  графики 320х200 или цвет каймы для цветного 40х25)
   3786				     ;		BH=1
   3787				     ;		     BL	- номер	цветовой палитры
   3788				     ;			  BL=0 - зеленый(1), красный(2), желтый(3),
   3789				     ;			  BL=1 - голубой(1), фиолетовый(2), белый (3)
   3790				     ;
   3791				     ;	 ВЫХОД
   3792				     ;		Установленная цветовая палитра в порту 3D9.
   3793				     ;------------------------------
   3794	F254			     set_color proc  near
   3795	F254  8B 16 0063r		     mov     dx,addr_6845    ; порт для	палитры
   3796	F258  83 C2 05			     add     dx,5	     ; установить порт
   3797	F25B  A0 0066r			     mov     al,crt_pallette   ; получить текущее значение палитры
   3798	F25E  0A FF			     or	     bh,bh	     ; цвет 0 ?
   3799	F260  75 0E			     jnz     m20	     ; вывод цвета 1
   3800
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 77
1840v4.asm



   3801				     ;	 Обработка цветовой палитры 0
   3802
   3803	F262  24 E0			     and     al,0e0h	     ; сбросить	5 младших бит
   3804	F264  80 E3 1F			     and     bl,01fh	     ; сбросить	3 старших бита
   3805	F267  0A C3			     or	     al,bl
   3806	F269			     m19:
   3807	F269  EE			     out     dx,al	      ;	вывод выбранного цвета в порт 3D9
   3808	F26A  A2 0066r			     mov     crt_pallette,al  ;	сохранить значение цвета
   3809	F26D  E9 FF57			     jmp     video_return
   3810
   3811				     ;	 Обработка цветовой палитры 1
   3812
   3813	F270			     m20:
   3814	F270  24 DF			     and     al,0dfh	     ;
   3815	F272  D0 EB			     shr     bl,1	     ; проверить младший бит BL
   3816	F274  73 F3			     jnc     m19
   3817	F276  0C 20			     or	     al,20h	     ;
   3818	F278  EB EF			     jmp     short m19	     ; переход
   3819	F27A			     set_color	     endp
   3820				     ;--------------------------
   3821				     ; video state
   3822				     ;
   3823				     ;	 Эта программа получает	текущее	состояние ЭЛИ в	AX.
   3824				     ;
   3825				     ;		AH - количество	колонок,
   3826				     ;		AL - текущий режим,
   3827				     ;		BH - номер активной страницы.
   3828				     ;
   3829				     ;---------------------------
   3830	F27A			     video_state proc	     near
   3831	F27A  8A 26 004Ar		     mov     ah,byte ptr crt_cols   ; получить количество колонок
   3832	F27E  A0 0049r			     mov     al,crt_mode	     ; текущий режим
   3833	F281  8A 3E 0062r		     mov     bh,active_page  ; получить	текущую	активную страницу
   3834	F285  5F			     pop     di		     ; восстановить регистры
   3835	F286  5E			     pop     si
   3836	F287  59			     pop     cx
   3837	F288  E9 FF3F			     jmp     m15	     ; возврат к программе
   3838	F28B			     video_state     endp
   3839				     ;---------------------------
   3840				     ; position
   3841				     ;
   3842				     ;	 Эта программа вычисляет адрес буфера символа в	режиме альфа.
   3843				     ;
   3844				     ;	 ВХОД
   3845				     ;		AX - номер строки, номер колонки,
   3846				     ;
   3847				     ;	 ВЫХОД
   3848				     ;		AX - смещение символа с	координатами (AH, AL) относительно
   3849				     ;		     начала страницы. Смещение измеряется в байтах.
   3850				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 78
1840v4.asm



   3851				     ;----------------------------
   3852	F28B			     position proc   near
   3853	F28B  53			     push    bx		     ; сохранить регистр
   3854	F28C  8B D8			     mov     bx,ax
   3855	F28E  8A C4			     mov     al,ah	     ; строки в	AL
   3856	F290  F6 26 004Ar		     mul     byte ptr crt_cols
   3857	F294  32 FF			     xor     bh,bh
   3858	F296  03 C3			     add     ax,bx	     ; добавить	к значению колонки
   3859	F298  D1 E0			     sal     ax,1	     ; * 2 для байтов атрибута
   3860	F29A  5B			     pop     bx
   3861	F29B  C3			     ret
   3862	F29C			     position	     endp
   3863				     ;-------------------------------
   3864				     ;scroll up
   3865				     ;
   3866				     ;	 Эта программа перемещает блок символов	вверх по экрану.
   3867				     ;
   3868				     ;	 ВХОД
   3869				     ;		AH - текуший режим,
   3870				     ;		AL - количество	перемещаемых строк
   3871				     ;		CX - координаты	левого верхнего	угла блока
   3872				     ;		     (строка, колонка),
   3873				     ;		DX - координаты	правого	нижнего	угла
   3874				     ;		BH - атрибут символа пробела (для опробеливания	освобожда-
   3875				     ;		     емых строк),
   3876				     ;
   3877				     ;	 ВЫХОД
   3878				     ;		Модифицированный буфер дисплея.
   3879				     ;
   3880				     ;-----------------------------------
   3881					     assume cs:code,ds:data,es:data
   3882	F29C			     scroll_up proc  near
   3883	F29C  8A D8			     mov     bl,al	 ; сохранить количество	перемещаемых строк
   3884	F29E  80 FC 04			     cmp     ah,4	     ; проверка	графического режима
   3885	F2A1  72 08			     jc	     n1
   3886	F2A3  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   3887	F2A6  74 03			     je	     n1
   3888	F2A8  E9 01F3			     jmp     graphics_up
   3889	F2AB			     n1:
   3890	F2AB  53			     push    bx		     ; сохранить полный	атрибут	в BH
   3891	F2AC  8B C1			     mov     ax,cx	     ; координаты левого верхнего угла
   3892	F2AE  E8 0039			     call    scroll_position
   3893	F2B1  74 33			     jz	     n7
   3894	F2B3  03 F0			     add     si,ax
   3895	F2B5  8A E6			     mov     ah,dh	     ; строка
   3896	F2B7  2A E3			     sub     ah,bl
   3897	F2B9			     n2:
   3898	F2B9  E8 0075			     call    n10	     ; сдвинуть	одну строку
   3899	F2BC  03 F5			     add     si,bp
   3900	F2BE  03 FD			     add     di,bp	     ; указать на следующую строку в блоке
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 79
1840v4.asm



   3901	F2C0  FE CC			     dec     ah		     ; счетчик строк для сдвига
   3902	F2C2  75 F5			     jnz     n2		     ; цикл строки
   3903	F2C4			     n3:			     ; очистка входа
   3904	F2C4  58			     pop     ax		     ; восстановить атрибут в AH
   3905	F2C5  B0 20			     mov     al,' '	     ; заполнить пробелами
   3906	F2C7			     n4:			     ; очистка счетчика
   3907	F2C7  E8 0070			     call    n11	     ; очистка строки
   3908	F2CA  03 FD			     add     di,bp	     ; указать следующую строку
   3909	F2CC  FE CB			     dec     bl		     ; счетчик строк для сдвига
   3910	F2CE  75 F7			     jnz     n4		     ; очистка счетчика
   3911	F2D0			     n5:			     ; конец сдвига
   3912	F2D0  B8 0040			     mov     ax,dat
   3913	F2D3  8E D8			     mov     ds,ax
   3914	F2D5  80 3E 0049r 07		     cmp     crt_mode,7	     ; ч/б адаптер ?
   3915	F2DA  74 07			     je	     n6		     ; если да - пропуск режима	сброса
   3916	F2DC  A0 0065r			     mov     al,crt_mode_set
   3917	F2DF  BA 03D8			     mov     dx,03d8h	     ; установить порт цветного	адаптера
   3918	F2E2  EE			     out     dx,al
   3919	F2E3			     n6:
   3920	F2E3  E9 FEE1			     jmp     video_return
   3921	F2E6			     n7:
   3922	F2E6  8A DE			     mov     bl,dh
   3923	F2E8  EB DA			     jmp     short n3	     ; очистить
   3924	F2EA			     scroll_up	     endp
   3925
   3926				     ;	 Обработка сдвига
   3927
   3928	F2EA			     scroll_position proc    near
   3929	F2EA  80 3E 0049r 02		     cmp     crt_mode,2
   3930	F2EF  72 19			     jb	     n9		     ; обработать 80х25	отдельно
   3931	F2F1  80 3E 0049r 03		     cmp     crt_mode,3
   3932	F2F6  77 12			     ja	     n9
   3933
   3934				     ;	 Сдиг для цветного адаптера в режиме 80х25
   3935
   3936	F2F8  52			     push    dx
   3937	F2F9  BA 03DA			     mov     dx,3dah	     ; обработка цветного адаптера
   3938	F2FC  50			     push    ax
   3939	F2FD			     n8:			     ; ожидание	доступности дисплея
   3940	F2FD  EC			     in	     al,dx
   3941	F2FE  A8 08			     test    al,8
   3942	F300  74 FB			     jz	     n8		     ; ожидание	доступности дисплея
   3943	F302  B0 25			     mov     al,25h
   3944	F304  BA 03D8			     mov     dx,03d8h
   3945	F307  EE			     out     dx,al	     ; выключить ЭЛИ
   3946	F308  58			     pop     ax
   3947	F309  5A			     pop     dx
   3948	F30A  E8 FF7E		     n9:     call    position
   3949	F30D  03 06 004Er		     add     ax,crt_start    ; смещение	активной страницы
   3950	F311  8B F8			     mov     di,ax	     ; для адреса сдвига
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 80
1840v4.asm



   3951	F313  8B F0			     mov     si,ax
   3952	F315  2B D1			     sub     dx,cx	     ; DX=строка
   3953	F317  FE C6			     inc     dh
   3954	F319  FE C2			     inc     dl		     ; прибавление к началу
   3955	F31B  32 ED			     xor     ch,ch	     ; установить старший байт счетчика	в 0
   3956	F31D  8B 2E 004Ar		     mov     bp,crt_cols     ; получить	число колонок дисплея
   3957	F321  03 ED			     add     bp,bp	     ; увеличить на 2 байт атрибута
   3958	F323  8A C3			     mov     al,bl	     ; получить	счетчик	строки
   3959	F325  F6 26 004Ar		     mul     byte ptr crt_cols	 ; определить смещение из адреса,
   3960	F329  03 C0			     add     ax,ax     ; умноженного на	2, для байта атрибута
   3961	F32B  06			     push    es	     ; установить адресацию для	области	буфера
   3962	F32C  1F			     pop     ds
   3963	F32D  80 FB 00			     cmp     bl,0	     ; 0 означает очистку блока
   3964	F330  C3			     ret		     ; возврат с установкой флажков
   3965	F331			     scroll_position endp
   3966
   3967				     ;	 Перемещение строки
   3968
   3969	F331			     n10     proc    near
   3970	F331  8A CA			     mov     cl,dl	     ; получить	колонки	для передачи
   3971	F333  56			     push    si
   3972	F334  57			     push    di		     ; сохранить начальный адрес
   3973	F335  F3> A5			     rep     movsw	     ; передать	эту строку на экран
   3974	F337  5F			     pop     di
   3975	F338  5E			     pop     si		     ; восстановить адресацию
   3976	F339  C3			     ret
   3977	F33A			     n10     endp
   3978
   3979				     ;	 очистка строки
   3980
   3981	F33A			     n11     proc    near
   3982	F33A  8A CA			     mov     cl,dl	     ; получить	колонки	для очистки
   3983	F33C  57			     push    di
   3984	F33D  F3> AB			     rep     stosw	     ; запомнить полный	знак
   3985	F33F  5F			     pop     di
   3986	F340  C3			     ret
   3987	F341			     n11     endp
   3988				     ;------------------------
   3989				     ; scroll_down
   3990				     ;
   3991				     ;	 Эта программа перемещает блок символов	вниз по
   3992				     ; экрану, заполняя	верхние	строки пробелом	с заданным атрибутом
   3993				     ;
   3994				     ;	 ВХОД
   3995				     ;		AH - текущий режим,
   3996				     ;		AL - количество	строк,
   3997				     ;		CX - верхний левый угол	блока,
   3998				     ;		DX - правый нижний угол	блока,
   3999				     ;		BH - атрибут символа-заполнителя (пробела),
   4000				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 81
1840v4.asm



   4001				     ;-------------------------
   4002	F341			     scroll_down proc near
   4003	F341  FD			     std		     ; уст направление сдвига вниз
   4004	F342  8A D8			     mov     bl,al	     ; количество строк	в BL
   4005	F344  80 FC 04			     cmp     ah,4	     ; проверка	графики
   4006	F347  72 08			     jc	     n12
   4007	F349  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4008	F34C  74 03			     je	     n12
   4009	F34E  E9 01A6			     jmp     graphics_down
   4010	F351			     n12:
   4011	F351  53			     push    bx		     ; сохранить атрибут в BH
   4012	F352  8B C2			     mov     ax,dx	     ; нижний правый угол
   4013	F354  E8 FF93			     call    scroll_position
   4014	F357  74 20			     jz	     n16
   4015	F359  2B F0			     sub     si,ax	     ; SI для адресации
   4016	F35B  8A E6			     mov     ah,dh
   4017	F35D  2A E3			     sub     ah,bl	     ; передать	количество строк
   4018	F35F			     n13:
   4019	F35F  E8 FFCF			     call    n10	     ; передать	одну строку
   4020	F362  2B F5			     sub     si,bp
   4021	F364  2B FD			     sub     di,bp
   4022	F366  FE CC			     dec     ah
   4023	F368  75 F5			     jnz     n13
   4024	F36A			     n14:
   4025	F36A  58			     pop     ax		     ; восстановить атрибут в AH
   4026	F36B  B0 20			     mov     al,' '
   4027	F36D			     n15:
   4028	F36D  E8 FFCA			     call    n11	     ; очистка одной строки
   4029	F370  2B FD			     sub     di,bp	     ; перейти к следующей строке
   4030	F372  FE CB			     dec     bl
   4031	F374  75 F7			     jnz     n15
   4032	F376  E9 FF57			     jmp     n5		     ; конец сдвига
   4033	F379			     n16:
   4034	F379  8A DE			     mov     bl,dh
   4035	F37B  EB ED			     jmp     short n14
   4036	F37D			     scroll_down  endp
   4037				     ;--------------------
   4038				     ; read_ac_current
   4039				     ;
   4040				     ;	 Эта программа считывает атрибут и код символа,	находящегося в теку-
   4041				     ; щем положении курсора
   4042				     ;
   4043				     ;	 ВХОД
   4044				     ;		AH - текущий режим,
   4045				     ;		BH - номер страницы (только для	режима альфа),
   4046				     ;
   4047				     ;	 ВЫХОД
   4048				     ;		AL - код символа,
   4049				     ;		AH - атрибут символа.
   4050				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 82
1840v4.asm



   4051				     ;---------------------
   4052					     assume cs:code,ds:data,es:data
   4053	F37D			     read_ac_current proc near
   4054	F37D  80 FC 04			     cmp     ah,4	     ; это графика ?
   4055	F380  72 08			     jc	     p1
   4056	F382  80 FC 07			     cmp     ah,7	     ; ч/б адаптер ?
   4057	F385  74 03			     je	     p1
   4058	F387  E9 02A9			     jmp     graphics_read
   4059	F38A			     p1:			     ;
   4060	F38A  E8 001A			     call    find_position
   4061	F38D  8B F3			     mov     si,bx	     ; установить адресацию в SI
   4062
   4063
   4064	F38F  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый	адрес
   4065	F393  83 C2 06			     add     dx,6	     ; порт состояния
   4066	F396  06			     push    es
   4067	F397  1F			     pop     ds		     ; получить	сегмент
   4068	F398			     p2:
   4069	F398  EC			     in	     al,dx	     ; получить	состояние
   4070	F399  A8 01			     test    al,1
   4071	F39B  75 FB			     jnz     p2		     ; ожидание
   4072	F39D  FA			     cli		; сброс	признака разрешения прерывания
   4073	F39E			     p3:
   4074	F39E  EC			     in	     al,dx	     ; получить	состояние
   4075	F39F  A8 01			     test    al,1
   4076	F3A1  74 FB			     jz	     p3		     ; ожидание
   4077	F3A3  AD			     lodsw		     ; получить	символ/атрибут
   4078	F3A4  E9 FE20			     jmp     video_return
   4079	F3A7			     read_ac_current endp
   4080
   4081	F3A7			     find_position proc	near
   4082	F3A7  8A CF			     mov     cl,bh	     ; поместить страницу в CX
   4083	F3A9  32 ED			     xor     ch,ch
   4084	F3AB  8B F1			     mov     si,cx	     ; передать	в SI индекс, умноженный	на 2
   4085	F3AD  D1 E6			     sal     si,1	     ; для слова смещения
   4086	F3AF  8B 84 0050r		     mov ax,word ptr [si+offset	cursor_posn]   ; получить строку/ко-
   4087								     ; лонку этой страницы
   4088	F3B3  33 DB			     xor     bx,bx	     ; установить начальный адрес в 0
   4089	F3B5  E3 06			     jcxz    p5
   4090	F3B7			     p4:
   4091	F3B7  03 1E 004Cr		     add     bx,crt_len	     ; длина буфера
   4092	F3BB  E2 FA			     loop    p4
   4093	F3BD			     p5:
   4094	F3BD  E8 FECB			     call    position
   4095	F3C0  03 D8			     add     bx,ax
   4096	F3C2  C3			     ret
   4097	F3C3			     find_position   endp
   4098				     ;---------------------
   4099				     ;write_ac_current
   4100				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 83
1840v4.asm



   4101				     ;	 Эта программа записывает атрибут и код	символа	в текущую позицию
   4102				     ; курсора
   4103				     ;
   4104				     ;	 ВХОД
   4105				     ;		AH - текущий режим,
   4106				     ;		BH - номер страницы,
   4107				     ;		CX - счетчик (количество повторений символов),
   4108				     ;		AL - код символа,
   4109				     ;		BL - атрибут символа (для режимов альфа) или цвет символа
   4110				     ;		     для графики.
   4111				     ;
   4112				     ;----------------------
   4113	F3C3			     write_ac_current proc near
   4114	F3C3  80 FC 04			     cmp     ah,4	     ; это графика ?
   4115	F3C6  72 08			     jc	     p6
   4116	F3C8  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4117	F3CB  74 03			     je	     p6
   4118	F3CD  E9 01B1			     jmp     graphics_write
   4119	F3D0			     p6:
   4120	F3D0  8A E3			     mov     ah,bl	     ; получить	атрибут	в AH
   4121	F3D2  50			     push    ax		     ; хранить
   4122	F3D3  51			     push    cx		     ; хранить счетчик
   4123	F3D4  E8 FFD0			     call    find_position
   4124	F3D7  8B FB			     mov     di,bx	     ; адрес в DI
   4125	F3D9  59			     pop     cx		     ; вернуть счетчик
   4126	F3DA  5B			     pop     bx		     ; и символ
   4127	F3DB			     p7:			     ; цикл записи
   4128
   4129
   4130	F3DB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый	адрес
   4131	F3DF  83 C2 06			     add     dx,6	     ; указать порт состояния
   4132	F3E2			     p8:
   4133	F3E2  EC			     in	     al,dx	     ; получить	состояние
   4134	F3E3  A8 01			     test    al,1
   4135	F3E5  75 FB			     jnz     p8		     ; ожидать
   4136	F3E7  FA			     cli		  ; сброс признака разрешения прерывания
   4137	F3E8			     p9:
   4138	F3E8  EC			     in	     al,dx	     ; получить	состояние
   4139	F3E9  A8 01			     test    al,1
   4140	F3EB  74 FB			     jz	     p9		     ; ожидать
   4141	F3ED  8B C3			     mov     ax,bx
   4142	F3EF  AB			     stosw		     ; записать	символ и атрибут
   4143	F3F0  FB			     sti		     ; уст признак разрешения прерывания
   4144	F3F1  E2 E8			     loop    p7
   4145	F3F3  E9 FDD1			     jmp     video_return
   4146	F3F6			     write_ac_current  endp
   4147				     ;---------------------
   4148				     ;write_c_current
   4149				     ;
   4150				     ;	 Эта программа записывает символ в текущую позицию курсора.
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 84
1840v4.asm



   4151				     ;
   4152				     ;	 ВХОД
   4153				     ;		BH - номер страницы (только для	альфа режимов),
   4154				     ;		CX - счетчик (количество повторений символа),
   4155				     ;		AL - код символа,
   4156				     ;
   4157				     ;-----------------------
   4158	F3F6			     write_c_current proc near
   4159	F3F6  80 FC 04			     cmp     ah,4	     ; это графика ?
   4160	F3F9  72 08			     jc	     p10
   4161	F3FB  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4162	F3FE  74 03			     je	     p10
   4163	F400  E9 017E			     jmp     graphics_write
   4164	F403			     p10:
   4165	F403  50			     push    ax		     ; сохранить в стеке
   4166	F404  51			     push    cx		     ; сохранить количество повторений
   4167	F405  E8 FF9F			     call    find_position
   4168	F408  8B FB			     mov     di,bx	     ; адрес в DI
   4169	F40A  59			     pop     cx		     ; вернуть количество повторений
   4170	F40B  5B			     pop     bx		     ; BL - код	символа
   4171	F40C			     p11:
   4172
   4173
   4174	F40C  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый	адрес
   4175	F410  83 C2 06			     add     dx,6	     ; указать порт состояния
   4176	F413			     p12:
   4177	F413  EC			     in	     al,dx	     ; получить	состояние
   4178	F414  A8 01			     test    al,1
   4179	F416  75 FB			     jnz     p12	     ; ожидать
   4180	F418  FA			     cli		     ; сброс признака разрешения прерывания
   4181	F419			     p13:
   4182	F419  EC			     in	     al,dx	     ; получить	состояние
   4183	F41A  A8 01			     test    al,1
   4184	F41C  74 FB			     jz	     p13	     ; ожидание
   4185	F41E  8A C3			     mov     al,bl	     ; восстановить символ
   4186	F420  AA			     stosb		     ; записать	символ
   4187	F421  47			     inc     di
   4188	F422  E2 E8			     loop    p11	     ; цикл
   4189	F424  E9 FDA0			     jmp     video_return
   4190	F427			     write_c_current endp
   4191				     ;---------------------
   4192				     ; read dot	- write	dot
   4193				     ;
   4194				     ;	 Эта программа считывает/записывает точку.
   4195				     ;
   4196				     ;	 ВХОД
   4197				     ;		DX - строка (0-199),
   4198				     ;		CX - колонка (0-639),
   4199				     ;		AL - цвет выводимой точки.
   4200				     ;		     Если бит 7=1, то выполняется операция
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 85
1840v4.asm



   4201				     ;		     XOR над значением точки из	буфера дисплея и значением
   4202				     ;		     точки из регистра AL (при записи точки).
   4203				     ;
   4204				     ;	 ВЫХОД
   4205				     ;		AL - значение считанной	точки
   4206				     ;
   4207				     ;----------------------
   4208					     assume cs:code,ds:data,es:data
   4209	F427			     read_dot proc   near
   4210	F427  E8 0031			     call    r3		     ; определить положение точки
   4211	F42A  26: 8A 04			     mov     al,es:[si]	     ; получить	байт
   4212	F42D  22 C4			     and     al,ah	     ; размаскировать другие биты в байте
   4213	F42F  D2 E0			     shl     al,cl	     ;
   4214	F431  8A CE			     mov     cl,dh	     ; получить	число бит результата
   4215	F433  D2 C0			     rol     al,cl
   4216	F435  E9 FD8F			     jmp     video_return    ; выход из	прерывания
   4217	F438			     read_dot	     endp
   4218
   4219	F438			     write_dot proc  near
   4220	F438  50			     push    ax		     ; сохранить значение точки
   4221	F439  50			     push    ax		     ; еще раз
   4222	F43A  E8 001E			     call    r3		     ; определить положение точки
   4223	F43D  D2 E8			     shr     al,cl	     ; сдвиг для установки бит при выводе
   4224	F43F  22 C4			     and     al,ah	     ; сбросить	другие биты
   4225	F441  26: 8A 0C			     mov     cl,es:[si]	     ; получить	текущий	байт
   4226	F444  5B			     pop     bx
   4227	F445  F6 C3 80			     test    bl,80h
   4228	F448  75 0D			     jnz     r2
   4229	F44A  F6 D4			     not     ah	       ; установить маску для передачи указанных бит
   4230	F44C  22 CC			     and     cl,ah
   4231	F44E  0A C1			     or	     al,cl
   4232	F450			     r1:
   4233	F450  26: 88 04			     mov es:[si],al	     ; восстановить байт в памяти
   4234	F453  58			     pop     ax
   4235	F454  E9 FD70			     jmp     video_return    ; к выходу	из программы
   4236	F457			     r2:
   4237	F457  32 C1			     xor     al,cl	     ; исключающее ИЛИ над значениями точки
   4238	F459  EB F5			     jmp     short r1	     ; конец записи
   4239	F45B			     write_dot	     endp
   4240
   4241				     ;-------------------------------------
   4242				     ;
   4243				     ;	 Эта программа определяет относительный	адрес байта (внутри буфера
   4244				     ; дисплея), из которого должна быть считана/записана точка,с заданными
   4245				     ; координатами.
   4246				     ;
   4247				     ;	 ВХОД
   4248				     ;		DX - строка (0-199),
   4249				     ;		CX - колонка (0-639).
   4250				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 86
1840v4.asm



   4251				     ;	 ВЫХОД
   4252				     ;		SI - относительный адрес байта,	содержащего точку внутри
   4253				     ;		     буфера дисплея,
   4254				     ;		AH - маска для выделения значения заданной точки внутри	байта
   4255				     ;		CL - константа сдвига маски в AH в крайнюю левую позицию,
   4256				     ;		DH - число бит,	определяющих значение точки.
   4257				     ;
   4258				     ;--------------------------------------
   4259
   4260	F45B			     r3	     proc    near
   4261	F45B  53			     push    bx		     ; сохранить BX
   4262	F45C  50			     push    ax		     ; сохранить AL
   4263
   4264				     ;	 Вычисление первого байта указанной строки умножением на 40.
   4265				     ; Наименьший бит строки определяет	четно/нечетную 80-байтовую строку.
   4266
   4267	F45D  B0 28			     mov     al,40
   4268	F45F  52			     push    dx		     ; сохранить значение строки
   4269	F460  80 E2 FE			     and     dl,0feh	     ; сброс четно/нечетного бита
   4270	F463  F6 E2			     mul     dl	  ; AX содержит	адрес первого байта указанной строки
   4271	F465  5A			     pop     dx		     ; восстановить его
   4272	F466  F6 C2 01			     test    dl,1	     ; проверить четность/нечетность
   4273	F469  74 03			     jz	     r4		     ; переход,если строка четная
   4274	F46B  05 2000			     add     ax,2000h	     ; смещение	для нахождения нечетных	строк
   4275	F46E			     r4:			     ; четная строка
   4276	F46E  8B F0			     mov     si,ax	     ; передать	указатель в SI
   4277	F470  58			     pop     ax		     ; восстановить значение AL
   4278	F471  8B D1			     mov     dx,cx	     ; значение	колонки	в DX
   4279
   4280				     ;	 Определение действительных графических	режимов
   4281				     ;
   4282				     ;	 Установка регистров согласно режимaм
   4283				     ;
   4284				     ;	       BH - количество бит, определяющее точку,
   4285				     ;	       BL - константа выделения	точки из левых бит байта,
   4286				     ;	       CH - константа для выделения из номера колонки номера позиции
   4287				     ;		    первого бита, определяющего	точку в	байте, т.е. получение
   4288				     ;		    остатка от деления номера на 8 (для	режима 640х200)	или
   4289				     ;		    номера на 4	(для режима 320х200),
   4290				     ;	       CL - константа сдвига (для выполнения деления на	8 или на 4).
   4291
   4292	F473  BB 02C0			     mov     bx,2c0h
   4293	F476  B9 0302			     mov     cx,302h	     ; установка параметров
   4294	F479  80 3E 0049r 06		     cmp     crt_mode,6
   4295	F47E  72 06			     jc	     r5		     ;
   4296	F480  BB 0180			     mov     bx,180h
   4297	F483  B9 0703			     mov     cx,703h	     ; уст параметры для старшего регистра
   4298
   4299				     ;	 Определение бита смещения в байте по маске
   4300	F486			     r5:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 87
1840v4.asm



   4301	F486  22 EA			     and     ch,dl	     ;
   4302
   4303				     ;	 Определение байта смещения в колонке
   4304
   4305	F488  D3 EA			     shr     dx,cl	     ; сдвиг для коррекции
   4306	F48A  03 F2			     add     si,dx	     ; получить	указатель
   4307	F48C  8A F7			     mov     dh,bh   ; получить	указатель битов	результата в DH
   4308
   4309				     ;	 Умножение BH (количество бит в	байте) на CH (бит смещения)
   4310
   4311	F48E  2A C9			     sub     cl,cl
   4312	F490			     r6:
   4313	F490  D0 C8			     ror     al,1    ; левое крайнее значение в	AL для записи
   4314	F492  02 CD			     add     cl,ch	     ; прибавить значение бита смещения
   4315	F494  FE CF			     dec     bh		     ; счетчик контроля
   4316	F496  75 F8			     jnz     r6	     ; на выходе CL содержит счетчик сдвига для
   4317								     ; восстановления
   4318	F498  8A E3			     mov     ah,bl	     ; получить	маску в	AH
   4319	F49A  D2 EC			     shr     ah,cl	     ; передать	маску в	ячейку
   4320	F49C  5B			     pop     bx		     ; восстановить регистр
   4321	F49D  C3			     ret		     ; возврат с восстановлением
   4322	F49E			     r3	     endp
   4323
   4324				     ;----------------------------------------
   4325				     ;
   4326				     ;
   4327				     ;	  Программа перемещает блок символов вверх в режиме графики
   4328				     ;
   4329				     ;-----------------------------------------
   4330
   4331	F49E			     graphics_up proc near
   4332	F49E  8A D8			     mov     bl,al	     ; сохранить количество символов
   4333	F4A0  8B C1			     mov     ax,cx	     ; получить	верхний	левый угол в AX
   4334
   4335
   4336	F4A2  E8 026A			     call    graph_posn
   4337	F4A5  8B F8			     mov     di,ax	     ; сохранить результат
   4338
   4339				     ;	 Определить размеры блока
   4340
   4341	F4A7  2B D1			     sub     dx,cx
   4342	F4A9  81 C2 0101		     add     dx,101h
   4343	F4AD  D0 E6			     sal     dh,1
   4344	F4AF  D0 E6			     sal     dh,1
   4345
   4346	F4B1  80 3E 0049r 06		     cmp     crt_mode,6
   4347	F4B6  73 04			     jnc     r7
   4348
   4349	F4B8  D0 E2			     sal     dl,1
   4350	F4BA  D1 E7			     sal     di,1	     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 88
1840v4.asm



   4351
   4352				     ;	 Определение адреса источника в	буфере
   4353	F4BC			     r7:
   4354	F4BC  06			     push    es
   4355	F4BD  1F			     pop     ds
   4356	F4BE  2A ED			     sub     ch,ch	     ; обнулить	старший	байт счетчика
   4357	F4C0  D0 E3			     sal     bl,1	     ; умножение числа строк на	4
   4358	F4C2  D0 E3			     sal     bl,1
   4359	F4C4  74 2D			     jz	     r11	     ; если 0, занести пробелы
   4360	F4C6  8A C3			     mov     al,bl	     ; получить	число строк в AL
   4361	F4C8  B4 50			     mov     ah,80	     ; 80 байт/строк
   4362	F4CA  F6 E4			     mul     ah		     ; определить смещение источника
   4363	F4CC  8B F7			     mov     si,di	     ; установить источник
   4364	F4CE  03 F0			     add     si,ax	     ; сложить источник	с ним
   4365	F4D0  8A E6			     mov     ah,dh	     ; количество строк
   4366	F4D2  2A E3			     sub     ah,bl	     ; определить число	перемещений
   4367
   4368	F4D4			     r8:
   4369	F4D4  E8 0080			     call    r17	     ; перемещение одной строки
   4370	F4D7  81 EE 1FB0		     sub     si,2000h-80     ; перемещение в следующую строку
   4371	F4DB  81 EF 1FB0		     sub     di,2000h-80
   4372	F4DF  FE CC			     dec     ah		     ; количество строк	для перемещения
   4373	F4E1  75 F1			     jnz     r8	     ; продолжать, пока	все строки не переместятся
   4374
   4375				     ;	 Заполнение освобожденных строк
   4376	F4E3			     r9:
   4377	F4E3  8A C7			     mov     al,bh
   4378	F4E5			     r10:
   4379	F4E5  E8 0088			     call    r18	     ; очистить	эту строку
   4380	F4E8  81 EF 1FB0		     sub     di,2000h-80     ; указать на следующую
   4381	F4EC  FE CB			     dec     bl		     ; количество строк	для заполнения
   4382	F4EE  75 F5			     jnz     r10	     ; цикл очистки
   4383	F4F0  E9 FCD4			     jmp     video_return    ; к выходу	из программы
   4384
   4385	F4F3			     r11:
   4386	F4F3  8A DE			     mov     bl,dh	     ; установить количество пробелов
   4387	F4F5  EB EC			     jmp     short r9	     ; очистить
   4388	F4F7			     graphics_up     endp
   4389
   4390				     ;---------------------------------
   4391				     ;
   4392				     ;	 Программа перемещает блок символов вниз в режиме графики
   4393				     ;
   4394				     ;----------------------------------
   4395
   4396	F4F7			     graphics_down proc	     near
   4397	F4F7  FD			     std		     ; установить направление
   4398	F4F8  8A D8			     mov     bl,al	     ; сохранить количество строк
   4399	F4FA  8B C2			     mov     ax,dx	     ; получить	нижнюю правую позицию в	AX
   4400
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 89
1840v4.asm



   4401
   4402	F4FC  E8 0210			     call    graph_posn
   4403	F4FF  8B F8			     mov     di,ax	     ; сохранить результат
   4404
   4405				     ;	 Определение размера блока
   4406
   4407	F501  2B D1			     sub     dx,cx
   4408	F503  81 C2 0101		     add     dx,101h
   4409	F507  D0 E6			     sal     dh,1
   4410	F509  D0 E6			     sal     dh,1
   4411
   4412
   4413	F50B  80 3E 0049r 06		     cmp     crt_mode,6
   4414	F510  73 05			     jnc     r12
   4415
   4416	F512  D0 E2			     sal     dl,1
   4417	F514  D1 E7			     sal     di,1
   4418	F516  47			     inc     di
   4419
   4420				     ;	 Определение адреса источника в	буфере
   4421	F517			     r12:
   4422	F517  06			     push    es
   4423	F518  1F			     pop     ds
   4424	F519  2A ED			     sub     ch,ch	     ; обнулить	старший	байт счетчика
   4425	F51B  81 C7 00F0		     add     di,240	     ; указать последнюю строку
   4426	F51F  D0 E3			     sal     bl,1	     ; умножить	количество строк на 4
   4427	F521  D0 E3			     sal     bl,1
   4428	F523  74 2E			     jz	     r16	     ; если 0, заполнить пробелом
   4429	F525  8A C3			     mov     al,bl	     ; получить	количество строк в AL
   4430	F527  B4 50			     mov     ah,80	     ; 80 байт/строк
   4431	F529  F6 E4			     mul     ah		     ; определить смещение источника
   4432	F52B  8B F7			     mov     si,di	     ; установить источник
   4433	F52D  2B F0			     sub     si,ax	     ; вычесть смещение
   4434	F52F  8A E6			     mov     ah,dh	     ; количество строк
   4435	F531  2A E3			     sub     ah,bl	     ; определить число	для перемещения
   4436
   4437	F533			     r13:
   4438	F533  E8 0021			     call    r17	     ; переместить одну	строку
   4439	F536  81 EE 2050		     sub     si,2000h+80     ; установить следующую строку
   4440	F53A  81 EF 2050		     sub     di,2000h+80
   4441	F53E  FE CC			     dec     ah		     ; количество строк	для перемещения
   4442	F540  75 F1			     jnz     r13	     ; продолжать, пока	все не переместятся
   4443
   4444				     ;	 Заполнение освобожденных строк
   4445	F542			     r14:
   4446	F542  8A C7			     mov     al,bh	     ; атрибут заполнения
   4447	F544			     r15:
   4448	F544  E8 0029			     call    r18	     ; очистить	строку
   4449	F547  81 EF 2050		     sub     di,2000h+80     ; указать следующую строку
   4450	F54B  FE CB			     dec     bl		     ; число строк для заполнения
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 90
1840v4.asm



   4451	F54D  75 F5			     jnz     r15
   4452	F54F  FC			     cld		     ; сброс признака направления
   4453	F550  E9 FC74			     jmp     video_return    ; к выходу	из программы
   4454
   4455	F553			     r16:
   4456	F553  8A DE			     mov     bl,dh
   4457	F555  EB EB			     jmp     short r14	     ; очистить
   4458	F557			     graphics_down endp
   4459
   4460				     ;	 Программа перемещения одной строки
   4461
   4462	F557			     r17     proc    near
   4463	F557  8A CA			     mov     cl,dl	     ; число байт в строке
   4464	F559  56			     push    si
   4465	F55A  57			     push    di		     ; хранить указатели
   4466	F55B  F3> A4			     rep     movsb	     ; переместить четное поле
   4467	F55D  5F			     pop     di
   4468	F55E  5E			     pop     si
   4469	F55F  81 C6 2000		     add     si,2000h
   4470	F563  81 C7 2000		     add     di,2000h	     ; указать нечетное	поле
   4471	F567  56			     push    si
   4472	F568  57			     push    di		     ; сохранить указатели
   4473	F569  8A CA			     mov     cl,dl	     ; возврат счвтчика
   4474	F56B  F3> A4			     rep     movsb	     ; передать	нечетное поле
   4475	F56D  5F			     pop     di
   4476	F56E  5E			     pop     si		     ; возврат указателей
   4477	F56F  C3			     ret		     ; возврат к программе
   4478	F570			     r17     endp
   4479
   4480				     ;	 Заполнение пробелами строки
   4481
   4482	F570			     r18     proc    near
   4483	F570  8A CA			     mov     cl,dl	     ; число байт в поле
   4484	F572  57			     push    di		     ; хранить указатель
   4485	F573  F3> AA			     rep     stosb	     ; запомнить новое значение
   4486	F575  5F			     pop     di		     ; вернуть указатель
   4487	F576  81 C7 2000		     add     di,2000h	     ; указать нечетное	поле
   4488	F57A  57			     push    di
   4489	F57B  8A CA			     mov     cl,dl
   4490	F57D  F3> AA			     rep     stosb	     ; заполнить нечетное поле
   4491	F57F  5F			     pop     di
   4492	F580  C3			     ret		     ; возврат к программе
   4493	F581			     r18     endp
   4494
   4495				     ;--------------------------------------
   4496				     ;
   4497				     ;	graphics_write
   4498				     ;
   4499				     ;	 Эта программа записывает символ в режиме графики
   4500				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 91
1840v4.asm



   4501				     ;	 ВХОД
   4502				     ;		AL - код символа,
   4503				     ;		BL - атрибут цвета, который используется в качестве цвета
   4504				     ;		     переднего плана (цвет символа). Если бит 7	BL=1, то
   4505				     ;		     выполняется операция XOR над байтом в буфере и байтом
   4506				     ;		     в генераторе символов,
   4507				     ;		CX - счетчик повторений	символа
   4508				     ;
   4509				     ;----------------------------------------
   4510
   4511					     assume cs:code,ds:data,es:data
   4512	F581			     graphics_write proc near
   4513	F581  B4 00			     mov     ah,0	     ; AH=0
   4514	F583  50			     push    ax		     ; сохранить значение кода символа
   4515
   4516				     ;	 Определение позиции в области буфера засылкой туда кода точек
   4517
   4518	F584  E8 0185			     call    s26	     ; найти ячейку в области буфера
   4519	F587  8B F8			     mov     di,ax	     ; указатель области в DI
   4520
   4521				     ;	 Определение области для получения кода	точки
   4522
   4523	F589  58			     pop     ax		     ; восстановить код	точки
   4524	F58A  3C 80			     cmp     al,80h	     ; во второй половине ?
   4525	F58C  73 06			     jae     s1		     ; да
   4526
   4527				     ;	 Изображение есть в первой половине памяти
   4528
   4529	F58E  BE FA6Er			     mov     si, offset	crt_char_gen  ;	смещение изображения
   4530	F591  0E			     push    cs		     ; хранить сегмент в стеке
   4531	F592  EB 0F			     jmp     short s2	     ; определить режим
   4532
   4533				     ;	 Изображение есть во второй части памяти
   4534
   4535	F594			     s1:
   4536	F594  2C 80			     sub     al,80h	     ; 0 во вторую половину
   4537	F596  1E			     push    ds		     ; хранить указатель данных
   4538	F597  2B F6			     sub     si,si
   4539	F599  8E DE			     mov     ds,si	     ; установить адресацию
   4540					     assume  ds:abs0
   4541	F59B  C5 36 007Cr		     lds     si,ext_ptr	     ; получить	смещение
   4542	F59F  8C DA			     mov     dx,ds	     ; получить	сегмент
   4543					     assume  ds:data
   4544	F5A1  1F			     pop     ds		     ; восстановить сегмент данных
   4545	F5A2  52			     push    dx		     ; хранить сегмент в стеке
   4546
   4547				     ;	 Опеделение графического режима	операции
   4548
   4549	F5A3			     s2:			     ; определение режима
   4550	F5A3  D1 E0			     sal     ax,1	     ; умножить	указатель кода на 8
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 92
1840v4.asm



   4551	F5A5  D1 E0			     sal     ax,1
   4552	F5A7  D1 E0			     sal     ax,1
   4553	F5A9  03 F0			     add     si,ax	     ; SI содержит смещение
   4554	F5AB  80 3E 0049r 06		     cmp     crt_mode,6
   4555	F5B0  1F			     pop     ds		     ; восстановить указатель таблицы
   4556	F5B1  72 2C			     jc	     s7	     ; проверка	для средней разрешающей	способности
   4557
   4558				     ;	 Высокая разрешающая способность
   4559	F5B3			     s3:
   4560	F5B3  57			     push    di		     ; сохранить указатель области
   4561	F5B4  56			     push    si		     ; сохранить указатель кода
   4562	F5B5  B6 04			     mov     dh,4	     ; количество циклов
   4563	F5B7			     s4:
   4564	F5B7  AC			     lodsb		     ; выборка четного байта
   4565	F5B8  F6 C3 80			     test    bl,80h
   4566	F5BB  75 16			     jnz     s6
   4567	F5BD  AA			     stosb
   4568	F5BE  AC			     lodsb
   4569	F5BF			     s5:
   4570	F5BF  26: 88 85	1FFF		     mov es:[di+1fffh],al    ; запомнить во второй части
   4571	F5C4  83 C7 4F			     add     di,79	     ; передать	следующую строку
   4572	F5C7  FE CE			     dec     dh		     ; выполнить цикл
   4573	F5C9  75 EC			     jnz     s4
   4574	F5CB  5E			     pop     si
   4575	F5CC  5F			     pop     di		     ; восстановить указатель области
   4576	F5CD  47			     inc     di	     ; указать на следующую позицию символа
   4577	F5CE  E2 E3			     loop    s3		     ; записать	последующие символы
   4578	F5D0  E9 FBF4			     jmp     video_return
   4579
   4580	F5D3			     s6:
   4581	F5D3  26: 32 05			     xor al,es:[di]
   4582	F5D6  AA			     stosb		     ; запомнить код
   4583	F5D7  AC			     lodsb		     ; выборка нечетного символа
   4584	F5D8  26: 32 85	1FFF		     xor  al,es:[di+1fffh]
   4585	F5DD  EB E0			     jmp     s5		     ; повторить
   4586
   4587				     ;	 Средняя разрешающая способность записи
   4588	F5DF			     s7:
   4589	F5DF  8A D3			     mov     dl,bl	     ; сохранить старший бит цвета
   4590	F5E1  D1 E7			     sal     di,1    ; умножить	на 2, т.к. два байта/символа
   4591	F5E3  E8 00D1			     call    s19	     ; расширение BL до	полного	слова цвета
   4592	F5E6			     s8:
   4593	F5E6  57			     push    di
   4594	F5E7  56			     push    si
   4595	F5E8  B6 04			     mov     dh,4	     ; число циклов
   4596	F5EA			     s9:
   4597	F5EA  AC			     lodsb		     ; получить	код точки
   4598	F5EB  E8 00DE			     call    s21	     ; продублировать
   4599	F5EE  23 C3			     and     ax,bx	     ; окрашивание в заданный цвет
   4600	F5F0  F6 C2 80			     test    dl,80h
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 93
1840v4.asm



   4601	F5F3  74 07			     jz	     s10
   4602	F5F5  26: 32 25			     xor     ah,es:[di]	     ; выполнить функцию XOR со	"старым"
   4603	F5F8  26: 32 45	01		     xor     al,es:[di+1]    ; и "новым" цветами
   4604	F5FC  26: 88 25		     s10:    mov  es:[di],ah	     ; запомнить первый	байт
   4605	F5FF  26: 88 45	01		     mov es:[di+1],al	     ; запомнить второй	байт
   4606	F603  AC			     lodsb		     ; получить	код точки
   4607	F604  E8 00C5			     call    s21
   4608	F607  23 C3			     and     ax,bx	     ; окрашивание нечетного байта
   4609	F609  F6 C2 80			     test    dl,80h
   4610	F60C  74 0A			     jz	 s11
   4611	F60E  26: 32 A5	2000		     xor     ah,es:[di+2000h]	; из первой половины
   4612	F613  26: 32 85	2001		     xor     al,es:[di+2001h]	; и из второй половины
   4613	F618  26: 88 A5	2000	     s11:    mov     es:[di+2000h],ah
   4614	F61D  26: 88 85	2001		     mov     es:[di+2001h],al	; запомнить вторую часть буфера
   4615	F622  83 C7 50			     add     di,80	     ; указать следующую ячейку
   4616	F625  FE CE			     dec     dh
   4617	F627  75 C1			     jnz     s9		     ; повторить
   4618	F629  5E			     pop     si
   4619	F62A  5F			     pop     di
   4620	F62B  83 C7 02			     add     di,2	     ; переход к следующему символу
   4621	F62E  E2 B6			     loop    s8		     ; режим записи
   4622	F630  E9 FB94			     jmp     video_return
   4623	F633			     graphics_write  endp
   4624				     ;-------------------------------------
   4625				     ;graphics_read
   4626				     ;
   4627				     ;	 Программа считывает символ в режиме графики
   4628				     ;
   4629				     ;-------------------------------------
   4630	F633			     graphics_read   proc    near
   4631	F633  E8 00D6			     call    s26
   4632	F636  8B F0			     mov     si,ax	     ; сохранить в SI
   4633	F638  83 EC 08			     sub     sp,8	     ; зарезервировать в стеке 8 байт для
   4634								     ; записи символа из буфера	дисплея
   4635	F63B  8B EC			     mov     bp,sp	     ; указатель для хранения области
   4636
   4637				     ;	 Определение режима графики
   4638
   4639	F63D  80 3E 0049r 06		     cmp     crt_mode,6
   4640	F642  06			     push    es
   4641	F643  1F			     pop     ds		     ; указать сегмент
   4642	F644  72 1A			     jc	     s13	     ; средняя разрешающая способность
   4643
   4644				     ;	Высокая	разрешающая способность	для считавания
   4645
   4646	F646  B6 04			     mov     dh,4
   4647	F648			     s12:
   4648	F648  8A 04			     mov     al,byte ptr [si]	; получить первый байт
   4649	F64A  88 46 00			     mov byte ptr [bp],al	; запомнить в памяти
   4650	F64D  45			     inc     bp
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 94
1840v4.asm



   4651	F64E  8A 84 2000		     mov al,byte ptr [si+2000h]	  ; получить младший байт
   4652	F652  88 46 00			     mov byte ptr [bp],al
   4653	F655  45			     inc     bp
   4654	F656  83 C6 50			     add     si,80	     ; переход на следующую четную строку
   4655	F659  FE CE			     dec     dh
   4656	F65B  75 EB			     jnz     s12	     ; повторить
   4657	F65D  EB 17			     jmp     short s15	     ; переход к хранению кодов	точек
   4658	F65F  90			     nop
   4659
   4660				     ;	 Средняя разрешающая способность для считывания
   4661	F660			     s13:
   4662	F660  D1 E6			     sal     si,1      ; смещение умножить на 2, т.к. 2	байта/символа
   4663	F662  B6 04			     mov     dh,4
   4664	F664			     s14:
   4665	F664  E8 0088			     call    s23
   4666	F667  81 C6 2000		     add     si,2000h
   4667	F66B  E8 0081			     call    s23
   4668	F66E  81 EE 1FB0		     sub     si,2000h-80
   4669	F672  FE CE			     dec     dh
   4670	F674  75 EE			     jnz     s14	     ; повторить
   4671
   4672				     ;	 Сохранить
   4673	F676			     s15:
   4674	F676  BF FA6Er			     mov     di,offset crt_char_gen   ;	смещение
   4675	F679  0E			     push    cs
   4676	F67A  07			     pop     es
   4677	F67B  83 ED 08			     sub     bp,8	     ; восстановить начальный адрес
   4678	F67E  8B F5			     mov     si,bp
   4679	F680  FC			     cld		     ; установить направление
   4680	F681  B0 00			     mov     al,0
   4681	F683			     s16:
   4682	F683  16			     push    ss
   4683	F684  1F			     pop     ds
   4684	F685  BA 0080			     mov     dx,128	     ; количество символов
   4685	F688			     s17:
   4686	F688  56			     push    si
   4687	F689  57			     push    di
   4688	F68A  B9 0008			     mov     cx,8	     ; количество байт в символе
   4689	F68D  F3> A6			     repe    cmpsb	     ; сравнить
   4690	F68F  5F			     pop     di
   4691	F690  5E			     pop     si
   4692	F691  74 1E			     jz	     s18	     ; если признак = 0,символы	сравнились
   4693	F693  FE C0			     inc     al		     ; не сравнились
   4694	F695  83 C7 08			     add     di,8	     ; следующий код точки
   4695	F698  4A			     dec     dx		     ; - 1 из счетчика
   4696	F699  75 ED			     jnz     s17	     ; повторить
   4697
   4698
   4699	F69B  3C 00			     cmp     al,0
   4700	F69D  74 12			     je	     s18    ; переход, если все	сканировано, но	символ
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 95
1840v4.asm



   4701							    ; не найден
   4702	F69F  2B C0			     sub     ax,ax
   4703	F6A1  8E D8			     mov     ds,ax	     ; установить адресацию вектора
   4704					     assume  ds:abs0
   4705	F6A3  C4 3E 007Cr		     les     di,ext_ptr
   4706	F6A7  8C C0			     mov     ax,es
   4707	F6A9  0B C7			     or	     ax,di
   4708	F6AB  74 04			     jz	     s18
   4709	F6AD  B0 80			     mov     al,128	     ; начало второй части
   4710	F6AF  EB D2			     jmp     short s16	     ; вернуться и повторить
   4711					     assume  ds:data
   4712
   4713	F6B1			     s18:
   4714	F6B1  83 C4 08			     add     sp,8
   4715	F6B4  E9 FB10			     jmp     video_return
   4716	F6B7			     graphics_read   endp
   4717
   4718				     ;---------------------------------
   4719				     ;
   4720				     ;	 Эта программа заполняет регистр BX двумя младшими битами
   4721				     ; регистра	BL.
   4722				     ;
   4723				     ;	 ВХОД
   4724				     ;		BL - используемый цвет (младшие	два бита).
   4725				     ;
   4726				     ;	 ВЫХОД
   4727				     ;		BX - используемый цвет (восемь повторений двух битов цвета).
   4728				     ;
   4729				     ;---------------------------------
   4730	F6B7			     s19     proc    near
   4731	F6B7  80 E3 03			     and     bl,3	     ; выделить	биты цвета
   4732	F6BA  8A C3			     mov     al,bl	     ; переписать в AL
   4733	F6BC  51			     push    cx		     ; сохранить регистр
   4734	F6BD  B9 0003			     mov     cx,3	     ; количество повторений
   4735	F6C0			     s20:
   4736	F6C0  D0 E0			     sal     al,1
   4737	F6C2  D0 E0			     sal     al,1	     ; сдвиг влево на 2
   4738	F6C4  0A D8			     or	     bl,al	     ; в BL накапливается результат
   4739	F6C6  E2 F8			     loop    s20	     ; цикл
   4740	F6C8  8A FB			     mov     bh,bl	     ; заполнить
   4741	F6CA  59			     pop     cx
   4742	F6CB  C3			     ret		     ; все выполнено
   4743	F6CC			     s19     endp
   4744				     ;--------------------------------------
   4745				     ;
   4746				     ;	 Эта программа берет байт в AL и удваивает все биты, превращая
   4747				     ; 8 бит в 16 бит. Результат помещается в AX.
   4748				     ;--------------------------------------
   4749	F6CC			     s21     proc    near
   4750	F6CC  52			     push    dx		     ; сохранить регистры
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 96
1840v4.asm



   4751	F6CD  51			     push    cx
   4752	F6CE  53			     push    bx
   4753	F6CF  BA 0000			     mov     dx,0	     ; результат удвоения
   4754	F6D2  B9 0001			     mov     cx,1	     ; маска
   4755	F6D5			     s22:
   4756	F6D5  8B D8			     mov     bx,ax
   4757	F6D7  23 D9			     and     bx,cx	     ; выделение бита
   4758	F6D9  0B D3			     or	     dx,bx	     ; накапливание результата
   4759	F6DB  D1 E0			     shl     ax,1
   4760	F6DD  D1 E1			     shl     cx,1	     ; сдвинуть	базу и маску на	1
   4761	F6DF  8B D8			     mov     bx,ax
   4762	F6E1  23 D9			     and     bx,cx
   4763	F6E3  0B D3			     or	     dx,bx
   4764	F6E5  D1 E1			     shl     cx,1    ; сдиг маски, для выделения следующего бита
   4765	F6E7  73 EC			     jnc     s22
   4766	F6E9  8B C2			     mov     ax,dx
   4767	F6EB  5B			     pop     bx		     ; восстановить регистры
   4768	F6EC  59			     pop     cx
   4769	F6ED  5A			     pop     dx
   4770	F6EE  C3			     ret		     ; к выходу	из прерывания
   4771	F6EF			     s21     endp
   4772
   4773				     ;----------------------------------
   4774				     ;
   4775				     ;	 Эта программа преобразовывает двух-битовое представление точки
   4776				     ; (C1,C0) в однобитовое
   4777				     ; (C1,C0) к однобитовому.
   4778				     ;
   4779				     ;----------------------------------
   4780	F6EF			     s23     proc    near
   4781	F6EF  8A 24			     mov     ah,byte ptr [si]	; получить первый байт
   4782	F6F1  8A 44 01			     mov     al,byte ptr [si+1]	  ; получить второй байт
   4783	F6F4  B9 C000			     mov     cx,0c000h	     ; 2 бита маски
   4784	F6F7  B2 00			     mov     dl,0	     ; регистр результата
   4785	F6F9			     s24:
   4786	F6F9  85 C1			     test    ax,cx	     ; проверка	2 младших бит AX на 0
   4787	F6FB  F8			     clc		     ; сбросить	признак	переноса CF
   4788	F6FC  74 01			     jz	     s25	     ; переход если 0
   4789	F6FE  F9			     stc		     ; нет - установить	CF
   4790	F6FF  D0 D2		     s25:    rcl     dl,1	     ; циклический сдвиг
   4791	F701  D1 E9			     shr     cx,1
   4792	F703  D1 E9			     shr     cx,1
   4793	F705  73 F2			     jnc     s24	     ; повторить, если CF=1
   4794	F707  88 56 00			     mov byte ptr [bp],dl    ; запомнить результат
   4795	F70A  45			     inc     bp
   4796	F70B  C3			     ret		     ; к выходу	из прерывания
   4797	F70C			     s23     endp
   4798
   4799				     ;---------------------------------------
   4800				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 97
1840v4.asm



   4801				     ;	 Эта программа определает положение курсора относительно      мяти и
   4802				     ; начала буфера в режиме графики				      /символ
   4803				     ;
   4804				     ;	 ВЫХОД
   4805				     ;		AX  содержит смещение курсора
   4806				     ;
   4807				     ;-----------------------------------------
   4808	F70C			     s26     proc    near
   4809	F70C  A1 0050r			     mov     ax,cursor_posn  ; получить	текущее	положение курсора
   4810	F70F			     graph_posn	     label   near
   4811	F70F  53			     push    bx		     ; сохранить регистр
   4812	F710  8B D8			     mov     bx,ax	     ; сохранить текущее положение курсора
   4813	F712  8A C4			     mov     al,ah	     ; строка
   4814	F714  F6 26 004Ar		     mul     byte ptr crt_cols	 ; умножить на байт/колонку
   4815	F718  D1 E0			     shl     ax,1	     ; умножить	на 4
   4816	F71A  D1 E0			     shl     ax,1
   4817	F71C  2A FF			     sub     bh,bh	     ; выделить	значение колонки
   4818	F71E  03 C3			     add     ax,bx	     ; определить смещение
   4819	F720  5B			     pop     bx
   4820	F721  C3			     ret		     ; к выходу	из прерывания
   4821	F722			     s26     endp
   4822
   4823				     ;----------------------------------------
   4824				     ;
   4825				     ;	 Записать телетайп (INT	10H, AH=14)
   4826				     ;
   4827				     ;	 Эта программа выводит символ в	буфер ЭЛИ с одновременной уста-
   4828				     ; новкой позиции курсора и	передвижением курсора на экране.
   4829				     ;	 После записи символа в	последнюю позицию строки выполняется ав-
   4830				     ; томатический переход на новую строку. Если страница экрана за-
   4831				     ; полнена (позиция	курсора	24,79/39), выполняется перемещение экрана
   4832				     ; на одну строку вверх. Освободившаяся строка заполняется значением
   4833				     ; атрибута	символа	(для алфавитно-цифрового режима). Для графики цвет=00
   4834				     ; После записи очередного символа курсор установлен в следующую позицию.
   4835				     ;
   4836				     ;	 ВХОД
   4837				     ;		AL - код выводимого символа,
   4838				     ;		BL - цвет переднего плана для графики.
   4839				     ;
   4840				     ;----------------------------------------
   4841
   4842					     assume  cs:code,ds:data
   4843	F722			     write_tty	     proc    near
   4844	F722  50			     push    ax		     ; сохранить регистры
   4845	F723  50			     push    ax
   4846	F724  B4 03			     mov     ah,3
   4847	F726  CD 10			     int     10h	     ; считать положение текущего курсора
   4848	F728  58			     pop     ax		     ; восстановить символ
   4849
   4850				     ;	 DX содержит текущую позицию курсора
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 98
1840v4.asm



   4851
   4852	F729  3C 08			     cmp     al,8	     ; есть возврат на одну позицию ?
   4853	F72B  74 59			     je	     u8		     ; возврат на одну позицию
   4854	F72D  3C 0D			     cmp     al,0dh	     ; есть возврат каретки ?
   4855	F72F  74 5E			     je	     u9		     ; возврат каретки
   4856	F731  3C 0A			     cmp     al,0ah	     ; есть граница поля ?
   4857	F733  74 5E			     je	     u10	     ; граница поля
   4858	F735  3C 07			     cmp     al,07h	     ; звуковой	сигнал ?
   4859	F737  74 61			     je	     u11	     ; звуковой	сигнал
   4860
   4861				     ;	 Запись	символа	на экран
   4862
   4863	F739  8A 3E 0062r		     mov     bh,active_page
   4864	F73D  B4 0A			     mov     ah,10	     ; запись символа без атрибута
   4865	F73F  B9 0001			     mov     cx,1
   4866	F742  CD 10			     int     10h
   4867
   4868				     ;	 Положение курсора для следующего символа
   4869
   4870	F744  FE C2			     inc     dl
   4871	F746  3A 16 004Ar		     cmp     dl,byte ptr crt_cols
   4872	F74A  75 36			     jnz     u7		     ; переход к установке курсора
   4873	F74C  B2 00			     mov     dl,0
   4874	F74E  80 FE 18			     cmp     dh,24	     ; проверка	граничной строки
   4875	F751  75 2D			     jnz     u6		     ; установить курсор
   4876
   4877				     ;	 Сдвиг экрана
   4878	F753			     u1:
   4879
   4880	F753  B4 02			     mov     ah,2
   4881	F755  B7 00			     mov     bh,0
   4882	F757  CD 10			     int     10h	     ; установить курсор
   4883
   4884
   4885	F759  A0 0049r			     mov     al,crt_mode     ; получить	текущий	режим
   4886	F75C  3C 04			     cmp     al,4
   4887	F75E  72 06			     jc	     u2		     ; считывание курсора
   4888	F760  3C 07			     cmp     al,7
   4889	F762  B7 00			     mov     bh,0	     ; цвет заднего плана
   4890	F764  75 06			     jne     u3
   4891
   4892	F766			     u2:			     ; считывание курсора
   4893	F766  B4 08			     mov     ah,8
   4894	F768  CD 10			     int     10h	; считать символ/атрибут текущего курсора
   4895	F76A  8A FC			     mov     bh,ah	     ; запомнить в BH
   4896
   4897				     ;	 Перемещение экрана на одну строку вверх
   4898
   4899	F76C			     u3:
   4900	F76C  B8 0601			     mov     ax,601h
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 99
1840v4.asm



   4901	F76F  B9 0000			     mov     cx,0	     ; верхний левый угол
   4902	F772  B6 18			     mov     dh,24	     ; координаты нижнего правого
   4903	F774  8A 16 004Ar		     mov     dl,byte ptr crt_cols    ; угла
   4904	F778  FE CA			     dec     dl
   4905	F77A			     u4:
   4906	F77A  CD 10			     int     10h
   4907
   4908				     ;	 Выход из прерывания
   4909
   4910	F77C			     u5:
   4911	F77C  58			     pop     ax		     ; восстановить символ
   4912	F77D  E9 FA47			     jmp     video_return    ; возврат к программе
   4913
   4914	F780			     u6:			     ; установить курсор
   4915	F780  FE C6			     inc     dh		     ; следующая строка
   4916	F782			     u7:			     ; установить курсор
   4917	F782  B4 02			     mov     ah,2
   4918	F784  EB F4			     jmp     short u4	     ; установить новый	курсор
   4919
   4920				     ;	 Сдвиг курсора на одну позицию влево
   4921
   4922	F786			     u8:
   4923	F786  80 FA 00			     cmp     dl,0
   4924	F789  74 F7			     je	     u7		     ; установить курсор
   4925	F78B  FE CA			     dec     dl		     ; нет - снова его передать
   4926	F78D  EB F3			     jmp     short u7
   4927
   4928				     ;	 Перемещение курсора в начало строки
   4929
   4930	F78F			     u9:
   4931	F78F  B2 00			     mov     dl,0
   4932	F791  EB EF			     jmp     short u7	     ; установить курсор
   4933
   4934				     ;	 Перемещение курсора на	следующую строку
   4935
   4936	F793			     u10:
   4937	F793  80 FE 18			     cmp     dh,24	     ; последняя строка	экрана
   4938	F796  75 E8			     jne     u6		     ; да - сдвиг экрана
   4939	F798  EB B9			     jmp     short u1	     ; нет - снова установить курсор
   4940
   4941				     ;	 Звуковой сигнал
   4942
   4943	F79A			     u11:
   4944	F79A  B3 02			     mov     bl,2	     ; уст длительность	звукового сигнала
   4945	F79C  E8 EE0A			     call    beep	     ; звук
   4946	F79F  EB DB			     jmp     short u5	     ; возврат
   4947	F7A1			     write_tty	     endp
   4948
   4949				     ;
   4950				     ;----------------------------------------
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 100
1840v4.asm



   4951				     ;
   4952				     ;	 Эта программа считывает положение светового пера.
   4953				     ; Проверяется переключатель и триггер светового пера. Если	бит 1 ре-
   4954				     ; гистра состояния	(порт 3DA)=1, то триггер установлен. Если бит 2	порта
   4955				     ; 3DA=0, то установлен переключатель.
   4956				     ;	 Порты 3BD и 3DC используются для установки и сброса триггера и	пере-
   4957				     ; ключателя светового пера.
   4958				     ;	 В регистрах R16 и R17 контроллера содержится адрес координат пера
   4959				     ; относительно начала буфера дисплея.
   4960				     ;	 Если триггер и	переключатель установлены, то программа	определяет
   4961				     ; положение светового пера, в противном случае, возврат без выдачи
   4962				     ; информации.
   4963				     ;
   4964				     ;	 В ППЭВМ ЕС1841	функция	не поддерживается
   4965				     ;-------------------------------------------------
   4966
   4967
   4968
   4969
   4970					     assume  cs:code,ds:data
   4971
   4972				     ;	 Таблица поправок для получения	фактических координат светового	пера
   4973
   4974	F7A1			     v1	     label   byte
   4975	F7A1  03 03 05 05 03 03	03+	     db	     3,3,5,5,3,3,3,4
   4976	      04
   4977
   4978	F7A9			     read_lpen	     proc    near
   4979
   4980
   4981	F7A9  B4 00			     mov     ah,0	     ; код возврата, если перо не включено
   4982	F7AB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый	адрес 6845
   4983	F7AF  83 C2 06			     add     dx,6	     ; указать регистр состояния
   4984	F7B2  EC			     in	     al,dx	     ; получить	регистр	состояния
   4985	F7B3  A8 04			     test    al,4	     ; проверить переключатель светового пера
   4986	F7B5  75 78			     jnz     v6		     ; не установлено, возврат
   4987
   4988				     ;	 Проверка триггера светового пера
   4989
   4990	F7B7  A8 02			     test    al,2	     ; проверить триггер светового пера
   4991	F7B9  74 7E			     jz	     v7		     ; возврат без сброса триггера
   4992
   4993				     ;	 Триггер был установлен, считать значение в AH
   4994
   4995	F7BB  B4 10			     mov     ah,16	     ; уст регистры светового пера 6845
   4996
   4997				     ;	 Ввод регистров, указанных AH и	преобразование в строки	колонки	в DX
   4998
   4999	F7BD  8B 16 0063r		     mov     dx,addr_6845
   5000	F7C1  8A C4			     mov     al,ah
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 101
1840v4.asm



   5001	F7C3  EE			     out     dx,al	     ; вывести в порт
   5002	F7C4  42			     inc     dx
   5003	F7C5  EC			     in	     al,dx	     ; получить	значение из порта
   5004	F7C6  8A E8			     mov     ch,al	     ; сохранить его в CX
   5005	F7C8  4A			     dec     dx		     ; регистр адреса
   5006	F7C9  FE C4			     inc     ah
   5007	F7CB  8A C4			     mov     al,ah	     ; второй регистр данных
   5008	F7CD  EE			     out     dx,al
   5009	F7CE  42			     inc     dx
   5010	F7CF  EC			     in	     al,dx	     ; получить	второе значение	данных
   5011	F7D0  8A E5			     mov     ah,ch	     ; AX содержит координаты светового	пера
   5012
   5013
   5014	F7D2  8A 1E 0049r		     mov     bl,crt_mode
   5015	F7D6  2A FF			     sub     bh,bh	     ; выделить	значение режима	в BX
   5016	F7D8  2E: 8A 9F	F7A1r		     mov     bl,cs:v1[bx]    ; значение	поправки
   5017	F7DD  2B C3			     sub     ax,bx
   5018	F7DF  2B 06 004Er		     sub     ax,crt_start
   5019
   5020	F7E3  79 03			     jns     v2
   5021	F7E5  B8 0000			     mov     ax,0	     ; поместить 0
   5022
   5023				     ;	 Определить режим
   5024
   5025	F7E8			     v2:
   5026	F7E8  B1 03			     mov     cl,3	     ; установить счетчик
   5027	F7EA  80 3E 0049r 04		     cmp     crt_mode,4	     ; определить, режим графики или
   5028								     ; альфа
   5029	F7EF  72 2A			     jb	     v4		     ; альфа-перо
   5030	F7F1  80 3E 0049r 07		     cmp     crt_mode,7
   5031	F7F6  74 23			     je	     v4		     ; альфа-перо
   5032
   5033				     ;	 Графический режим
   5034
   5035	F7F8  B2 28			     mov     dl,40	     ; делитель	для графики
   5036	F7FA  F6 F2			     div     dl	     ; определение строки (AL) и колонки (AH)
   5037								     ; пределы AL 0-99,	AH 0-39
   5038
   5039				     ;	 Определение положения строки для графики
   5040
   5041	F7FC  8A E8			     mov     ch,al	     ; сохранить значение строки в CH
   5042	F7FE  02 ED			     add     ch,ch	     ; умножить	на 2 четно/нечетное поле
   5043	F800  8A DC			     mov     bl,ah	     ; значение	колонки	в BX
   5044	F802  2A FF			     sub     bh,bh	     ; умножить	на 8 для среднего результата
   5045	F804  80 3E 0049r 06		     cmp     crt_mode,6	     ; определить среднюю или наивысшую
   5046								     ; разрешающую способность
   5047	F809  75 04			     jne     v3		     ; не наивысшая разрешающая	способность
   5048	F80B  B1 04			     mov     cl,4     ;	сдвинуть значение наивысшей разрешающей
   5049							      ;	способности
   5050	F80D  D0 E4			     sal     ah,1    ; сдвиг на	1 разряд влево значения	колонки
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 102
1840v4.asm



   5051	F80F			     v3:			     ; не наивысшая разрешающая	способность
   5052	F80F  D3 E3			     shl     bx,cl   ; умножить	на 16 для наивысшей разрешающей
   5053							     ; способности
   5054
   5055				     ;	 Определение положения символа для альфа
   5056
   5057	F811  8A D4			     mov     dl,ah	     ; значение	колонки	для возврата
   5058	F813  8A F0			     mov     dh,al	     ; значение	строки
   5059	F815  D0 EE			     shr     dh,1	     ; делить на 4
   5060	F817  D0 EE			     shr     dh,1	     ; для значения в пределах 0-24
   5061	F819  EB 12			     jmp     short v5	     ; возврат светового пера
   5062
   5063				     ;	 Режим альфа светового пера
   5064
   5065	F81B			     v4:			     ; альфа светового пера
   5066	F81B  F6 36 004Ar		     div     byte ptr crt_cols	; строка, колонка
   5067	F81F  8A F0			     mov     dh,al	     ; строка в	DH
   5068	F821  8A D4			     mov     dl,ah	     ; колонка в DL
   5069	F823  D2 E0			     sal     al,cl	     ; умножение строк на 8
   5070	F825  8A E8			     mov     ch,al
   5071	F827  8A DC			     mov     bl,ah
   5072	F829  32 FF			     xor     bh,bh
   5073	F82B  D3 E3			     sal     bx,cl
   5074	F82D			     v5:
   5075	F82D  B4 01			     mov     ah,1	     ; указать,	что все	установлено
   5076	F82F			     v6:
   5077	F82F  52			     push    dx		     ; сохранить значение возврата
   5078	F830  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый	адрес
   5079	F834  83 C2 07			     add     dx,7
   5080	F837  EE			     out     dx,al	     ; вывод
   5081	F838  5A			     pop     dx		     ; восстановить значение
   5082	F839			     v7:
   5083	F839  5F			     pop     di		      ;	восстановить регистры
   5084	F83A  5E			     pop     si
   5085	F83B  1F			     pop     ds
   5086	F83C  1F			     pop     ds
   5087	F83D  1F			     pop     ds
   5088	F83E  1F			     pop     ds
   5089	F83F  07			     pop     es
   5090	F840  CF			     iret
   5091	F841			     read_lpen	     endp
   5092
   5093				     ;--- int 12 ------------------------------------
   5094				     ;
   5095				     ;	  Программа определения	размера	памяти.
   5096				     ;
   5097				     ;	  Эта программа	передает в регистр AX об'ем памяти в Кбайтах.
   5098				     ;
   5099				     ;-----------------------------------------
   5100
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 103
1840v4.asm



   5101					     assume  cs:code,ds:data
   5102	F841			     memory_size_determine   proc    far
   5103	F841  FB			     sti		     ; установить бит разрешения прерывания
   5104	F842  1E			     push    ds		     ; сохранить сегмент
   5105	F843  B8 0040			     mov     ax,dat	     ; установить адресацию
   5106	F846  8E D8			     mov     ds,ax
   5107	F848  A1 0013r			     mov     ax,memory_size  ; получить	значение размера памяти
   5108	F84B  1F			     pop     ds		     ; восстановить сегмент
   5109	F84C  CF			     iret		     ; возврат из прерывания
   5110	F84D			     memory_size_determine   endp
   5111
   5112				     ;--- int 11-------------------------------
   5113				     ;
   5114				     ;	  Программа определения	состава	оборудования.
   5115				     ;
   5116				     ;	 Эта программа передает	в регистр AX конфигурацию системы.
   5117				     ;
   5118				     ;	 Разряды регистра AX имеют следующее значение:
   5119				     ;	 0	 - загрузка системы с НГМД;
   5120				     ;	 5,4	 - тип подключенного ЭЛИ и режим его работы:
   5121				     ;		   00 -	не используется;
   5122				     ;		   01 -	40х25, черно-белый режим цветного графического
   5123				     ;			ЭЛИ;
   5124				     ;		   10 -	80х25, черно-белый режим цветного графического
   5125				     ;			ЭЛИ;
   5126				     ;		   11 -	80х25, черно-белый режим монохромного ЭЛИ.
   5127				     ;	 7,6	 - количество НГМД;
   5128				     ;	 11,10,9 - количество адаптеров	стыка С2;
   5129				     ;	 12	 - адаптер игр;
   5130				     ;	 15,14	 - количество печатающих устройств.
   5131				     ;	 Разряды 6 и 7 устанавливаются только в	том случае, если
   5132				     ; разряд 0	установлен в "1".
   5133				     ;
   5134				     ;----------------------------------------------
   5135
   5136					     assume  cs:code,ds:data
   5137	F84D			     equipment	     proc    far
   5138	F84D  FB			     sti		     ; установить признак разрешения прерывания
   5139	F84E  1E			     push    ds		     ; сохранить сегмент
   5140	F84F  B8 0040			     mov     ax,dat	     ; установить адресацию
   5141	F852  8E D8			     mov     ds,ax
   5142	F854  A1 0010r			     mov     ax,equip_flag   ; получить	конфигурацию системы
   5143	F857  1F			     pop     ds		     ; восстановить сегмент
   5144	F858  CF			     iret		     ; возврат из прерывания
   5145	F859			     equipment	     endp
   5146
   5147				     ;****************************************
   5148				     ;
   5149				     ;	 Загрузка знакогенератора
   5150				     ;
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 104
1840v4.asm



   5151				     ;****************************************
   5152
   5153	F859			     bct     proc    near
   5154	F859  B8 DC00			     mov     ax,0dc00h
   5155	F85C  8E C0			     mov     es,ax
   5156	F85E  B9 1400			     mov     cx,1400h
   5157	F861  BA 03B8			     mov     dx,3b8h
   5158	F864  33 C0			     xor     ax,ax
   5159	F866  EE			     out     dx,al
   5160	F867  33 FF			     xor     di,di
   5161	F869  FC			     cld
   5162	F86A  F3> AB			     rep     stosw
   5163	F86C  BE FA6Er		     bct3:   mov     si,offset crt_char_gen
   5164	F86F  33 FF			     xor     di,di
   5165	F871  33 C0			     xor     ax,ax
   5166	F873  B1 80			     mov     cl,128
   5167	F875			     bct1:
   5168	F875  B3 08			     mov     bl,8
   5169	F877  2E: 8A 04		     bct2:   mov     al,cs:[si]
   5170	F87A  46			     inc     si
   5171	F87B  26: 89 05			     mov     word ptr es:[di],ax
   5172	F87E  47			     inc     di
   5173	F87F  47			     inc     di
   5174	F880  FE CB			     dec     bl
   5175	F882  75 F3			     jnz     bct2
   5176	F884  83 C7 10			     add     di,10h
   5177	F887  FE C9			     dec     cl
   5178	F889  75 EA				     jnz     bct1
   5179	F88B  B0 01				     mov     al, 1
   5180	F88D  EE				     out     dx, al
   5181	F88E  B8 B800				     mov     ax, 0B800h
   5182	F891  8E C0				     mov     es, ax
   5183	F893  B0 01				     mov     al, 1
   5184	F895  BA 03DF				     mov     dx, 3DFh
   5185	F898  EE				     out     dx, al
   5186	F899  BA 03D8				     mov     dx, 3D8h
   5187	F89C  EC				     in	     al, dx
   5188	F89D  8A D8				     mov     bl, al
   5189	F89F  B0 00				     mov     al, 0
   5190	F8A1  EE				     out     dx, al
   5191	F8A2  33 FF				     xor     di, di
   5192	F8A4  B9 0400				     mov     cx, 1024
   5193	F8A7  33 C0				     xor     ax, ax
   5194	F8A9  FC				     cld
   5195	F8AA  F3> AB				     repe stosw
   5196	F8AC  BE FA6Er				     mov     si, offset	crt_char_gen
   5197	F8AF  B9 0400				     mov     cx, 1024
   5198	F8B2  33 FF				     xor     di, di
   5199
   5200	F8B4			     bct4:
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 105
1840v4.asm



   5201	F8B4  2E: 8A 04				     mov     al, cs:[si]
   5202	F8B7  26: 88 05				     mov     es:[di], al
   5203	F8BA  46				     inc     si
   5204	F8BB  47				     inc     di
   5205	F8BC  E2 F6				     loop    bct4
   5206	F8BE  B0 00				     mov     al, 0
   5207	F8C0  BA 03DF				     mov     dx, 3DFh
   5208	F8C3  EE				     out     dx, al
   5209	F8C4  BA 03D8				     mov     dx, 3D8h
   5210	F8C7  8A C3				     mov     al, bl
   5211	F8C9  EE				     out     dx, al
   5212	F8CA  C3				     ret
   5213	F8CB			     bct     endp
   5214
   5215				     ;
   5216				     ;	 Таблица кодов русских маленьких букв (строчных)
   5217				     ;
   5218	F8CB			     rust    label   byte
   5219	F8CB  1B 31 32 33 34 35	36+	     db	     1bh,'1234567890-='
   5220	      37 38 39 30 2D 3D
   5221
   5222
   5223	F8D8  08 09			     db	     08h,09h
   5224	F8DA  D9 E6 E3 DA D5 DD	D3+	     db	     0d9h,0e6h,0e3h,0dah,0d5h,0ddh,0d3h,0e8h
   5225	      E8
   5226
   5227	F8E2  E9 D7 D6 ED 0D FF	E4+	     db	     0e9h,0d7h,0d6h,0edh,0dh,-1,0e4h,0ebh
   5228	      EB
   5229
   5230	F8EA  D2 D0 DF E0 DE DB	D4+	     db	     0d2h,0d0h,0dfh,0e0h,0deh,0dbh,0d4h,';:'
   5231	      3B 3A
   5232
   5233	F8F3  D1 EE 5C EF E7 E1	DC+	     db	     0d1h,0eeh,5ch,0efh,0e7h,0e1h,0dch,0d8h
   5234	      D8
   5235
   5236	F8FB  E2 EC 2C 2E 2F E5	2A	     db	     0e2h,0ech,',./',0e5h,'*'
   5237
   5238	F902  FF 20 EA			     db	     -1,' ',0eah
   5239
   5240
   5241	F905			     k30     label   byte
   5242	F905  52 4F 50 51 4B 4C	4D	     db	     82,79,80,81,75,76,77
   5243
   5244	F90C  47 48 49			     db	     71,72,73
   5245				     ;---
   5246	F90F  10 11 12 13 14 15	16+	     db	     16,17,18,19,20,21,22,23
   5247	      17
   5248
   5249	F917  18 19 1E 1F 20 21	22+	     db	     24,25,30,31,32,33,34,35
   5250	      23
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 106
1840v4.asm



   5251
   5252	F91F  24 25 26 2C 2D 2E	2F+	     db	     36,37,38,44,45,46,47,48
   5253	      30
   5254
   5255	F927  31 32			     db	     49,50
   5256
   5257				     ;	     Временный обработчик прерываний стыка С2
   5258
   5259	F929			     rs232_io:
   5260	F929  B8 61F0				     mov     ax, 61F0h
   5261	F92C  CF				     iret
   5262
   5263	F92D			     ex_memory:
   5264	F92D  F9				     stc
   5265	F92E  B4 86				     mov     ah, 86h
   5266	F930  CA 0002				     retf    2
   5267
   5268				     ;---
   5269	F933  F6 06 0017r 03	     k89:    test    kb_flag,left_shift+right_shift
   5270	F938  74 11			     jz	     k80
   5271	F93A  3C F0			     cmp     al,0f0h
   5272	F93C  74 23			     je	     k89a
   5273	F93E  3C B0			     cmp     al,0b0h
   5274	F940  72 06			     jb	     k81
   5275	F942  3C CF			     cmp     al,0cfh
   5276	F944  77 02			     ja	     k81
   5277	F946  04 20			     add     al,20h
   5278	F948  E9 EE94		     k81:    jmp     k61
   5279	F94B  3C F1		     k80:    cmp     al,0f1h
   5280	F94D  74 0D			     je	     k89b
   5281	F94F  3C D0			     cmp     al,0d0h
   5282	F951  72 F5			     jb	     k81
   5283	F953  3C FE			     cmp     al,0feh
   5284	F955  77 F1			     ja	     k81
   5285	F957  2C 20			     sub     al,20h
   5286	F959  E9 EE83			     jmp     k61
   5287	F95C  2C 01		     k89b:   sub     al,01h
   5288	F95E  E9 EE7E			     jmp     k61
   5289	F961  04 01		     k89a:   add     al,01h
   5290	F963  E9 EE79			     jmp     k61
   5291
   5292	F966			     write_tty2:
   5293	F966  8A 3E 0062r			     mov     bh, ds:active_page
   5294	F96A  E9 FDB5				     jmp     write_tty
   5295
   5296	F96D			     f19a:
   5297	F96D  42				     inc     dx
   5298	F96E  B0 08				     mov     al, 8
   5299	F970  EE				     out     dx, al
   5300	F971  BA 03FE				     mov     dx, 3FEh
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 107
1840v4.asm



   5301	F974  EE				     out     dx, al
   5302	F975  B0 A4				     mov     al, 0A4h
   5303	F977  E6 21				     out     inta01, al
   5304	F979  8B C6				     mov     ax, si
   5305	F97B  B1 03				     mov     cl, 3
   5306	F97D  E9 EBDC				     jmp     f19b
   5307
   5308	F980			     f20a:
   5309	F980  B0 80				     mov     al, 80h
   5310	F982  E6 A0				     out     0A0h, al
   5311	F984  B0 BC				     mov     al, 0BCh
   5312	F986  E6 21				     out     21h, al
   5313	F988  E9 EBE9				     jmp     f20b
   5314				     ;
   5315	F98B  50		     dummm_return:   push    ax
   5316	F98C  B0 20				     mov     al,20h
   5317	F98E  E6 20				     out     20h,al
   5318	F990  58				     pop     ax
   5319	F991  CF				     iret
   5320
   5321	F992  DC*(00)				     db	220 dup(0)
   5322
   5323				     ;**************************************
   5324				     ;
   5325				     ;	 Знакогенератор	графический 320х200 и 640х200
   5326				     ;
   5327				     ;***************************************
   5328
   5329
   5330
   5331	FA6E			     crt_char_gen  label  byte
   5332	FA6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;d_00
   5333	      00
   5334
   5335	FA76  7E 81 A5 81 BD 99	81+	     db	     07eh,081h,0a5h,081h,0bdh,099h,081h,07eh ;d_01
   5336	      7E
   5337
   5338	FA7E  7E FF DB FF C3 E7	FF+	     db	     07eh,0ffh,0dbh,0ffh,0c3h,0e7h,0ffh,07eh ;d_02
   5339	      7E
   5340
   5341	FA86  6C FE FE FE 7C 38	10+	     db	     06ch,0feh,0feh,0feh,07ch,038h,010h,000h ;d_03
   5342	      00
   5343
   5344	FA8E  10 38 7C FE 7C 38	10+	     db	     010h,038h,07ch,0feh,07ch,038h,010h,000h ;d_04
   5345	      00
   5346
   5347	FA96  38 7C 38 FE FE 7C	38+	     db	     038h,07ch,038h,0feh,0feh,07ch,038h,07ch ;d_05
   5348	      7C
   5349
   5350	FA9E  10 10 38 7C FE 7C	38+	     db	     010h,010h,038h,07ch,0feh,07ch,038h,07ch ;d_06
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 108
1840v4.asm



   5351	      7C
   5352
   5353	FAA6  00 00 18 3C 3C 18	00+	     db	     000h,000h,018h,03ch,03ch,018h,000h,000h ;d_07
   5354	      00
   5355
   5356	FAAE  FF FF E7 C3 C3 E7	FF+	     db	     0ffh,0ffh,0e7h,0c3h,0c3h,0e7h,0ffh,0ffh ;d_08
   5357	      FF
   5358
   5359	FAB6  00 3C 66 42 42 66	3C+	     db	     000h,03ch,066h,042h,042h,066h,03ch,000h ;d_09
   5360	      00
   5361
   5362	FABE  FF C3 99 BD BD 99	C3+	     db	     0ffh,0c3h,099h,0bdh,0bdh,099h,0c3h,0ffh ;d_0a
   5363	      FF
   5364
   5365	FAC6  0F 07 0F 7D CC CC	CC+	     db	     00fh,007h,00fh,07dh,0cch,0cch,0cch,078h ;d_0b
   5366	      78
   5367
   5368	FACE  3C 66 66 66 3C 18	7E+	     db	     03ch,066h,066h,066h,03ch,018h,07eh,018h ;d_0c
   5369	      18
   5370
   5371	FAD6  3F 33 3F 30 30 70	F0+	     db	     03fh,033h,03fh,030h,030h,070h,0f0h,0e0h ;d_0d
   5372	      E0
   5373
   5374	FADE  7F 63 7F 63 63 67	E6+	     db	     07fh,063h,07fh,063h,063h,067h,0e6h,0c0h ;d_0e
   5375	      C0
   5376
   5377	FAE6  99 5A 3C E7 E7 3C	5A+	     db	     099h,05ah,03ch,0e7h,0e7h,03ch,05ah,099h ;d_0f
   5378	      99
   5379
   5380
   5381	FAEE  80 E0 F8 FE F8 E0	80+	     db	     080h,0e0h,0f8h,0feh,0f8h,0e0h,080h,000h ;d_10
   5382	      00
   5383
   5384	FAF6  02 0E 3E FE 3E 0E	02+	     db	     002h,00eh,03eh,0feh,03eh,00eh,002h,000h ;d_11
   5385	      00
   5386
   5387	FAFE  18 3C 7E 18 18 7E	3C+	     db	     018h,03ch,07eh,018h,018h,07eh,03ch,018h ;d_12
   5388	      18
   5389
   5390	FB06  66 66 66 66 66 00	66+	     db	     066h,066h,066h,066h,066h,000h,066h,000h ;d_13
   5391	      00
   5392
   5393	FB0E  7F DB DB 7B 1B 1B	1B+	     db	     07fh,0dbh,0dbh,07bh,01bh,01bh,01bh,000h ;d_14
   5394	      00
   5395
   5396	FB16  3E 63 38 6C 6C 38	CC+	     db	     03eh,063h,038h,06ch,06ch,038h,0cch,078h ;d_15
   5397	      78
   5398
   5399	FB1E  00 00 00 00 7E 7E	7E+	     db	     000h,000h,000h,000h,07eh,07eh,07eh,000h ;d_16
   5400	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 109
1840v4.asm



   5401
   5402	FB26  18 3C 7E 18 7E 3C	18+	     db	     018h,03ch,07eh,018h,07eh,03ch,018h,0ffh ;d_17
   5403	      FF
   5404
   5405	FB2E  18 3C 7E 18 18 18	18+	     db	     018h,03ch,07eh,018h,018h,018h,018h,000h ;d_18
   5406	      00
   5407
   5408	FB36  18 18 18 18 7E 3C	18+	     db	     018h,018h,018h,018h,07eh,03ch,018h,000h ;d_19
   5409	      00
   5410
   5411	FB3E  00 18 0C FE 0C 18	00+	     db	     000h,018h,00ch,0feh,00ch,018h,000h,000h ;d_1a
   5412	      00
   5413
   5414	FB46  00 30 60 FE 60 30	00+	     db	     000h,030h,060h,0feh,060h,030h,000h,000h ;d_1b
   5415	      00
   5416
   5417	FB4E  00 00 C0 C0 C0 FE	00+	     db	     000h,000h,0c0h,0c0h,0c0h,0feh,000h,000h ;d_1c
   5418	      00
   5419
   5420	FB56  00 24 66 FF 66 24	00+	     db	     000h,024h,066h,0ffh,066h,024h,000h,000h ;d_1d
   5421	      00
   5422
   5423	FB5E  00 18 3C 7E FF FF	00+	     db	     000h,018h,03ch,07eh,0ffh,0ffh,000h,000h ;d_1e
   5424	      00
   5425
   5426	FB66  00 FF FF 7E 3C 18	00+	     db	     000h,0ffh,0ffh,07eh,03ch,018h,000h,000h ;d_1f
   5427	      00
   5428
   5429
   5430	FB6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;sp d_20
   5431	      00
   5432
   5433	FB76  30 78 78 30 30 00	30+	     db	     030h,078h,078h,030h,030h,000h,030h,000h ;!	d_21
   5434	      00
   5435
   5436	FB7E  6C 6C 6C 00 00 00	00+	     db	     06ch,06ch,06ch,000h,000h,000h,000h,000h ;"d_22
   5437	      00
   5438
   5439	FB86  6C 6C FE 6C FE 6C	6C+	     db	     06ch,06ch,0feh,06ch,0feh,06ch,06ch,000h ;#	d_23
   5440	      00
   5441
   5442	FB8E  30 7C C0 78 0C F8	30+	     db	     030h,07ch,0c0h,078h,00ch,0f8h,030h,000h ;$	d_24
   5443	      00
   5444
   5445	FB96  00 C6 CC 18 30 66	C6+	     db	     000h,0c6h,0cch,018h,030h,066h,0c6h,000h ;per cent d_25
   5446	      00
   5447
   5448	FB9E  38 6C 38 76 DC CC	76+	     db	     038h,06ch,038h,076h,0dch,0cch,076h,000h ;&	d_26
   5449	      00
   5450
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 110
1840v4.asm



   5451	FBA6  60 60 C0 00 00 00	00+	     db	     060h,060h,0c0h,000h,000h,000h,000h,000h ;'	d_27
   5452	      00
   5453
   5454	FBAE  18 30 60 60 60 30	18+	     db	     018h,030h,060h,060h,060h,030h,018h,000h ;(	d_28
   5455	      00
   5456
   5457	FBB6  60 30 18 18 18 30	60+	     db	     060h,030h,018h,018h,018h,030h,060h,000h ;)	d_29
   5458	      00
   5459
   5460	FBBE  00 66 3C FF 3C 66	00+	     db	     000h,066h,03ch,0ffh,03ch,066h,000h,000h ;*	d_2a
   5461	      00
   5462
   5463	FBC6  00 30 30 FC 30 30	00+	     db	     000h,030h,030h,0fch,030h,030h,000h,000h ;+	d_2b
   5464	      00
   5465
   5466	FBCE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,060h ;,	d_2c
   5467	      60
   5468
   5469	FBD6  00 00 00 FC 00 00	00+	     db	     000h,000h,000h,0fch,000h,000h,000h,000h ;-	d_2d
   5470	      00
   5471
   5472	FBDE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,000h ;.	d_2e
   5473	      00
   5474
   5475	FBE6  06 0C 18 30 60 C0	80+	     db	     006h,00ch,018h,030h,060h,0c0h,080h,000h ;/	d_2f
   5476	      00
   5477
   5478
   5479	FBEE  7C C6 CE DE F6 E6	7C+	     db	     07ch,0c6h,0ceh,0deh,0f6h,0e6h,07ch,000h ;0	d_30
   5480	      00
   5481
   5482	FBF6  30 70 30 30 30 30	FC+	     db	     030h,070h,030h,030h,030h,030h,0fch,000h ;1	d_31
   5483	      00
   5484
   5485	FBFE  78 CC 0C 38 60 CC	FC+	     db	     078h,0cch,00ch,038h,060h,0cch,0fch,000h ;2	d_32
   5486	      00
   5487
   5488	FC06  78 CC 0C 38 0C CC	78+	     db	     078h,0cch,00ch,038h,00ch,0cch,078h,000h ;3	d_33
   5489	      00
   5490
   5491	FC0E  1C 3C 6C CC FE 0C	1E+	     db	     01ch,03ch,06ch,0cch,0feh,00ch,01eh,000h ;4	d_34
   5492	      00
   5493
   5494	FC16  FC C0 F8 0C 0C CC	78+	     db	     0fch,0c0h,0f8h,00ch,00ch,0cch,078h,000h ;5	d_35
   5495	      00
   5496
   5497	FC1E  38 60 C0 F8 CC CC	78+	     db	     038h,060h,0c0h,0f8h,0cch,0cch,078h,000h ;6	d_36
   5498	      00
   5499
   5500	FC26  FC CC 0C 18 30 30	30+	     db	     0fch,0cch,00ch,018h,030h,030h,030h,000h ;7	d_37
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 111
1840v4.asm



   5501	      00
   5502
   5503	FC2E  78 CC CC 78 CC CC	78+	     db	     078h,0cch,0cch,078h,0cch,0cch,078h,000h ;8	d_38
   5504	      00
   5505
   5506	FC36  78 CC CC 7C 0C 18	70+	     db	     078h,0cch,0cch,07ch,00ch,018h,070h,000h ;9	d_39
   5507	      00
   5508
   5509	FC3E  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,000h ;:	d_3a
   5510	      00
   5511
   5512	FC46  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,060h ;;	d_3b
   5513	      60
   5514
   5515	FC4E  18 30 60 C0 60 30	18+	     db	     018h,030h,060h,0c0h,060h,030h,018h,000h ;<	d_3c
   5516	      00
   5517
   5518	FC56  00 00 FC 00 00 FC	00+	     db	     000h,000h,0fch,000h,000h,0fch,000h,000h ;=	d_3d
   5519	      00
   5520
   5521	FC5E  60 30 18 0C 18 30	60+	     db	     060h,030h,018h,00ch,018h,030h,060h,000h ;>	d_3e
   5522	      00
   5523
   5524	FC66  78 CC 0C 18 30 00	30+	     db	     078h,0cch,00ch,018h,030h,000h,030h,000h ;?	d_3f
   5525	      00
   5526
   5527
   5528	FC6E  7C C6 DE DE DE C0	78+	     db	     07ch,0c6h,0deh,0deh,0deh,0c0h,078h,000h ;@	d_40
   5529	      00
   5530
   5531	FC76  30 78 CC CC FC CC	CC+	     db	     030h,078h,0cch,0cch,0fch,0cch,0cch,000h ;A	d_41
   5532	      00
   5533
   5534	FC7E  FC 66 66 7C 66 66	FC+	     db	     0fch,066h,066h,07ch,066h,066h,0fch,000h ;B	d_42
   5535	      00
   5536
   5537	FC86  3C 66 C0 C0 C0 66	3C+	     db	     03ch,066h,0c0h,0c0h,0c0h,066h,03ch,000h ;C	d_43
   5538	      00
   5539
   5540	FC8E  F8 6C 66 66 66 6C	F8+	     db	     0f8h,06ch,066h,066h,066h,06ch,0f8h,000h ;D	d_44
   5541	      00
   5542
   5543	FC96  FE 62 68 78 68 62	FE+	     db	     0feh,062h,068h,078h,068h,062h,0feh,000h ;E	d_45
   5544	      00
   5545
   5546	FC9E  FE 62 68 78 68 60	F0+	     db	     0feh,062h,068h,078h,068h,060h,0f0h,000h ;F	d_46
   5547	      00
   5548
   5549	FCA6  3C 66 C0 C0 CE 66	3E+	     db	     03ch,066h,0c0h,0c0h,0ceh,066h,03eh,000h ;G	d_47
   5550	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 112
1840v4.asm



   5551
   5552	FCAE  CC CC CC FC CC CC	CC+	     db	     0cch,0cch,0cch,0fch,0cch,0cch,0cch,000h ;H	d_48
   5553	      00
   5554
   5555	FCB6  78 30 30 30 30 30	78+	     db	     078h,030h,030h,030h,030h,030h,078h,000h ;I	d_49
   5556	      00
   5557
   5558	FCBE  1E 0C 0C 0C CC CC	78+	     db	     01eh,00ch,00ch,00ch,0cch,0cch,078h,000h ;J	d_4a
   5559	      00
   5560
   5561	FCC6  E6 66 6C 78 6C 66	E6+	     db	     0e6h,066h,06ch,078h,06ch,066h,0e6h,000h ;K	d_4b
   5562	      00
   5563
   5564	FCCE  F0 60 60 60 62 66	FE+	     db	     0f0h,060h,060h,060h,062h,066h,0feh,000h ;L	d_4c
   5565	      00
   5566
   5567	FCD6  C6 EE FE FE D6 C6	C6+	     db	     0c6h,0eeh,0feh,0feh,0d6h,0c6h,0c6h,000h ;M	d_4d
   5568	      00
   5569
   5570	FCDE  C6 E6 F6 DE CE C6	C6+	     db	     0c6h,0e6h,0f6h,0deh,0ceh,0c6h,0c6h,000h ;N	d_4e
   5571	      00
   5572
   5573	FCE6  38 6C C6 C6 C6 6C	38+	     db	     038h,06ch,0c6h,0c6h,0c6h,06ch,038h,000h ;O	d_4f
   5574	      00
   5575
   5576
   5577	FCEE  FC 66 66 7C 60 60	F0+	     db	     0fch,066h,066h,07ch,060h,060h,0f0h,000h ;P	d_50
   5578	      00
   5579
   5580	FCF6  78 CC CC CC DC 78	1C+	     db	     078h,0cch,0cch,0cch,0dch,078h,01ch,000h ;Q	d_51
   5581	      00
   5582
   5583	FCFE  FC 66 66 7C 6C 66	E6+	     db	     0fch,066h,066h,07ch,06ch,066h,0e6h,000h ;R	d_52
   5584	      00
   5585
   5586	FD06  78 CC E0 70 1C CC	78+	     db	     078h,0cch,0e0h,070h,01ch,0cch,078h,000h ;S	d_53
   5587	      00
   5588
   5589	FD0E  FC B4 30 30 30 30	78+	     db	     0fch,0b4h,030h,030h,030h,030h,078h,000h ;T	d_54
   5590	      00
   5591
   5592	FD16  CC CC CC CC CC CC	FC+	     db	     0cch,0cch,0cch,0cch,0cch,0cch,0fch,000h ;U	d_55
   5593	      00
   5594
   5595	FD1E  CC CC CC CC CC 78	30+	     db	     0cch,0cch,0cch,0cch,0cch,078h,030h,000h ;V	d_56
   5596	      00
   5597
   5598	FD26  C6 C6 C6 D6 FE EE	C6+	     db	     0c6h,0c6h,0c6h,0d6h,0feh,0eeh,0c6h,000h ;W	d_57
   5599	      00
   5600
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 113
1840v4.asm



   5601	FD2E  C6 C6 6C 38 38 6C	C6+	     db	     0c6h,0c6h,06ch,038h,038h,06ch,0c6h,000h ;X	d_58
   5602	      00
   5603
   5604	FD36  CC CC CC 78 30 30	78+	     db	     0cch,0cch,0cch,078h,030h,030h,078h,000h ;Y	d_59
   5605	      00
   5606
   5607	FD3E  FE C6 8C 18 32 66	FE+	     db	     0feh,0c6h,08ch,018h,032h,066h,0feh,000h ;Z	d_5a
   5608	      00
   5609
   5610	FD46  78 60 60 60 60 60	78+	     db	     078h,060h,060h,060h,060h,060h,078h,000h ;(	d_5b
   5611	      00
   5612
   5613	FD4E  C0 60 30 18 0C 06	02+	     db	     0c0h,060h,030h,018h,00ch,006h,002h,000h ;backslash
   5614	      00
   5615
   5616	FD56  78 18 18 18 18 18	78+	     db	     078h,018h,018h,018h,018h,018h,078h,000h ;)	d_5d
   5617	      00
   5618
   5619	FD5E  10 38 6C C6 00 00	00+	     db	     010h,038h,06ch,0c6h,000h,000h,000h,000h ;cimpqumflex
   5620	      00
   5621
   5622	FD66  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,0ffh ;_	d_5f
   5623	      FF
   5624
   5625
   5626	FD6E  30 30 18 00 00 00	00+	     db	     030h,030h,018h,000h,000h,000h,000h,000h ;	d_60
   5627	      00
   5628
   5629	FD76  00 00 78 0C 7C CC	76+	     db	     000h,000h,078h,00ch,07ch,0cch,076h,000h ;lower case a
   5630	      00
   5631
   5632	FD7E  E0 60 60 7C 66 66	DC+	     db	     0e0h,060h,060h,07ch,066h,066h,0dch,000h ;b	d_62
   5633	      00
   5634
   5635	FD86  00 00 78 CC C0 CC	78+	     db	     000h,000h,078h,0cch,0c0h,0cch,078h,000h ;c	d_63
   5636	      00
   5637
   5638	FD8E  1C 0C 0C 7C CC CC	76+	     db	     01ch,00ch,00ch,07ch,0cch,0cch,076h,000h ;d	d_64
   5639	      00
   5640
   5641	FD96  00 00 78 CC FC C0	78+	     db	     000h,000h,078h,0cch,0fch,0c0h,078h,000h ;e	d_65
   5642	      00
   5643
   5644	FD9E  38 6C 60 F0 60 60	F0+	     db	     038h,06ch,060h,0f0h,060h,060h,0f0h,000h ;f	d_66
   5645	      00
   5646
   5647	FDA6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,0f8h ;g	d_67
   5648	      F8
   5649
   5650	FDAE  E0 60 6C 76 66 66	E6+	     db	     0e0h,060h,06ch,076h,066h,066h,0e6h,000h ;h	d_68
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 114
1840v4.asm



   5651	      00
   5652
   5653	FDB6  30 00 70 30 30 30	78+	     db	     030h,000h,070h,030h,030h,030h,078h,000h ;i	d_69
   5654	      00
   5655
   5656	FDBE  0C 00 0C 0C 0C CC	CC+	     db	     00ch,000h,00ch,00ch,00ch,0cch,0cch,078h ;j	d_6a
   5657	      78
   5658
   5659	FDC6  E0 60 66 6C 78 6C	E6+	     db	     0e0h,060h,066h,06ch,078h,06ch,0e6h,000h ;k	d_6b
   5660	      00
   5661
   5662	FDCE  70 30 30 30 30 30	78+	     db	     070h,030h,030h,030h,030h,030h,078h,000h ;l	d_6c
   5663	      00
   5664
   5665	FDD6  00 00 CC FE FE D6	C6+	     db	     000h,000h,0cch,0feh,0feh,0d6h,0c6h,000h ;m	d_6d
   5666	      00
   5667
   5668	FDDE  00 00 F8 CC CC CC	CC+	     db	     000h,000h,0f8h,0cch,0cch,0cch,0cch,000h ;n	d_6e
   5669	      00
   5670
   5671	FDE6  00 00 78 CC CC CC	78+	     db	     000h,000h,078h,0cch,0cch,0cch,078h,000h ;o	d_6f
   5672	      00
   5673
   5674
   5675	FDEE  00 00 DC 66 66 7C	60+	     db	     000h,000h,0dch,066h,066h,07ch,060h,0f0h ;p	d_70
   5676	      F0
   5677
   5678	FDF6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,01eh ;q	d_71
   5679	      1E
   5680
   5681	FDFE  00 00 DC 76 66 60	F0+	     db	     000h,000h,0dch,076h,066h,060h,0f0h,000h ;r	d_72
   5682	      00
   5683
   5684	FE06  00 00 7C C0 78 0C	F8+	     db	     000h,000h,07ch,0c0h,078h,00ch,0f8h,000h ;s	d_73
   5685	      00
   5686
   5687	FE0E  10 30 7C 30 30 34	18+	     db	     010h,030h,07ch,030h,030h,034h,018h,000h ;t	d_74
   5688	      00
   5689
   5690	FE16  00 00 CC CC CC CC	76+	     db	     000h,000h,0cch,0cch,0cch,0cch,076h,000h ;u	d_75
   5691	      00
   5692
   5693	FE1E  00 00 CC CC CC 78	30+	     db	     000h,000h,0cch,0cch,0cch,078h,030h,000h ;v	d_76
   5694	      00
   5695
   5696	FE26  00 00 C6 D6 FE FE	6C+	     db	     000h,000h,0c6h,0d6h,0feh,0feh,06ch,000h ;w	d_77
   5697	      00
   5698
   5699	FE2E  00 00 C6 6C 38 6C	C6+	     db	     000h,000h,0c6h,06ch,038h,06ch,0c6h,000h ;x	d_78
   5700	      00
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 115
1840v4.asm



   5701
   5702	FE36  00 00 CC CC CC 7C	0C+	     db	     000h,000h,0cch,0cch,0cch,07ch,00ch,0f8h ;y	d_79
   5703	      F8
   5704
   5705	FE3E  00 00 FC 98 30 64	FC+	     db	     000h,000h,0fch,098h,030h,064h,0fch,000h ;z	d_7a
   5706	      00
   5707
   5708	FE46  1C 30 30 E0 30 30	1C+	     db	     01ch,030h,030h,0e0h,030h,030h,01ch,000h ;	d_7b
   5709	      00
   5710
   5711	FE4E  18 18 18 00 18 18	18+	     db	     018h,018h,018h,000h,018h,018h,018h,000h ;	d_7c
   5712	      00
   5713
   5714	FE56  E0 30 30 1C 30 30	E0+	     db	     0e0h,030h,030h,01ch,030h,030h,0e0h,000h ;	d_7d
   5715	      00
   5716
   5717	FE5E  76 DC 00 00 00 00	00+	     db	     076h,0dch,000h,000h,000h,000h,000h,000h ;	d_7e
   5718	      00
   5719
   5720	FE66  00 10 38 6C C6 C6	FE+	     db	     000h,010h,038h,06ch,0c6h,0c6h,0feh,000h ;delta d_7f
   5721	      00
   5722
   5723
   5724				     ;---int 1a-------------------------------
   5725				     ;
   5726				     ;	 Программа установки-считывания	времени	суток
   5727				     ;
   5728				     ;	 Эта программа обеспечивает выполнение двух функций, код которых
   5729				     ; задается	в регистре AH:
   5730				     ;	 AH=0 -	считать	текущее	состояние часов. После выполнения коман-
   5731				     ; ды регистры CX и	DX содержат старшую и младшую части счетчика.
   5732				     ;	 Если регистр AL содержит "0", то счет идет в течение одних
   5733				     ; суток, при любом	другом значении	счет переходит на следующие
   5734				     ; сутки;
   5735				     ;
   5736				     ;	 AH=1 -	записать текущее состояние часов. Регистры CX и	DX
   5737				     ; содержат	старшую	и младшую части	счетчика.
   5738				     ;
   5739				     ;------------------------------------------
   5740					     assume  cs:code,ds:data
   5741	FE6E			     time_of_day     proc    far
   5742	FE6E  FB			     sti	     ; уст признак разрешения прерывания
   5743	FE6F  1E			     push    ds	     ; сохранить сегмент
   5744	FE70  50			     push    ax	     ; сохранить параметры
   5745	FE71  B8 0040			     mov     ax,dat
   5746	FE74  8E D8			     mov     ds,ax
   5747	FE76  58			     pop     ax
   5748	FE77  0A E4			     or	     ah,ah   ; AH=0 ?
   5749	FE79  74 07			     jz	     t2	 ; да, переход к считыванию текущего состояния
   5750	FE7B  FE CC			     dec     ah	     ; AH=1 ?
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 116
1840v4.asm



   5751	FE7D  74 16			     jz	     t3	 ; да, переход к установке текущего состояния
   5752
   5753	FE7F			     t1:     ; Возврат из программы
   5754
   5755	FE7F  FB			     sti	     ; уст признак разрешения прерывания
   5756	FE80  1F			     pop     ds	     ; возврат сегмента
   5757	FE81  CF			     iret	     ; возврат к программе,вызвавшей процедуру
   5758
   5759	FE82			     t2:     ; Считать текущее состояния часов
   5760
   5761	FE82  FA			     cli	     ; сбросить	признак	разрешения прерывания
   5762	FE83  A0 0070r			     mov     al,timer_ofl  ; считать в AL флажок перехода на сле-
   5763	FE86  C6 06 0070r 00		     mov     timer_ofl,0   ; дующие сутки и сбросить его в памяти
   5764	FE8B  8B 0E 006Er		     mov     cx,timer_high	     ; установить старшую и младшую
   5765	FE8F  8B 16 006Cr		     mov     dx,timer_low	     ; части счетчика
   5766	FE93  EB EA			     jmp     short t1
   5767
   5768	FE95			     t3:     ; Установить текущее состояние часов
   5769
   5770	FE95  FA			     cli	     ; сброс признака разрешения прерывания
   5771	FE96  89 16 006Cr		     mov     timer_low,dx	     ; установить младшую и старшую
   5772	FE9A  89 0E 006Er		     mov     timer_high,cx	     ; части счетчика
   5773	FE9E  C6 06 0070r 00		     mov     timer_ofl,0     ; сброс флажка перехода через сутки
   5774	FEA3  EB DA			     jmp     short t1	     ; возврат из программы отсчета времени
   5775	FEA5			     time_of_day     endp
   5776
   5777				     ;-------int 08-------------------
   5778				     ;
   5779				     ;	 Программа обработки прерывания	таймера	КР580ВИ53 (INT 8H) об-
   5780				     ; рабатывает прерывания, аппаратурно возникающие от нулевого канала
   5781				     ; таймера,	на вход	которого подаются сигналы с частотой 1,228 МГц,
   5782				     ; делящиеся на 56263 для обеспечения 18,2 прерываний в секунду.
   5783				     ;	 При обработке прерывания корректируется программный счетчик,
   5784				     ; хранящийся в памяти по адресу 0046CH (младшая часть счетчика) и
   5785				     ; адресу 0047EH (старшая часть счетчика) и	используемый для уста-
   5786				     ; новки времени суток.
   5787				     ;	 В функции программы входит коррекция счетчика,	управляющего
   5788				     ; двигателем НГМД.	После обнуления	счетчика двигатель выключается.
   5789				     ;	 Вектор	1CH дает возможность пользователю входить в заданную
   5790				     ; программу с частотой прерывания таймера (18.2 прерываний	в секун-
   5791				     ; ду). Для	этого в	таблице	векторов прерываний по адресу 007CH
   5792				     ; необходимо задать адрес пользовательской	программы.
   5793				     ;
   5794				     ;---------------------------------------------------
   5795
   5796	FEA5			     timer_int	     proc    far
   5797	FEA5  FB			     sti	     ; уст признак разрешения прерывания
   5798	FEA6  1E			     push    ds
   5799	FEA7  50			     push    ax
   5800	FEA8  52			     push    dx
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 117
1840v4.asm



   5801	FEA9  B8 0040			     mov     ax,dat
   5802	FEAC  8E D8			     mov     ds,ax
   5803	FEAE  FF 06 006Cr		     inc     timer_low	  ; +1 к старшей части счетчика
   5804	FEB2  75 04			     jnz     t4
   5805	FEB4  FF 06 006Er		     inc     timer_high	  ; +1 к старшей части счетчика
   5806
   5807	FEB8			     t4:     ; Опрос счетчика =	24 часам
   5808
   5809	FEB8  83 3E 006Er 18		     cmp     timer_high,018h
   5810	FEBD  75 19			     jnz     t5
   5811	FEBF  81 3E 006Cr 00B0		     cmp     timer_low,0b0h
   5812	FEC5  75 11			     jnz     t5
   5813
   5814				     ;	 Таймер	исчерпал 24 часа
   5815
   5816	FEC7  C7 06 006Er 0000		     mov     timer_high,0   ; сброс старшей и младшей частей
   5817	FECD  C7 06 006Cr 0000		     mov     timer_low,0    ; счетчика и установка флажка пере-
   5818	FED3  C6 06 0070r 01		     mov     timer_ofl,1    ; хода счета на следующие сутки
   5819
   5820				     ;	 Выключение мотора НГМД, если счетчик управления мотором
   5821				     ; исчерпан
   5822
   5823	FED8			     t5:
   5824	FED8  FE 0E 0040r		     dec     motor_count
   5825	FEDC  75 0B			     jnz     t6		     ; переход,	если счетчик не	установлен
   5826	FEDE  80 26 003Fr F0		     and     motor_status,0f0h
   5827	FEE3  B0 0C			     mov     al,0ch
   5828	FEE5  BA 03F2			     mov     dx,03f2h
   5829	FEE8  EE			     out     dx,al	     ; выключить мотор
   5830
   5831	FEE9			     t6:
   5832	FEE9  CD 1C			     int     1ch     ; передача	управления программе пользователя
   5833	FEEB  B0 20			     mov     al,eoi
   5834	FEED  E6 20			     out     020h,al	    ; конец прерывания
   5835	FEEF  5A			     pop     dx
   5836	FEF0  58			     pop     ax
   5837	FEF1  1F			     pop     ds
   5838	FEF2  CF			     iret		     ; возврат из прерывания
   5839	FEF3			     timer_int	     endp
   5840				     ;---------------------------------
   5841				     ;
   5842				     ;	 Эти вектора передаются	в область прерывания 8086 во время
   5843				     ; включения питания.
   5844				     ;
   5845				     ;---------------------------------
   5846	FEF3			     vector_table    label   word    ; таблица векторов	прерываний
   5847
   5848	FEF3  FEA5r			     dw	     offset timer_int	     ; прерывание 8
   5849	FEF5  F000			     dw	     cod
   5850
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 118
1840v4.asm



   5851	FEF7  E987r			     dw	     offset kb_int	     ; прерывание 9
   5852	FEF9  F000			     dw	     cod
   5853
   5854	FEFB  FF53r			     dw	     offset dummy_return     ; прерывание А
   5855	FEFD  F000			     dw	     cod
   5856	FEFF  F98Br			     dw	     offset dummm_return     ; прерывание B
   5857	FF01  F000			     dw	     cod
   5858	FF03  F98Br			     dw	     offset dummm_return     ; прерывание C
   5859	FF05  F000			     dw	     cod
   5860	FF07  FF53r			     dw	     offset dummy_return     ; прерывание D
   5861	FF09  F000			     dw	     cod
   5862	FF0B  EF57r			     dw	     offset disk_int	     ; прерывание E
   5863	FF0D  F000			     dw	     cod
   5864
   5865	FF0F  FF53r			     dw	     offset dummy_return     ; прерывание F
   5866	FF11  F000			     dw	     cod
   5867	FF13  F065r			     dw	     offset video_io	     ; прерывание 10H
   5868	FF15  F000			     dw	     cod
   5869
   5870	FF17  F84Dr			     dw	     offset equipment	     ; прерывание 11H
   5871	FF19  F000			     dw	     cod
   5872
   5873	FF1B  F841r			     dw	     offset memory_size_determine    ; прерывание 12H
   5874	FF1D  F000			     dw	     cod
   5875
   5876	FF1F  EC59r			     dw	     offset diskette_io	     ; прерывание 13H
   5877	FF21  F000			     dw	     cod
   5878
   5879	FF23  F929r			     dw	     offset rs232_io	     ; прерывание  14H
   5880	FF25  F000			     dw	     cod
   5881
   5882	FF27  F92Dr			     dw	     offset ex_memory	     ; int 15h
   5883	FF29  F000			     dw	     cod
   5884
   5885	FF2B  E82Er			     dw	     offset keyboard_io	     ; прерывание 16H
   5886	FF2D  F000			     dw	     cod
   5887
   5888	FF2F  EFD2r			     dw	     offset printer_io	     ; прерывание 17H
   5889	FF31  F000			     dw	     cod
   5890
   5891	FF33  0000				     dw	0		     ; прерывание 18H
   5892	FF35  F600				     dw	0F600h		     ; ROM BASIC ???
   5893
   5894	FF37  E6F7r			     dw	     offset boot_strap	     ; прерывание 19H
   5895	FF39  F000			     dw	     cod
   5896
   5897	FF3B  FE6Er			     dw	     time_of_day     ; прерывание 1АH -	время суток
   5898	FF3D  F000			     dw	     cod
   5899
   5900	FF3F  FF53r			     dw	     dummy_return    ; прерывание 1BH -	прерывание клавиатуры
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 119
1840v4.asm



   5901	FF41  F000			     dw	     cod
   5902
   5903	FF43  FF53r			     dw	     dummy_return    ; прерывание 1C - прерывание таймера
   5904	FF45  F000			     dw	     cod
   5905
   5906	FF47  F0A4r			     dw	     video_parms     ; прерывание 1D - параметры видео
   5907	FF49  F000			     dw	     cod
   5908
   5909	FF4B  EFC7r			     dw	     offset  disk_base	 ;прерывание 1EH - параметры НГМД
   5910	FF4D  F000			     dw	     cod
   5911
   5912	FF4F  0000			     dw	     0		     ; 1FH - адрес таблицы пользова-
   5913	FF51  0000			     dw	     0		     ; тельского дополнительного знакогенератора
   5914
   5915	FF53			     dummy_return:
   5916	FF53  CF			     iret
   5917
   5918				     ;---int 5----------------------
   5919				     ;
   5920				     ;	 Программа вывода на печать содержимого	буфера ЭЛИ вызывается
   5921				     ; одновременным нажатием клавиши ПЕЧ и клавиши переключения регист-
   5922				     ; ров. Позиция курсора сохраняется	до завершения процедуры	обработки
   5923				     ; прерывания. Повторное нажатие названных клавиш во время обработки
   5924				     ; прерывания игнорируется.
   5925				     ;	 При выполнении	программы в постоянно распределенной рабочей
   5926				     ; области памяти по адресу	0500H устанавливается следующая
   5927				     ; информация:
   5928				     ;	 0    -	содержимое буфера ЭЛИ еще не выведено на печать, либо
   5929				     ; вывод уже завершен;
   5930				     ;	 1    -	в процессе вывода содержимого буфера ЭЛИ на печать;
   5931				     ;	 255  -	при печати обнаружена ошибка.
   5932				     ;-----------------------------------------------------
   5933
   5934					     assume  cs:code,ds:xxdata
   5935
   5936	FF54			     print_screen    proc    far
   5937	FF54  FB			     sti		  ; уст	признак	разрешения прерывания
   5938	FF55  1E			     push    ds
   5939	FF56  50			     push    ax
   5940	FF57  53			     push    bx
   5941	FF58  51			     push    cx	  ; будет использоваться заглавная буква для курсора
   5942	FF59  52			     push    dx	  ; будет содержать текущее положение курсора
   5943	FF5A  B8 0050			     mov     ax,xxdat	     ; адрес 50
   5944	FF5D  8E D8			     mov     ds,ax
   5945	FF5F  80 3E 0000r 01		     cmp     status_byte,1   ; печать готова ?
   5946	FF64  74 5F			     jz	     exit	     ; переход,	если печать готова
   5947	FF66  C6 06 0000r 01		     mov     status_byte,1   ;
   5948	FF6B  B4 0F			     mov     ah,15	     ; требуется текущий режим экрана
   5949	FF6D  CD 10			     int     10h	     ; AL - режим, AH -	число строк/колонок
   5950								     ; BH - страница,выведенная	на экран
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 120
1840v4.asm



   5951
   5952
   5953				     ;*************************************8
   5954				     ;
   5955				     ;	 В этом	месте:
   5956				     ;			 AX - колонка, строка,
   5957				     ;			 BH - номер отображаемой страницы.
   5958				     ;
   5959				     ;	 Стек содержит DS, AX, BX, CX, DX.
   5960				     ;
   5961				     ;			 AL - режим
   5962				     ;
   5963				     ;**************************************
   5964
   5965	FF6F  8A CC			     mov     cl,ah
   5966	FF71  B5 19			     mov     ch,25
   5967	FF73  E8 0055			     call    crlf
   5968	FF76  51			     push    cx
   5969	FF77  B4 03			     mov     ah,3
   5970	FF79  CD 10			     int     10h
   5971	FF7B  59			     pop     cx
   5972	FF7C  52			     push    dx
   5973	FF7D  33 D2			     xor     dx,dx
   5974
   5975				     ;**************************************
   5976				     ;
   5977				     ;	  Считывание знака, находящегося в текущей позиции курсора
   5978				     ; и вывод на печать
   5979				     ;
   5980				     ;**************************************
   5981
   5982	FF7F  B4 02		     pri10:  mov     ah,2
   5983	FF81  CD 10			     int     10h
   5984	FF83  B4 08			     mov     ah,8
   5985	FF85  CD 10			     int     10h
   5986	FF87  0A C0			     or	     al,al
   5987	FF89  75 02			     jnz     pri15
   5988	FF8B  B0 20			     mov     al,' '
   5989	FF8D			     pri15:
   5990	FF8D  52			     push    dx
   5991	FF8E  33 D2			     xor     dx,dx
   5992	FF90  32 E4			     xor     ah,ah
   5993	FF92  CD 17			     int     17h
   5994	FF94  5A			     pop     dx
   5995	FF95  F6 C4 25			     test    ah,25h
   5996	FF98  75 21			     jnz     err10
   5997	FF9A  FE C2			     inc     dl
   5998	FF9C  3A CA			     cmp     cl,dl
   5999	FF9E  75 DF			     jnz     pri10
   6000	FFA0  32 D2			     xor     dl,dl
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 121
1840v4.asm



   6001	FFA2  8A E2			     mov     ah,dl
   6002	FFA4  52			     push    dx
   6003	FFA5  E8 0023			     call    crlf
   6004	FFA8  5A			     pop     dx
   6005	FFA9  FE C6			     inc     dh
   6006	FFAB  3A EE			     cmp     ch,dh
   6007	FFAD  75 D0			     jnz     pri10
   6008	FFAF  5A			     pop     dx
   6009	FFB0  B4 02			     mov     ah,2
   6010	FFB2  CD 10			     int     10h
   6011	FFB4  C6 06 0000r 00		     mov     status_byte,0
   6012	FFB9  EB 0A			     jmp     short exit
   6013	FFBB  5A		     err10:  pop     dx
   6014	FFBC  B4 02			     mov     ah,2
   6015	FFBE  CD 10			     int     10h
   6016	FFC0  C6 06 0000r FF		     mov     status_byte,0ffh
   6017
   6018	FFC5  5A		     exit:   pop     dx
   6019	FFC6  59			     pop     cx
   6020	FFC7  5B			     pop     bx
   6021	FFC8  58			     pop     ax
   6022	FFC9  1F			     pop     ds
   6023	FFCA  CF			     iret
   6024	FFCB			     print_screen    endp
   6025
   6026				     ;	 Возврат каретки
   6027
   6028	FFCB			     crlf    proc    near
   6029	FFCB  33 D2			     xor     dx,dx
   6030	FFCD  32 E4			     xor     ah,ah
   6031	FFCF  B0 0A			     mov     al,12q
   6032	FFD1  CD 17			     int     17h
   6033	FFD3  32 E4			     xor     ah,ah
   6034	FFD5  B0 0D			     mov     al,15q
   6035	FFD7  CD 17			     int     17h
   6036	FFD9  C3			     ret
   6037	FFDA			     crlf    endp
   6038
   6039	FFDA  16*(00)				     db	22 dup(0)
   6040
   6041				     ;--------------------------------------
   6042				     ;
   6043				     ;	 Включение питания
   6044				     ;
   6045				     ;--------------------------------------
   6046
   6047				     ;vector segment at	0ffffh
   6048
   6049				     ;	 Переход по включению питания
   6050
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 122
1840v4.asm



   6051	FFF0  EA		     POST:	     db	     0eah	     ; db    0eah,5bh,0e0h,00h,0f0h  ; jmp reset
   6052	FFF1  E05Br F000			     dw	     offset reset, cod	     ; ###Gleb###
   6053
   6054	FFF5  30 34 2F 32 34 2F	38+		     db	'04/24/81'
   6055	      31
   6056
   6057	FFFD  00 00				     db	   0, 0
   6058
   6059	FFFF  00				     db	   0 ;
   6060				     ;vector ends
   6061
   6062
   6063
   6064
   6065
   6066
   6067	0000			     code    ends
   6068					     end     POST
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 123
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "10-04-21"
??FILENAME			  Text	 "1840v4  "
??TIME				  Text	 "23:24:02"
??VERSION			  Number 0500
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 1840V4
@WORDSIZE			  Text	 2
A5700051COPR_IB			  Byte	 CODE:E000
ACTIVE_PAGE			  Byte	 DATA:0062
ACT_DISP_PAGE			  Near16 CODE:F230
ADDR_6845			  Word	 DATA:0063
ALT_INPUT			  Byte	 DATA:0019
ALT_KEY				  Number 0038
ALT_SHIFT			  Number 0008
ASCII_TBL			  Byte	 CODE:E41D
B1				  Near16 CODE:EFF5
B2				  Near16 CODE:EFFB
B3				  Near16 CODE:F002
B4				  Near16 CODE:F017
B5				  Near16 CODE:F01F
B6				  Near16 CODE:F020
B7				  Near16 CODE:F02B
B8				  Near16 CODE:F033
B9				  Near16 CODE:F03D
BAD_ADDR_MARK			  Number 0002
BAD_CMD				  Number 0001
BAD_CRC				  Number 0010
BAD_DMA				  Number 0008
BAD_NEC				  Number 0020
BAD_SEEK			  Number 0040
BCT				  Near16 CODE:F859
BCT1				  Near16 CODE:F875
BCT2				  Near16 CODE:F877
BCT3				  Near16 CODE:F86C
BCT4				  Near16 CODE:F8B4
BEEP				  Near16 CODE:E5A9
BIOS_BREAK			  Byte	 DATA:0071
BOOT_LOCN			  Far16	 ABS0:7C00
BOOT_STRAP			  Near16 CODE:E6F7
BOOT_VEC			  Dword	 ABS0:0064
BUFFER_END			  Word	 DATA:0082
BUFFER_HEAD			  Word	 DATA:001A
BUFFER_START			  Word	 DATA:0080
BUFFER_TAIL			  Word	 DATA:001C
C1				  Word	 CODE:E016
C10				  Near16 CODE:E0B1
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 124
Symbol Table



C11				  Near16 CODE:E0D9
C12				  Near16 CODE:E0EB
C13				  Near16 CODE:E0FC
C14				  Near16 CODE:E102
C15				  Near16 CODE:E110
C16				  Near16 CODE:E11C
C17				  Near16 CODE:E126
C18				  Near16 CODE:E136
C19				  Near16 CODE:E178
C20				  Near16 CODE:E17D
C21				  Near16 CODE:E18C
C22				  Near16 CODE:E1CB
C23				  Near16 CODE:E1D7
C25				  Near16 CODE:E1E5
C26				  Near16 CODE:E202
C2A				  Near16 CODE:E02A
C2B				  Near16 CODE:E02C
C3				  Near16 CODE:E030
C3A				  Near16 CODE:E045
C7X				  Near16 CODE:E05A
C8				  Near16 CODE:E08E
C9				  Near16 CODE:E0AB
CA3				  Near16 CODE:E1E0
CAPS_KEY			  Number 0056
CAPS_SHIFT			  Number 0040
CAPS_STATE			  Number 0040
CAW				  Word	 CODE:E018
CHK_STAT_2			  Near16 CODE:EF0F
CMD_BLOCK			  Byte	 DATA:0042
CMD_PORT			  Number 0063
COD				  Number F000
CONTROL_BYTE			  Byte	 DATA:0076
CRLF				  Near16 CODE:FFCB
CRT_CHAR_GEN			  Byte	 CODE:FA6E
CRT_COLS			  Word	 DATA:004A
CRT_LEN				  Word	 DATA:004C
CRT_MODE			  Byte	 DATA:0049
CRT_MODE_SET			  Byte	 DATA:0065
CRT_PALLETTE			  Byte	 DATA:0066
CRT_START			  Word	 DATA:004E
CSI				  Word	 ABS0:04D0
CTL_KEY				  Number 001D
CTL_SHIFT			  Number 0004
CURSOR_MODE			  Word	 DATA:0060
CURSOR_POSN			  Word	 DATA:0050
D1				  Byte	 CODE:E20B
D10				  Near16 CODE:E29E
D11				  Near16 CODE:E2A8
D12				  Near16 CODE:E2C4
D13				  Near16 CODE:E2CE
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 125
Symbol Table



D14				  Near16 CODE:E2D8
D1L				  Number 000E
D2				  Byte	 CODE:E219
D2L				  Number 000E
D3				  Near16 CODE:E255
D4				  Near16 CODE:E267
D5				  Near16 CODE:E269
D6				  Near16 CODE:E26F
D7				  Near16 CODE:E277
D8				  Near16 CODE:E289
D9				  Near16 CODE:E292
DAL				  Near16 CODE:E4E9
DAT				  Number 0040
DECIMAL_LOOP			  Near16 CODE:E653
DEL_KEY				  Number 0053
DISKETTE_IO			  Far16	 CODE:EC59
DISKETTE_PARM			  Dword	 ABS0:0078
DISKETTE_STATUS			  Byte	 DATA:0041
DISKW_STATUS			  Byte	 DATA:0074
DISK_BASE			  Byte	 CODE:EFC7
DISK_FORMAT			  Near16 CODE:ED1B
DISK_INT			  Far16	 CODE:EF57
DISK_POINTER			  Dword	 ABS0:0078
DISK_READ			  Near16 CODE:ED0E
DISK_RESET			  Near16 CODE:ECB9
DISK_STATUS			  Near16 CODE:ED0A
DISK_VECTOR			  Dword	 ABS0:0100
DISK_VERF			  Near16 CODE:ED17
DISK_WRITE			  Near16 CODE:ED41
DMA				  Number 0000
DMA08				  Number 0008
DMA_BOUNDARY			  Number 0009
DMA_SETUP			  Near16 CODE:EEC9
DUMMM_RETURN			  Near16 CODE:F98B
DUMMY_RETURN			  Near16 CODE:FF53
E1				  Byte	 CODE:E2DA
E10				  Near16 CODE:E369
E11				  Near16 CODE:E387
E12				  Near16 CODE:E389
E13				  Near16 CODE:E38B
E14				  Near16 CODE:E394
E15				  Near16 CODE:E396
E16				  Near16 CODE:E39F
E17				  Near16 CODE:E3A7
E18				  Near16 CODE:E3AD
E19				  Near16 CODE:E3B2
E190				  Near16 CODE:E613
E1L				  Number 0004
E20A				  Near16 CODE:E622
E20B				  Near16 CODE:E627
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 126
Symbol Table



E20C				  Near16 CODE:E637
E21A				  Near16 CODE:E689
E22				  Near16 CODE:E3FF
E3				  Near16 CODE:E301
E300				  Byte	 CODE:E69F
E3A				  Near16 CODE:E30C
E7				  Near16 CODE:E31A
E8				  Near16 CODE:E32A
E9				  Near16 CODE:E34C
EOI				  Number 0020
EQUIPMENT			  Far16	 CODE:F84D
EQUIP_FLAG			  Word	 DATA:0010
EQ_FL				  Byte	 ABS0:0410
ERR01				  Near16 CODE:E0AF
ERR10				  Near16 CODE:FFBB
ERROR_BEEP			  Near16 CODE:E768
ERR_BEEP			  Near16 CODE:E580
ERR_WAIT			  Near16 CODE:E4E0
EXIT				  Near16 CODE:FFC5
EXT_PTR				  Dword	 ABS0:007C
EX_MEMORY			  Near16 CODE:F92D
F1				  Byte	 CODE:E411
F10				  Near16 CODE:E490
F11				  Near16 CODE:E4A5
F12				  Near16 CODE:E4A7
F13				  Near16 CODE:E4BD
F14				  Near16 CODE:E4C6
F15				  Near16 CODE:E4CC
F16				  Near16 CODE:E502
F17				  Near16 CODE:E516
F18				  Near16 CODE:E542
F19				  Near16 CODE:E559
F19A				  Near16 CODE:F96D
F19B				  Near16 CODE:E55C
F1L				  Number 0004
F2				  Byte	 CODE:E415
F20				  Near16 CODE:E570
F20A				  Near16 CODE:F980
F20B				  Near16 CODE:E574
F21				  Near16 CODE:E57A
F23				  Near16 CODE:E57D
F2L				  Number 0003
F3				  Byte	 CODE:E418
F39				  Byte	 CODE:E6A6
F3L				  Number 0003
F4				  Word	 CODE:E41B
F4E				  Word	 CODE:E41D
F5				  Near16 CODE:E44A
F6				  Near16 CODE:E462
F7				  Near16 CODE:E46B
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 127
Symbol Table



FIND_POSITION			  Near16 CODE:F3A7
G1				  Near16 CODE:E58C
G10				  Near16 CODE:E5EC
G12				  Near16 CODE:E5FC
G2				  Near16 CODE:E591
G3				  Near16 CODE:E597
G4				  Near16 CODE:E59C
G5				  Near16 CODE:E5A2
G6				  Near16 CODE:E5A4
G7				  Near16 CODE:E5C0
G8				  Near16 CODE:E5D2
G9				  Near16 CODE:E5E5
GET_PARM			  Near16 CODE:EE51
GRAPHICS_DOWN			  Near16 CODE:F4F7
GRAPHICS_READ			  Near16 CODE:F633
GRAPHICS_UP			  Near16 CODE:F49E
GRAPHICS_WRITE			  Near16 CODE:F581
GRAPH_POSN			  Near16 CODE:F70F
H1				  Near16 CODE:E707
H2				  Near16 CODE:E722
H3				  Near16 CODE:E727
H4				  Near16 CODE:E72A
HDISK_INT			  Dword	 ABS0:0034
HD_ERROR			  Byte	 DATA:0042
HF_NUM				  Byte	 DATA:0075
HF_TBL_VEC			  Dword	 ABS0:0104
HOLD_STATE			  Number 0008
IDNPOL				  Word	 DATA:0090
INF_KEY				  Number 0059
INS_KEY				  Number 0052
INS_SHIFT			  Number 0080
INS_STATE			  Number 0080
INT5_PTR			  Word	 ABS0:0014
INTA00				  Number 0020
INTA01				  Number 0021
INT_ADDR			  Word	 ABS0:0020
INT_FLAG			  Number 0080
INT_PTR				  Dword	 ABS0:0020
INV_KEY_L			  Number 0058
INV_KEY_R			  Number 005A
INV_SHIFT			  Number 0004
IO_RAM_SIZE			  Word	 DATA:0015
IO_ROM_INIT			  Word	 DATA:0067
IO_ROM_SEG			  Word	 DATA:0069
J1				  Near16 CODE:EC87
J10				  Near16 CODE:ED29
J11				  Near16 CODE:ED57
J12				  Near16 CODE:EDA0
J13				  Near16 CODE:EDA4
J14				  Near16 CODE:EDAA
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 128
Symbol Table



J15				  Near16 CODE:EDD4
J16				  Near16 CODE:EDF9
J17				  Near16 CODE:EE00
J18				  Near16 CODE:EE3D
J19				  Near16 CODE:EE3F
J2				  Near16 CODE:ECAB
J20				  Near16 CODE:EE46
J21				  Near16 CODE:EE47
J22				  Near16 CODE:EE4B
J23				  Near16 CODE:E736
J24				  Near16 CODE:E73D
J25				  Near16 CODE:E747
J26				  Near16 CODE:E749
J27				  Near16 CODE:E752
J28				  Near16 CODE:EE95
J29				  Near16 CODE:EEB9
J3				  Near16 CODE:ECB3
J30				  Near16 CODE:EEC0
J300				  Near16 CODE:EEAB
J31				  Near16 CODE:EEC6
J32				  Near16 CODE:EEC8
J33				  Near16 CODE:EEDE
J34				  Near16 CODE:EF28
J35				  Near16 CODE:EF29
J36				  Near16 CODE:EF37
J37				  Near16 CODE:EF4A
J38				  Near16 CODE:EF74
J39				  Near16 CODE:EF79
J4				  Near16 CODE:ECD2
J40				  Near16 CODE:EF85
J40A				  Near16 CODE:EF8A
J41				  Near16 CODE:EF8F
J42				  Near16 CODE:EF96
J43				  Near16 CODE:EF9E
J44				  Near16 CODE:EFAC
J45				  Near16 CODE:EFC4
J5				  Near16 CODE:ECD4
J6				  Near16 CODE:ECD6
J7				  Near16 CODE:ECF8
J8				  Near16 CODE:ED09
J9				  Near16 CODE:ED10
K1				  Near16 CODE:E845
K10				  Byte	 CODE:E8DC
K11				  Byte	 CODE:E916
K12				  Byte	 CODE:E950
K13				  Byte	 CODE:E95A
K14				  Byte	 CODE:E964
K15				  Byte	 CODE:E971
K16				  Near16 CODE:E9AF
K17				  Near16 CODE:E9D9
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 129
Symbol Table



K18				  Near16 CODE:EA4B
K19				  Near16 CODE:EA60
K2				  Near16 CODE:E85E
K20				  Near16 CODE:EA6E
K21				  Near16 CODE:EA74
K22				  Near16 CODE:EA7B
K23				  Near16 CODE:EA9F
K24				  Near16 CODE:EAC3
K25				  Near16 CODE:EACC
K26				  Near16 CODE:EAEB
K26A				  Near16 CODE:EA48
K27				  Near16 CODE:EAF0
K28				  Near16 CODE:EAFF
K29				  Near16 CODE:EB09
K3				  Near16 CODE:E86F
K30				  Byte	 CODE:F905
K300				  Near16 CODE:EA1D
K301				  Near16 CODE:EA22
K302				  Near16 CODE:EA37
K303				  Near16 CODE:EA93
K304				  Near16 CODE:EAAF
K307				  Near16 CODE:EAF9
K31				  Near16 CODE:EB1F
K32				  Near16 CODE:EB28
K33				  Near16 CODE:EB44
K34				  Near16 CODE:EB55
K35				  Near16 CODE:EB65
K36				  Near16 CODE:EB69
K37				  Near16 CODE:EB6B
K38				  Near16 CODE:EB75
K39				  Near16 CODE:EB98
K4				  Near16 CODE:E75B
K40				  Near16 CODE:EBB3
K400				  Near16 CODE:EA06
K401				  Near16 CODE:EA0E
K406				  Near16 CODE:E9C2
K406B				  Near16 CODE:EADB
K407				  Near16 CODE:E9D6
K41				  Near16 CODE:EBBD
K42				  Near16 CODE:EBC7
K43				  Near16 CODE:EBD1
K44				  Near16 CODE:EBD7
K45				  Near16 CODE:EBEF
K46				  Near16 CODE:EBFC
K47				  Near16 CODE:EC06
K48				  Near16 CODE:EC19
K49				  Near16 CODE:EC27
K5				  Near16 CODE:E767
K50				  Near16 CODE:EC37
K51				  Near16 CODE:EC3D
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 130
Symbol Table



K52				  Near16 CODE:EC43
K53				  Near16 CODE:EC4A
K54				  Near16 CODE:E78D
K54A				  Near16 CODE:EBEC
K55				  Near16 CODE:E796
K56				  Near16 CODE:E7A0
K57				  Near16 CODE:E7A4
K58				  Near16 CODE:E7AD
K59				  Near16 CODE:E7D2
K6				  Byte	 CODE:E875
K60				  Near16 CODE:E7D5
K61				  Near16 CODE:E7DF
K62				  Near16 CODE:E7FC
K63				  Near16 CODE:E802
K64				  Near16 CODE:E804
K65				  Near16 CODE:E771
K66				  Near16 CODE:E778
K67				  Near16 CODE:E781
K6L				  Number 000C
K7				  Byte	 CODE:E881
K8				  Byte	 CODE:E889
K80				  Near16 CODE:F94B
K81				  Near16 CODE:F948
K88				  Near16 CODE:E7BE
K89				  Near16 CODE:F933
K89A				  Near16 CODE:F961
K89B				  Near16 CODE:F95C
K9				  Byte	 CODE:E8C3
K98				  Near16 CODE:EC13
K99				  Near16 CODE:E7F7
KBDINT				  Number 0002
KBD_IN				  Number 0060
KBD_RESET			  Near16 CODE:E5CB
KB_BUFFER			  Word	 DATA:001E
KB_BUFFER_END			  Word	 DATA:003E
KB_CTL				  Number 0061
KB_DAT				  Number 0060
KB_FLAG				  Byte	 DATA:0017
KB_FLAG_1			  Byte	 DATA:0018
KB_INT				  Far16	 CODE:E987
KB_OK				  Near16 CODE:E66C
KEYBOARD_IO			  Far16	 CODE:E82E
LAST_VAL			  Byte	 DATA:006B
LAT				  Number 0002
LAT_KEY				  Number 0057
LAT_SHIFT			  Number 0001
LEFT_KEY			  Number 0054
LEFT_SHIFT			  Number 0002
M1				  Word	 CODE:F045
M10				  Near16 CODE:F144
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 131
Symbol Table



M11				  Near16 CODE:F16F
M12				  Near16 CODE:F172
M13				  Near16 CODE:F175
M14				  Near16 CODE:F1C3
M15				  Near16 CODE:F1CA
M16				  Near16 CODE:F1DA
M17				  Near16 CODE:F207
M18				  Near16 CODE:F209
M19				  Near16 CODE:F269
M1L				  Number 0020
M2				  Near16 CODE:F080
M20				  Near16 CODE:F270
M3				  Near16 CODE:F098
M4				  Number 0010
M5				  Word	 CODE:F0E4
M6				  Byte	 CODE:F0EC
M7				  Byte	 CODE:F0F4
M8				  Near16 CODE:F10D
M9				  Near16 CODE:F141
MAX_PERIOD			  Number 0540
MEMORY_SIZE			  Word	 DATA:0013
MEMORY_SIZE_DETERMINE		  Far16	 CODE:F841
MEM_SIZ				  Word	 ABS0:0413
MFG_TST				  Byte	 DATA:0012
MIN_PERIOD			  Number 0410
MOTOR_COUNT			  Byte	 DATA:0040
MOTOR_STATUS			  Byte	 DATA:003F
MOTOR_WAIT			  Number 0025
N1				  Near16 CODE:F2AB
N10				  Near16 CODE:F331
N11				  Near16 CODE:F33A
N12				  Near16 CODE:F351
N13				  Near16 CODE:F35F
N14				  Near16 CODE:F36A
N15				  Near16 CODE:F36D
N16				  Near16 CODE:F379
N2				  Near16 CODE:F2B9
N3				  Near16 CODE:F2C4
N4				  Near16 CODE:F2C7
N5				  Near16 CODE:F2D0
N6				  Near16 CODE:F2E3
N7				  Near16 CODE:F2E6
N8				  Near16 CODE:F2FD
N9				  Near16 CODE:F30A
NEC_OP				  Near16 CODE:EE64
NEC_OUTPUT			  Near16 CODE:E72F
NEC_STATUS			  Byte	 DATA:0042
NMI_INT				  Near16 CODE:E2B5
NMI_PTR				  Word	 ABS0:0008
NUM_KEY				  Number 0045
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 132
Symbol Table



NUM_SHIFT			  Number 0020
NUM_STATE			  Number 0020
NUM_TRANS			  Near16 CODE:EFB0
ORG_VECTOR			  Dword	 ABS0:004C
OSH				  Near16 CODE:E3D4
P1				  Near16 CODE:F38A
P10				  Near16 CODE:F403
P11				  Near16 CODE:F40C
P12				  Near16 CODE:F413
P13				  Near16 CODE:F419
P2				  Near16 CODE:F398
P3				  Near16 CODE:F39E
P4				  Near16 CODE:F3B7
P5				  Near16 CODE:F3BD
P6				  Near16 CODE:F3D0
P7				  Near16 CODE:F3DB
P8				  Near16 CODE:F3E2
P9				  Near16 CODE:F3E8
PARM_PTR			  Dword	 ABS0:0074
PORT_A				  Number 0060
PORT_B				  Number 0061
PORT_C				  Number 0062
PORT_OFF			  Byte	 DATA:0077
POSITION			  Near16 CODE:F28B
POST				  Near16 CODE:FFF0
PRI10				  Near16 CODE:FF7F
PRI15				  Near16 CODE:FF8D
PRINTER_BASE			  Word	 DATA:0008
PRINTER_IO			  Far16	 CODE:EFD2
PRINT_SCREEN			  Far16	 CODE:FF54
PRT_DEC_LOOP			  Near16 CODE:E660
PRT_HEX				  Near16 CODE:E698
PRT_SIZ				  Near16 CODE:E64C
P_MSG				  Near16 CODE:E5F5
R1				  Near16 CODE:F450
R10				  Near16 CODE:F4E5
R11				  Near16 CODE:F4F3
R12				  Near16 CODE:F517
R13				  Near16 CODE:F533
R14				  Near16 CODE:F542
R15				  Near16 CODE:F544
R16				  Near16 CODE:F553
R17				  Near16 CODE:F557
R18				  Near16 CODE:F570
R2				  Near16 CODE:F457
R3				  Near16 CODE:F45B
R4				  Near16 CODE:F46E
R5				  Near16 CODE:F486
R6				  Near16 CODE:F490
R7				  Near16 CODE:F4BC
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 133
Symbol Table



R8				  Near16 CODE:F4D4
R9				  Near16 CODE:F4E3
READ_AC_CURRENT			  Near16 CODE:F37D
READ_CURSOR			  Near16 CODE:F21A
READ_DOT			  Near16 CODE:F427
READ_LPEN			  Near16 CODE:F7A9
RECORD_NOT_FND			  Number 0004
REGEN				  Byte	 VIDEO_RAM:0000
REGENW				  Word	 VIDEO_RAM:0000
RESET				  Near16 CODE:E05B
RESET_FLAG			  Word	 DATA:0072
RESULTS				  Near16 CODE:EF6B
RES_FL				  Word	 ABS0:0472
RIGHT_KEY			  Number 0055
RIGHT_SHIFT			  Number 0001
ROS				  Near16 CODE:E0DB
ROS_CHECKSUM			  Near16 CODE:E1FD
RS232_BASE			  Word	 DATA:0000
RS232_IO			  Near16 CODE:F929
RUST				  Byte	 CODE:F8CB
RUST2				  Byte	 CODE:E6BD
RUS_KEY				  Number 005B
RW_OPN				  Near16 CODE:ED4D
S1				  Near16 CODE:F594
S10				  Near16 CODE:F5FC
S11				  Near16 CODE:F618
S12				  Near16 CODE:F648
S13				  Near16 CODE:F660
S14				  Near16 CODE:F664
S15				  Near16 CODE:F676
S16				  Near16 CODE:F683
S17				  Near16 CODE:F688
S18				  Near16 CODE:F6B1
S19				  Near16 CODE:F6B7
S2				  Near16 CODE:F5A3
S20				  Near16 CODE:F6C0
S21				  Near16 CODE:F6CC
S22				  Near16 CODE:F6D5
S23				  Near16 CODE:F6EF
S24				  Near16 CODE:F6F9
S25				  Near16 CODE:F6FF
S26				  Near16 CODE:F70C
S3				  Near16 CODE:F5B3
S4				  Near16 CODE:F5B7
S5				  Near16 CODE:F5BF
S6				  Near16 CODE:F5D3
S7				  Near16 CODE:F5DF
S8				  Near16 CODE:F5E6
S9				  Near16 CODE:F5EA
SCROLL_DOWN			  Near16 CODE:F341
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 134
Symbol Table



SCROLL_KEY			  Number 0046
SCROLL_POSITION			  Near16 CODE:F2EA
SCROLL_SHIFT			  Number 0010
SCROLL_STATE			  Number 0010
SCROLL_UP			  Near16 CODE:F29C
SEEK				  Near16 CODE:EE67
SEEK_STATUS			  Byte	 DATA:003E
SET_COLOR			  Near16 CODE:F254
SET_CPOS			  Near16 CODE:F1F0
SET_CTYPE			  Near16 CODE:F1CF
SET_MODE			  Near16 CODE:F0FC
SP_TEST				  Near16 CODE:E5D8
STA				  Number 0030
START				  Near16 CODE:E05B
STATUS_BYTE			  Byte	 XXDATA:0000
STAT_OFFSET			  Byte	 DATA:007C
STGTST				  Near16 CODE:E01A
STGTST_CNT			  Near16 CODE:E01D
STG_LOC0			  Byte	 ABS0:0000
T1				  Near16 CODE:FE7F
T2				  Near16 CODE:FE82
T3				  Near16 CODE:FE95
T4				  Near16 CODE:FEB8
T5				  Near16 CODE:FED8
T6				  Near16 CODE:FEE9
TABL				  Word	 DATA:00E0
TABL1				  Word	 ABS0:04E0
TIMER				  Number 0040
TIMERO				  Number 0040
TIMER_HIGH			  Word	 DATA:006E
TIMER_INT			  Far16	 CODE:FEA5
TIMER_LOW			  Word	 DATA:006C
TIMER_OFL			  Byte	 DATA:0070
TIME_OF_DAY			  Far16	 CODE:FE6E
TIME_OUT			  Number 0080
TIM_CTL				  Number 0043
TMINT				  Number 0001
TMP_TOS				  Word	 DATA:3FF0
TOS				  Word	 STAC:0100
TST12				  Near16 CODE:E42D
TST6				  Near16 CODE:E227
TST8				  Near16 CODE:E2DE
U1				  Near16 CODE:F753
U10				  Near16 CODE:F793
U11				  Near16 CODE:F79A
U2				  Near16 CODE:F766
U3				  Near16 CODE:F76C
U4				  Near16 CODE:F77A
U5				  Near16 CODE:F77C
U6				  Near16 CODE:F780
Turbo Assembler	 Version 5.0	    10-04-21 23:24:02	    Page 135
Symbol Table



U7				  Near16 CODE:F782
U8				  Near16 CODE:F786
U9				  Near16 CODE:F78F
V1				  Byte	 CODE:F7A1
V2				  Near16 CODE:F7E8
V3				  Near16 CODE:F80F
V4				  Near16 CODE:F81B
V5				  Near16 CODE:F82D
V6				  Near16 CODE:F82F
V7				  Near16 CODE:F839
VECTOR_TABLE			  Word	 CODE:FEF3
VIDEO_INT			  Word	 ABS0:0040
VIDEO_IO			  Near16 CODE:F065
VIDEO_PARMS			  Byte	 CODE:F0A4
VIDEO_RA			  Number B800
VIDEO_RETURN			  Near16 CODE:F1C7
VIDEO_STATE			  Near16 CODE:F27A
WAIT_INT			  Near16 CODE:EF30
WRITE_AC_CURRENT		  Near16 CODE:F3C3
WRITE_C_CURRENT			  Near16 CODE:F3F6
WRITE_DOT			  Near16 CODE:F438
WRITE_PROTECT			  Number 0003
WRITE_TTY			  Near16 CODE:F722
WRITE_TTY2			  Near16 CODE:F966
X1				  Near16 CODE:ED8B
X2				  Near16 CODE:ED87
XLAT_PRINT_COD			  Near16 CODE:E402
XXDAT				  Number 0050
ZB				  Byte	 ABS0:0000
ZW				  Word	 ABS0:0000

Groups & Segments		  Bit Size Align  Combine Class

ABS0				  16  7C00 Para	  none
CODE				  16  00010000 Para   none
DATA				  16  3FF0 Para	  none
STAC				  16  0100 Para	  Stack
VIDEO_RAM			  16  4000 Para	  none
XXDATA				  16  0001 Para	  none

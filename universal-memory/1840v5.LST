Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 1
1840v5.asm



      1				     ;ES1840 bios v.5
      2				     ;Modified by Leonid Yadrennikov, Tyumen.
      3				     ;05.10.2021-12.12.2021.
      4				     ;Based on ES1840 bios v.4 source code made	by Gleb	Larionov, Prague.
      5
      6				     ;New features are:
      7				     ;-this BIOS can work with both ES1840 and ES1841 memory boards;
      8				     ;-this BIOS can work with both ES1840 and ES1841 CPU boards with no errors;
      9				     ;-if jumpers set to RAM size bigger then real amount, or BIOS is running on
     10				     ;	     ES1841, RAM size if auto-detected;
     11				     ;-power-on	memory test is twice as	fast then in ES1840 BIOS v.4;
     12				     ;-improved	memory diagnostics:
     13				     ;	     --this BIOS can detect bank (0/1) where RAM error occured (like ES-1841)
     14				     ;	     --in addition and unlike ES1841, this BIOS	also can detect	bank where
     15				     ;	       parity chip error ocured.
     16				     ;___________________
     17				     ; v4 - ??/??/???? (Other version than 24/04/1981) новая клавиатура
     18				     ;	БАЗОВАЯ СИСТЕМА ВВОДА/ВЫВОДА (БСУВВ)
     19				     ;___________________
     20	      =0060		     port_a  equ     60h
     21	      =F000		     cod     equ     0f000h
     22	      =0040		     dat     equ     0040h
     23	      =0030		     sta     equ     0030h
     24	      =0050		     xxdat   equ     0050h
     25	      =B800		     video_ra equ    0b800h
     26	      =0061		     port_b  equ     61h
     27	      =0062		     port_c  equ     62h
     28	      =0063		     cmd_port equ    63h
     29	      =0020		     inta00  equ     20h
     30	      =0021		     inta01  equ     21h
     31	      =0020		     eoi     equ     20h
     32	      =0040		     timer   equ     40h
     33	      =0043		     tim_ctl equ     43h
     34	      =0040		     timero  equ     40h
     35	      =0001		     tmint   equ     01
     36	      =0008		     dma08   equ     08
     37	      =0000		     dma     equ     00
     38	      =0540		     max_period	equ  540h
     39	      =0410		     min_period	equ  410h
     40	      =0060		     kbd_in  equ     60h
     41	      =0002		     kbdint  equ     02
     42	      =0060		     kb_dat  equ     60h
     43	      =0061		     kb_ctl  equ     61h
     44				     ;_______________
     45				     ;	Расположение прерываний 8086
     46				     ;_________________________
     47	0000			     abs0    segment para
     48	0000			     zb	     label   byte
     49	0000			     zw	     label   word
     50	0000			     stg_loc0 label  byte
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 2
1840v5.asm



     51					     org     2*4
     52	0008			     nmi_ptr label   word
     53					     org     5*4
     54	0014			     int5_ptr label  word
     55					     org     8*4
     56	0020			     int_addr label  word
     57	0020			     int_ptr label   dword
     58					     org     0dh*4
     59	0034			     hdisk_int	label  dword
     60					     org     10h*4
     61	0040			     video_int label word
     62					     org     13h*4
     63	004C			     org_vector	 label	dword
     64					     org     19h*4
     65	0064			     boot_vec  label  dword
     66					     org     1dh*4
     67	0074			     parm_ptr label  dword
     68					     org     01eh*4
     69	0078			     disk_pointer label	dword
     70	0078			     diskette_parm  label  dword
     71					     org     01fh*4
     72	007C			     ext_ptr label   dword
     73					     org     040h*4
     74	0100			     disk_vector  label	 dword
     75					     org     041h*4
     76
     77	0104			     hf_tbl_vec	 label	dword
     78					     org     410h
     79	0410			     eq_fl   label   byte
     80
     81					     org     413h
     82	0413			     mem_siz label   word
     83					     org     472h
     84	0472			     res_fl  label   word
     85					     org     4d0h
     86	04D0			     csi     label   word
     87					     org     4e0h
     88	04E0			     tabl1   label   word
     89					     org     7c00h
     90	7C00			     boot_locn label far
     91	7C00			     abs0    ends
     92
     93				     ;______________________
     94				     ;	Использование стека только во	время	       +
     95				     инициализации
     96				     ;______________________
     97	0000			     stac    segment para stack
     98	0000  80*(????)			     dw	     128 dup(?)
     99
    100
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 3
1840v5.asm



    101
    102	0100			     tos     label   word
    103	0100			     stac    ends
    104
    105				     ;______________________
    106				     ;	Область данных ПЗУ
    107				     ;____________________
    108	0000			     data segment    para
    109	0000  04*(????)		     rs232_base	dw 4 dup(?)
    110
    111
    112
    113	0008  04*(????)		     printer_base dw 4 dup(?)
    114
    115
    116
    117	0010  ????		     equip_flag	dw ?
    118	0012  ??		     mfg_tst db	     ?
    119	0013  ????		     memory_size dw  ?
    120	0015  ????		     io_ram_size dw  ?
    121				     ;_______________
    122				     ;	Область данных клавиатуры
    123				     ;_________________
    124	0017  ??		     kb_flag db	     ?
    125
    126				     ;	Размещение флажков в kb_flag
    127
    128	      =0080		     ins_state equ   80h
    129	      =0040		     caps_state	equ  40h
    130	      =0020		     num_state equ   20h
    131	      =0010		     scroll_state equ 10h
    132	      =0008		     alt_shift equ   08h
    133	      =0004		     ctl_shift equ   04h
    134	      =0002		     left_shift	equ  02h
    135	      =0001		     right_shift equ 01h
    136
    137	0018  ??		     kb_flag_1 db    ?
    138
    139	      =0080		     ins_shift equ   80h
    140	      =0040		     caps_shift	equ  40h
    141	      =0020		     num_shift equ   20h
    142	      =0010		     scroll_shift equ 10h
    143	      =0008		     hold_state	equ  08h
    144	      =0004		     inv_shift equ   04h
    145	      =0002		     lat	     equ     02h
    146	      =0001		     lat_shift	     equ     01h
    147
    148
    149
    150	0019  ??		     alt_input db    ?
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 4
1840v5.asm



    151	001A  ????		     buffer_head dw  ?
    152	001C  ????		     buffer_tail dw  ?
    153	001E  10*(????)		     kb_buffer dw    16	dup(?)
    154
    155
    156
    157	003E			     kb_buffer_end label word
    158
    159				     ;	head=tail указывает на заполнение буфера
    160
    161	      =0045		     num_key equ     69
    162	      =0046		     scroll_key	equ  70
    163	      =0038		     alt_key equ     56
    164	      =001D		     ctl_key equ     29
    165	      =0056		     caps_key equ    86
    166	      =0054		     left_key equ    84
    167	      =0055		     right_key equ   85
    168	      =0052		     ins_key equ     82
    169	      =0053		     del_key equ     83
    170	      =0059		     inf_key   equ   89
    171	      =0058		     inv_key_l	equ  88
    172	      =005A		     inv_key_r equ   90
    173	      =005B		     rus_key	equ  91
    174	      =0057		     lat_key equ     87
    175
    176				     ;____________________
    177				     ;	Область данных НГМД
    178				     ;____________________
    179	003E  ??		     seek_status db  ?
    180				     ;
    181				     ;
    182	      =0080		     int_flag equ    080h
    183	003F  ??		     motor_status db ?
    184				     ;
    185				     ;
    186	0040  ??		     motor_count db  ?
    187	      =0025		     motor_wait	equ  37
    188
    189				     ;
    190	0041  ??		     diskette_status db	?
    191	      =0080		     time_out equ    80h
    192	      =0040		     bad_seek equ    40h
    193	      =0020		     bad_nec  equ    20h
    194	      =0010		     bad_crc  equ    10h
    195	      =0009		     dma_boundary equ 09h
    196	      =0008		     bad_dma  equ    08h
    197	      =0004		     record_not_fnd equ	04h
    198	      =0003		     write_protect equ 03h
    199	      =0002		     bad_addr_mark equ 02h
    200	      =0001		     bad_cmd equ     01h
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 5
1840v5.asm



    201
    202	0042			     cmd_block	label  byte
    203	0042			     hd_error  label  byte
    204	0042  07*(??)		     nec_status	db   7 dup(?)
    205
    206
    207
    208
    209				     ;_____________________
    210				     ;	Область данных ЭЛИ
    211				     ;_____________________
    212	0049  ??		     crt_mode db     ?
    213	004A  ????		     crt_cols dw     ?
    214	004C  ????		     crt_len  dw     ?
    215	004E  ????		     crt_start dw    ?
    216	0050  08*(????)		     cursor_posn dw  8 dup(?)
    217
    218
    219
    220	0060  ????		     cursor_mode dw  ?
    221	0062  ??		     active_page db  ?
    222	0063  ????		     addr_6845 dw    ?
    223	0065  ??		     crt_mode_set db ?
    224	0066  ??		     crt_pallette db ?
    225
    226				     ;___________________
    227				     ;	Область данных НМД
    228				     ;___________________
    229	0067  ????		     io_rom_init dw  ?
    230	0069  ????		     io_rom_seg	dw   ?
    231	006B  ??		     last_val db     ?
    232
    233				     ;___________________
    234				     ;	Область данных таймера
    235				     ;___________________
    236	006C  ????		     timer_low dw    ?
    237	006E  ????		     timer_high	dw   ?
    238	0070  ??		     timer_ofl db    ?
    239				     ;___________________
    240				     ;	Область данных системы
    241				     ;___________________
    242	0071  ??		     bios_break	db   ?
    243	0072  ????		     reset_flag	dw   ?
    244	0074  ??		     diskw_status  db  ?
    245	0075  ??		     hf_num  db	  ?
    246	0076  ??		     control_byte  db  ?
    247	0077  ??		     port_off  db  ?
    248						     org     7ch
    249	007C			     stat_offset     label   byte ; смещение для хранения	       +
    250				     состояний	модема
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 6
1840v5.asm



    251
    252					     org     80h
    253	0080  ????		     buffer_start    dw	     ?
    254	0082  ????		     buffer_end	     dw	     ?
    255					     org     0090h
    256	0090  ????		     idnpol  dw	     ?
    257					     org     0e0h
    258	00E0			     tabl    label   word
    259
    260					     org     3ff0h
    261	3FF0			     tmp_tos label   word
    262				     ;
    263	3FF0			     data    ends
    264
    265				     ;___________________
    266				     ;	Область расширения данных
    267				     ;_________________________________
    268	0000			     xxdata segment  para
    269	0000  ??		     status_byte db  ?
    270	0001			     xxdata  ends
    271
    272				     ;_________________
    273				     ;	Буфер ЭЛИ
    274				     ;___________________
    275	0000			     video_ram segment para
    276	0000			     regen   label   byte
    277	0000			     regenw  label   word
    278	0000  4000*(??)			     db	     16384 dup(?)
    279
    280
    281
    282	4000			     video_ram ends
    283				     ;____________________
    284				     ;	Основной массив в ПЗУ	(сегмент	code)
    285				     ;____________________
    286
    287	0000			     code segment para
    288
    289						     org 0E000h
    290
    291	E000  35 37 30 30 30 35	31+  a5700051Copr_Ib db	'5700051 copr. ibm 1981'
    292	      20 63 6F 70 72 2E	20+
    293	      69 62 6D 20 31 39	38+
    294	      31
    295	E016  E0EAr		     c1		     dw	offset c11	     ; адрес    возврата
    296	E018  E1F6r		     caw	     dw	offset ca3
    297					     assume cs:code,ss:code,es:abs0,ds:data
    298
    299	E01A			     stgtst:
    300	E01A  B9 2000				     mov     cx,4000h/2		     ;rc 2x less because 16bit	       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 7
1840v5.asm



    301				     (by-word) testing
    302
    303	E01D			     stgtst_cnt	     proc    near
    304	E01D  FC				     cld
    305	E01E  8E D9				     mov     ds, cx
    306	E020  B8 FFFF				     mov     ax, 0FFFFh
    307	E023  BA AA55				     mov     dx, 0AA55h
    308	E026  2B FF				     sub     di, di
    309	E028  F3> AB				     repe stosw
    310
    311	E02A			     c2a:
    312	E02A  4F				     dec     di
    313	E02B  4F				     dec     di
    314	E02C  FD				     std
    315
    316	E02D			     c2b:
    317	E02D  8B F7				     mov     si, di
    318	E02F  8C D9				     mov     cx, ds
    319				     ;---------------rc:
    320	E031  8A FC				     mov     bh, ah
    321	E033  8A DF				     mov     bl, bh	     ;rc now old pattern is in BX
    322
    323	E035			     c3:
    324	E035  26				     db	     26h	     ;rc ES segment prefix
    325	E036  AD				     lodsw
    326	E037  33 C3				     xor     ax, bx
    327	E039  75 29				     jnz     c4			     ;rc if error, make	it 8bit	       +
    328				     compartible
    329	E03B  E4 62				     in	     al, port_c
    330	E03D  24 40				     and     al, 40h
    331	E03F  B0 00				     mov     al, 0
    332	E041  75 28				     jnz     c7x
    333	E043  83 FB 00				     cmp     bx, 0
    334	E046  74 05				     jz	     c3a
    335	E048  8A C2				     mov     al, dl
    336	E04A  8A E0				     mov     ah, al	     ;rc now new pattern is in AX
    337	E04C  AB				     stosw
    338
    339	E04D			     c3a:
    340	E04D  E2 E6				     loop    c3
    341	E04F  83 FB 00				     cmp     bx, 0
    342	E052  74 17				     jz	     c7x
    343	E054  8B D8				     mov     bx, ax
    344	E056  86 F2				     xchg    dh, dl
    345	E058  FC				     cld
    346	E059  47				     inc     di
    347	E05A  47				     inc     di
    348	E05B  74 D0				     jz	     c2b
    349	E05D  4F				     dec     di
    350	E05E  4F				     dec     di
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 8
1840v5.asm



    351	E05F  BA 0001				     mov     dx, 1
    352	E062  EB C6				     jmp     short c2a
    353
    354	E064			     c4:					     ;rc make 16-bit test result 8-bit +
    355				     (old) error processing compartible
    356	E064  3C 00				     cmp al,0
    357	E066  75 03				     jne c7x		     ;rc L-byte	- proceed as usual, precerving +
    358				     NZ	flag
    359	E068  8A C4				     mov al,ah		     ;rc else make compartible with 8bit
    360	E06A  4F				     dec di		     ;rc set DI	to even	address	and NZ flag
    361	E06B			     c7x:
    362	E06B  C3				     retn
    363	E06C			     stgtst_cnt	     endp
    364
    365
    366				     ;____________________
    367				     ;	Сброс системы - фаза 1
    368				     ;____________________
    369				     ;_____________________
    370				     ;	Проверка 16К памяти
    371				     ;_____________________
    372				     ;___________________
    373				     ;	ТЕСТ.01
    374				     ;	     Тест процессора 8086. Осуществляет	       +
    375				     проверку регистра
    376				     ;	     признаков, команд перехода и		       +
    377				     считывания-записи
    378				     ;	     общих	и сегментных	регистров.
    379				     ;_____________________________________
    380	E06C			     reset   label   near
    381	E06C  FA		     start:  cli		     ; сброс признака разрешения+
    382				     прерывания
    383	E06D  B4 D5			     mov     ah,0d5h	     ;уст признаки SF,CF,ZF,AF
    384	E06F  9E			     sahf
    385	E070  73 4E			     jnc     err01	     ;CF=0,в программу ошибок
    386	E072  75 4C			     jnz     err01	     ;ZF=0,в программу ошибок
    387	E074  7B 4A			     jnp     err01	     ;PF=0,в программу ошибок
    388	E076  79 48			     jns     err01	     ;SF=0,в программу ошибок
    389	E078  9F			     lahf		     ;загрузить признаки в AH
    390	E079  B1 05			     mov     cl,5	     ;загрузить счетчик
    391	E07B  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    392	E07D  73 41			     jnc     err01	     ;признак AF=0
    393	E07F  B0 40			     mov     al,40h	     ;уст признак переполнения
    394	E081  D0 E0			     shl     al,1	     ;уст для контроля
    395	E083  71 3B			     jno     err01	     ;признак OF	не уст
    396	E085  32 E4			     xor     ah,ah	     ;уст AH=0
    397	E087  9E			     sahf		     ;уст в	исходное состояние SF,+
    398				     CF,ZF,PF
    399	E088  72 36			     jc	     err01	     ;признак CF=1
    400	E08A  74 34			     jz	     err01	     ;признак ZF=1
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 9
1840v5.asm



    401	E08C  78 32			     js	     err01	     ;признак SF=1
    402	E08E  7A 30			     jp	     err01	     ;признак PF=1
    403	E090  9F			     lahf		     ;загрузить признаки в AH
    404	E091  B1 05			     mov     cl,5	     ;загрузить счетчик
    405	E093  D2 EC			     shr     ah,cl	     ;выделить бит переноса
    406	E095  72 29			     jc	     err01	     ;признак IF=1
    407	E097  D0 E4			     shl     ah,1	     ;контроль,	что OF сброшен
    408	E099  70 25			     jo	     err01
    409	E09B  B8 FFFF			     mov     ax,0ffffh	     ;уст эталона в AX
    410	E09E  F9			     stc
    411	E09F  8E D8		     c8:     mov     ds,ax	     ;запись во	все регистры
    412	E0A1  8C DB			     mov     bx,ds
    413	E0A3  8E C3			     mov     es,bx
    414	E0A5  8C C1			     mov     cx,es
    415	E0A7  8E D1			     mov     ss,cx
    416	E0A9  8C D2			     mov     dx,ss
    417	E0AB  8B E2			     mov     sp,dx
    418	E0AD  8B EC			     mov     bp,sp
    419	E0AF  8B F5			     mov     si,bp
    420	E0B1  8B FE			     mov     di,si
    421	E0B3  73 07			     jnc     c9
    422	E0B5  33 C7			     xor     ax,di	     ;проверка всех	регистров
    423								     ;эталонами "FFFF", "0000"
    424	E0B7  75 07			     jnz     err01
    425	E0B9  F8			     clc
    426	E0BA  73 E3			     jnc     c8
    427	E0BC			     c9:
    428	E0BC  0B C7			     or	     ax,di	     ;нулевым шаблоном все	       +
    429				     регистры проверены ?
    430	E0BE  74 02			     jz	     c10	     ;ДА - переход к следующему    +
    431				     тесту
    432	E0C0  EB AA		     err01:  jmp   short  start
    433				     ;_______________________
    434				     ; ТЕСТ.02
    435				     ;_______________________
    436	E0C2			     c10:
    437	E0C2  B0 00			     mov     al,0	     ;запретить прерывaния NMI
    438	E0C4  E6 A0			     out     0a0h,al
    439	E0C6  E6 83			     out     83h,al	     ;инициализация регистрa       +
    440				     страниц ПДП
    441	E0C8  B0 99			     mov     al,99h	     ;уст A,C -ввод, B -	вывод
    442	E0CA  E6 63			    out	     cmd_port,al	     ;запись в регистр	       +
    443				     режима
    444									     ;трехканального порта
    445	E0CC  B0 FC			     mov     al,0fch		     ;блокировка контроля    +
    446				     по четности
    447	E0CE  E6 61			     out     port_b,al
    448	E0D0  2A C0			     sub     al,al
    449	E0D2  BA 03D8			     mov     dx,3d8h
    450	E0D5  EE			     out     dx,al	     ;блокировка цветного ЭЛИ
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 10
1840v5.asm



    451	E0D6  FE C0			     inc     al
    452	E0D8  BA 03B8			     mov     dx,3b8h
    453	E0DB  EE			     out     dx,al	     ;блокировка черно-белого     +
    454				     ЭЛИ
    455	E0DC  B8 F000			     mov     ax,cod	     ;уст сегментного регистра SS
    456	E0DF  8E D0			     mov     ss,ax
    457	E0E1  BB E000			     mov     bx,0e000h		     ;уст начального адреса +
    458				     памяти
    459	E0E4  BC E016r			     mov     sp,offset c1	     ;уст адреса возврата
    460	E0E7  EB 03			     jmp     short ros
    461	E0E9  90				     nop
    462	E0EA  75 D4		     c11:    jne     err01
    463				     ;------------------------
    464				     ;	ТЕСТ.03
    465				     ;	 Осуществляет проверку, инициализацию и      +
    466				     запуск ПДП и
    467				     ; таймера 1	для регенерации памяти
    468				     ;_________________________
    469				     ;	 Блокировка контроллера ПДП
    470
    471	E0EC  B0 04		     ros:    mov     al,04
    472	E0EE  E6 08			     out     dma08,al
    473
    474				     ;	 Проверка правильности функционирования
    475				     ;	 таймера	1
    476
    477	E0F0  B0 54			     mov     al,54h	     ;выбор таймера	1,LSB, режим 2
    478	E0F2  E6 43			     out     timer+3,al
    479	E0F4  2B C9			     sub     cx,cx
    480	E0F6  8A D9			     mov     bl,cl
    481	E0F8  8A C1			     mov     al,cl	     ;уст начального счетчика     +
    482				     таймера в 0
    483	E0FA  E6 41			     out     timer+1,al
    484	E0FC			     c12:
    485	E0FC  B0 40			     mov     al,40h
    486	E0FE  E6 43			     out     timer+3,al
    487	E100  E4 41			     in	     al,timer+1	     ;считывание счетчика	       +
    488				     таймера 1
    489	E102  0A D8			     or	     bl,al	     ;все биты таймера включены ?
    490	E104  80 FB FF			     cmp     bl,0ffh	     ;ДА - сравнение	с FF
    491	E107  74 04			     je	     c13	     ;биты таймера сброшены
    492	E109  E2 F1			     loop    c12	     ;биты таймера установлены
    493	E10B  EB B3			     jmp     short err01     ;сбой таймера 1, останов	       +
    494				     системы
    495	E10D			     c13:
    496	E10D  8A C3			     mov     al,bl	     ;уст счетчика таймера 1
    497	E10F  2B C9			     sub     cx,cx
    498	E111  E6 41			     out     timer+1,al
    499	E113			     c14:	     ;цикл таймера
    500	E113  B0 40			     mov     al,40h
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 11
1840v5.asm



    501	E115  E6 43			     out     timer+3,al
    502	E117  E4 41			     in	     al,timer+1		     ;считывание счетчика    +
    503				     таймера 1
    504	E119  22 D8			     and     bl,al
    505	E11B  74 04			     jz	     c15
    506	E11D  E2 F4			     loop    c14	     ;цикл таймера
    507	E11F  EB 9F			     jmp     short err01
    508
    509				     ;	 Инициализация таймера 1
    510
    511	E121			     c15:
    512	E121  B0 54			     mov     al,54h
    513	E123  E6 43			     out     timer+3,al	     ;запись в регистр режима      +
    514				     таймера
    515	E125  B0 07			     mov     al,7    ;уст коэффициента деления для    +
    516				     регенерации
    517	E127  E6 41			     out     timer+1,al	     ;запись в счетчик таймера 1
    518	E129  E6 0D			     out     dma+0dh,al	     ;послать гашение ПДП
    519
    520				     ;	 Цикл проверки регистров ПДП
    521
    522	E12B  B0 FF			     mov     al,0ffh	     ;запись шаблона FF во все       +
    523				     регистры
    524	E12D  8A D8		     c16:    mov     bl,al	     ;сохранить шаблон для	       +
    525				     сравнения
    526	E12F  8A F8			     mov     bh,al
    527	E131  B9 0008			     mov     cx,8	     ;уст цикла	счетчика
    528	E134  BA 0000			     mov     dx,dma	     ;уст адреса регистра порта  +
    529				     ввода/вывода
    530	E137  EE		     c17:    out     dx,al	     ;запись  шаблона в регистр
    531	E138  EE			     out     dx,al	     ;старшие 16	бит регистра
    532	E139  B8 0101			     mov     ax,0101h	     ;изменение AX перед		       +
    533				     считыванием
    534	E13C  EC			     in	     al,dx
    535	E13D  8A E0			     mov     ah,al	     ;сохранить младшие	16 бит      +
    536				     регистра
    537	E13F  EC			     in	     al,dx
    538	E140  3B D8			     cmp     bx,ax	     ;считан тот же шаблон ?
    539	E142  74 03			     je	     c18	     ;ДА - проверка следующего     +
    540				     регистра
    541	E144  E9 FF79			     jmp     err01	     ;НЕТ - ошибка
    542	E147			     c18:			     ;выбор следующего регистра +
    543				     ПДП
    544	E147  42			     inc     dx		     ;установка адреса		       +
    545				     следующего
    546								     ;регистра ПДП
    547	E148  E2 ED			     loop    c17	     ;запись шаблона для	       +
    548				     следующего регистра
    549	E14A  F6 D0			     not     al		       ;уст шаблона в 0
    550	E14C  74 DF			     jz	     c16
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 12
1840v5.asm



    551
    552				     ;	 Инициализация и запуск ПДП
    553
    554	E14E  B0 FF			     mov     al,0ffh	     ;уст счетчика 64K для	       +
    555				     регенерации
    556	E150  E6 01			     out     dma+1,al
    557	E152  E6 01			     out     dma+1,al
    558	E154  B0 58			     mov     al,058h	     ;уст режим	ПДП,	счетчик 0,      +
    559				     считывание
    560	E156  E6 0B			     out     dma+0bh,al	     ;запись в регистр режима ПДП
    561	E158  B0 00			     mov     al,0	     ;доступность контроллера    +
    562				     ПДП
    563	E15A  E6 08			     out     dma+8,al	     ;уст регистр команд ПДП
    564	E15C  E6 0A			     out     dma+10,al	     ;доступность канала 0 для     +
    565				     регенерации
    566	E15E  B0 41			     mov     al,41h	     ;уст режим	дла канала 1
    567	E160  E6 0B			     out     dma+0bh,al
    568	E162  B0 42			     mov     al,42h	     ;уст режим	для канала 2
    569	E164  E6 0B			     out     dma+0bh,al
    570	E166  B0 43			     mov     al,43h	     ;уст режим	для канала 3
    571	E168  E6 0B			     out     dma+0bh,al
    572				     ;======================================RCgoff begin
    573				     ;-----------------turn ES1841 memory on, if present
    574	E16A  BA 02B0				     mov dx,2b0h
    575	E16D  B0 0C				     mov al,0ch			     ;0b0000.1100 - turn RD,WR on, no  +
    576				     reconfig
    577	E16F  EE				     out dx,al
    578				     ;======================================RCgoff end
    579	E170  B8 0040				     mov     ax, dat
    580	E173  8E D8				     mov     ds, ax
    581
    582	E175  8B 1E 0072r			     mov     bx, ds:reset_flag
    583	E179  8B 36 0013r			     mov si, ds:memory_size	     ;keep memory size in SI after     +
    584				     reboot
    585	E17D  2B C0				     sub     ax, ax
    586	E17F  8E C0				     mov     es, ax
    587	E181  E4 62				     in	     al, port_c
    588	E183  24 0F				     and     al, 0Fh
    589	E185  FE C0				     inc     al
    590	E187  02 C0				     add     al, al
    591	E189  BA 0000				     mov     dx, 0
    592	E18C  8B E8				     mov     bp,ax			     ;BP will be segment count +
    593				     (and will be 0, i.e. no error, after finish)
    594	E18E  33 C0				     xor     ax, ax			     ;write 0 to mem
    595	E190  FC				     cld
    596
    597	E191  2B FF				     sub     di, di			     ;not in loop because after+
    598				     writing 32768 words already will be DI=0
    599	E193			     c19:
    600	E193  B9 8000				     mov     cx, 32768
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 13
1840v5.asm



    601	E196  F3> AB				     rep stosw				     ;clear full segment (32768+
    602				     words=6536	bytes)
    603	E198  81 C2 1000			     add     dx, 4096			     ;next segment
    604	E19C  8E C2				     mov     es, dx
    605	E19E  4D				     dec     bp
    606	E19F  74 02				     jz	     c21
    607	E1A1  EB F0				     jmp     short c19
    608				     ;____________________
    609				     ;	 Инициализация контроллера
    610				     ;	 прерываний 8259
    611				     ;____________________
    612	E1A3			     c21:
    613	E1A3  B0 13			     mov     al,13h	     ;ICW1 - EDGE, SNGL, ICW4
    614	E1A5  E6 20			     out     inta00,al
    615	E1A7  B0 08			     mov     al,8	     ;УСТ ICW2 - прерывание типа 8(8-F)
    616	E1A9  E6 21			     out     inta01,al
    617	E1AB  B0 09			     mov     al,9	     ;уст ICW4 - BUFFERD , режим 8086
    618	E1AD  E6 21			     out     inta01,al
    619	E1AF  2B C0				     sub     ax, ax
    620	E1B1  8E C0				     mov     es, ax
    621													     ;DS still +
    622				     points to BIOS data area
    623	E1B3  89 1E 0072r			     mov     ds:reset_flag, bx
    624	E1B7  89 36 0013r			     mov     ds:memory_size, si
    625	E1BB  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
    626	E1C1  74 38				     jz	     c25
    627	E1C3  8E D8				     mov     ds, ax
    628	E1C5  BC 3FF0r				     mov     sp, offset	tmp_tos
    629	E1C8  8E D0				     mov     ss, ax
    630	E1CA  8B F8				     mov     di, ax
    631	E1CC  BB 0024				     mov     bx, 9*4	     ; int 9 (KBD)
    632	E1CF  C7 07 E29Er			     mov     word ptr [bx], offset d11
    633	E1D3  43				     inc     bx
    634	E1D4  43				     inc     bx
    635	E1D5  8C 0F				     mov     [bx], cs
    636	E1D7  E8 03F1				     call    kbd_reset
    637	E1DA  80 FB 65				     cmp     bl, 65h	     ; Manufacturing test mode - viz document  +
    638				     in	BIOS root or http://www.vcfed.org/forum/archive/index.php/t-12377.html
    639	E1DD  75 0E				     jnz     c23
    640	E1DF  B2 FF				     mov     dl, 0FFh
    641
    642	E1E1			     c22:
    643	E1E1  E8 03F4				     call    sp_test
    644	E1E4  8A C3				     mov     al, bl
    645	E1E6  AA				     stosb
    646	E1E7  FE CA				     dec     dl
    647	E1E9  75 F6				     jnz     c22
    648	E1EB  CD 3E				     int     3Eh
    649
    650	E1ED			     c23:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 14
1840v5.asm



    651	E1ED  0E				     push    cs
    652	E1EE  17				     pop     ss
    653						     assume ss:code
    654	E1EF  FA				     cli
    655	E1F0  BC E018r				     mov     sp, offset	caw  ; [caw] = offset ca3 (next	jmp -> indirect+
    656				     call)
    657	E1F3  E9 FE24				     jmp     stgtst
    658
    659	E1F6			     ca3:
    660	E1F6  74 03				     jz	     c25
    661	E1F8  E9 FEC5				     jmp     err01
    662
    663				     ;	 Установка сегмента стека	и SP
    664
    665	E1FB			     c25:
    666	E1FB  B8 0030			     mov     ax,sta	     ;получить величину	стека
    667	E1FE  8E D0			     mov     ss,ax	     ;уст стек
    668	E200  BC 0100r			     mov     sp,offset tos   ;стек готов
    669	E203  EB 1C			     jmp     short tst6	     ;переход к	следующему тесту
    670
    671				     ;ros_checksum proc	 near
    672				     ;	     mov     cx,8192	     ;число байт для сложения
    673				     ;	     xor     al,al
    674				     ;c26:   add     al,cs:[bx]
    675				     ;	     inc     bx		     ;указание следующего байта
    676				     ;	     loop    c26	     ;сложить все байты в модуле +
    677				     ROS
    678				     ;	     or	     al,al	     ;сумма = 0 ?
    679				     ;	     ret
    680				     ;ros_checksum endp
    681				     ;______________________
    682				     ;	 Начальный тест надежности
    683				     ;______________________
    684					     assume  cs:code,es:abs0
    685
    686	E205  70 61 72 69 74 79	20+  d1		     db	'parity	check 2'
    687	      63 68 65 63 6B 20	32
    688
    689
    690	      =000E		     d1l     equ     14
    691	E213  70 61 72 69 74 79	20+  d2		     db	'parity	check 1'
    692	      63 68 65 63 6B 20	31
    693
    694
    695	      =000E		     d2l     equ     14
    696				     ;______________________
    697				     ;	 ТЕСТ.06
    698				     ;	      Тест контроллера прерываний
    699				     ;	      8259
    700				     ;_______________________
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 15
1840v5.asm



    701	E221			     tst6:
    702				     ;	 Проверка регистра масок прерываний (IMR)
    703
    704	E221  FA			     cli		     ;сброс признака разрешения +
    705				     прерываний
    706	E222  B0 00			     mov     al,0	     ;уст IMR в 0
    707	E224  E6 21			     out     inta01,al
    708	E226  E4 21			     in	     al,inta01	     ;считывание IMR
    709	E228  0A C0			     or	     al,al	     ;IMR=0 ?
    710	E22A  75 39			     jnz     d6		     ;IMR не 0,в программу ошибок
    711	E22C  B0 FF			     mov     al,0ffh	     ;недоступность прерываний
    712	E22E  E6 21			     out     inta01,al	     ;запись в IMR
    713	E230  E4 21			     in	     al,inta01	     ;считывание IMR
    714	E232  04 01			     add     al,1	     ;все биты IMR установлены ?
    715	E234  75 2F			     jnz     d6		     ;НЕТ - в программу ошибок
    716
    717	E236  2B C0			     sub     ax,ax	     ;уст регистра ES
    718	E238  8E C0			     mov     es,ax
    719
    720
    721				     ;	 Контроль ожидания прерывания
    722
    723	E23A  FC			     cld		     ; уст признак направления
    724	E23B  B9 0020			     mov     cx,20h	     ;rc все	прерывания 00..1F,	       +
    725				     относящиеся к BIOS
    726	E23E  33 FF			     xor     di,di
    727	E240			     d3:
    728	E240  B8 E29Er			     mov     ax,offset d11   ; установить адрес		       +
    729				     процедуры	прерываний
    730	E243  AB			     stosw
    731	E244  B8 F000			     mov     ax,cod  ; получить	адрес сегмента	       +
    732				     процедуры
    733	E247  AB			     stosw
    734	E248  E2 F6			     loop    d3
    735
    736				     ;	 Установка указателя вектора прерывания NMI
    737	E24A  26: C7 06	0008r	  +	     mov     es:nmi_ptr,offset nmi_int
    738	      E2ABr
    739				     ;-----уст вектора прерываний 5
    740	E251  26: C7 06	0014r	  +	     mov     es:int5_ptr,offset	print_screen   ; печать экрана
    741	      FF54r
    742
    743				     ;	 Прерывания замаскированы
    744
    745	E258  32 E4			     xor     ah,ah	     ;очистить регистр AH
    746	E25A  FB			     sti		     ; установка признака	       +
    747				     разрешения прерывания
    748	E25B  2B C9			     sub     cx,cx	     ; ожидание	1 сек любого	       +
    749				     прерывания,
    750	E25D  E2 FE		     d4:     loop    d4		     ; которое может произойти
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 16
1840v5.asm



    751	E25F  E2 FE		     d5:     loop    d5
    752	E261  0A E4			     or	     ah,ah	     ; прерывание возникло ?
    753	E263  74 08			     jz	     d7		     ; нет -	к следующему	тесту
    754	E265  BA 0101		     d6:     mov     dx,101h	     ; уст длительности		       +
    755				     звукового	сигнала
    756	E268  E8 0315			     call    err_beep	     ; идти	в программу		       +
    757				     звукового	сигнала
    758	E26B  FA			     cli
    759	E26C  F4			     hlt		     ; останов системы
    760				     ;__________________
    761				     ;	 ТЕСТ.07
    762				     ;	      Проверка таймера 8253
    763				     ;___________________
    764	E26D			     d7:
    765	E26D  B4 00			     mov     ah,0	     ; сброс признака прерывания+
    766				     таймера
    767	E26F  32 ED			     xor     ch,ch	     ; очистить	регистр CH
    768	E271  B0 FE			     mov     al,0feh   ; маскировать	все прерывания,   +
    769				     кроме	LVL 0
    770	E273  E6 21			     out     inta01,al	     ; запись IMR
    771	E275  B0 10			     mov     al,00010000b    ; выбрать TIM 0, LSD, режим 0,	BINARY
    772	E277  E6 43			     out     tim_ctl,al	 ;записать регистр режима	       +
    773				     управления таймера
    774	E279  B1 16			     mov     cl,16h	     ; уст счетчик программного  +
    775				     цикла
    776	E27B  8A C1			     mov     al,cl	     ; установить счетчик	       +
    777				     таймера 0
    778	E27D  E6 40			     out     timero,al	     ; записать	счетчик таймера 0
    779	E27F  F6 C4 FF		     d8:     test    ah,0ffh	     ; прерывание таймера 0	       +
    780				     произошло	?
    781	E282  75 04			     jnz     d9		     ; да - таймер считал	медленно
    782	E284  E2 F9			     loop    d8		     ; ожидание	прерывания	       +
    783				     определенное время
    784	E286  EB DD			     jmp     short d6	;прерывание таймера 0 не	       +
    785				     произошло	- ошибка
    786	E288  B1 12		     d9:     mov     cl,18	     ; уст счетчик программного  +
    787				     цикла
    788	E28A  B0 FF			     mov     al,0ffh	     ; записать	счетчик таймера 0
    789	E28C  E6 40			     out     timero,al
    790	E28E  B4 00			     mov     ah,0	     ; сброс признака,		       +
    791				     полученного прерывания
    792	E290  B0 FE			     mov     al,0feh	     ; недоступность прерываний +
    793				     таймера 0
    794	E292  E6 21			     out     inta01,al
    795	E294  F6 C4 FF		     d10:    test    ah,0ffh	     ; прерывание таймера 0	       +
    796				     произошло	?
    797	E297  75 CC			     jnz     d6		     ; да - таймер считает быстро
    798	E299  E2 F9			     loop    d10	     ; ожидание	прерывания	       +
    799				     определенное время
    800	E29B  EB 37			     jmp     short tst8		     ; переход к следующему  +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 17
1840v5.asm



    801				     тесту
    802	E29D  90			     nop
    803				     ;____________________
    804				     ;	 Программа обслуживания
    805				     ;	 временного прерывания
    806				     ;____________________
    807	E29E			     d11     proc    near
    808	E29E  B4 01			     mov     ah,1
    809	E2A0  50			     push    ax		     ; хранить регистр AX
    810	E2A1  B0 FF			     mov     al,0ffh	     ; размаскировать все	       +
    811				     прерывания
    812	E2A3  E6 21			     out     inta01,al
    813	E2A5  B0 20			     mov     al,eoi
    814	E2A7  E6 20			     out     inta00,al
    815	E2A9  58			     pop     ax		     ; восстановить	регистр AX
    816	E2AA  CF			     iret
    817	E2AB			     d11     endp
    818
    819	E2AB			     nmi_int proc    near
    820	E2AB  50			     push    ax		     ; хранить регистр AX
    821	E2AC  E4 62			     in	     al,port_c
    822	E2AE  A8 40			     test    al,40h	     ; ошибка паритета при	       +
    823				     вводе/выводе ?
    824	E2B0  74 08			     jz	     d12	     ; да - признак сбрасывается  +
    825				     в	0
    826	E2B2  BE E205r			     mov     si,offset d1    ; адрес поля сообщения об     +
    827				     ошибке
    828	E2B5  B9 000E			     mov     cx,d1l	     ; длина поля сообщения об     +
    829				     ошибке
    830	E2B8  EB 0A			     jmp     short d13	     ; отобразить ошибку на	       +
    831				     дисплее
    832	E2BA			     d12:
    833	E2BA  A8 80			     test    al,80h
    834	E2BC  74 10			     jz	     d14
    835	E2BE  BE E213r			     mov     si,offset d2    ; адрес поля сообщения об     +
    836				     ошибке
    837	E2C1  B9 000E			     mov     cx,d2l	     ; длина поля сообщения об     +
    838				     ошибке
    839	E2C4			     d13:
    840	E2C4  B8 0000			     mov     ax,0	     ; инициировать	и установить+
    841				     режим	ЭЛИ
    842	E2C7  CD 10			     int     10h	     ; вызвать процедуру VIDEO_IO
    843	E2C9  E8 0329			     call    p_msg	     ; распечатать ошибку
    844	E2CC  FA			     cli
    845	E2CD  F4			     hlt		     ; останов системы
    846	E2CE			     d14:
    847	E2CE  58			     pop     ax		     ; восстановить	AX
    848	E2CF  CF			     iret
    849	E2D0			     nmi_int endp
    850				     ;____________________
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 18
1840v5.asm



    851				     ;	 Начальный тест надежности
    852				     ;____________________
    853					     assume  cs:code,ds:data
    854
    855	E2D0  20 32 30 31	     e1	     db	     ' 201'
    856	      =0004		     e1l     equ     04h
    857
    858				     ;	 Выполнение программы БСУВВ,
    859				     ;	 генерирующей вектора прерываний
    860
    861	E2D4			     tst8:
    862	E2D4  FC			     cld		     ; установить признак	       +
    863				     направления вперед
    864	E2D5  BF 0040r			     mov     di,offset video_int   ; уст адреса области	       +
    865				     прерываний
    866	E2D8  0E			     push    cs
    867	E2D9  1F			     pop     ds		     ; уст адреса таблицы	       +
    868				     векторов
    869	E2DA  BE FF03r			     mov     si,offset vector_table+10h	 ; смещение VECTOR_TABLE+(2*8) +
    870				     (начало прогр прерыв)
    871	E2DD  B9 0010			     mov     cx,10h
    872	E2E0  A5		     e1a:    movsw	     ; передать	таблицу векторов	в     +
    873				     память
    874	E2E1  47			     inc     di
    875	E2E2  47			     inc     di
    876	E2E3  E2 FB			     loop    e1a
    877
    878				     ;	 Установка таймера 0 в	режим 3
    879
    880	E2E5  B0 FF			     mov     al,0ffh
    881	E2E7  E6 21			     out     inta01,al
    882	E2E9  B0 36			     mov     al,36h	     ; выбор счетчика 0,		       +
    883				     считывания-за-
    884				     ; писи	младшего,затем старшего байта		       +
    885				     счетчика,уст режима 3
    886	E2EB  E6 43			     out     timer+3,al	     ; запись режима таймера
    887	E2ED  B0 C7			     mov     al,0c7h
    888	E2EF  E6 40			     out     timer,al	     ; записать	младшую часть      +
    889				     счетчика
    890	E2F1  B0 DB			     mov     al,0dbh
    891	E2F3  E6 40			     out     timer,al	     ; записать	старшую часть      +
    892				     счетчика
    893
    894
    895					     assume  ds:data
    896	E2F5  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    897	E2F8  8E D8			     mov     ds,ax
    898	E2FA			     e3:
    899	E2FA  81 3E 0072r 1234		     cmp     reset_flag,1234h
    900	E300  74 03			     jz	     e3a
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 19
1840v5.asm



    901	E302  E8 1554			     call    bct     ;загрузка знакогенератора Ч/Б    +
    902				     ЭЛИ
    903				     ;_____________________
    904				     ;	 ТЕСТ.08
    905				     ;	      Инициализация и запуск
    906				     ;	      контроллера ЭЛИ
    907				     ;______________________
    908	E305  E4 60		     e3a:    in	     al,port_a	     ; считывание состояния	       +
    909				     переключателей
    910	E307  B4 00			     mov     ah,0
    911	E309  A3 0010r			     mov     equip_flag,ax   ; запомнить считанное	       +
    912				     состояние	пере-
    913								     ; ключателей
    914	E30C  24 30			     and     al,30h	     ; выделить	переключатели     +
    915				     ЭЛИ
    916	E30E  75 03			     jnz     e7		     ; переключатели ЭЛИ	       +
    917				     установлены в 0 ?
    918	E310  E9 0098			     jmp     e19	     ; пропустить тест ЭЛИ
    919	E313			     e7:
    920	E313  86 E0			     xchg    ah,al
    921	E315  80 FC 30			     cmp     ah,30h	     ; адаптер ч/б ?
    922	E318  74 09			     je	     e8		     ; да - установить режим для   +
    923				     ч/б адаптера
    924	E31A  FE C0			     inc     al	      ;	уст цветной режим для		       +
    925				     цветного адаптера
    926	E31C  80 FC 20			     cmp     ah,20h	     ; режим 80х25 установлен ?
    927	E31F  75 02			     jne     e8		     ; нет -	уст режим для 40х25
    928	E321  B0 03			     mov     al,3	     ; установить режим 80х25
    929	E323			     e8:
    930	E323  50			     push    ax		     ; хранить режим ЭЛИ	в стеке
    931	E324  2A E4			     sub     ah,ah	     ;
    932	E326  CD 10			     int     10h
    933	E328  58			     pop     ax
    934	E329  50			     push    ax
    935	E32A  BB B000			     mov     bx,0b000h
    936	E32D  BA 03B8			     mov     dx,3b8h	     ; регистр режима для ч/б
    937	E330  B9 0800			     mov     cx,4096/2	     ; счетчик байт для ч/б	       +
    938				     адаптера
    939	E333  B0 01			     mov     al,1	     ; уст режим для	ч/б адаптера
    940	E335  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер ЭЛИ подключен ?
    941	E338  74 0B			     je	     e9		     ; переход к проверке буфера +
    942				     ЭЛИ
    943	E33A  BB B800			     mov     bx,0b800h
    944	E33D  BA 03D8			     mov     dx,3d8h	     ; регистр режима для	       +
    945				     цветного адаптера
    946	E340  B9 2000			     mov     cx,4000h/2
    947	E343  FE C8			     dec     al		     ; уст режим в 0 для цветного  +
    948				     адаптера
    949				     ;
    950				     ;	     Проверка буфера ЭЛИ
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 20
1840v5.asm



    951				     ;
    952	E345			     e9:
    953	E345  EE			     out     dx,al	     ; блокировка ЭЛИ для	       +
    954				     цветного адаптера
    955	E346  8E C3			     mov     es,bx
    956	E348  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
    957	E34B  8E D8			     mov     ds,ax
    958	E34D  81 3E 0072r 1234		     cmp     reset_flag,1234h
    959	E353  74 0D			     je	     e10
    960	E355  8E DB			     mov     ds,bx	     ;
    961	E357  E8 FCC3			     call    stgtst_cnt	     ; переход к проверке памяти
    962	E35A  74 06			     je	     e10
    963	E35C  BA 0102			     mov     dx,102h
    964	E35F  E8 021E			     call    err_beep
    965
    966				     ;___________________________
    967				     ;
    968				     ;	 ТЕСТ.09
    969				     ;	      Осуществляет проверку	формирования       +
    970				     строк	в буфере	ЭЛИ
    971				     ;_________________________
    972	E362			     e10:
    973	E362  58			     pop     ax	  ; получить считанные			       +
    974				     переключатели	ЭЛИ в AH
    975	E363  50			     push    ax		     ; сохранить их
    976	E364  B4 00			     mov     ah,0
    977	E366  CD 10			     int     10h
    978	E368  B8 7020			     mov     ax,7020h	     ; запись пробелов в	режиме   +
    979				     реверса
    980	E36B  2B FF			     sub     di,di	     ; установка начала области
    981	E36D  B9 0028			     mov     cx,40	     ;
    982	E370  FC			     cld	 ; установить	признак направления  +
    983				     для уменьшения
    984	E371  F3> AB			     rep     stosw	     ; записать	в память
    985				     ;______________________
    986				     ;	  ТЕСТ.10
    987				     ;	       Осуществляет	проверку линий		       +
    988				     интерфейса ЭЛИ
    989				     ;______________________
    990	E373  58			     pop     ax		     ; получить	считанные	       +
    991				     переключатели
    992	E374  50			     push    ax		     ; сохранить их
    993	E375  80 FC 30			     cmp     ah,30h	     ; ч/б адаптер подключен ?
    994	E378  BA 03BA			     mov     dx,03bah	     ; уст адрес порта состояния +
    995				     ч/б дисплея
    996	E37B  74 03			     je	     e11	     ; да - переход к	следующей     +
    997				     строке
    998	E37D  BA 03DA			     mov     dx,03dah	     ; цветной адаптер подключен
    999				     ;
   1000				     ;	     Тест строчной развертки
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 21
1840v5.asm



   1001				     ;
   1002	E380			     e11:
   1003	E380  B4 08			     mov     ah,8
   1004	E382			     e12:
   1005	E382  2B C9			     sub     cx,cx
   1006	E384  EC		     e13:    in	     al,dx	 ;считывание порта состояния   +
   1007				     контроллера СМ607
   1008	E385  22 C4			     and     al,ah	     ; проверка	строки
   1009	E387  75 04			     jnz     e14
   1010	E389  E2 F9			     loop    e13
   1011	E38B  EB 13			     jmp     short e17	     ; переход к сообщению об       +
   1012				     ошибке
   1013	E38D  2B C9		     e14:    sub     cx,cx
   1014	E38F  EC		     e15:    in	     al,dx     ;считывание порта	состояния     +
   1015				     контроллера СМ607
   1016	E390  22 C4			     and     al,ah
   1017	E392  74 04			     jz	     e16
   1018	E394  E2 F9			     loop    e15
   1019	E396  EB 08			     jmp     short e17
   1020				     ;
   1021				     ;	     Следующий	строчный импульс
   1022				     ;
   1023	E398			     e16:
   1024	E398  B1 03			     mov     cl,3	     ; получить	следующий бит      +
   1025				     для контроля
   1026	E39A  D2 EC			     shr     ah,cl
   1027	E39C  75 E4			     jnz     e12
   1028	E39E  EB 06			     jmp     short e18	     ; отобразить курсор на	       +
   1029				     экране
   1030				     ;
   1031				     ;	     Сообщение	об ошибке конттроллера СМ607
   1032				     ;
   1033	E3A0			     e17:
   1034	E3A0  BA 0103			     mov     dx,103h
   1035	E3A3  E8 01DA			     call    err_beep
   1036				     ;
   1037				     ;	     Отображение курсора на	экране
   1038				     ;
   1039	E3A6			     e18:
   1040	E3A6  58			     pop     ax		     ; получить	считанные	       +
   1041				     переключатели	в AH
   1042	E3A7  B4 00			     mov     ah,0	     ; установить режим
   1043	E3A9  CD 10			     int     10h
   1044				     ;______________________
   1045				     ;	 ТЕСТ.11
   1046				     ;	      Дополнительный тест памяти
   1047				     ;______________________
   1048					     assume  ds:data
   1049	E3AB			     e19:
   1050	E3AB  B8 0040			     mov     ax,dat
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 22
1840v5.asm



   1051	E3AE  8E D8			     mov     ds,ax
   1052	E3B0  81 3E 0072r 1234			     cmp     reset_flag,1234h
   1053	E3B6  74 0D				     je	     skip_size_det
   1054	E3B8  E4 62				     in	     al, port_c
   1055	E3BA  24 0F				     and     al, 0Fh
   1056	E3BC  FE C0				     inc     al
   1057	E3BE  B4 80				     mov     ah, 80h
   1058	E3C0  F6 E4				     mul     ah
   1059	E3C2  A3 0013r				     mov     ds:memory_size, ax
   1060	E3C5			     skip_size_det:
   1061	E3C5  A1 0013r				     mov     ax,ds:memory_size		     ;restore if reboot	and no +
   1062				     damages if	power-on
   1063	E3C8  A3 0015r				     mov     ds:io_ram_size, ax
   1064
   1065
   1066
   1067				     ;	 Проверка любой действительной памяти
   1068				     ;	 на считывание и запись
   1069
   1070	E3CB  E9 0237			     jmp     e190
   1071
   1072				     ;	 Печать адреса и эталона, если
   1073				     ;	 произошла ошибка данных
   1074
   1075	E3CE			     osh:
   1076	E3CE  50			     push ax
   1077	E3CF  3D 0000			     cmp ax,0		     ;rc это	ошибка четности?
   1078	E3D2  74 11			     je	parity
   1079	E3D4  3D AAAA			     cmp ax,0aaaah	     ;rc это	отсутствие памяти?
   1080	E3D7  74 4E			     je	tst12		     ;rc отсутствие, значит - не     +
   1081				     ошибка
   1082				     ;	     test dx, 0fffh	     ;rc отсутствие, адрес кратен +
   1083				     64кб?
   1084				     ;	     je	tst12		     ;rc да -	это не ошибка
   1085
   1086	E3D9			     usual:
   1087	E3D9  8A C6			     mov     al,dh	     ; получить	адрес (8 старших   +
   1088				     разрядов)
   1089	E3DB  E8 0021			     call prn_hex_byte
   1090	E3DE  58			     pop ax	     ; получить	XOR записанного и	       +
   1091				     прочтенного
   1092	E3DF  E8 001D			     call prn_hex_byte
   1093	E3E2  E9 14C3			     jmp osh2
   1094
   1095	E3E5			     parity:
   1096				     ;checking L-byte
   1097	E3E5  8B F7			     mov si,di		     ;restore SI independently of D-flag
   1098	E3E7  93			     xchg ax,bx		     ;pattern for test in al (from bl)
   1099	E3E8  AA			     stosb
   1100				     ;clear parity flip-flop on	CPU module
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 23
1840v5.asm



   1101	E3E9  E4 61			     in	al,port_b
   1102	E3EB  50			     push ax
   1103	E3EC  0C 20			     or	al,00100000b	     ;clear parity flip-flop (bit5=1)
   1104	E3EE  E6 61			     out port_b,al
   1105	E3F0  58			     pop ax
   1106	E3F1  E6 61			     out port_b,al	     ;restore initial value of port_b
   1107				     ;check parity for L-byte
   1108	E3F3  26			     db	26h		     ;es seg prefix
   1109	E3F4  AC			     lodsb
   1110	E3F5  E4 62			     in	     al, port_c	     ;read parity checker
   1111	E3F7  24 40			     and     al, 40h
   1112	E3F9  74 01			     jz	h_parity	     ;Z	means: L-byte wasn't erroneous
   1113	E3FB  4F			     dec di		     ;since DI was incremented by stosb, for L-error we+
   1114				     should restore it
   1115	E3FC			     h_parity:
   1116	E3FC  EB DB			     jmp short usual
   1117
   1118				     org     0e3ffh
   1119	E3FF			     prn_hex_byte proc near
   1120	E3FF  50			     push ax
   1121	E400  B1 04			     mov     cl,4
   1122	E402  D2 E8			     shr     al,cl	     ;
   1123	E404  E8 02A9			     call    xlat_print_cod  ; преобразование и печать    +
   1124				     старшего разряда
   1125	E407  58			     pop ax
   1126	E408  24 0F			     and     al,0fh
   1127	E40A  E8 02A3			     call    xlat_print_cod  ; преобразование и печать    +
   1128				     младшего разряда
   1129	E40D  C3			     ret
   1130	E40E			     prn_hex_byte endp
   1131
   1132				     ;______________________
   1133				     ;	 Сброс системы - фаза 4
   1134				     ;______________________
   1135				     ;
   1136				     ;	 Коды сообщений об ошибках
   1137				     ;_______________________
   1138
   1139					     assume  cs:code,ds:data
   1140	E40E  20 33 30 31	     f1	     db	     ' 301'
   1141	      =0004		     f1l     equ     4h		     ; сообщение клавиатуры
   1142	E412  36 30 31		     f3	     db	     '601'
   1143	      =0003		     f3l     equ     3h		     ; сообщение НГМД
   1144
   1145	E415			     f4	     label   word
   1146	E415  0378			     dw	     378h
   1147	E417			     f4e     label   word
   1148	E417  30 31 32 33 34 35	36+  ascii_tbl db    '0123456789abcdef'
   1149	      37 38 39 61 62 63	64+
   1150	      65 66
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 24
1840v5.asm



   1151
   1152
   1153				     ;______________________
   1154				     ;	 ТЕСТ.12
   1155				     ;	 Тест клавиатуры
   1156				     ;______________________
   1157	E427			     tst12:
   1158
   1159	E427  B8 0040			     mov     ax,dat
   1160	E42A  8E D8			     mov     ds,ax
   1161	E42C  E8 019C			     call    kbd_reset	     ; Сброс клавиатуры
   1162	E42F  B0 4D			     mov     al,4dh	     ; доступность клавиатуры
   1163	E431  E6 61			     out     port_b,al
   1164	E433  E3 27			     jcxz    f6		     ; нет -	печать ошибки
   1165	E435  80 FB AA			     cmp     bl,0aah	     ; код сканирования 'AA' ?
   1166	E438  75 22			     jne     f6		     ; нет -	печать ошибки
   1167
   1168				     ;	 Поиск "залипших" клавиш
   1169
   1170	E43A  B0 CC			     mov     al,0cch	   ; сброс	клавиатуры, уст	       +
   1171				     синхронизации
   1172	E43C  E6 61			     out     port_b,al
   1173	E43E  B0 4C			     mov     al,4ch	   ; доступность клавиатуры
   1174	E440  E6 61			     out     port_b,al
   1175	E442  2B C9			     sub     cx,cx
   1176				     ;
   1177				     ;	     Ожидание прерывания клавиатуры
   1178				     ;
   1179	E444			     f5:
   1180	E444  E2 FE			     loop    f5		     ; задержка
   1181	E446  E4 60			     in	     al,kbd_in	     ; получение кода		       +
   1182				     сканирования
   1183	E448  3C 00			     cmp     al,0	     ; код сканирования равен 0 ?
   1184	E44A  74 19			     je	     f7		     ; да - продолжение		       +
   1185				     тестирования
   1186	E44C  8A E8			     mov     ch,al	     ; сохранить код		       +
   1187				     сканирования
   1188	E44E  B1 04			     mov     cl,4
   1189	E450  D2 E8			     shr     al,cl
   1190	E452  E8 025B			     call    xlat_print_cod  ; преобразование и печать
   1191	E455  8A C5			     mov     al,ch	     ; восстановить	код		       +
   1192				     сканирования
   1193	E457  24 0F			     and     al,0fh	     ; выделить	младший байт
   1194	E459  E8 0254			     call    xlat_print_cod  ; преобразование и печать
   1195	E45C  BE E40Er		     f6:     mov     si,offset f1    ; получить	адрес поля	       +
   1196				     сообщения	об
   1197								     ; ошибке
   1198	E45F  B9 0004			     mov     cx,f1l	      ;	длина поля сообщения об    +
   1199				     ошибке
   1200	E462  E8 0190			     call    p_msg	      ;	вывод сообщения об ошибке+
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 25
1840v5.asm



   1201				     на экран
   1202
   1203				     ;	 Установка таблицы векторов прерываний
   1204
   1205	E465			     f7:
   1206	E465  2B C0			     sub     ax,ax
   1207	E467  8E C0			     mov     es,ax
   1208	E469  B9 0008			     mov     cx,8	     ; получить	счетчик векторов
   1209	E46C  0E			     push    cs
   1210	E46D  1F			     pop     ds
   1211	E46E  BE FEF3r			     mov     si,offset vector_table   ;	адрес таблицы	       +
   1212				     векторов
   1213	E471  BF 0020r			     mov     di,offset int_ptr
   1214	E474  FC			     cld
   1215	E475  A5		     f7a:    movsw
   1216	E476  47			     inc     di
   1217	E477  47			     inc     di
   1218	E478  E2 FB			     loop    f7a
   1219	E47A  EB 01			     jmp short tst14
   1220
   1221					     org     0e47dh	     ;rc для	устранения съезжания+
   1222				     при переделке загрузчика таблицы векторв      +
   1223				     прерываний
   1224
   1225				     ;______________________
   1226				     ;	 ТЕСТ.14
   1227				     ;	 Осуществляет проверку НГМД
   1228				     ;______________________
   1229	E47D  B8 0040		     tst14:  mov     ax,dat	     ; уст. регистр DS
   1230	E480  8E D8			     mov     ds,ax
   1231	E482  B0 FC			     mov     al,0fch  ;	доступность прерываний	       +
   1232				     таймера и клавиатуры
   1233	E484  E6 21			     out     inta01,al
   1234	E486  A0 0010r			     mov     al,byte ptr equip_flag  ; получить	состояние     +
   1235				     переклю-
   1236									     ; чателей
   1237	E489  A8 01			     test    al,01h	     ; первоначальная загрузка с+
   1238				     НГМД ?
   1239	E48B  75 03			     jnz     f10	     ; да - проверка управления    +
   1240				     НГМД
   1241	E48D  E9 00ED			     jmp     f23
   1242	E490			     f10:
   1243	E490  B0 BC			     mov     al,0bch	     ; доступность прерываний с  +
   1244				     НГМД,
   1245	E492  E6 21			     out     inta01,al	     ; клавиатуры и таймера
   1246	E494  B4 00			     mov     ah,0	     ; сброс контроллера НГМД
   1247	E496  CD 13			     int     13h	     ; переход к сбросу НГМД
   1248	E498  F6 C4 FF			     test    ah,0ffh	     ; состояние верно ?
   1249	E49B  75 20			     jnz     f13	     ; нет -	сбой устройства
   1250
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 26
1840v5.asm



   1251				     ;	 Включить мотор устройства 0
   1252
   1253	E49D  BA 03F2			     mov     dx,03f2h	     ; получить	адрес адаптера    +
   1254				     НГМД
   1255	E4A0  B0 1C			     mov     al,1ch	     ; включить	мотор
   1256	E4A2  EE			     out     dx,al
   1257	E4A3  2B C9			     sub     cx,cx
   1258
   1259				     ;	  Ожидание включения мотора НГМД
   1260
   1261	E4A5			     f11:
   1262	E4A5  E2 FE			     loop    f11
   1263	E4A7			     f12:			     ; ожидание	мотора 1
   1264	E4A7  E2 FE			     loop    f12
   1265	E4A9  33 D2			     xor     dx,dx
   1266	E4AB  B5 01			     mov     ch,1	     ; выбор первой дорожки
   1267	E4AD  88 16 003Er		     mov seek_status,dl
   1268	E4B1  E8 09B3			     call    seek	     ; переход к рекалибровке      +
   1269				     НГМД
   1270	E4B4  72 07			     jc	     f13	     ; перейти в программу ошибок
   1271	E4B6  B5 22			     mov     ch,34	     ; выбор 34 дорожки
   1272	E4B8  E8 09AC			     call    seek
   1273	E4BB  73 09			     jnc     f14	     ; выключить мотор
   1274
   1275				     ;	  Ошибки НГМД
   1276
   1277	E4BD			     f13:
   1278	E4BD  BE E412r			     mov     si,offset f3    ; получить	адрес поля	       +
   1279				     сообщения	об
   1280								     ; ошибке
   1281	E4C0  B9 0003			     mov     cx,f3l	     ; установить счетчик
   1282	E4C3  E8 012F			     call    p_msg	     ; идти	в программу ошибок
   1283
   1284				     ;	 Выключить мотор устройства 0
   1285
   1286	E4C6			     f14:
   1287	E4C6  B0 0C			     mov     al,0ch	     ; выключить мотор		       +
   1288				     устройства 0
   1289	E4C8  BA 03F2			     mov     dx,03f2h	     ; уст адрес порта		       +
   1290				     управления НГМД
   1291	E4CB  EE			     out     dx,al
   1292
   1293				     ;	 Установка печати и базового адреса
   1294				     ;	 адаптера стыка С2, если устройства		       +
   1295				     подключены
   1296
   1297	E4CC			     f15:
   1298	E4CC  83 FD 00			     cmp     bp,0000h
   1299	E4CF  74 18			     jz	     dal
   1300	E4D1  BA 0003			     mov     dx,3
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 27
1840v5.asm



   1301	E4D4  E8 00A9			     call    err_beep
   1302	E4D7  BE E690r			     mov     si,offset f39
   1303	E4DA  B9 0017				     mov     cx, 23
   1304	E4DD  E8 0115			     call    p_msg
   1305	E4E0			     err_wait:
   1306	E4E0  B4 00			     mov     ah,0
   1307	E4E2  CD 16			     int     16h
   1308	E4E4  80 FC 3B			     cmp     ah,3bh
   1309	E4E7  75 F7			     jnz     err_wait
   1310	E4E9  2A E4		     dal:    sub     ah,ah
   1311	E4EB  A0 0049r			     mov     al,crt_mode
   1312	E4EE  CD 10			     int     10h
   1313	E4F0  C7 06 001Ar 001Er			     mov     ds:buffer_head, offset kb_buffer ;	ERROR -	Must be	approx.+
   1314				     6 lines upper, before int 16h
   1315	E4F6  C7 06 001Cr 001Er			     mov     ds:buffer_tail, offset kb_buffer ;	ERROR -	Must be	approx.+
   1316				     6 lines upper, before int 16h
   1317	E4FC  BD E415r			     mov     bp,offset f4    ; таблица PRT_SRC
   1318	E4FF  BE 0000			     mov     si,0
   1319	E502			     f16:
   1320	E502  2E: 8B 56	00		     mov     dx,cs:[bp]	     ; получить	базовый адрес      +
   1321				     печати
   1322	E506  B0 AA			     mov     al,0aah	     ; записать	данные в	порт А
   1323	E508  EE			     out     dx,al
   1324	E509  2A C0			     sub     al,al
   1325	E50B  EC			     in	     al,dx	     ; считывание порта А
   1326	E50C  3C AA			     cmp     al,0aah	     ; шаблон данных тот	же
   1327	E50E  75 06			     jne     f17	 ; нет - проверка следующего      +
   1328				     устройства печати
   1329	E510  89 94 0008r		     mov     word ptr printer_base[si],dx  ;да-уст	базовый	       +
   1330				     адрес
   1331	E514  46			     inc     si		     ; вычисление следующего       +
   1332				     слова
   1333	E515  46			     inc     si
   1334	E516			     f17:
   1335	E516  45			     inc     bp		     ; указать следующий базовый+
   1336				     адрес
   1337	E517  45			     inc     bp
   1338	E518  81 FD E417r		     cmp     bp,offset f4e   ; все возможные адреса	       +
   1339				     проверены	?
   1340	E51C  75 E4			     jne     f16	     ; нет, к проверке следующего+
   1341				     адреса печати
   1342	E51E  BB 0000			     mov     bx,0
   1343	E521  BA 03FF			     mov     dx,3ffh	     ; проверка	подключения	       +
   1344				     адаптера 1	стыка С2
   1345	E524  B0 8A			     mov     al,8ah
   1346	E526  EE			     out     dx,al
   1347	E527  BA 02FF			     mov     dx,2ffh
   1348	E52A  EE			     out     dx,al
   1349	E52B  BA 03FC			     mov     dx,3fch
   1350	E52E  B0 AA			     mov     al,0aah
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 28
1840v5.asm



   1351	E530  EE			     out     dx,al
   1352	E531  42			     inc     dx
   1353	E532  33 C0				     xor     ax, ax
   1354	E534  EE				     out     dx, al
   1355	E535  EC			     in	     al,dx
   1356	E536  3C AA			     cmp     al,0aah
   1357	E538  75 08			     jnz     f18
   1358	E53A  C7 87 0000r 03F8		     mov  word ptr rs232_base[bx],3f8h	; уст адрес адаптера 1
   1359	E540  43			     inc     bx
   1360	E541  43			     inc     bx
   1361	E542  BA 02FC		     f18:    mov     dx,2fch	     ; проверка	подключения	       +
   1362				     адаптера 2	стыка С2
   1363	E545  B0 AA			     mov     al,0aah
   1364	E547  EE			     out     dx,al
   1365	E548  42			     inc     dx
   1366	E549  33 C0				     xor     ax, ax
   1367	E54B  EE				     out     dx, al
   1368	E54C  EC			     in	     al,dx
   1369	E54D  3C AA			     cmp     al,0aah
   1370	E54F  75 08			     jnz     f19
   1371	E551  C7 87 0000r 02F8		     mov  word ptr rs232_base[bx],2f8h	 ; уст адрес адаптера 2
   1372	E557  43			     inc     bx
   1373	E558  43			     inc     bx
   1374
   1375
   1376
   1377				     ;_____Установка EQUIP_FLAG для	инди-
   1378				     ;	   кации номера печати
   1379
   1380	E559			     f19:
   1381	E559  E9 1411				     jmp     f19a
   1382
   1383	E55C			     f19b:
   1384	E55C  D2 C8			     ror     al,cl
   1385	E55E  0A C3			     or	     al,bl
   1386	E560  A2 0011r			     mov     byte ptr equip_flag+1,al
   1387	E563  BA 0201			     mov     dx,201h
   1388	E566  EC			     in	     al,dx
   1389	E567  A8 0F			     test    al,0fh
   1390	E569  75 05			     jnz     f20			; проверка адаптера    +
   1391				     игр
   1392	E56B  80 0E 0011r 10		     or	     byte ptr equip_flag+1,16
   1393	E570			     f20:
   1394	E570  E9 140D				     jmp     f20a
   1395	E573  90				     nop
   1396
   1397	E574			     f20b:
   1398	E574  BA 0001				     mov     dx, 1
   1399	E577  E8 0006			     call    err_beep	     ; переход к подпрограмме      +
   1400				     звукового	сигнала
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 29
1840v5.asm



   1401	E57A			     f21:
   1402	E57A  E9 017A				     jmp     boot_strap
   1403
   1404	E57D			     f23:
   1405	E57D  E9 FF4C			     jmp     f15
   1406
   1407				     ;	  Установка длительности звукового сигнала
   1408
   1409					     assume  cs:code,ds:data
   1410	E580			     err_beep proc   near
   1411	E580  9C			     pushf		     ; сохранить признаки
   1412	E581  FA			     cli		     ; сброс признака разрешения+
   1413				     прерывания
   1414	E582  1E			     push    ds		     ; сохранить DS
   1415	E583  B8 0040			     mov     ax,dat	     ; DS - сегмент данных
   1416	E586  8E D8			     mov     ds,ax
   1417	E588  0A F6			     or	     dh,dh
   1418	E58A  74 0B			     jz	     g3
   1419	E58C			     g1:			      ;	длинный звуковой	сигнал
   1420	E58C  B3 06			     mov     bl,6	      ;	счетчик для звуковых	       +
   1421				     сигналов
   1422	E58E  E8 0018			     call    beep	      ;	выполнить звуковой сигнал
   1423	E591  E2 FE		     g2:     loop    g2		      ;	задержка между звуковыми +
   1424				     сигналами
   1425	E593  FE CE			     dec     dh
   1426	E595  75 F5			     jnz     g1
   1427	E597			     g3:			      ;	короткий звуковой сигнал
   1428	E597  B3 01			     mov     bl,1   ; счетчик для короткого		       +
   1429				     звукового	сигнала
   1430	E599  E8 000D			     call    beep	     ; выполнить звуковой сигнал
   1431	E59C  E2 FE		     g4:     loop    g4		     ; задержка	между звуковыми  +
   1432				     сигналами
   1433	E59E  FE CA			     dec     dl		     ;
   1434	E5A0  75 F5			     jnz     g3		     ; выполнить
   1435	E5A2  E2 FE		     g5:     loop    g5		     ; длинная задержка перед      +
   1436				     возвратом
   1437	E5A4  E2 FE		     g6:     loop    g6
   1438	E5A6  1F			     pop     ds		     ; восстановление DS
   1439	E5A7  9D			     popf		; восстановление			       +
   1440				     первоначальных признаков
   1441	E5A8  C3			     ret		     ; возврат к программе
   1442	E5A9			     err_beep	     endp
   1443
   1444				     ;	 Подпрограмма звукового сигнала
   1445
   1446	E5A9			     beep    proc    near
   1447	E5A9  B0 B6			     mov     al,10110110b    ; таймер 2,младший и	старший +
   1448				     счет-
   1449								     ; чики, двоичный счет
   1450	E5AB  E6 43			     out     timer+3,al	     ; записать	в регистр режима
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 30
1840v5.asm



   1451	E5AD  B8 045E			     mov     ax,45eh	     ; делитель
   1452	E5B0  E6 42			     out     timer+2,al	     ; записать	младший счетчик
   1453	E5B2  8A C4			     mov     al,ah
   1454	E5B4  E6 42			     out     timer+2,al	     ; записать	старший счетчик
   1455	E5B6  E4 61			     in	     al,port_b	     ; получить	текущее		       +
   1456				     состояние	порта
   1457	E5B8  8A E0			     mov     ah,al	     ; сохранить это состояние
   1458	E5BA  0C 03			     or	     al,03	     ; включить	звук
   1459	E5BC  E6 61			     out     port_b,al
   1460	E5BE  2B C9			     sub     cx,cx	     ; установить счетчик	       +
   1461				     ожидания
   1462	E5C0  E2 FE		     g7:     loop    g7		     ; задержка	перед		       +
   1463				     выключением
   1464	E5C2  FE CB			     dec     bl		     ; задержка	счетчика	       +
   1465				     закончена	?
   1466	E5C4  75 FA			     jnz     g7	     ; нет -	продолжение подачи	       +
   1467				     звукового	сигнала
   1468	E5C6  8A C4			     mov     al,ah	     ; восстановить	значение       +
   1469				     порта
   1470	E5C8  E6 61			     out     port_b,al
   1471	E5CA  C3			     ret		     ; возврат к программе
   1472	E5CB			     beep    endp
   1473				     ;_____________________
   1474				     ;	 Эта	процедура вызывает программный
   1475				     ;	 сброс клавиатуры
   1476				     ;_____________________
   1477	E5CB			     kbd_reset proc  near
   1478	E5CB  B0 0C			     mov     al,0ch	; установить низкий уровень     +
   1479				     синхронизации
   1480	E5CD  E6 61			     out     port_b,al	     ; записать	порт B
   1481	E5CF  B9 7530			     mov     cx,30000	     ; время длительности	       +
   1482				     низкого уровня
   1483	E5D2  E2 FE		     g8:     loop    g8
   1484	E5D4  B0 CC			     mov     al,0cch	     ; уст CLK
   1485	E5D6  E6 61			     out     port_b,al
   1486	E5D8			     sp_test:
   1487	E5D8  B0 4C			     mov     al,4ch	     ; уст высокий уровень	       +
   1488				     синхронизации
   1489	E5DA  E6 61			     out     port_b,al
   1490	E5DC  B0 FD			     mov     al,0fdh	     ; разрешить прерывания	       +
   1491				     клавиатуры
   1492	E5DE  E6 21			     out     inta01,al	     ; записать	регистр масок
   1493	E5E0  FB			     sti		     ; уст признака разрешения    +
   1494				     прерывания
   1495	E5E1  B4 00			     mov     ah,0
   1496	E5E3  2B C9			     sub     cx,cx	     ; уст счетчика ожидания	       +
   1497				     прерываний
   1498	E5E5  F6 C4 FF		     g9:     test    ah,0ffh	     ; прерывание клавиатуры       +
   1499				     возникло ?
   1500	E5E8  75 02			     jnz     g10   ;  да - считывание возвращенного   +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 31
1840v5.asm



   1501				     кода сканирования
   1502	E5EA  E2 F9			     loop    g9		     ; нет -	цикл ожидания
   1503	E5EC  E4 60		     g10:    in	     al,port_a	 ; считать код сканирования      +
   1504				     клавиатуры
   1505	E5EE  8A D8			     mov     bl,al	     ; сохранить этот код
   1506	E5F0  B0 CC			     mov     al,0cch	     ; очистка клавиатуры
   1507	E5F2  E6 61			     out     port_b,al
   1508	E5F4  C3			     ret		     ; возврат к программе
   1509	E5F5			     kbd_reset	     endp
   1510				     ;_____________________
   1511				     ;	 Эта	программа выводит на экран дисплея
   1512				     ;	 сообщения об ошибках
   1513				     ;
   1514				     ;	   Необходимые условия:
   1515				     ;	 SI = адрес поля сообщения об ошибке
   1516				     ;	 CX = длина поля сообщения об ошибке
   1517				     ;	 Максимальный размер передаваемой
   1518				     ;	 информации -	36 знаков
   1519				     ;
   1520				     ;______________________
   1521	E5F5			     p_msg   proc    near
   1522	E5F5  8B EE			     mov     bp,si
   1523	E5F7  E8 00AD			     call prt_str
   1524	E5FA  B8 0E0D			     mov     ax,0e0dh	; переместить курсор в начало  +
   1525				     строки
   1526	E5FD  CD 10			     int     10h
   1527	E5FF  B8 0E0A			     mov     ax,0e0ah  ; переместить	курсор на	       +
   1528				     следующую	строку
   1529	E602  CD 10			     int     10h
   1530	E604  C3			     ret
   1531	E605			     p_msg   endp
   1532
   1533
   1534	E605			     e190:
   1535	E605  1E				     push    ds
   1536	E606  B8 0010				     mov     ax, 16
   1537	E609  81 3E 0072r 1234			     cmp     ds:reset_flag, 1234h
   1538	E60F  75 03				     jnz     e20a
   1539	E611  E9 FE13				     jmp     tst12
   1540
   1541	E614			     e20a:
   1542	E614  B8 0010				     mov     ax, 16
   1543	E617  EB 25				     jmp     short prt_siz
   1544
   1545	E619			     e20b:
   1546	E619  8B 1E 0013r			     mov     bx, ds:memory_size
   1547	E61D  83 EB 10				     sub     bx, 16
   1548	E620  B1 04				     mov     cl, 4
   1549	E622  D3 EB				     shr     bx, cl
   1550	E624  8B CB				     mov     cx, bx
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 32
1840v5.asm



   1551	E626  BB 0400				     mov     bx, 400h
   1552
   1553	E629			     e20c:
   1554	E629  8E DB				     mov     ds, bx
   1555
   1556	E62B  8E C3				     mov     es, bx
   1557	E62D  81 C3 0400			     add     bx, 400h
   1558	E631  52				     push    dx
   1559	E632  51				     push    cx
   1560	E633  53				     push    bx
   1561	E634  50				     push    ax
   1562	E635  E8 F9E2				     call    stgtst
   1563	E638  75 3B				     jnz     e21a
   1564	E63A  58				     pop     ax
   1565	E63B  05 0010				     add     ax, 16
   1566
   1567	E63E			     prt_siz:
   1568	E63E  50				     push    ax
   1569	E63F  BB 000A				     mov     bx, 10
   1570	E642  B9 0003				     mov     cx, 3
   1571
   1572	E645			     decimal_loop:
   1573	E645  33 D2				     xor     dx, dx
   1574	E647  F7 F3				     div     bx
   1575	E649  80 CA 30				     or	     dl, 30h
   1576	E64C  52				     push    dx
   1577	E64D  E2 F6				     loop    decimal_loop
   1578	E64F  B9 0003				     mov     cx, 3
   1579
   1580	E652			     prt_dec_loop:
   1581	E652  58				     pop     ax
   1582	E653  E8 002E				     call    prt_hex
   1583	E656  E2 FA				     loop    prt_dec_loop
   1584	E658  B9 0007				     mov     cx, 7
   1585	E65B  BE E689r				     mov     si, offset	e300 ; " Kb OK\r"
   1586	E65E  E8 0046				     call    prt_str
   1587	E661  58				     pop     ax
   1588	E662  3D 0010				     cmp     ax, 16
   1589	E665  74 B2				     jz	     e20b
   1590	E667  5B				     pop     bx
   1591	E668  59				     pop     cx
   1592	E669  5A				     pop     dx
   1593	E66A  E2 BD				     loop    e20c
   1594	E66C  B0 0A				     mov     al, 10
   1595	E66E  E8 0013				     call    prt_hex
   1596	E671  1F				     pop     ds
   1597
   1598	E672  E9 FDB2				     jmp     tst12
   1599
   1600	E675			     e21a:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 33
1840v5.asm



   1601	E675  59				     pop     cx
   1602	E676  83 C4 06				     add     sp, 6
   1603	E679  8C C2				     mov     dx, es
   1604	E67B  1F				     pop     ds
   1605	E67C  1E				     push    ds
   1606	E67D  89 0E 0013r			     mov     ds:memory_size, cx
   1607	E681  E9 FD4A				     jmp     osh
   1608
   1609	E684			     prt_hex	     proc near
   1610	E684  B4 0E				     mov     ah, 14
   1611	E686  CD 10				     int     10h
   1612	E688  C3				     retn
   1613	E689			     prt_hex	     endp
   1614
   1615	E689  20 4B 62 20 4F 4B	0D   e300	     db	' Kb OK',0Dh
   1616	E690  45 52 52 4F 52 20	28+  f39	     db	'ERROR (RESUME="F1" KEY)'
   1617	      52 45 53 55 4D 45	3D+
   1618	      22 46 31 22 20 4B	45+
   1619	      59 29
   1620
   1621	E6A7			     prt_str	     proc near
   1622	E6A7  FC				     cld
   1623	E6A8  2E				     db	     2eh	     ;cs segment prefix
   1624	E6A9  AC				     lodsb
   1625	E6AA  E8 FFD7				     call    prt_hex
   1626	E6AD  E2 F8				     loop    prt_str
   1627	E6AF  C3				     ret
   1628	E6B0			     prt_str	     endp
   1629
   1630				     ;_____________________
   1631				     ;
   1632				     ;	 Процедура вывода на экран сообщения об       +
   1633				     ошибке в коде ASCII
   1634				     ;
   1635				     ;_______________________
   1636
   1637	E6B0			     xlat_print_cod proc near
   1638	E6B0  1E			     push    ds		     ; сохранить DS
   1639	E6B1  0E			     push    cs
   1640	E6B2  1F			     pop     ds
   1641	E6B3  BB E417r			     mov     bx,offset f4e   ; адрес таблицы кодов ASCII
   1642	E6B6  D7			     xlatb
   1643	E6B7  B4 0E			     mov     ah,14
   1644	E6B9  CD 10			     int     10h
   1645	E6BB  1F			     pop     ds
   1646	E6BC  C3			     ret
   1647	E6BD			     xlat_print_cod endp
   1648
   1649
   1650				     ;	 Таблица	кодов русских больших букв	       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 34
1840v5.asm



   1651				     (заглавных)
   1652
   1653	E6BD			     rust2   label   byte
   1654	E6BD  1B 21 40 23 24 25	5E+	     db	     1bh,'!@#$',37,05eh,'&*()_+'
   1655	      26 2A 28 29 5F 2B
   1656
   1657
   1658	E6CA  08 00			     db	     08h,0
   1659	E6CC  B9 C6 C3 BA B5 BD	B3+	     db	     0b9h,0c6h,0c3h,0bah,0b5h,0bdh,0b3h,0c8h
   1660	      C8
   1661
   1662	E6D4  C9 B7 B6 CD 0D FF	C4+	     db	     0c9h,0b7h,0b6h,0cdh,0dh,-1,0c4h,0cbh
   1663	      CB
   1664
   1665	E6DC  B2 B0 BF C0 BE BB	B4+	     db	     0b2h,0b0h,0bfh,0c0h,0beh,0bbh,0b4h,27h
   1666	      27
   1667
   1668	E6E4  22 B1 CE 7C CF C7	C1+	     db	     '"',0b1h,0ceh,7ch,0cfh,0c7h,0c1h,0bch,0b8h
   1669	      BC B8
   1670
   1671	E6ED  C2 CC 3C 3E 3F C5	00+	     db	     0c2h,0cch,'<>?',0c5h,000,-1,' ',0cah
   1672	      FF 20 CA
   1673
   1674
   1675
   1676
   1677				     ;___int 19_____________
   1678				     ;	 Программа загрузки системы с НГМД
   1679				     ;
   1680				     ; Программа считывает содержимое дорожки 0     +
   1681				     сектора 1 в
   1682				     ; ячейку boot_locn (адрес 7C00,сегмент 0)
   1683				     ;	 Если НГМД отсутствует или произошла	       +
   1684				     аппаратная ошибка,
   1685				     ; устанавливается прерывание типа INT	18H,	       +
   1686				     которое вызывает
   1687				     ; выполнение программ тестирования и	       +
   1688				     инициализации
   1689				     ; системы
   1690				     ;
   1691				     ;_________________________
   1692					     assume  cs:code,ds:data
   1693	E6F7			     boot_strap	proc near
   1694
   1695	E6F7  FB			     sti		   ; установить признак	       +
   1696				     разрешения прерывания
   1697	E6F8  B8 0040			     mov     ax,dat	   ; установить адресацию
   1698	E6FB  8E D8			     mov     ds,ax
   1699	E6FD  A1 0010r			     mov     ax,equip_flag ; получить состояние	       +
   1700				     переключателей
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 35
1840v5.asm



   1701	E700  A8 01			     test    al,1	   ; опрос	первоначальной	       +
   1702				     загрузки
   1703	E702  74 23			     jz	     h3
   1704
   1705				     ;	 Система	загружается с НГМД
   1706				     ;	 CX содержит счетчик повторений
   1707
   1708	E704  B9 0004			     mov     cx,4	     ; установить счетчик	       +
   1709				     повторений
   1710	E707			     h1:			     ; первоначальная загрузка
   1711	E707  51			     push    cx		     ; сохранить счетчик	       +
   1712				     повторений
   1713	E708  B4 00			     mov     ah,0	     ; сброс НГМД
   1714	E70A  CD 13			     int     13h
   1715	E70C  72 14			     jc	     h2		     ; если	ошибка,повторить
   1716	E70E  B4 02			     mov     ah,2	     ; считать сектор 1
   1717	E710  BB 0000			     mov     bx,0	     ;
   1718	E713  8E C3			     mov     es,bx
   1719	E715  BB 7C00r			     mov     bx,offset boot_locn
   1720	E718  BA 0000			     mov     dx,0	     ;
   1721	E71B  B9 0001			     mov     cx,1	     ; сектор 1 ,	дорожка 0
   1722	E71E  B0 01			     mov     al,1	     ; считывание первого	       +
   1723				     сектора
   1724	E720  CD 13			     int     13h
   1725	E722  59		     h2:     pop     cx		     ; восстановить	счетчик	       +
   1726				     повторений
   1727	E723  73 05			     jnc     h4		     ; уст CF при	безуспешном	       +
   1728				     считывании
   1729	E725  E2 E0			     loop    h1		     ; цикл	повторения
   1730
   1731				     ;	 Загрузка с НГМД недоступна
   1732
   1733	E727			     h3:			     ; кассета
   1734	E727  E9 F996			     jmp     err01   ; отсутствует дискет загрузки
   1735
   1736				     ;	 Загрузка завершилась успешно
   1737
   1738	E72A			     h4:				     ;
   1739	E72A  EA 00007C00sr			     jmp far ptr boot_locn   ; db 0EAh,	00h, 7Ch, 00h, 00h   ;	       +
   1740				     (0000:7C00)   ; ###Gleb###
   1741
   1742	E72F			     boot_strap	     endp
   1743				     ;--------------------
   1744				     ;	 Эта	программа посылает байт в	контроллер   +
   1745				     адаптера НГМД
   1746				     ; после проверки корректности управления и    +
   1747				     готовности
   1748				     ; контроллера.
   1749				     ;	 Программа ожидает байт состояния		       +
   1750				     определенное время
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 36
1840v5.asm



   1751				     ; и проверяет готовность НГМД к работе.
   1752				     ;
   1753				     ;	 ВВОД   (AH) - выводимый байт
   1754				     ;
   1755				     ;	 ВЫВОД  CY=0 - успешно,
   1756				     ;		CY=1 - не успешно.Состояние
   1757				     ;		НГМД анализируется.
   1758				     ;-----------------------
   1759	E72F			     nec_output	proc near
   1760	E72F  52			     push    dx		     ; сохранить регистры
   1761	E730  51			     push    cx
   1762	E731  BA 03F4			     mov     dx,03f4h	     ; состояние порта
   1763	E734  33 C9			     xor     cx,cx	     ; счетчик времени вывода
   1764	E736			     j23:
   1765	E736  EC			     in	     al,dx	     ; получить	состояние
   1766	E737  A8 40			     test    al,040h	     ; проверка	управляющих бит
   1767	E739  74 0C			     jz	     j25	     ; биты	управления		       +
   1768				     нормальные
   1769	E73B  E2 F9			     loop    j23
   1770	E73D			     j24:
   1771	E73D  80 0E 0041r 80		     or	     diskette_status,time_out
   1772	E742  59			     pop     cx
   1773	E743  5A			     pop     dx	     ; установить код ошибки	и	       +
   1774				     восстановить регистры
   1775	E744  58			     pop     ax		     ; адрес возврата
   1776	E745  F9			     stc		     ;
   1777	E746  C3			     ret
   1778
   1779	E747			     j25:
   1780	E747  33 C9			     xor     cx,cx	     ; обнуление счетчика
   1781	E749			     j26:
   1782	E749  EC			     in	     al,dx	     ; получить	состояние
   1783	E74A  A8 80			     test    al,080h	     ; проверка	готовности
   1784	E74C  75 04			     jnz     j27	     ; да - идти на выход
   1785	E74E  E2 F9			     loop    j26	     ; повторить
   1786	E750  EB EB			     jmp     short j24	     ; ошибка состояния
   1787	E752			     j27:			     ; выход
   1788	E752  8A C4			     mov     al,ah	     ; получить	байт
   1789	E754  BA 03F5			     mov     dx,03f5h	     ; переслать байт данных	в     +
   1790				     порт
   1791	E757  EE			     out     dx,al
   1792	E758  59			     pop     cx		     ; восстановить	регистры
   1793	E759  5A			     pop     dx
   1794	E75A  C3			     ret		     ;
   1795	E75B			     nec_output	     endp
   1796
   1797				     ;___int 16_________________
   1798				     ;
   1799				     ;	 Программа поддержки клавиатуры
   1800				     ;
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 37
1840v5.asm



   1801				     ;	 Эта	программа считывает в регистр
   1802				     ; AX код сканирования клавиши и код
   1803				     ; ASCII из буфера клавиатуры.
   1804				     ;
   1805				     ;	 Программа выполняет три функции, код
   1806				     ; которых задается в регистре AH:
   1807				     ;
   1808				     ;	  AH=0 - считать	следующий символ
   1809				     ;		  из буфера.При выходе	код
   1810				     ;		  сканирования в AH,код
   1811				     ;		  ASCII	в AL.
   1812				     ;	 AH=1 -	установить ZF, если код
   1813				     ;		  ASCII	прочитан:
   1814				     ;
   1815				     ;		  ZF=0 - буфер заполнен,
   1816				     ;		  ZF=1 - буфер пустой.
   1817				     ;	 При	выходе в	AX помещен адрес вершины	       +
   1818				     буфера клавиатуры.
   1819				     ;	 AH=2 -	возврат текущего	состояния в регистр AL
   1820				     ;		   из	постоянно распределенной	области +
   1821				     памяти с
   1822				     ;		адресом 00417H.
   1823				     ;
   1824				     ;	 При	выполнении программ клавиатуры	       +
   1825				     используются флажки,
   1826				     ; которые устанавливаются в	постоянно	       +
   1827				     распределенной области
   1828				     ; памяти по адресам	00417H и 00418H и имеют значение:
   1829				     ;	 00417H
   1830				     ;	       0 - правое	переключение регистра;
   1831				     ;	       1 - левое переключение регистра;
   1832				     ;		  2 - УПР;
   1833				     ;	       3 - ДОП;
   1834				     ;	       4 - ФСД;
   1835				     ;	       5 - ЦИФ;
   1836				     ;	       6 - ФПБ;
   1837				     ;	       7 - ВСТ;
   1838				     ;	 00418H
   1839				     ;	       0 - состояние клавиши ЛАТ между нажатием+
   1840				     и	отжатием;
   1841				     ;	       1 - ЛАТ;
   1842				     ;	       2 - Р/Л;
   1843				     ;	       3 - пауза;
   1844				     ;	       4 - ФСД;
   1845				     ;	       5 - ЦИФ;
   1846				     ;	       6 - ФПБ;
   1847				     ;	       7 - ВСТ.
   1848				     ;
   1849				     ;	 Флажки, соответствующие разрядам 4-7	       +
   1850				     постоянно	распределенной
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 38
1840v5.asm



   1851				     ; области памяти с адресом 00417H,			       +
   1852				     устанавливаются по нажатию
   1853				     ; клавиш ВСТ, ФПБ, ЦИФ, ФСД и сохраняют свои      +
   1854				     значения до сле-
   1855				     ; дующего нажатия соответствующей клавиши.
   1856				     ; Одноименные флажки, соответствующие	       +
   1857				     разрядам 4-7 постоянно
   1858				     ; распределенной области памяти	с адресом      +
   1859				     00418H, и	флажки
   1860				     ; ДОП, УПР, левое переключение регистра,	       +
   1861				     правое переключение
   1862				     ; регистра, Р/Л устанавливаются по нажатию      +
   1863				     клавиш и сбрасываются
   1864				     ; по отжатию.
   1865				     ;
   1866				     ;------------------------------
   1867					     assume  cs:code,ds:data
   1868
   1869
   1870	E75B			     k4	     proc    near
   1871	E75B  83 C3 02			     add     bx,2
   1872	E75E  81 FB 003Er		     cmp  bx, offset kb_buffer_end	      ;	конец буфера	?
   1873	E762  75 03			     jne     k5			      ;	нет - продолжить
   1874	E764  BB 001Er			     mov     bx, offset	kb_buffer     ;	да - уст начала буфера
   1875	E767			     k5:
   1876	E767  C3			     ret
   1877	E768			     k4	     endp
   1878
   1879	E768			     error_beep	proc near
   1880	E768  50			     push    ax
   1881	E769  53			     push    bx
   1882	E76A  51			     push    cx
   1883	E76B  BB 00C0			     mov     bx,0c0h
   1884	E76E  E4 61			     in	     al,kb_ctl
   1885	E770  50			     push    ax
   1886	E771			     k65:
   1887	E771  24 FC			     and     al,0fch
   1888	E773  E6 61			     out     kb_ctl,al
   1889	E775  B9 0048			     mov     cx,48h
   1890	E778  E2 FE		     k66:    loop    k66
   1891	E77A  0C 02			     or	     al,2
   1892	E77C  E6 61			     out     kb_ctl,al
   1893	E77E  B9 0048			     mov     cx,48h
   1894	E781  E2 FE		     k67:    loop    k67
   1895	E783  4B			     dec     bx
   1896	E784  75 EB			     jnz     k65
   1897	E786  58			     pop     ax
   1898	E787  E6 61			     out     kb_ctl,al
   1899	E789  59			     pop     cx
   1900	E78A  5B			     pop     bx
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 39
1840v5.asm



   1901	E78B  58			     pop     ax
   1902	E78C  C3			     ret
   1903	E78D			     error_beep	     endp
   1904
   1905				     ;---
   1906
   1907	E78D			     k54:
   1908	E78D  3C 3B			     cmp     al,59
   1909	E78F  72 05			     jb	     k55
   1910	E791  B0 00			     mov     al,0
   1911	E793  EB 0F				     jmp     short k57
   1912	E795  90				     nop
   1913
   1914	E796  BB E8DCr		     k55:    mov     bx,offset k10
   1915	E799  F6 06 0018r 02		     test    kb_flag_1,lat
   1916	E79E  74 57			     jz	     k99
   1917
   1918				     ;---
   1919
   1920	E7A0			     k56:
   1921	E7A0  FE C8			     dec     al
   1922	E7A2  2E: D7			     xlat    cs:k11
   1923
   1924				     ;---
   1925
   1926	E7A4			     k57:
   1927	E7A4  3C FF			     cmp     al,-1
   1928	E7A6  74 2A			     je	     k59
   1929	E7A8  80 FC FF			     cmp     ah,-1
   1930	E7AB  74 25			     je	     k59
   1931				     ;---
   1932
   1933	E7AD			     k58:
   1934	E7AD  F6 06 0017r 40		     test    kb_flag,caps_state
   1935	E7B2  74 2B			     jz	     k61
   1936
   1937				     ;---
   1938	E7B4  F6 06 0018r 02		     test    kb_flag_1,lat
   1939	E7B9  75 03			     jnz     k88
   1940	E7BB  E9 1175			     jmp     k89
   1941	E7BE			     k88:
   1942	E7BE  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   1943	E7C3  74 10			     jz	     k60
   1944
   1945				     ;----------
   1946
   1947	E7C5  3C 41			     cmp     al,'A'
   1948	E7C7  72 16			     jb	     k61
   1949	E7C9  3C 5A			     cmp     al,'Z'
   1950	E7CB  77 12			     ja	     k61
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 40
1840v5.asm



   1951	E7CD  04 20			     add     al,'a'-'A'
   1952	E7CF  EB 0E				     jmp     short k61
   1953	E7D1  90				     nop
   1954
   1955	E7D2			     k59:
   1956	E7D2  E9 0316			     jmp     k26
   1957
   1958
   1959	E7D5			     k60:
   1960	E7D5  3C 61			     cmp     al,'a'
   1961	E7D7  72 06			     jb	     k61
   1962	E7D9  3C 7A			     cmp     al,'z'
   1963	E7DB  77 02			     ja	     k61
   1964	E7DD  2C 20			     sub     al,'a'-'A'
   1965
   1966	E7DF			     k61:
   1967	E7DF  8B 1E 001Cr		     mov     bx,buffer_tail
   1968	E7E3  8B F3			     mov     si,bx
   1969	E7E5  E8 FF73			     call   k4
   1970	E7E8  3B 1E 001Ar		     cmp     bx,buffer_head
   1971	E7EC  74 0E			     je	     k62
   1972	E7EE  89 04			     mov     word ptr [si],ax
   1973	E7F0  89 1E 001Cr		     mov     buffer_tail,bx
   1974	E7F4  E9 02F4			     jmp     k26
   1975	E7F7  BB F8CBr		     k99:    mov     bx,offset rust
   1976	E7FA  EB A4			     jmp k56
   1977
   1978				     ;---
   1979
   1980	E7FC			     k62:
   1981	E7FC  E8 FF69			     call    error_beep
   1982	E7FF  E9 02E9			     jmp     k26
   1983
   1984				     ;---
   1985
   1986	E802			     k63:
   1987	E802  2C 3B			     sub     al,59
   1988	E804			     k64:
   1989	E804  2E: D7			     xlat    cs:k9
   1990	E806  8A E0			     mov     ah,al
   1991	E808  B0 00			     mov     al,0
   1992	E80A  EB 98				     jmp     short k57
   1993	E80C  22*(00)				     db	34 dup(0)
   1994
   1995				     ;---
   1996
   1997	E82E			     keyboard_io proc	     far
   1998	E82E  FB			     sti		     ;
   1999	E82F  1E			     push    ds
   2000	E830  53			     push    bx
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 41
1840v5.asm



   2001	E831  BB 0040			     mov     bx,dat
   2002	E834  8E DB			     mov     ds,bx	     ; установить сегмент данных
   2003	E836  0A E4			     or	     ah,ah	     ; AH=0
   2004	E838  74 0B			     jz	     k1		  ; переход к считыванию	       +
   2005				     следующего символа
   2006	E83A  FE CC			     dec     ah		     ; AH=1
   2007	E83C  74 20			     jz	     k2		  ; переход к считыванию кода    +
   2008				     ASCII
   2009	E83E  FE CC			     dec     ah			  ; AH=2
   2010	E840  74 2D			     jz	     k3		  ; переход к получению байта    +
   2011				     состояния
   2012	E842  5B			     pop     bx			  ; восстановить регистр
   2013	E843  1F			     pop     ds
   2014	E844  CF			     iret
   2015
   2016				     ;	 Считывание кода сканирования	и кода ASCII из +
   2017				     буфера клавиатуры
   2018				     ;
   2019	E845			     k1:
   2020	E845  FB			     sti	     ; уст признака разрешения	       +
   2021				     прерывания
   2022	E846  90			     nop		     ; задержка
   2023	E847  FA			     cli	     ; сброс признака разрешения	       +
   2024				     прерывания
   2025	E848  8B 1E 001Ar		     mov     bx,buffer_head  ; уст вершину буфера по	       +
   2026				     чтению
   2027	E84C  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   2028				     буфера по записи
   2029	E850  74 F3			     jz	     k1
   2030	E852  8B 07			     mov     ax,word ptr [bx] ;	получить код			       +
   2031				     сканирования и код	ASCII
   2032	E854  E8 FF04			     call    k4
   2033	E857  89 1E 001Ar		     mov     buffer_head,bx  ; запомнить вершину буфера  +
   2034				     по чтению
   2035	E85B  5B			     pop     bx		     ; восстановить	регистр
   2036	E85C  1F			     pop     ds		     ; восстановить	сегмент
   2037	E85D  CF			     iret		     ; возврат к программе
   2038
   2039				     ;	 Считать	код ASCII
   2040
   2041	E85E			     k2:
   2042	E85E  FA			     cli	     ; Сброс признака разрешения	       +
   2043				     прерывания
   2044	E85F  8B 1E 001Ar		     mov     bx,buffer_head  ; получить	указатель	       +
   2045				     вершины буфера
   2046								     ; по чтению
   2047	E863  3B 1E 001Cr		     cmp     bx,buffer_tail  ; сравнить	с вершиной	       +
   2048				     буфера по записи
   2049	E867  8B 07			     mov     ax,word ptr [bx]
   2050	E869  FB			     sti		     ; уст признак разрешения      +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 42
1840v5.asm



   2051				     прерывания
   2052	E86A  5B			     pop     bx		     ; восстановить	регистр
   2053	E86B  1F			     pop     ds		     ; восстановить	сегмент
   2054	E86C  CA 0002			     ret     2
   2055
   2056				     ;	 Получение младшего байта	состояния	       +
   2057				     (флажков)
   2058
   2059	E86F			     k3:
   2060	E86F  A0 0017r			     mov     al,kb_flag	     ; получить	младший байт	       +
   2061				     состояния	    на
   2062	E872  5B			     pop     bx		     ; восстановить	регистр
   2063	E873  1F			     pop     ds		     ; восстановить	сегмент
   2064	E874  CF			     iret		     ; возврат к программе
   2065	E875			     keyboard_io     endp
   2066
   2067				     ;	 Таблица	кодов сканирования управляющих     +
   2068				     клавиш
   2069
   2070	E875			     k6	     label   byte
   2071	E875  52			     db	     ins_key
   2072	E876  56 45 46 38 1D		     db	     caps_key,num_key,scroll_key,alt_key,ctl_key
   2073	E87B  54 55			     db	     left_key,right_key
   2074	E87D  58			     db	     inv_key_l
   2075	E87E  5A 57 5B			     db	     inv_key_r,lat_key,rus_key
   2076	      =000C		     k6l     equ     0ch
   2077
   2078				     ;	 Таблица	масок нажатых управляющих клавиш
   2079
   2080	E881			     k7	     label   byte
   2081	E881  80			     db	     ins_shift
   2082	E882  40 20 10 08 04		     db	     caps_shift,num_shift,scroll_shift,alt_shift,ctl_shift
   2083	E887  02 01			     db	     left_shift,right_shift
   2084
   2085
   2086				     ;	 Таблица	кодов сканирования при нажатой      +
   2087				     клавише УПР для
   2088				     ; кодов сканирования клавиш	меньше 59
   2089
   2090	E889  1B FF 00 FF FF FF	1E+  k8	     db	     27,-1,0,-1,-1,-1,30,-1
   2091	      FF
   2092
   2093	E891  FF FF FF 1F FF 7F	FF+	     db	     -1,-1,-1,31,-1,127,-1,17
   2094	      11
   2095
   2096	E899  17 05 12 14 19 15	09+	     db	     23,5,18,20,25,21,9,15
   2097	      0F
   2098
   2099	E8A1  10 1B 1D 0A FF 01	13	     db	     16,27,29,10,-1,1,19
   2100
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 43
1840v5.asm



   2101	E8A8  04 06 07 08 0A 0B	0C+	     db	     4,6,7,8,10,11,12,-1,-1
   2102	      FF FF
   2103
   2104	E8B1  FF FF 1C 1A 18 03	16+	     db	     -1,-1,28,26,24,3,22,2
   2105	      02
   2106
   2107	E8B9  0E 0D FF FF FF FF	FF+	     db	     14,13,-1,-1,-1,-1,-1,-1
   2108	      FF
   2109
   2110	E8C1  20 FF			     db	     ' ',-1
   2111
   2112				     ;	 Таблица	кодов сканирования при нажатой      +
   2113				     клавише УПР для
   2114				     ; кодов сканирования клавиш	больше 59
   2115	E8C3			     k9	     label   byte
   2116	E8C3  5E 5F 60 61 62 63	64+	     db	     94,95,96,97,98,99,100,101
   2117	      65
   2118
   2119	E8CB  66 67 FF FF 77 FF	84+	     db	     102,103,-1,-1,119,-1,132,-1
   2120	      FF
   2121
   2122	E8D3  73 FF 74 FF 75 FF	76+	     db	     115,-1,116,-1,117,-1,118,-1
   2123	      FF
   2124
   2125	E8DB  FF			     db	     -1
   2126
   2127				     ;	 Таблица	кодов ASCII нижнего	регистра	       +
   2128				     клавиатуры
   2129
   2130	E8DC			     k10     label   byte
   2131	E8DC  1B 31 32 33 34 35	36+	     db	     27,'1234567890-='
   2132	      37 38 39 30 2D 3D
   2133
   2134
   2135	E8E9  08 09			     db	     08h,09h
   2136	E8EB  71 77 65 72 74 79	75+	     db	     'qwertyuiop[]',0dh,-1,'asdfghjkl;:',60h,7eh
   2137	      69 6F 70 5B 5D 0D	FF+
   2138	      61 73 64 66 67 68	6A+
   2139	      6B 6C 3B 3A 60 7E
   2140
   2141
   2142
   2143
   2144	E906  5C 7A 78 63 76 62	6E+	     db	     05ch,'zxcvbnm',',./{'
   2145	      6D 2C 2E 2F 7B
   2146
   2147	E912  2A FF 20 7D		     db	     '*',-1,' }'
   2148
   2149				     ;	 Таблица	кодов ASCII верхнего регистра	       +
   2150				     клавиатуры
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 44
1840v5.asm



   2151
   2152	E916			     k11     label   byte
   2153	E916  1B 21 40 23 24 25	5E+	     db	     27,'!@#$',37,05eh,'&*()_+'
   2154	      26 2A 28 29 5F 2B
   2155
   2156
   2157	E923  08 00			     db	     08h,0
   2158	E925  51 57 45 52 54 59	55+	     db	     'QWERTYUIOP',-1,-1,0dh,-1
   2159	      49 4F 50 FF FF 0D	FF
   2160
   2161
   2162	E933  41 53 44 46 47 48	4A+	     db	     'ASDFGHJKL'
   2163	      4B 4C
   2164
   2165	E93C  27 22 FF FF 7C		     db	     027h,'"',-1,-1,7ch
   2166	E941  5A 58 43 56 42 4E	4D	     db	     'ZXCVBNM'
   2167
   2168	E948  3C 3E 3F FF 00 FF	20+	     db	     '<>?',-1,0,-1,' ',-1
   2169	      FF
   2170
   2171
   2172				     ;	 Таблица	кодов сканирования клавиш Ф11 -	Ф20   +
   2173				     (на верхнем
   2174				     ; регистре	Ф1 - Ф10)
   2175
   2176	E950			     k12     label   byte
   2177	E950  54 55 56 57 58 59	5A	     db	     84,85,86,87,88,89,90
   2178
   2179	E957  5B 5C 5D			     db	     91,92,93
   2180
   2181				     ;	 Таблица	кодов сканирования одновременно   +
   2182				     нажатых клавиш
   2183				     ; ДОП и Ф1 - Ф10
   2184
   2185	E95A			     k13     label byte
   2186	E95A  68 69 6A 6B 6C		     db	     104,105,106,107,108
   2187	E95F  6D 6E 6F 70 71		     db	     109,110,111,112,113
   2188
   2189				     ;	 Таблица	кодов правого				       +
   2190				     пятнадцатиклавишного поля на верхнем
   2191				     ; регистре
   2192
   2193	E964			     k14     label   byte
   2194	E964  37 38 39 2D 34 35	36+	     db	     '789-456+1230.'
   2195	      2B 31 32 33 30 2E
   2196
   2197
   2198
   2199				     ;	 Таблица	кодов правого				       +
   2200				     пятнадцатиклавишного поля на нижнем
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 45
1840v5.asm



   2201				     ; регистре
   2202
   2203	E971			     k15     label byte
   2204	E971  47 48 49 FF 4B FF	4D	     db	     71,72,73,-1,75,-1,77
   2205
   2206	E978  FF 4F 50 51 52 53		     db	     -1,79,80,81,82,83
   2207
   2208	E97E  09*(00)				     db	9 dup(0)
   2209
   2210				     ;----INT 9--------------------------
   2211				     ;
   2212				     ;	  Программа обработки	прерывания		       +
   2213				     клавиатуры
   2214				     ;
   2215				     ; Программа считывает код сканирования	       +
   2216				     клавиши в регистр AL.
   2217				     ; Единичное состояние разряда 7 в коде	       +
   2218				     сканирования означает,
   2219				     ; что клавиша отжата.
   2220				     ;	 В результате выполнения программы в	       +
   2221				     регистре AX формируется
   2222				     ; слово, старший байт которого (AH) содержит      +
   2223				     код сканирования,
   2224				     ; а младший (AL) -	код ASCII. Эта информация	       +
   2225				     помещается в буфер
   2226				     ; клавиатуры. После	заполнения буфера	       +
   2227				     подается звуковой сигнал.
   2228				     ;
   2229				     ;-----------------------------------
   2230
   2231	E987			     kb_int proc far
   2232	E987  FB			     sti		; установка признака		       +
   2233				     разрешения прерывания
   2234	E988  50			     push    ax
   2235	E989  53			     push    bx
   2236	E98A  51			     push    cx
   2237	E98B  52			     push    dx
   2238	E98C  56			     push    si
   2239	E98D  57			     push    di
   2240	E98E  1E			     push    ds
   2241	E98F  06			     push    es
   2242	E990  FC			     cld		    ; установить признак	       +
   2243				     направления вперед
   2244	E991  B8 0040			     mov     ax,dat	    ; установить адресацию
   2245	E994  8E D8			     mov     ds,ax
   2246	E996  E4 60			     in	     al,kb_dat	    ; считать код сканирования
   2247	E998  50			     push    ax
   2248	E999  E4 61			     in	     al,kb_ctl	    ; считать значение порта 61
   2249	E99B  8A E0			     mov     ah,al	    ; сохранить считанное	       +
   2250				     значение
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 46
1840v5.asm



   2251	E99D  0C 80			     or	     al,80h	    ; установить бит 7 порта 61
   2252	E99F  E6 61			     out     kb_ctl,al	    ; для работы с клавиатурой
   2253	E9A1  86 E0			     xchg    ah,al	    ; восстановить значение	       +
   2254				     порта	61
   2255	E9A3  E6 61			     out     kb_ctl,al
   2256	E9A5  58			     pop     ax		    ; восстановить код		       +
   2257				     сканирования
   2258	E9A6  8A E0			     mov     ah,al	    ; и сохранить его в AH
   2259
   2260				     ;---
   2261
   2262	E9A8  3C FF			     cmp     al,0ffh  ;	сравнение с кодом заполнения  +
   2263				     буфера
   2264							      ;	клавиатуры
   2265	E9AA  75 03			     jnz     k16	     ; продолжить
   2266	E9AC  E9 FE4D			     jmp     k62     ; переход на звуковой сигнал по  +
   2267				     заполнению
   2268							     ; буфера клавиатуры
   2269
   2270	E9AF			     k16:
   2271	E9AF  24 7F			     and     al,07fh	     ; сброс бита отжатия клавиши
   2272	E9B1  0E			     push    cs
   2273	E9B2  07			     pop     es
   2274	E9B3  BF E875r			     mov     di,offset k6  ; установить адрес таблицы    +
   2275				     сканирования
   2276								   ; управляющих клавиш
   2277	E9B6  B9 000C			     mov     cx,k6l
   2278	E9B9  F2> AE			     repne scasb     ; сравнение полученного кода      +
   2279				     ска-
   2280							     ; нирования с содержимым таблицы
   2281	E9BB  8A C4			     mov     al,ah	     ; запомнить код		       +
   2282				     сканирования
   2283	E9BD  74 1A			     je	     k17	     ; переход по совпадению
   2284	E9BF  E9 010A			     jmp     k25	     ; переход по несовпадению
   2285	E9C2			     k406:
   2286	E9C2  F6 06 0018r 02		     test    kb_flag_1,lat
   2287	E9C7  75 7F			     jnz     k26a
   2288	E9C9  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2289	E9CE  B8 5CF1			     mov     ax,5cf1h
   2290	E9D1  74 03			     jz	     k407
   2291	E9D3  B8 5CF0			     mov     ax,5cf0h
   2292
   2293				     ;	 Получение маски нажатой управляющей	       +
   2294				     клавиши
   2295
   2296	E9D6			     k407:
   2297	E9D6  E9 FDCB			     jmp     k57
   2298
   2299	E9D9  81 EF E876r	     k17:    sub     di,offset k6+1
   2300	E9DD  83 FF 08			     cmp     di,8
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 47
1840v5.asm



   2301	E9E0  72 3B			     jb	     k300
   2302	E9E2  B4 06			     mov     ah,6
   2303	E9E4  83 FF 0A			     cmp     di,0ah
   2304	E9E7  72 39			     jb	     k301
   2305	E9E9  A8 80			     test    al,80h
   2306	E9EB  74 5B			     jz	     k26a
   2307	E9ED  80 26 0018r FC		     and     kb_flag_1,not lat+lat_shift
   2308	E9F2  83 FF 0B			     cmp     di,0bh
   2309	E9F5  74 17			     je	     k401
   2310	E9F7  F6 06 0018r 04		     test    kb_flag_1,inv_shift
   2311	E9FC  74 08			     jz	     k400
   2312	E9FE  80 0E 0018r 01		     or	     kb_flag_1,lat_shift
   2313	EA03  EB 43				     jmp     short k26a
   2314	EA05  90				     nop
   2315	EA06  80 0E 0018r 03	     k400:   or	     kb_flag_1,lat+lat_shift
   2316	EA0B  EB 3B				     jmp     short k26a
   2317	EA0D  90				     nop
   2318	EA0E  F6 06 0018r 04	     k401:   test    kb_flag_1,inv_shift
   2319	EA13  74 33			     jz	     k26a
   2320	EA15  80 0E 0018r 02		     or	     kb_flag_1,lat
   2321	EA1A  EB 2C				     jmp     short k26a
   2322	EA1C  90				     nop
   2323	EA1D  2E: 8A A5	E881r	     k300:   mov     ah,cs:k7[di]
   2324	EA22			     k301:
   2325	EA22  A8 80			     test    al,80h	     ; клавиша отжата ?
   2326	EA24  75 79			     jnz     k23     ; переход, если	клавиша отжата
   2327
   2328				     ;	 Управляющая	клавиша нажата
   2329
   2330	EA26  80 FC 10			     cmp     ah,scroll_shift ; нажата управляющая	       +
   2331				     клавиша с
   2332								     ;	запоминанием ?
   2333	EA29  73 20			     jae     k18	     ; переход, если	да
   2334
   2335				     ;---
   2336	EA2B  80 FC 06			     cmp     ah,6
   2337	EA2E  74 07			     je	     k302
   2338
   2339	EA30  08 26 0017r		     or	     kb_flag,ah	     ; установка масок		       +
   2340				     управляющих клавиш
   2341								     ; без запоминания
   2342	EA34  E9 00B4			     jmp     k26	     ; к выходу из прерывания
   2343	EA37  80 0E 0018r 06	     k302:   or	     kb_flag_1,inv_shift+lat
   2344	EA3C  F6 06 0018r 01		     test    kb_flag_1,lat_shift
   2345	EA41  74 05			     jz	     k26a
   2346	EA43  80 26 0018r FD		     and     kb_flag_1,not lat
   2347	EA48			     k26a:
   2348	EA48  E9 00A0			     jmp     k26
   2349
   2350				     ;	 Опрос нажатия клавиши с запоминанием
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 48
1840v5.asm



   2351
   2352	EA4B			     k18:
   2353	EA4B  F6 06 0017r 04		     test    kb_flag,ctl_shift	       ; опрос клавиши УПР
   2354	EA50  75 7A			     jnz     k25
   2355	EA52  3C 52			     cmp     al,ins_key		       ; опрос клавиши ВСТ
   2356	EA54  75 25			     jnz     k22
   2357	EA56  F6 06 0017r 08		     test    kb_flag,alt_shift	       ; опрос клавиши ДОП
   2358	EA5B  74 03			     jz	     k19
   2359	EA5D  EB 6D				     jmp     short k25
   2360	EA5F  90				     nop
   2361	EA60  F6 06 0017r 20	     k19:    test    kb_flag,num_state	; опрос клавиши ЦИФ
   2362	EA65  75 0D			     jnz     k21
   2363	EA67  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift ; опрос клавиш	       +
   2364				     левого
   2365								  ; и правого переключения	       +
   2366				     регистров
   2367	EA6C  74 0D			     jz	     k22
   2368
   2369	EA6E			     k20:
   2370	EA6E  B8 5230			     mov     ax,5230h
   2371	EA71  E9 FD30			     jmp     k57	   ; установка	кода нуля
   2372	EA74			     k21:
   2373	EA74  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2374	EA79  74 F3			     jz	     k20
   2375
   2376	EA7B			     k22:
   2377	EA7B  84 26 0018r		     test    ah,kb_flag_1
   2378	EA7F  75 6A			     jnz     k26
   2379	EA81  08 26 0018r		     or	     kb_flag_1,ah
   2380	EA85  30 26 0017r		     xor     kb_flag,ah
   2381	EA89  3C 52			     cmp     al,ins_key
   2382	EA8B  75 5E			     jne     k26
   2383	EA8D  B8 5200			     mov     ax,ins_key*256
   2384	EA90  E9 FD11			     jmp     k57
   2385
   2386	EA93			     k303:
   2387	EA93  80 26 0018r FB		     and     kb_flag_1,not inv_shift
   2388	EA98  80 36 0018r 02		     xor     kb_flag_1,lat
   2389	EA9D  EB 10			     jmp     short k304
   2390
   2391				     ;	 Управляющая	клавиша отжата
   2392
   2393	EA9F			     k23:
   2394
   2395	EA9F  80 FC 10			     cmp     ah,scroll_shift
   2396	EAA2  73 1F			     jae     k24
   2397	EAA4  F6 D4			     not     ah
   2398	EAA6  80 FC F9			     cmp     ah,0f9h
   2399	EAA9  74 E8			     je	     k303
   2400	EAAB  20 26 0017r		     and     kb_flag,ah
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 49
1840v5.asm



   2401	EAAF			     k304:
   2402	EAAF  3C B8			     cmp     al,alt_key+80h
   2403	EAB1  75 38			     jne     k26
   2404
   2405				     ;---
   2406
   2407	EAB3  A0 0019r			     mov     al,alt_input
   2408	EAB6  B4 00			     mov     ah,0
   2409	EAB8  88 26 0019r		     mov     alt_input,ah
   2410	EABC  3C 00			     cmp     al,0
   2411	EABE  74 2B			     je	     k26
   2412	EAC0  E9 FCEA			     jmp     k58
   2413
   2414	EAC3			     k24:
   2415	EAC3  F6 D4			     not     ah
   2416	EAC5  20 26 0018r		     and     kb_flag_1,ah
   2417	EAC9  EB 20				     jmp     short k26
   2418	EACB  90				     nop
   2419
   2420	EACC			     k25:
   2421	EACC  3C 80			     cmp     al,80h
   2422	EACE  73 1B			     jae     k26
   2423	EAD0  3C 59			     cmp     al,inf_key
   2424	EAD2  74 25			     je	     k307
   2425	EAD4  3C 5C			     cmp     al,92
   2426	EAD6  75 03			     jne     k406b
   2427	EAD8  E9 FEE7			     jmp     k406
   2428	EADB			     k406b:
   2429	EADB  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2430	EAE0  74 1D			     jz	     k28
   2431	EAE2  3C 45			     cmp     al,num_key
   2432	EAE4  74 05			     je	     k26
   2433	EAE6  80 26 0018r F7		     and     kb_flag_1,not hold_state
   2434
   2435	EAEB			     k26:
   2436	EAEB  FA			     cli
   2437	EAEC  B0 20			     mov     al,eoi
   2438	EAEE  E6 20			     out     020h,al
   2439	EAF0			     k27:
   2440	EAF0  07			     pop     es
   2441	EAF1  1F			     pop     ds
   2442	EAF2  5F			     pop     di
   2443	EAF3  5E			     pop     si
   2444	EAF4  5A			     pop     dx
   2445	EAF5  59			     pop     cx
   2446	EAF6  5B			     pop     bx
   2447	EAF7  58			     pop     ax
   2448	EAF8  CF			     iret
   2449
   2450	EAF9  B8 A000		     k307:   mov     ax,0a000h
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 50
1840v5.asm



   2451	EAFC  E9 FCA5			     jmp     k57
   2452
   2453
   2454				     ;---
   2455
   2456	EAFF			     k28:
   2457	EAFF  F6 06 0017r 08		     test    kb_flag,alt_shift
   2458	EB04  75 03			     jnz     k29
   2459	EB06  EB 6D				     jmp     short k38
   2460	EB08  90				     nop
   2461
   2462				     ;---
   2463
   2464	EB09			     k29:
   2465	EB09  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2466	EB0E  74 0F			     jz	     k31
   2467	EB10  3C 53			     cmp     al,del_key
   2468	EB12  75 0B			     jne     k31
   2469
   2470				     ;---
   2471
   2472	EB14  C7 06 0072r 1234		     mov     reset_flag,1234h
   2473	EB1A  EA			     db	     0eah		     ;	     db	     0eah,5bh,0e0h,00h,0f0h  ; +
   2474				     jmp far ptr start
   2475	EB1B  E06Cr F000		     dw	     offset start, cod	     ;	     ###Gleb###
   2476
   2477				     ;---
   2478
   2479
   2480
   2481
   2482	EB1F			     k31:
   2483	EB1F  3C 39			     cmp     al,57
   2484	EB21  75 05			     jne     k32
   2485	EB23  B0 20			     mov     al,' '
   2486	EB25  E9 FC7C			     jmp     k57
   2487
   2488				     ;---
   2489
   2490	EB28			     k32:
   2491	EB28  BF F905r			     mov     di,offset k30
   2492	EB2B  B9 000A			     mov     cx,10
   2493	EB2E  F2> AE				     repne scasb
   2494	EB30  75 12			     jne     k33
   2495	EB32  81 EF F906r		     sub     di,offset k30+1
   2496	EB36  A0 0019r			     mov     al,alt_input
   2497	EB39  B4 0A			     mov     ah,10
   2498	EB3B  F6 E4			     mul     ah
   2499	EB3D  03 C7			     add     ax,di
   2500	EB3F  A2 0019r			     mov     alt_input,al
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 51
1840v5.asm



   2501	EB42  EB A7				     jmp     short k26
   2502
   2503				     ;---
   2504
   2505	EB44			     k33:
   2506	EB44  C6 06 0019r 00		     mov     alt_input,00h
   2507	EB49  B9 001A			     mov     cx,0026
   2508	EB4C  F2> AE				     repne scasb
   2509	EB4E  75 05			     jne     k34
   2510	EB50  B0 00			     mov     al,0
   2511	EB52  E9 FC4F			     jmp     k57
   2512
   2513				     ;---
   2514
   2515	EB55			     k34:
   2516	EB55  3C 02			     cmp     al,2
   2517	EB57  72 0C			     jb	     k35
   2518	EB59  3C 0E			     cmp     al,14
   2519	EB5B  73 08			     jae     k35
   2520	EB5D  80 C4 76			     add     ah,118
   2521	EB60  B0 00			     mov     al,0
   2522	EB62  E9 FC3F			     jmp     k57
   2523
   2524				     ;---
   2525
   2526	EB65			     k35:
   2527	EB65  3C 3B			     cmp     al,59
   2528	EB67  73 02			     jae     k37
   2529	EB69			     k36:
   2530	EB69  EB 80				     jmp     short k26
   2531	EB6B			     k37:
   2532	EB6B  3C 47			     cmp     al,71
   2533	EB6D  73 FA			     jae     k36
   2534	EB6F  BB E95Ar			     mov     bx,offset k13
   2535	EB72  E9 FC8D			     jmp     k63
   2536
   2537				     ;---
   2538
   2539	EB75			     k38:
   2540	EB75  F6 06 0017r 04		     test    kb_flag,ctl_shift
   2541	EB7A  74 5B			     jz	     k44
   2542
   2543				     ;---
   2544				     ;---
   2545
   2546	EB7C  3C 46			     cmp     al,scroll_key
   2547	EB7E  75 18			     jne     k39
   2548	EB80  BB 001Er			     mov     bx,offset kb_buffer
   2549	EB83  89 1E 001Ar		     mov     buffer_head,bx
   2550	EB87  89 1E 001Cr		     mov     buffer_tail,bx
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 52
1840v5.asm



   2551	EB8B  C6 06 0071r 80		     mov     bios_break,80h
   2552	EB90  CD 1B			     int     1bh
   2553	EB92  B8 0000			     mov     ax,0
   2554	EB95  E9 FC0C			     jmp     k57
   2555
   2556	EB98			     k39:
   2557	EB98  3C 45			     cmp     al,num_key
   2558	EB9A  75 21			     jne     k41
   2559	EB9C  80 0E 0018r 08		     or	     kb_flag_1,hold_state
   2560	EBA1  B0 20			     mov     al,eoi
   2561	EBA3  E6 20			     out     020h,al
   2562
   2563				     ;---
   2564
   2565	EBA5  80 3E 0049r 07		     cmp     crt_mode,7
   2566	EBAA  74 07			     je	     k40
   2567	EBAC  BA 03D8			     mov     dx,03d8h
   2568	EBAF  A0 0065r			     mov     al,crt_mode_set
   2569	EBB2  EE			     out     dx,al
   2570	EBB3			     k40:
   2571	EBB3  F6 06 0018r 08		     test    kb_flag_1,hold_state
   2572	EBB8  75 F9			     jnz     k40
   2573	EBBA  E9 FF33			     jmp     k27
   2574	EBBD			     k41:
   2575
   2576				     ;---
   2577
   2578	EBBD  3C 37			     cmp     al,55
   2579	EBBF  75 06			     jne     k42
   2580	EBC1  B8 7200			     mov     ax,114*256
   2581	EBC4  E9 FBDD			     jmp     k57
   2582
   2583				     ;---
   2584
   2585	EBC7			     k42:
   2586	EBC7  BB E889r			     mov     bx,offset k8
   2587	EBCA  3C 3B			     cmp     al,59
   2588	EBCC  73 03			     jae     k43
   2589	EBCE  E9 FBCF			     jmp     k56
   2590	EBD1			     k43:
   2591	EBD1  BB E8C3r			     mov     bx,offset k9
   2592	EBD4  E9 FC2B			     jmp     k63
   2593
   2594				     ;---
   2595
   2596	EBD7			     k44:
   2597
   2598	EBD7  3C 47			     cmp     al,71
   2599	EBD9  73 3E			     jae     k48
   2600	EBDB  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 53
1840v5.asm



   2601	EBE0  74 0A			     jz	     k54a
   2602
   2603				     ;---
   2604
   2605	EBE2  3C 0F			     cmp     al,15
   2606	EBE4  75 09			     jne     k45
   2607	EBE6  B8 0F00			     mov     ax,15*256
   2608	EBE9  E9 FBB8			     jmp     k57
   2609
   2610	EBEC			     k54a:
   2611	EBEC  E9 FB9E			     jmp k54
   2612
   2613	EBEF			     k45:
   2614	EBEF  3C 37			     cmp     al,55
   2615	EBF1  75 09			     jne     k46
   2616
   2617				     ;---
   2618
   2619	EBF3  B0 20			     mov     al,eoi
   2620	EBF5  E6 20			     out     020h,al
   2621	EBF7  CD 05			     int     5h
   2622	EBF9  E9 FEF4			     jmp     k27
   2623
   2624	EBFC			     k46:
   2625	EBFC  3C 3B			     cmp     al,59
   2626	EBFE  72 06			     jb	     k47
   2627	EC00  BB E950r			     mov     bx,offset k12
   2628	EC03  E9 FBFC			     jmp     k63
   2629
   2630	EC06			     k47:
   2631	EC06  F6 06 0018r 02		     test    kb_flag_1,lat
   2632	EC0B  74 06			     jz	     k98
   2633	EC0D  BB E916r			     mov     bx,offset k11
   2634	EC10  E9 FB8D			     jmp      k56
   2635	EC13  BB E6BDr		     k98:    mov     bx,offset rust2
   2636	EC16  E9 FB87			     jmp     k56
   2637
   2638				     ;---
   2639
   2640	EC19			     k48:
   2641	EC19  F6 06 0017r 20		     test    kb_flag,num_state
   2642	EC1E  75 23			     jnz     k52
   2643	EC20  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2644	EC25  75 23			     jnz     k53
   2645
   2646				     ;---
   2647
   2648	EC27			     k49:
   2649
   2650	EC27  3C 4A			     cmp     al,74
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 54
1840v5.asm



   2651	EC29  74 0C			     je	     k50
   2652	EC2B  3C 4E			     cmp     al,78
   2653	EC2D  74 0E			     je	     k51
   2654	EC2F  2C 47			     sub     al,71
   2655	EC31  BB E971r			     mov     bx,offset k15
   2656	EC34  E9 FBCD			     jmp       k64
   2657
   2658	EC37  B8 4A2D		     k50:    mov     ax,74*256+'-'
   2659	EC3A  E9 FB67			     jmp      k57
   2660
   2661	EC3D  B8 4E2B		     k51:    mov     ax,78*256+'+'
   2662	EC40  E9 FB61			     jmp      k57
   2663
   2664				     ;---
   2665
   2666	EC43			     k52:
   2667	EC43  F6 06 0017r 03		     test    kb_flag,left_shift+right_shift
   2668	EC48  75 DD			     jnz     k49
   2669
   2670	EC4A			     k53:
   2671	EC4A  2C 46			     sub     al,70
   2672	EC4C  BB E964r			     mov     bx,offset k14
   2673	EC4F  E9 FB4E			     jmp      k56
   2674	EC52			     kb_int  endp
   2675
   2676	EC52  07*(00)				     db	7 dup(0)
   2677
   2678				     ;--- int 13H---------
   2679				     ;	 Программа обслуживания накопителя на	       +
   2680				     гибком магнитном
   2681				     ; диске выполняет шесть	функций,	код которых  +
   2682				     задается
   2683				     ; в регистре AH:
   2684				     ;	 AH=0 -	сбросить  НГМД;
   2685				     ;	 AH=1 -	считать байт	состояния НГМД. Состояние+
   2686				     соответствует
   2687				     ; последней выполняемой операции и		       +
   2688				     передается в регистр AL из
   2689				     ; постоянно распределенной области		       +
   2690				     оперативной памяти с адресом
   2691				     ; 00441H;
   2692				     ;	  AH=2H	- считать указанный сектор в память;
   2693				     ;	  AH=3H	- записать указанный сектор из	памяти;
   2694				     ;	  AH=4H	- верификация;
   2695				     ;	  AH=5H	- форматизация.
   2696				     ;	  Для выполнения функций записи,		       +
   2697				     считывания, верификации,
   2698				     ; форматизации	в регистрах задается		       +
   2699				     следующая	информация:
   2700				     ;	  DL - номер устройства (0-3, контролируемое      +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 55
1840v5.asm



   2701				     значение);
   2702				     ;	  DH - номер головки (0-1, неконтролируемое	       +
   2703				     значение);
   2704				     ;	  CH - номер дорожки (0-39,	неконтролируемое       +
   2705				     значение);
   2706				     ;	  CL - номер сектора (1-8, неконтролируемое	       +
   2707				     значение);
   2708				     ;	  AL - количество секторов (1-8,			       +
   2709				     неконтролируемое значение).
   2710				     ;
   2711				     ;	  Для выполнения форматизации необходимо    +
   2712				     сформировать в
   2713				     ; памяти четырехбайтную таблицу	для каждого  +
   2714				     сектора, содержащую
   2715				     ; следующую информацию:
   2716				     ;	  номер дорожки;
   2717				     ;	  номер головки;
   2718				     ;	  номер сектора;
   2719				     ;	  количество байт	в секторе (00 -	128 байт, 01 - 256 +
   2720				     байт,
   2721				     ; 02 - 512	байт, 03 - 1024 байта).
   2722				     ;	  Адрес таблицы задается в	регистрах ES:BX.
   2723				     ;
   2724				     ;	  После выполнения программы в	регистре AH    +
   2725				     находится
   2726				     ; байт	состояния НГМД.
   2727				     ;
   2728				     ;	  Байт состояния НГМД имеет следующее	       +
   2729				     значение:
   2730				     ;	  80 - тайм-аут;
   2731				     ;	  40 - сбой	позиционирования;
   2732				     ;	  20 - сбой	контроллера;
   2733				     ;	  10 - ошибка кода циклического контроля при  +
   2734				     считывании;
   2735				     ;	  09 - переход адреса через сегмент (64К байт);
   2736				     ;	  08 - переполнение;
   2737				     ;	  04 - сектор не найден;
   2738				     ;	  03 - защита записи;
   2739				     ;	  02 - не обнаружен маркер идентификатора       +
   2740				     сектора;
   2741				     ;	  01 - команда отвергнута.
   2742				     ;	  При успешном завершении программы	       +
   2743				     признак CF=0,  в про-
   2744				     ; тивном случае - признак CF=1 (регистр AH	       +
   2745				     содержит код ошибки).
   2746				     ;	  Регистр AL содержит количество реально       +
   2747				     считанных	секторов.
   2748				     ;	  Адрес программы	обслуживания накопителя  +
   2749				     на гибком магнитном
   2750				     ; диске записывается в вектор 40H в процедуре   +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 56
1840v5.asm



   2751				     сброса по включению
   2752				     ; питания.
   2753				     ;-------------------------
   2754					     assume  cs:code,ds:data,es:data
   2755	EC59			     diskette_io proc	     far
   2756	EC59  FB			     sti		     ; установить признак	       +
   2757				     прерывания
   2758	EC5A  53			     push    bx		     ; сохранить адрес
   2759	EC5B  51			     push    cx
   2760	EC5C  1E			     push    ds		; сохранить сегментное	       +
   2761				     значение регистра
   2762	EC5D  56			     push    si		; сохранить все регистры во      +
   2763				     время	операции
   2764	EC5E  57			     push    di
   2765	EC5F  55			     push    bp
   2766	EC60  52			     push    dx
   2767	EC61  8B EC			     mov     bp,sp	; установить указатель	       +
   2768				     вершины стека
   2769	EC63  BE 0040			     mov     si,dat
   2770	EC66  8E DE			     mov     ds,si	     ; установить область данных
   2771	EC68  E8 001C			     call    j1		     ;
   2772	EC6B  BB 0004			     mov     bx,4	     ; получить	параметры	       +
   2773				     ожидания мотора
   2774	EC6E  E8 01E0			     call    get_parm
   2775	EC71  88 26 0040r		     mov     motor_count,ah  ; уст время отсчета	для	       +
   2776				     мотора
   2777	EC75  8A 26 0041r		     mov     ah,diskette_status	 ; получить состояние	       +
   2778				     операции
   2779	EC79  80 FC 01			     cmp     ah,1	     ; уст признак CF	для		       +
   2780				     индикации
   2781	EC7C  F5			     cmc		     ; успешной	операции
   2782	EC7D  5A			     pop     dx		     ; восстановить	все регистры
   2783	EC7E  5D			     pop     bp
   2784	EC7F  5F			     pop     di
   2785	EC80  5E			     pop     si
   2786	EC81  1F			     pop     ds
   2787	EC82  59			     pop     cx
   2788	EC83  5B			     pop     bx
   2789	EC84  CA 0002			     ret     2
   2790	EC87			     diskette_io     endp
   2791	EC87			     j1	     proc    near
   2792	EC87  8A F0			     mov     dh,al	     ; сохранить количество	       +
   2793				     секторов
   2794	EC89  80 26 003Fr 7F		     and     motor_status,07fh	 ; указать операцию	       +
   2795				     считывания
   2796	EC8E  0A E4			     or	     ah,ah	     ; AH=0
   2797	EC90  74 27			     jz	     disk_reset
   2798	EC92  FE CC			     dec     ah		     ; AH=1
   2799	EC94  74 74			     jz	     disk_status
   2800	EC96  C6 06 0041r 00		     mov     diskette_status,0	 ; сброс состояния
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 57
1840v5.asm



   2801	EC9B  80 FA 04			     cmp     dl,4	     ; проверка	количества	       +
   2802				     устройств
   2803	EC9E  73 13			     jae     j3		     ; переход по ошибке
   2804	ECA0  FE CC			     dec     ah		     ; AH=2
   2805	ECA2  74 6A			     jz	     disk_read
   2806	ECA4  FE CC			     dec     ah		     ; AH=3
   2807	ECA6  75 03			     jnz     j2
   2808	ECA8  E9 0096			     jmp     disk_write
   2809	ECAB			     j2:
   2810	ECAB  FE CC			     dec     ah		     ; AH=4
   2811	ECAD  74 68			     jz	     disk_verf
   2812	ECAF  FE CC			     dec     ah		     ; AH=5
   2813	ECB1  74 68			     jz	     disk_format
   2814	ECB3			     j3:
   2815	ECB3  C6 06 0041r 01		     mov     diskette_status,bad_cmd   ; неверная команда
   2816
   2817	ECB8  C3			     ret		     ; операция	не определена
   2818	ECB9			     j1	     endp
   2819
   2820				     ;	 Сбросить НГМД
   2821
   2822	ECB9			     disk_reset	proc near
   2823	ECB9  BA 03F2			     mov     dx,03f2h
   2824	ECBC  FA			     cli		     ; сброс признака разрешения+
   2825				     прерывания
   2826	ECBD  A0 003Fr			     mov     al,motor_status  ;	какой мотор включен
   2827	ECC0  B1 04			     mov     cl,4	     ; счетчик сдвига
   2828	ECC2  D2 E0			     sal     al,cl
   2829	ECC4  A8 20			     test    al,20h	     ; выбрать соответствующее   +
   2830				     устройство
   2831	ECC6  75 0C			     jnz     j5		     ; переход, если	включен	       +
   2832				     мотор	первого
   2833								     ; устройства
   2834	ECC8  A8 40			     test    al,40h
   2835	ECCA  75 06			     jnz     j4		     ; переход, если	включен	       +
   2836				     мотор	второго
   2837								     ; устройства
   2838	ECCC  A8 80			     test    al,80h
   2839	ECCE  74 06			     jz	     j6		     ; переход, если	включен	       +
   2840				     мотор	нулевого
   2841								     ; устройства
   2842	ECD0  FE C0			     inc     al
   2843	ECD2  FE C0		     j4:     inc     al
   2844	ECD4  FE C0		     j5:     inc     al
   2845	ECD6  0C 08		     j6:     or	     al,8	     ; включить	доступность	       +
   2846				     прерывания
   2847	ECD8  EE			     out     dx,al	     ; сброс адаптера
   2848	ECD9  C6 06 003Er 00		     mov     seek_status,0
   2849	ECDE  C6 06 0041r 00		     mov     diskette_status,0	; уст нормальное		       +
   2850				     состояние	НГМД
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 58
1840v5.asm



   2851	ECE3  0C 04			     or	     al,4	     ; выключить сброс
   2852	ECE5  EE			     out     dx,al
   2853	ECE6  FB			     sti		     ; установить бит разрешения+
   2854				     прерывания
   2855	ECE7  E8 0225			     call    chk_stat_2	     ; выполнить прерывание	       +
   2856				     после	сброса
   2857	ECEA  A0 0042r			     mov     al,nec_status
   2858	ECED  3C C0			     cmp     al,0c0h	; проверка готовности		       +
   2859				     устройства для передачи
   2860	ECEF  74 07			     jz	     j7		     ; устройство готово
   2861	ECF1  80 0E 0041r 20		     or	     diskette_status,bad_nec  ;	уст код ошибки
   2862	ECF6  EB 11			     jmp     short j8
   2863
   2864				     ;	 Послать	команду в контроллер
   2865
   2866	ECF8			     j7:
   2867	ECF8  B4 03			     mov     ah,03h	     ; установить команду
   2868	ECFA  E8 FA32			     call    nec_output	     ; передать	команду
   2869	ECFD  BB 0001			     mov     bx,1	     ; передача	первого байта      +
   2870				     параметров
   2871	ED00  E8 014E			     call    get_parm	     ; в контроллер
   2872	ED03  BB 0003			     mov     bx,3	     ; передача	второго байта      +
   2873				     параметров
   2874	ED06  E8 0148			     call    get_parm	     ; в контроллер
   2875	ED09			     j8:
   2876	ED09  C3			     ret		     ; возврат к прерванной	       +
   2877				     программе
   2878	ED0A			     disk_reset	     endp
   2879
   2880				     ;
   2881				     ; Считать байт состояния НГМД (AH=1)
   2882				     ;
   2883
   2884	ED0A			     disk_status proc near
   2885	ED0A  A0 0041r			     mov     al,diskette_status
   2886	ED0D  C3			     ret
   2887	ED0E			     disk_status     endp
   2888
   2889				     ;	 Считать	указанный сектор	в память	(AH=2)
   2890
   2891	ED0E			     disk_read proc near
   2892	ED0E  B0 46			     mov     al,046h	     ; установить команду
   2893	ED10			     j9:
   2894	ED10  E8 01B6			     call    dma_setup	     ; установить ПДП
   2895	ED13  B4 E6			     mov     ah,0e6h	 ; уст команду считывания	       +
   2896				     контроллера
   2897	ED15  EB 36			     jmp     short rw_opn    ; переход к выполнению	       +
   2898				     операции
   2899	ED17			     disk_read	     endp
   2900
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 59
1840v5.asm



   2901				     ;	 Верификация	(AH=4)
   2902
   2903	ED17			     disk_verf proc near
   2904	ED17  B0 42			     mov     al,042h	     ; установить команду
   2905	ED19  EB F5			     jmp     short j9
   2906	ED1B			     disk_verf	     endp
   2907
   2908				     ;	 Форматизация (AH=5)
   2909
   2910	ED1B			     disk_format proc near
   2911	ED1B  80 0E 003Fr 80		     or	     motor_status,80h  ; индикация операции	       +
   2912				     записи
   2913	ED20  B0 4A			     mov     al,04ah	       ; установить команду
   2914	ED22  E8 01A4			     call    dma_setup	       ; установить ПДП
   2915	ED25  B4 4D			     mov     ah,04dh	       ; установить команду
   2916	ED27  EB 24			     jmp     short rw_opn
   2917	ED29			     j10:
   2918	ED29  BB 0007			     mov     bx,7	       ; получить значение	       +
   2919				     сектора
   2920	ED2C  E8 0122			     call    get_parm
   2921	ED2F  BB 0009			     mov     bx,9	     ; получить	значение дорожки+
   2922				     на секторе
   2923	ED32  E8 011C			     call    get_parm
   2924	ED35  BB 000F			     mov     bx,15	     ; получить	значение длины    +
   2925				     интервала
   2926	ED38  E8 0116			     call    get_parm	     ; для контроллера
   2927	ED3B  BB 0011			     mov     bx,17	     ; получить	полный байт
   2928	ED3E  E9 00B8			     jmp     j16
   2929	ED41			     disk_format     endp
   2930
   2931				     ;	 Записать указанный сектор из памяти (AH=3)
   2932
   2933	ED41			     disk_write	proc near
   2934	ED41  80 0E 003Fr 80		     or	     motor_status,80h	     ; индикация операции     +
   2935				     записи
   2936	ED46  B0 4A			     mov     al,04ah		     ; уст код операции	       +
   2937				     записи
   2938	ED48  E8 017E			     call    dma_setup
   2939	ED4B  B4 C5			     mov     ah,0c5h		     ; команда записи на	НГМД
   2940	ED4D			     disk_write	     endp
   2941
   2942				     ;______________________
   2943				     ; rw_opn
   2944				     ;	 Программа выполнения операций
   2945				     ;	 считывания, записи, верификации
   2946				     ;----------------------
   2947	ED4D			     rw_opn  proc    near
   2948	ED4D  73 08			     jnc     j11	     ; проверка	ошибки ПДП
   2949	ED4F  C6 06 0041r 09		     mov     diskette_status,dma_boundary   ; установить ошибку
   2950	ED54  B0 00			     mov     al,0	     ;
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 60
1840v5.asm



   2951	ED56  C3			     ret		     ; возврат к основной	       +
   2952				     программе
   2953	ED57			     j11:
   2954	ED57  50			     push    ax		     ; сохранить команду
   2955
   2956				     ;	 Включить мотор и	выбрать устройство
   2957
   2958	ED58  51			     push    cx
   2959	ED59  8A CA			     mov     cl,dl	     ; уст номер устройства, как  +
   2960				     счетчик сдвига
   2961	ED5B  B0 01			     mov     al,1	     ; маска для определения	       +
   2962				     мотора устройства
   2963	ED5D  D2 E0			     sal     al,cl	     ; сдвиг
   2964	ED5F  FA			     cli		     ; сбросить	бит разрешения    +
   2965				     прерывания
   2966	ED60  C6 06 0040r FF		     mov     motor_count,0ffh  ; установить счетчик
   2967	ED65  84 06 003Fr		     test    al,motor_status
   2968	ED69  75 3F			     jnz     j14
   2969	ED6B  80 26 003Fr F0		     and     motor_status,0f0h	; выключить все биты	       +
   2970				     мотора
   2971	ED70  08 06 003Fr		     or	     motor_status,al	; включить мотор
   2972	ED74  FB			     sti		     ; установить бит разрешения+
   2973				     прерывания
   2974	ED75  B0 10			     mov     al,10h	     ; бит маски
   2975	ED77  D2 E0			     sal     al,cl	     ; уст бит маски	для		       +
   2976				     доступности мотора
   2977	ED79  0A C2			     or	     al,dl	     ; включить	бит выбора	       +
   2978				     устройства
   2979	ED7B  0C 0C			     or	     al,0ch	     ; нет сброса, доступность     +
   2980				     прерывания ПДП
   2981	ED7D  52			     push    dx
   2982	ED7E  BA 03F2			     mov     dx,03f2h	     ; установить адрес порта
   2983	ED81  EE			     out     dx,al
   2984	ED82  5A			     pop     dx		     ; восстановить	регистры
   2985	ED83  51			     push    cx		     ;задержка для включения       +
   2986				     мотора устройства
   2987	ED84  B9 0003			     mov     cx,3
   2988	ED87  51		     x2:     push    cx
   2989	ED88  B9 0000			     mov     cx,0
   2990	ED8B  E2 FE		     x1:     loop    x1
   2991	ED8D  59			     pop     cx
   2992	ED8E  E2 F7			     loop    x2
   2993	ED90  59			     pop     cx
   2994
   2995				     ;	 Ожидание включения мотора для операции      +
   2996				     записи
   2997
   2998	ED91  F6 06 003Fr 80		     test    motor_status,80h  ; запись ?
   2999	ED96  74 12			     jz	     j14     ; нет -	продолжать без ожидания
   3000	ED98  BB 0014			     mov     bx,20	     ; установить ожидание	       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 61
1840v5.asm



   3001				     включения	мотора
   3002	ED9B  E8 00B3			     call    get_parm	     ; получить	параметры
   3003	ED9E  0A E4			     or	     ah,ah
   3004	EDA0			     j12:
   3005	EDA0  74 08			     jz	     j14	     ; выход по окончании	       +
   3006				     времени ожидания
   3007	EDA2  2B C9			     sub     cx,cx	     ; установить счетчик
   3008	EDA4  E2 FE		     j13:    loop    j13	     ; ожидать требуемое время
   3009	EDA6  FE CC			     dec     ah		     ; уменьшеть значение	       +
   3010				     времени
   3011	EDA8  EB F6			     jmp     short j12	     ; повторить цикл
   3012
   3013	EDAA			     j14:
   3014	EDAA  FB			     sti		     ; уст признак разрешения      +
   3015				     прерывания
   3016	EDAB  59			     pop     cx
   3017
   3018				     ;	 Выполнить операцию поиска
   3019
   3020	EDAC  E8 00B8			     call    seek	     ; установить дорожку
   3021	EDAF  58			     pop     ax		     ; восстановить	команду
   3022	EDB0  8A FC			     mov     bh,ah	     ; сохранить команду в BH
   3023	EDB2  B6 00			     mov     dh,0	     ; уст 0	сектор в	случае	       +
   3024				     ошибки
   3025	EDB4  72 4A			     jc	     j17	     ; выход, если ошибка
   3026	EDB6  BE EE00r			     mov     si,offset j17
   3027
   3028	EDB9  56			     push    si
   3029
   3030				     ;	 Послать	параметры в контроллер
   3031
   3032	EDBA  E8 F972			     call    nec_output	     ; передача	команды
   3033	EDBD  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; уст номер головки
   3034	EDC0  D0 E4			     sal     ah,1	     ; сдвиг на 2
   3035	EDC2  D0 E4			     sal     ah,1
   3036	EDC4  80 E4 04			     and     ah,4	     ; выделить	бит
   3037	EDC7  0A E2			     or	     ah,dl	     ; операция	OR с номером	       +
   3038				     устройства
   3039	EDC9  E8 F963			     call    nec_output
   3040
   3041				     ;	 Проверка операции форматизации
   3042
   3043	EDCC  80 FF 4D			     cmp     bh,04dh	     ; форматизация	?
   3044	EDCF  75 03			     jne     j15    ; нет - продолжать			       +
   3045				     запись/считывание/верификацию
   3046	EDD1  E9 FF55			     jmp     j10
   3047
   3048	EDD4  8A E5		     j15:    mov     ah,ch	     ; номер цилиндра
   3049	EDD6  E8 F956			     call    nec_output
   3050	EDD9  8A 66 01			     mov     ah,byte ptr [bp+1]	 ; номер головки
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 62
1840v5.asm



   3051	EDDC  E8 F950			     call    nec_output
   3052	EDDF  8A E1			     mov     ah,cl	     ; номер сектора
   3053	EDE1  E8 F94B			     call    nec_output
   3054	EDE4  BB 0007			     mov     bx,7
   3055	EDE7  E8 0067			     call    get_parm
   3056	EDEA  BB 0009			     mov     bx,9
   3057	EDED  E8 0061			     call    get_parm
   3058	EDF0  BB 000B			     mov     bx,11
   3059	EDF3  E8 005B			     call    get_parm
   3060	EDF6  BB 000D			     mov     bx,13
   3061	EDF9			     j16:
   3062	EDF9  E8 0055			     call    get_parm
   3063	EDFC  5E			     pop     si
   3064
   3065				     ;	 Операция запущена
   3066
   3067	EDFD  E8 0130			     call    wait_int	     ; ожидание	прерывания
   3068	EE00			     j17:
   3069	EE00  72 45			     jc	     j21	     ; поиск ошибки
   3070	EE02  E8 0166			     call    results	     ; получить	состояние	       +
   3071				     контроллера
   3072	EE05  72 3F			     jc	     j20	     ; поиск ошибки
   3073
   3074				     ;	 Проверка  состояния, полученного из	       +
   3075				     контроллера
   3076
   3077	EE07  FC			     cld		     ; установить направление     +
   3078				     коррекции
   3079	EE08  BE 0042r			     mov     si,offset nec_status
   3080	EE0B  AC			     lods    nec_status
   3081	EE0C  24 C0			     and     al,0c0h	     ; проверить нормальное	       +
   3082				     окончание
   3083	EE0E  74 3B			     jz	     j22
   3084	EE10  3C 40			     cmp     al,040h	     ; проверить неверное	       +
   3085				     окончание
   3086	EE12  75 29			     jnz     j18
   3087
   3088				     ;	 Обнаруженно	неверное окончание
   3089
   3090	EE14  AC			     lods    nec_status
   3091	EE15  D0 E0			     sal     al,1
   3092	EE17  B4 04			     mov     ah,record_not_fnd
   3093	EE19  72 24			     jc	     j19
   3094	EE1B  D0 E0			     sal     al,1
   3095	EE1D  D0 E0			     sal     al,1
   3096	EE1F  B4 10			     mov     ah,bad_crc
   3097	EE21  72 1C			     jc	     j19
   3098	EE23  D0 E0			     sal     al,1
   3099	EE25  B4 08			     mov     ah,bad_dma
   3100	EE27  72 16			     jc	     j19
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 63
1840v5.asm



   3101	EE29  D0 E0			     sal     al,1
   3102	EE2B  D0 E0			     sal     al,1
   3103	EE2D  B4 04			     mov     ah,record_not_fnd
   3104	EE2F  72 0E			     jc	     j19
   3105	EE31  D0 E0			     sal     al,1
   3106	EE33  B4 03			     mov     ah,write_protect  ; проверка защиты записи
   3107	EE35  72 08			     jc	     j19
   3108	EE37  D0 E0			     sal     al,1
   3109	EE39  B4 02			     mov     ah,bad_addr_mark
   3110	EE3B  72 02			     jc	     j19
   3111
   3112				     ;	 Контроллер вышел из строя
   3113
   3114	EE3D			     j18:
   3115	EE3D  B4 20			     mov     ah,bad_nec
   3116	EE3F			     j19:
   3117	EE3F  08 26 0041r		     or	     diskette_status,ah
   3118	EE43  E8 016A			     call    num_trans
   3119	EE46			     j20:
   3120	EE46  C3			     ret	     ; возврат к программе, вызвавшей+
   3121				     прерывание
   3122
   3123	EE47			     j21:
   3124	EE47  E8 0121			     call    results	     ; вызов результатов в буфер
   3125	EE4A  C3			     ret
   3126
   3127				     ;	 Операция была успешной
   3128
   3129	EE4B			     j22:
   3130	EE4B  E8 0162			     call    num_trans
   3131	EE4E  32 E4			     xor     ah,ah	     ; нет ошибок
   3132	EE50  C3			     ret
   3133	EE51			     rw_opn  endp
   3134				     ;------------------------
   3135				     ;get_parm
   3136				     ;
   3137				     ;	 ВХОД   BX - индекс байта,деленный
   3138				     ;		     на 2,который будет
   3139				     ;		     выбран,если младший
   3140				     ;		     бит BX установлен,то
   3141				     ;		     байт немедленно пере-
   3142				     ;		     дается контроллеру.
   3143				     ;
   3144				     ;	 ВЫХОД  AH	- байт из	блока.
   3145				     ;-------------------------
   3146	EE51			     get_parm proc   near
   3147	EE51  1E			     push    ds		     ; сохранить сегмент
   3148	EE52  2B C0			     sub     ax,ax	     ; AX=0
   3149	EE54  8E D8			     mov     ds,ax
   3150					     assume  ds:abs0
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 64
1840v5.asm



   3151	EE56  C5 36 0078r		     lds     si,disk_pointer
   3152	EE5A  D1 EB			     shr     bx,1	     ; делить BX на 2, уст флаг для  +
   3153				     выхода
   3154	EE5C  8A A0 0000r		     mov     ah,zb[si+bx]    ; получить	слово
   3155	EE60  1F			     pop     ds		     ; восстановить	сегмент
   3156					     assume  ds:data
   3157	EE61  72 01			     jc	     nec_op	      ;если	флаг установлен,	       +
   3158				     выход
   3159	EE63  C3			     ret	     ; возврат к программе, вызвавшей+
   3160				     прерывание
   3161	EE64  E9 F8C8		     nec_op: jmp     nec_output
   3162	EE67			     get_parm endp
   3163				     ;----------------------------
   3164				     ;	 Позиционирование
   3165				     ;
   3166				     ;	 Эта	программа позиционирует голов-
   3167				     ; ку обозначенного устройства на нуж-
   3168				     ; ную дорожку. Если устройство не
   3169				     ; было	выбрано до тех пор, пока не
   3170				     ; была	сброшена команда,то устройство
   3171				     ; будет рекалибровано.
   3172				     ;
   3173				     ;	 ВВОД
   3174				     ;	     (DL) - номер усройства для
   3175				     ;		    позиционирования,
   3176				     ;	     (CH) - номер дорожки.
   3177				     ;
   3178				     ;	 ВЫВОД
   3179				     ;	      CY=0 - успешно,
   3180				     ;	      CY=1 - сбой (состояние НГМД установить
   3181				     ;		     согласно  AX).
   3182				     ;----------------------------
   3183	EE67			     seek    proc    near
   3184	EE67  B0 01			     mov     al,1	     ; уст маску
   3185	EE69  51			     push    cx
   3186	EE6A  8A CA			     mov     cl,dl	     ; установить номер		       +
   3187				     устройства
   3188	EE6C  D2 C0			     rol     al,cl	     ; циклический сдвиг влево
   3189	EE6E  59			     pop     cx
   3190	EE6F  84 06 003Er		     test    al,seek_status
   3191	EE73  75 20			     jnz     j28
   3192	EE75  08 06 003Er		     or	     seek_status,al
   3193	EE79  B4 07			     mov     ah,07h
   3194	EE7B  E8 F8B1			     call    nec_output
   3195	EE7E  8A E2			     mov     ah,dl
   3196	EE80  E8 F8AC			     call    nec_output
   3197	EE83  E8 0089			     call    chk_stat_2	  ; получить и	обработать	       +
   3198				     прерывание
   3199	EE86  B4 07			     mov     ah,07h	     ; команда рекалибровки
   3200	EE88  E8 F8A4			     call    nec_output
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 65
1840v5.asm



   3201	EE8B  8A E2			     mov     ah,dl
   3202	EE8D  E8 F89F			     call    nec_output
   3203	EE90  E8 007C			     call    chk_stat_2
   3204	EE93  72 33			     jc	     j32	     ; сбой	позиционирования
   3205
   3206
   3207	EE95			     j28:
   3208	EE95  B4 0F			     mov     ah,0fh
   3209	EE97  E8 F895			     call    nec_output
   3210	EE9A  8A E2			     mov     ah,dl	     ; номер устройства
   3211	EE9C  E8 F890			     call    nec_output
   3212	EE9F  8A E5			     mov     ah,ch	     ; номер дорожки
   3213	EEA1  90				     nop
   3214	EEA2  F6 06 0010r 04		     test    byte ptr equip_flag,4
   3215	EEA7  75 02			     jnz     j300
   3216	EEA9  02 E4			     add     ah,ah	     ; удвоение	номера дорожки
   3217	EEAB			     j300:
   3218	EEAB  E8 F881			     call    nec_output
   3219	EEAE  E8 005E			     call    chk_stat_2	     ; получить	конечное	       +
   3220				     прерывание и
   3221								     ; считать состояние
   3222
   3223
   3224	EEB1  9C			     pushf		     ; сохранить значение	       +
   3225				     флажков
   3226	EEB2  BB 0012			     mov     bx,18
   3227	EEB5  E8 FF99			     call    get_parm
   3228	EEB8  51			     push    cx		     ; сохранить регистр
   3229	EEB9			     j29:
   3230	EEB9  B9 0226			     mov     cx,550	     ; организовать	цикл = 1 ms
   3231	EEBC  0A E4			     or	     ah,ah	     ; проверка	окончания	       +
   3232				     времени
   3233	EEBE  74 06			     jz	     j31
   3234	EEC0  E2 FE		     j30:    loop    j30	     ; задержка	1ms
   3235	EEC2  FE CC			     dec     ah		     ; вычитание из счетчика
   3236	EEC4  EB F3			     jmp     short j29	     ; возврат к началу цикла
   3237	EEC6			     j31:
   3238	EEC6  59			     pop     cx		     ; восстановить	состояние
   3239	EEC7  9D			     popf
   3240	EEC8			     j32:			     ; ошибка позиционирования
   3241	EEC8  C3			     ret	     ; возврат к программе, вызвавшей+
   3242				     прерывание
   3243	EEC9			     seek    endp
   3244				     ;-----------------------
   3245				     ; dma_setup
   3246				     ;	 Программа установки ПДП для операций	       +
   3247				     записи,считывания,верифи-
   3248				     ; кации.
   3249				     ;
   3250				     ;	 ВВОД
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 66
1840v5.asm



   3251				     ;
   3252				     ;	     (AL) - байт режима для ПДП,
   3253				     ;	     (ES:BX) - адрес считывания/записи		       +
   3254				     информации.
   3255				     ;
   3256				     ;------------------------
   3257	EEC9			     dma_setup proc  near
   3258	EEC9  51			     push    cx		     ; сохранить регистр
   3259	EECA  E6 0C			     out     dma+12,al
   3260	EECC  E6 0B			     out     dma+11,al	     ; вывод байта состояния
   3261	EECE  8C C0			     mov     ax,es	     ; получить	значение ES
   3262	EED0  B1 04			     mov     cl,4	     ; счетчик для сдвига
   3263	EED2  D3 C0			     rol ax,cl		     ; циклический сдвиг влево
   3264	EED4  8A E8			     mov     ch,al	     ;
   3265	EED6  24 F0			     and     al,0f0h	     ;
   3266	EED8  03 C3			     add     ax,bx
   3267	EEDA  73 02			     jnc     j33
   3268	EEDC  FE C5			     inc     ch		     ; перенос означает,	что	       +
   3269				     старшие 4 бита
   3270								     ; должны быть прибавлены
   3271	EEDE			     j33:
   3272	EEDE  50			     push    ax		     ; сохранить начальный адрес
   3273	EEDF  E6 04			     out     dma+4,al	     ; вывод младшей половины      +
   3274				     адреса
   3275	EEE1  8A C4			     mov     al,ah
   3276	EEE3  E6 04			     out     dma+4,al	     ; вывод старшей половины      +
   3277				     адреса
   3278	EEE5  8A C5			     mov     al,ch	     ; получить	4 старших бита
   3279	EEE7  24 0F			     and     al,0fh
   3280	EEE9  E6 81			     out     081h,al   ; вывод 4 старших бит на регистр+
   3281				     страниц
   3282
   3283				     ;	 Определение	счетчика
   3284
   3285	EEEB  8A E6			     mov     ah,dh	     ; номер сектора
   3286	EEED  2A C0			     sub     al,al	     ;
   3287	EEEF  D1 E8			     shr     ax,1	     ;
   3288	EEF1  50			     push    ax
   3289	EEF2  BB 0006			     mov     bx,6	     ; получить	параметры	       +
   3290				     байт/сектор
   3291	EEF5  E8 FF59			     call    get_parm
   3292	EEF8  8A CC			     mov     cl,ah	     ; счетчик сдига (0=128, 1=256 и т.д)
   3293	EEFA  58			     pop     ax
   3294	EEFB  D3 E0			     shl     ax,cl	     ; сдвиг
   3295	EEFD  48			     dec     ax		     ; -1
   3296	EEFE  50			     push    ax		     ; сохранить значение	       +
   3297				     счетчика
   3298	EEFF  E6 05			     out     dma+5,al	     ; вывести младший байт	       +
   3299				     счетчика
   3300	EF01  8A C4			     mov     al,ah
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 67
1840v5.asm



   3301	EF03  E6 05			     out     dma+5,al	     ; вывести старший байт	       +
   3302				     счетчика
   3303	EF05  59			     pop     cx		     ; восстановить	значение       +
   3304				     счетчика
   3305	EF06  58			     pop     ax		     ; восстановить	значение       +
   3306				     адреса
   3307	EF07  03 C1			     add     ax,cx	     ; проверка	заполнения 64K
   3308	EF09  59			     pop     cx		     ; восстановить	регистр
   3309	EF0A  B0 02			     mov     al,2	     ; режим для 8237
   3310	EF0C  E6 0A			     out     dma+10,al	     ; инициализация канала НГМД
   3311	EF0E  C3			     ret	     ; возврат к программе, вызвавшей+
   3312				     прерывание
   3313	EF0F			     dma_setup	     endp
   3314				     ;-----------------------
   3315				     ;chk_stat_2
   3316				     ;	 Эта	программа обрабатывает прерывания ,     +
   3317				     полученные после
   3318				     ; рекалибровки, позиционирования или сброса  +
   3319				     адаптера. Прерывание
   3320				     ; ожидается, принимается, обрабатывается	и     +
   3321				     результат	выдается программе,
   3322				     ; вызвавшей прерывание.
   3323				     ;
   3324				     ;	 ВЫВОД
   3325				     ;	       CY=0 - успешно,
   3326				     ;	       CY=1 - сбой (ошибка в	состоянии НГМД),
   3327				     ;--------------------------
   3328	EF0F			     chk_stat_2	proc near
   3329	EF0F  E8 001E			     call    wait_int	     ; ожидание	прерывания
   3330	EF12  72 14			     jc	     j34	     ; если	ошибка, то возврат
   3331	EF14  B4 08			     mov     ah,08h	     ; команда получения	       +
   3332				     состояния
   3333	EF16  E8 F816			     call    nec_output
   3334	EF19  E8 004F			     call    results	     ; считать результаты
   3335	EF1C  72 0A			     jc	     j34
   3336	EF1E  A0 0042r			     mov     al,nec_status   ; получить	первый байт	       +
   3337				     состояния
   3338	EF21  24 60			     and     al,060h	     ; выделить	биты
   3339	EF23  3C 60			     cmp     al,060h	     ; проверка
   3340	EF25  74 02			     jz	     j35	; если ошибка, то идти на метку
   3341	EF27  F8			     clc		     ; возврат
   3342	EF28			     j34:
   3343	EF28  C3			     ret	     ; возврат к программе, вызвавшей+
   3344				     прерывание
   3345	EF29			     j35:
   3346	EF29  80 0E 0041r 40		     or	     diskette_status,bad_seek
   3347	EF2E  F9			     stc		     ; ошибка в возвращенном	коде
   3348	EF2F  C3			     ret
   3349	EF30			     chk_stat_2	     endp
   3350				     ;---------------------------------
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 68
1840v5.asm



   3351				     ; wait_int
   3352				     ;	 Эта	программа ожидает прерывание,	которое +
   3353				     возникает	во время
   3354				     ; программы вывода.	Если устройство не	       +
   3355				     готово, ошибка	может быть
   3356				     ; возвращена.
   3357				     ;
   3358				     ;
   3359				     ;	 ВЫВОД
   3360				     ;		   CY=0	- успешно,
   3361				     ;		   CY=1	- сбой(состояние НГМД			       +
   3362				     устанавливается),
   3363				     ;-----------------------------------
   3364	EF30			     wait_int proc   near
   3365	EF30  FB			     sti		     ; установить признак	       +
   3366				     разрешения прерывания
   3367	EF31  53			     push    bx
   3368	EF32  51			     push    cx		     ; сохранить регистр
   3369	EF33  B3 02			     mov     bl,2	     ; количество циклов
   3370	EF35  33 C9			     xor     cx,cx	     ; длителность одного цикла  +
   3371				     ожидания
   3372	EF37			     j36:
   3373	EF37  F6 06 003Er 80		     test    seek_status,int_flag  ; опрос	наличия		       +
   3374				     прерывания
   3375	EF3C  75 0C			     jnz     j37
   3376	EF3E  E2 F7			     loop    j36	     ; возврат к началу цикла
   3377	EF40  FE CB			     dec     bl
   3378	EF42  75 F3			     jnz     j36
   3379	EF44  80 0E 0041r 80		     or	     diskette_status,time_out
   3380	EF49  F9			     stc		     ; возврат при ошибке
   3381	EF4A			     j37:
   3382	EF4A  9C			     pushf		     ; сохранить текущие	       +
   3383				     признаки
   3384	EF4B  80 26 003Er 7F		     and     seek_status,not int_flag
   3385	EF50  9D			     popf		     ; восстановить	признаки
   3386	EF51  59			     pop     cx
   3387	EF52  5B			     pop     bx		     ; восстановить	регистр
   3388	EF53  C3			     ret	     ; возврат к программе, вызвавшей+
   3389				     прерывание
   3390	EF54			     wait_int	     endp
   3391
   3392	EF54  03*(00)				     db	3 dup(0)
   3393
   3394				     ;---------------------------
   3395				     ;disk_int
   3396				     ;	 Эта	программа обрабатывает прерывания       +
   3397				     НГМД
   3398				     ;
   3399				     ;	 ВЫВОД  - признак прерывания			       +
   3400				     устанавливается в SEEK_STATUS.
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 69
1840v5.asm



   3401				     ;---------------------------
   3402	EF57			     disk_int proc   far
   3403	EF57  FB			     sti		     ; установить признак	       +
   3404				     разрешения прерывания
   3405	EF58  1E			     push    ds
   3406	EF59  50			     push    ax
   3407	EF5A  B8 0040			     mov     ax,dat
   3408	EF5D  8E D8			     mov     ds,ax
   3409	EF5F  80 0E 003Er 80		     or	     seek_status,int_flag
   3410	EF64  B0 20			     mov     al,20h	     ; установить конец		       +
   3411				     прерывания
   3412	EF66  E6 20			     out     20h,al	     ; послать конец прерывания  +
   3413				     в	порт
   3414	EF68  58			     pop     ax
   3415	EF69  1F			     pop     ds
   3416	EF6A  CF			     iret		     ; возврат из прерывания
   3417	EF6B			     disk_int	     endp
   3418				     ;----------------------------
   3419				     ;
   3420				     ;	 Эта	программа считывет все, что контроллер+
   3421				     адаптера НГМД указывает
   3422				     ; программе, следующей за прерыванием.
   3423				     ;
   3424				     ;
   3425				     ;	 ВЫВОД
   3426				     ;		CF=0 - успешно,
   3427				     ;		CF=1 - сбой
   3428				     ;----------------------------
   3429	EF6B			     results proc    near
   3430	EF6B  FC			     cld
   3431	EF6C  BF 0042r			     mov     di,offset nec_status
   3432	EF6F  51			     push    cx		     ; сохранить счетчик
   3433	EF70  52			     push    dx
   3434	EF71  53			     push    bx
   3435	EF72  B3 07			     mov     bl,7	     ; установить длину области  +
   3436				     состояния
   3437
   3438
   3439	EF74			     j38:
   3440	EF74  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3441	EF76  BA 03F4			     mov     dx,03f4h	     ; адрес порта
   3442	EF79			     j39:
   3443	EF79  EC			     in	     al,dx	     ; получить	состояние
   3444	EF7A  A8 80			     test    al,080h	     ; готово ?
   3445	EF7C  75 0C			     jnz     j40a
   3446	EF7E  E2 F9			     loop    j39
   3447	EF80  80 0E 0041r 80		     or	     diskette_status,time_out
   3448	EF85			     j40:			     ; ошибка
   3449	EF85  F9			     stc		     ; возврат по ошибке
   3450	EF86  5B			     pop     bx
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 70
1840v5.asm



   3451	EF87  5A			     pop     dx
   3452	EF88  59			     pop     cx
   3453	EF89  C3			     ret
   3454
   3455				     ;	 Проверка признака направления
   3456
   3457	EF8A  EC		     j40a:   in	     al,dx	     ; получить	регистр		       +
   3458				     состояния
   3459	EF8B  A8 40			     test    al,040h	     ; сбой	позиционирования
   3460	EF8D  75 07			     jnz     j42     ; если	все нормально, считать      +
   3461				     состояние
   3462	EF8F			     j41:
   3463	EF8F  80 0E 0041r 20		     or	     diskette_status,bad_nec
   3464	EF94  EB EF			     jmp     short j40	     ; ошибка
   3465
   3466				     ;	 Считывание состояния
   3467
   3468	EF96			     j42:
   3469	EF96  42			     inc     dx		     ; указать порт
   3470	EF97  EC			     in	     al,dx	     ; ввести данные
   3471	EF98  88 05			     mov    byte ptr [di],al  ;	сохранить байт
   3472	EF9A  47			     inc     di		     ; увеличить адрес
   3473	EF9B  B9 000A			     mov     cx,000ah	     ; счетчик
   3474	EF9E  E2 FE		     j43:    loop    j43
   3475	EFA0  4A			     dec     dx
   3476	EFA1  EC			     in	     al,dx	     ; получить	состояние
   3477	EFA2  A8 10			     test    al,010h
   3478	EFA4  74 06			     jz	     j44
   3479	EFA6  FE CB			     dec     bl		     ; -1 из количества циклов
   3480	EFA8  75 CA			     jnz     j38
   3481	EFAA  EB E3			     jmp     short j41	     ; сигнал неверен
   3482
   3483	EFAC			     j44:
   3484	EFAC  5B			     pop     bx		     ; восстановить	регистры
   3485	EFAD  5A			     pop     dx
   3486	EFAE  59			     pop     cx
   3487	EFAF  C3			     ret		     ; возврат из прерывания
   3488	EFB0			     results endp
   3489				     ;-----------------------------
   3490				     ; num_trans
   3491				     ;	 Эта	программа вычисляет количество	       +
   3492				     секторов, которое действительно
   3493				     ; было	записано или	считано с НГМД
   3494				     ;
   3495				     ;	 ВВОД
   3496				     ;	      (CH) - цилиндр,
   3497				     ;	      (CL) - сектор.
   3498				     ;
   3499				     ;	 ВЫВОД
   3500				     ;	      (AL) - количество действительно		       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 71
1840v5.asm



   3501				     переданных секторов.
   3502				     ;
   3503				     ;------------------------------
   3504	EFB0			     num_trans proc  near
   3505	EFB0  A0 0045r			     mov     al,nec_status+3  ;	получить последний	       +
   3506				     цилиндр
   3507	EFB3  3A C5			     cmp     al,ch	     ; сравнить	со стартовым
   3508	EFB5  A0 0047r			     mov     al,nec_status+5  ;	получить последний сектор
   3509	EFB8  74 0A			     jz	     j45
   3510	EFBA  BB 0008			     mov     bx,8
   3511	EFBD  E8 FE91			     call    get_parm	     ; получить	значение EOT
   3512	EFC0  8A C4			     mov     al,ah	     ; AH в AL
   3513	EFC2  FE C0			     inc     al		     ; EOT+1
   3514	EFC4  2A C1		     j45:    sub     al,cl	 ; вычисление	стартового	       +
   3515				     номера из конечного
   3516	EFC6  C3			     ret
   3517	EFC7			     num_trans endp
   3518
   3519				     ;-------------------------------
   3520				     ; disk_base
   3521				     ;	 Эта	программа устанавливает параметры,      +
   3522				     требуемые	для операций
   3523				     ; НГМД.
   3524				     ;--------------------------------
   3525
   3526	EFC7			     disk_base label byte
   3527	EFC7  CF			     db	     11001111b	     ;
   3528	EFC8  02			     db	     2		     ;
   3529	EFC9  25			     db	     motor_wait	     ;
   3530	EFCA  02			     db	     2		     ;
   3531	EFCB  08			     db	     8		     ;
   3532	EFCC  2A			     db	     02ah	     ;
   3533	EFCD  FF			     db	     0ffh	     ;
   3534	EFCE  50			     db	     050h	     ;
   3535	EFCF  F6			     db	     0f6h	     ;
   3536	EFD0  19			     db	     25		     ;
   3537	EFD1  04			     db	     4		     ;
   3538				     ;--- int 17-------------------
   3539				     ;	 Программа связи с печатающим устройством
   3540				     ;
   3541				     ;	 Эта	программа выполняет три функции, код    +
   3542				     которых задается
   3543				     ; в регистре AH:
   3544				     ;	 AH=0 -	печать знака, заданного в регистре	AL.    +
   3545				     Если в
   3546				     ; результате выполнения функции	знак не	       +
   3547				     напечатается, то в регистре
   3548				     ; AL устанавливается "1" (тайм-аут);
   3549				     ;	 AH=1 -	инициализация порта печати. После	       +
   3550				     выполнения функции
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 72
1840v5.asm



   3551				     ; в регистре AH находится байт состояния	       +
   3552				     печатающего устройства;
   3553				     ;	 AH=2H - считывание байта состояния		       +
   3554				     печатающего устройства.
   3555				     ;	 В регистре DX	необходимо задать ноль.
   3556				     ;	 Значение разрядов байта состояния	       +
   3557				     печатающего устройства:
   3558				     ;	 0 - тайм-аут;
   3559				     ;	 3 - ошибка ввода-вывода;
   3560				     ;	 4 - выбран (SLCT);
   3561				     ;	 5 - конец	бумаги (PE);
   3562				     ;	 6 - подтверждение;
   3563				     ;	 7 - занято.
   3564				     ;------------------------------
   3565
   3566					     assume  cs:code,ds:data
   3567	EFD2			     printer_io	proc far
   3568	EFD2  FB			     sti		     ; установить признак	       +
   3569				     разрешения прерывания
   3570	EFD3  1E			     push    ds		     ; сохранить сегмент
   3571	EFD4  52			     push    dx
   3572	EFD5  56			     push    si
   3573	EFD6  51			     push    cx
   3574	EFD7  53			     push    bx
   3575	EFD8  BE 0040			     mov     si,dat
   3576	EFDB  8E DE			     mov     ds,si	     ; установить сегмент
   3577	EFDD  8B F2			     mov     si,dx
   3578	EFDF  D1 E6			     shl     si,1
   3579	EFE1  8B 94 0008r		     mov     dx,printer_base[si]  ; получить базовый адрес
   3580									  ; печатающего устройства
   3581	EFE5  0B D2			     or	     dx,dx		; печать подключена ?
   3582	EFE7  74 0C			     jz	     b1			; нет, возврат
   3583	EFE9  0A E4			     or	     ah,ah		; AH=0 ?
   3584	EFEB  74 0E			     jz	     b2			; да,	переход к печати	       +
   3585				     знака
   3586	EFED  FE CC			     dec     ah			; AH=1 ?
   3587	EFEF  74 42			     jz	     b8			; да,	переход к		       +
   3588				     инициализации
   3589	EFF1  FE CC			     dec     ah			; AH=2 ?
   3590	EFF3  74 2A			     jz	     b5		; да,	переход к считыванию	       +
   3591				     байта	состояния
   3592
   3593				     ;	  Выход из программы
   3594
   3595	EFF5			     b1:
   3596	EFF5  5B			     pop     bx		     ; восстановить	регистры
   3597	EFF6  59			     pop     cx
   3598	EFF7  5E			     pop     si
   3599	EFF8  5A			     pop     dx
   3600	EFF9  1F			     pop     ds
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 73
1840v5.asm



   3601	EFFA  CF			     iret
   3602
   3603				     ;	 Печать знака, заданного в	AL
   3604
   3605	EFFB			     b2:
   3606	EFFB  50			     push    ax
   3607	EFFC  B3 0A			     mov     bl,10	     ; количество циклов	       +
   3608				     ожидания
   3609	EFFE  33 C9			     xor     cx,cx	     ; длительность	одного цикла
   3610	F000  EE			     out     dx,al	     ; вывести символ в порт
   3611	F001  42			     inc     dx		     ; -1 из адреса порта
   3612	F002			     b3:			     ; ожидание	BUSY
   3613	F002  EC			     in	     al,dx	     ; получить	состояние
   3614	F003  8A E0			     mov     ah,al	     ; переслать состояние в	AH
   3615	F005  A8 80			     test    al,80h	     ; печать занята ?
   3616	F007  75 0E			     jnz     b4		     ; переход, если	да
   3617	F009  E2 F7			     loop    b3		     ; цикл	ожидания закончился ?
   3618	F00B  FE CB			     dec     bl		     ; да, -1	из количества циклов
   3619	F00D  75 F3			     jnz     b3		     ; время ожидания истекло ?
   3620	F00F  80 CC 01			     or	     ah,1	     ; да, уст бит "тайм-аут"
   3621	F012  80 E4 F9			     and     ah,0f9h	     ;
   3622	F015  EB 14			     jmp     short b7
   3623	F017			     b4:			     ; OUT_STROBE
   3624	F017  B0 0D			     mov     al,0dh	     ; установить высокий строб
   3625	F019  42			     inc     dx	     ; стробирование битом 0 порта C    +
   3626				     для 8255
   3627	F01A  EE			     out     dx,al
   3628	F01B  B0 0C			     mov     al,0ch	     ; установить низкий строб
   3629	F01D  EE			     out     dx,al
   3630	F01E  58			     pop     ax		     ;
   3631
   3632				     ;	 Считывание байта состояния печатающего     +
   3633				     устройства
   3634
   3635	F01F			     b5:
   3636	F01F  50			     push    ax		     ; сохранить регистр
   3637	F020			     b6:
   3638	F020  8B 94 0008r		     mov     dx,printer_base[si]  ; получить адрес	печати
   3639	F024  42			     inc     dx
   3640	F025  EC			     in	     al,dx	     ; получить	состояние печати
   3641	F026  8A E0			     mov     ah,al
   3642	F028  80 E4 F8			     and     ah,0f8h
   3643	F02B			     b7:
   3644	F02B  5A			     pop     dx
   3645	F02C  8A C2			     mov     al,dl
   3646	F02E  80 F4 48			     xor     ah,48h
   3647	F031  EB C2			     jmp     short b1	     ; к выходу из программы
   3648
   3649				     ;	 Инициализация порта печатающего		       +
   3650				     устройства
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 74
1840v5.asm



   3651
   3652	F033			     b8:
   3653	F033  50			     push    ax
   3654	F034  83 C2 02			     add     dx,2	     ; указать порт
   3655	F037  B0 08			     mov     al,8
   3656	F039  EE			     out     dx,al
   3657	F03A  B8 03E8			     mov     ax,1000	      ;	время задержки
   3658	F03D			     b9:
   3659	F03D  48			     dec     ax		      ;	цикл задержки
   3660	F03E  75 FD			     jnz     b9
   3661	F040  B0 0C			     mov     al,0ch
   3662	F042  EE			     out     dx,al
   3663	F043  EB DB			     jmp     short b6	 ; переход к считыванию байта   +
   3664				     состояния
   3665	F045			     printer_io	     endp
   3666				     ;--- int 10------------------
   3667				     ;
   3668				     ;	 Программа обработки прерывания ЭЛИ
   3669				     ;
   3670				     ;	 Эта	программа обеспечивает выполнение       +
   3671				     функций обслуживания
   3672				     ; адаптера	ЭЛИ,	код которых задается в	       +
   3673				     регистре AH:
   3674				     ;
   3675				     ;	  AH=0	 - установить	режим работы	адаптера       +
   3676				     ЭЛИ. В	результате
   3677				     ; выполнения функции в регистре AL могут	       +
   3678				     устанавливаться следу-
   3679				     ; ющие	режимы:
   3680				     ;	  0 - 40х25, черно-белый, алфавитно-цифровой;
   3681				     ;	  1 - 40х25, цветной, алфавитно-цифровой;
   3682				     ;	  2 - 80х25, черно-белый, алфавитно-цифровой;
   3683				     ;	  3 - 80х25, цветной, алфавитно-цифровой;
   3684				     ;	  4 - 320х200,	цветной,	графический;
   3685				     ;	  5 - 320х200,	черно-белый, графический;
   3686				     ;	  6 - 640х200,	черно-белый, графический;
   3687				     ;	  7 - 80х25, черно-белый, алфавитно-цифровой.
   3688				     ;	  Режимы 0 - 6 используются для ЭМ адаптера     +
   3689				     ЭЛИ, режим	7
   3690				     ; используется	для монохромного	черно-белого+
   3691				     80х25 адаптера.
   3692				     ;
   3693				     ;	  AH=1	 - установить	размер курсора. Функция    +
   3694				     задает размер кур-
   3695				     ; сора	и управление	им.
   3696				     ;	 Разряды	0 - 4 регистра CL определяют конечную+
   3697				     границу курсора,
   3698				     ; разряды 0	- 4 регистра CH	- начальную границу    +
   3699				     курсора.
   3700				     ;	  Разряды 6 и 5	задают управление курсором:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 75
1840v5.asm



   3701				     ;	  00 - курсор мерцает с частотой,	задаваемой   +
   3702				     аппаратурно;
   3703				     ;	  01 - курсор отсутствует.
   3704				     ;	  Аппаратурно всегда вызывается мерцание    +
   3705				     курсора с частотой,
   3706				     ; равной 1/16 частоты	кадровой развертки.
   3707				     ;
   3708				     ;	  AH=2	 - установить	текущую позицию курсора.  +
   3709				     Для выполнения
   3710				     ; функции необходимо задать	следующие	       +
   3711				     координаты курсора:
   3712				     ;	  BH - страница;
   3713				     ;	  DX - строка и колонка.
   3714				     ; При графическом режиме регистр BH=0.
   3715				     ;
   3716				     ;	  AH=3	 - считать текущее положение курсора.    +
   3717				     Функция вос-
   3718				     ; станавливает	текущее положение курсора.      +
   3719				     Перед	выполнением
   3720				     ; функции в регистре BH необходимо задать	       +
   3721				     страницу.
   3722				     ;	  После выполнения программы регистры	       +
   3723				     содержат следующую
   3724				     ; информацию:
   3725				     ;	  DH - строка;
   3726				     ;	  DL - колонка;
   3727				     ;	  CX - размер курсора и управление им.
   3728				     ;
   3729				     ;	  AH=5	- установить активную	страницу буфера  +
   3730				     адаптера.
   3731				     ; Функция используется только в			       +
   3732				     алфавитно-цифровом режиме.
   3733				     ; Для ее выполнения	необходимо в	регистре AL    +
   3734				     задать страницу:
   3735				     ;	  0-7 -	для режимов 0	и 1;
   3736				     ;	  0-3 -	для режимов 2	и 3.
   3737				     ;	  Значения режимов те же, что и для функции   +
   3738				     AH=0.
   3739				     ;
   3740				     ;	  AH=6	 - переместить блок символов вверх по    +
   3741				     экрану.
   3742				     ; Функция перемещает символы в пределах	       +
   3743				     заданной области вверх
   3744				     ; по экрану, заполняя нижние	строки пробелами+
   3745				     с	заданным атрибу-
   3746				     ; том.
   3747				     ;	  Для выполнения функции необходимо задать +
   3748				     следующие	пара-
   3749				     ; метры;
   3750				     ;	  AL - количество перемещаемых строк. Для	       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 76
1840v5.asm



   3751				     очистки блока AL=0;
   3752				     ;	  CX - координаты левого верхнего угла блока  +
   3753				     (строка,колонка);
   3754				     ;	  DX - координаты правого нижнего угла блока;
   3755				     ;	  BH - атрибут символа пробела.
   3756				     ;
   3757				     ;	  AH=7	 - переместить блок символов вниз.	       +
   3758				     Функция перемещает
   3759				     ; символы в пределах заданной области вниз по+
   3760				     экрану, заполняя
   3761				     ; верхние строки пробелами с заданным	       +
   3762				     атрибутом.
   3763				     ;	  Для выполнения функции необходимо задать +
   3764				     те же параметры,
   3765				     ; что и для	функции AH=6H.
   3766				     ;
   3767				     ;	  AH=8	 - считать атрибут и код символа,	       +
   3768				     находящегося в теку-
   3769				     ; щей позиции курсора. Функция считывает	       +
   3770				     атрибут и код символа
   3771				     ; и помещает их	в регистр AX (AL - код символа, AH - +
   3772				     атрибут
   3773				     ; символа).
   3774				     ;	  Для выполнения функции необходимо в	       +
   3775				     регистре BH задать
   3776				     ; страницу	(только для алфавитно-цифрового     +
   3777				     режима).
   3778				     ;
   3779				     ;	  AH=9	 - записать атрибут и код символа в	       +
   3780				     текущую позицию
   3781				     ; курсора. Функция помещает код символа и	его +
   3782				     атрибут в текущую
   3783				     ; позицию курсора.
   3784				     ;	  Для выполнения функции необходимо задать +
   3785				     следующие	параметры:
   3786				     ;	  BH - отображаемая	страница (только для	       +
   3787				     алфавитно-цифрового
   3788				     ; режима;
   3789				     ;	  CX - количество записываемых символов;
   3790				     ;	  AL - код символа;
   3791				     ;	  BL - атрибут символа для				       +
   3792				     алфавитно-цифрового режима	или
   3793				     ; цвет	знака для графики. При записи точки       +
   3794				     разряд 7 регистра BL=1.    =1
   3795				     ;
   3796				     ;	  AH=10	- записать символ	в текущую позицию       +
   3797				     курсора. Атрибут
   3798				     ; не изменяется.
   3799				     ;	  Для выполнения функции необходимо задать +
   3800				     следующие	параметры:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 77
1840v5.asm



   3801				     ;	  BH - отображаемая	страница (только для	       +
   3802				     алфавитно-цифрового
   3803				     ; режима);
   3804				     ;	  CX - количество повторений символа;
   3805				     ;	  AL - код записываемого символа.		       +
   3806				     ся
   3807				     ;									   -
   3808				     ;	  AH=11	- установить цветовую	палитру.		       +
   3809				     ь
   3810				     ;	  При выполнении функции используются два   +
   3811				     варианта.
   3812				     ;	  Для первого	варианта в регистре BH		       +
   3813				     задается ноль,а в регистре
   3814				     ; BL - значения пяти младших разрядов,		       +
   3815				     используемых для выбора
   3816				     ; цветовой	палитры (цвет заднего	плана для      +
   3817				     цветного графического
   3818				     ; режима 320х200 или цвет каймы	для цветного	       +
   3819				     графического режима
   3820				     ; 40х25).
   3821				     ;	  Для второго	варианта в регистре BH		       +
   3822				     задается "1", а в регистре
   3823				     ; BL - номер цветовой	палитры (0 или 1).
   3824				     ;	  Палитра 0 состоит из зеленого	(1), красного  +
   3825				     (2) и желтого (3)
   3826				     ; цветов, палитра 1 -	из голубого (1),		       +
   3827				     фиолетового (2)	и белого	(3).
   3828				     ; При работе с видеомонитором цвета палитры   +
   3829				     заменяются соответству-
   3830				     ; ющими градациями цвета.
   3831				     ;	  Результатом выполнения функции является  +
   3832				     установка	цветовой       )
   3833				     ; палитры в регистре выбора цвета (3D9).
   3834				     ;
   3835				     ;	  AH=12	 - записать точку.	Функция определяет    +
   3836				     относительный
   3837				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3838				     должна быть записана
   3839				     ; точка с заданными	координатами.
   3840				     ;	  Для выполнения функции необходимо задать +
   3841				     следующие	параметры:    ,
   3842				     ;	  DX - строка;
   3843				     ;	  CX - колонка;
   3844				     ;	  AL - цвет	выводимой точки. Если	разряд 7	       +
   3845				     регистра AL уста-	 3)
   3846				     ; новлен в "1", то выполняется	операция XOR над    +
   3847				     значением	точки
   3848				     ; из буфера и значением точки из регистра	AL.
   3849				     ;
   3850				     ;	  AH=13	- считать точку. Функция определяет       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 78
1840v5.asm



   3851				     относительный
   3852				     ; адрес байта внутри буфера ЭЛИ, по которому   +
   3853				     должна быть считана
   3854				     ; точка с заданными	координатами.
   3855				     ;	  Перед выполнением программы в регистрах   +
   3856				     задаются те же	парамет-
   3857				     ; ры, что и для функции AH=12.
   3858				     ;	 После выполнения программы в регистре	AL     +
   3859				     находится	значение
   3860				     ; считанной точки.
   3861				     ;
   3862				     ;	  AH=14	- записать телетайп. Функция выводит     +
   3863				     символ в буфер
   3864				     ; ЭЛИ с одновременной установкой позиции	       +
   3865				     курсора и передвижением
   3866				     ; курсора на экране.
   3867				     ;	  После записи символа в последнюю позицию  +
   3868				     строки выполняется
   3869				     ; автоматический переход на	новую строку.       +
   3870				     Если страница экрана
   3871				     ; заполнена, выполняется перемещение на одну +
   3872				     строку вверх. Осво-
   3873				     ; бодившаяся строка заполняется	значением     +
   3874				     атрибута символа для
   3875				     ; алфавитно-цифрового режима или нулями -	для +
   3876				     графики.
   3877				     ;	  После записи очередного символа курсор     +
   3878				     устанавливается
   3879				     ; в следующую позицию.
   3880				     ;	  Для выполнения программы необходимо	       +
   3881				     задать следующие параметры:
   3882				     ;	  AL - код выводимого символа;
   3883				     ;	  BL - цвет	переднего плана (для графического +
   3884				     режима).
   3885				     ;	  Программа обрабатывает следующие	       +
   3886				     служебные	символы:
   3887				     ;	  0BH -	сдвиг курсора на одну	позицию (без	       +
   3888				     очистки);
   3889				     ;	  0DH -	перемещение курсора в начало строки;
   3890				     ;	  0AH -	перемещение курсора на следующую	       +
   3891				     строку;
   3892				     ;	  07H -	звуковой сигнал.
   3893				     ;
   3894				     ;	  AH=15	- получить текущее состояние ЭЛИ.	       +
   3895				     Функция считывает
   3896				     ; текущее состояние ЭЛИ	из памяти и размещает+
   3897				     его в следующих
   3898				     ; регистрах;
   3899				     ;	  AH - количество колонок (40 или 80);
   3900				     ;	  AL - текущий режим (0-7).	Значения режимов	те   +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 79
1840v5.asm



   3901				     же, что и для
   3902				     ; функции AH=0;
   3903				     ;	  BH - номер активной страницы.
   3904				     ;
   3905				     ;	 AH=17 - загрузить знакогенератор		       +
   3906				     пользователя. Функция дает
   3907				     ; возможность пользователю загружать	       +
   3908				     знакогенератор любым, необ-
   3909				     ; ходимым ему алфавитом.
   3910				     ;	  Для выполнения программы необходимо	       +
   3911				     задать следующие параметры:
   3912				     ;	  ES:BP	- адрес таблицы, сформированной	       +
   3913				     пользователем;
   3914				     ;	  CX	- количество передаваемых	символов;
   3915				     ;	  BL	- код символа, начиная	с которого	       +
   3916				     загружается таблица
   3917				     ; пользователя;
   3918				     ;	  BH - количество байт на знакоместо;
   3919				     ;	  DL - идентификатор таблицы пользователя;
   3920				     ;	  AL - режим:
   3921				     ;		       AL=0   -	 загрузить знакогенератор
   3922				     ;		       AL=1   -	 выдать идентификатор таблицы
   3923				     ;		       AL=3   -	 загрузить вторую половину      +
   3924				     знакогенератора:
   3925				     ;				 BL=0 -	загрузить вторую		       +
   3926				     половину знакогене
   3927				     ;				 ратора из ПЗУ кодовой таблицы+
   3928				     с	русским
   3929				     ;				 алфавитом,
   3930				     ;				 BL=1 -	загрузить вторую		       +
   3931				     половину знакогене
   3932				     ;				 ратора из ПЗУ стандартной       +
   3933				     кодовой таблицей
   3934				     ;				 ASCII (USA)
   3935				     ;	 На выходе:
   3936				     ;	     AH	  -  количество байт на	знакоместо
   3937				     ;	     AL	  -  идентификатор	таблицы пользователя
   3938				     ;	     CF=1   -	операция завершена успешно
   3939				     ;
   3940				     ;	  AH=19	- переслать цепочку символов. Функция   +
   3941				     позволяет	пере-
   3942				     ; сылать символы четырьмя способами,	тип	       +
   3943				     которых задается в
   3944				     ; регистре	AL:
   3945				     ;	  AL=0 - символ, символ, символ, ...
   3946				     ; В регистре BL задается атрибут, курсор не       +
   3947				     движется;
   3948				     ;	  AL=1 - символ, символ, символ, ...
   3949				     ; В регистре BL задается атрибут, курсор	       +
   3950				     движется;
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 80
1840v5.asm



   3951				     ;	  AL=2H	- символ,	атрибут,	символ, атрибут, ...
   3952				     ; Курсор не движется;
   3953				     ;	  AL=3H	- символ,	атрибут,	символ, атрибут, ...
   3954				     ; Курсор движется.
   3955				     ;	   Кроме того необходимо задать в регистрах:
   3956				     ;	  ES:BP	- начальный адрес	цепочки символов;
   3957				     ;	  CX	- количество символов;
   3958				     ;	  DH,DL	- строку и колонку для	начала записи;
   3959				     ;	  BH	- номер страницы.
   3960				     ;-----------------------------------------------------------
   3961
   3962					     assume cs:code,ds:data,es:video_ram
   3963
   3964	F045			     m1	     label   word	     ; таблица функций адаптера  +
   3965				     ЭЛИ
   3966	F045  F0FCr			     dw	     offset  set_mode
   3967	F047  F1CFr			     dw	     offset  set_ctype
   3968	F049  F1F0r			     dw	     offset  set_cpos
   3969	F04B  F21Ar			     dw	     offset  read_cursor
   3970	F04D  F7A9r			     dw	     offset  read_lpen
   3971	F04F  F230r			     dw	     offset  act_disp_page
   3972	F051  F29Cr			     dw	     offset  scroll_up
   3973	F053  F341r			     dw	     offset  scroll_down
   3974	F055  F37Dr			     dw	     offset  read_ac_current
   3975	F057  F3C3r			     dw	     offset  write_ac_current
   3976	F059  F3F6r			     dw	     offset  write_c_current
   3977	F05B  F254r			     dw	     offset  set_color
   3978	F05D  F438r			     dw	     offset  write_dot
   3979	F05F  F427r			     dw	     offset  read_dot
   3980	F061  F966r			     dw	     offset  write_tty2
   3981	F063  F27Ar			     dw	     offset  video_state
   3982	      =0020		     m1l     equ     20h
   3983
   3984	F065			     video_io proc   near
   3985	F065  FB			     sti		 ; установить	признак		       +
   3986				     разрешения прерывания
   3987	F066  FC			     cld
   3988	F067  06			     push    es
   3989	F068  1E			     push    ds
   3990	F069  52			     push    dx
   3991	F06A  51			     push    cx
   3992	F06B  53			     push    bx
   3993	F06C  56			     push    si
   3994	F06D  57			     push    di
   3995	F06E  50			     push    ax		     ; сохранить значение AX
   3996	F06F  8A C4			     mov     al,ah	     ; переслать AH в	AL
   3997	F071  32 E4			     xor     ah,ah	     ; обнулить	старший байт
   3998	F073  D1 E0			     sal     ax,1	     ; умножить	на 2
   3999	F075  8B F0			     mov     si,ax	     ; поместить в SI
   4000	F077  3D 0020			     cmp     ax,m1l	     ; проверка	длины таблицы      +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 81
1840v5.asm



   4001				     функций
   4002	F07A  72 04			     jb	     m2		     ; адаптера	ЭЛИ
   4003	F07C  58			     pop     ax		     ; восстановить	AX
   4004	F07D  E9 0147			     jmp     video_return    ; выход, если AX неверно
   4005	F080  B8 0040		     m2:     mov     ax,dat
   4006	F083  8E D8			     mov     ds,ax
   4007	F085  B8 B800			     mov     ax,0b800h	     ; сегмент для цветного	       +
   4008				     адаптера
   4009	F088  8B 3E 0010r		     mov     di,equip_flag   ; получить	тип адаптера
   4010	F08C  81 E7 0030		     and     di,30h	     ; выделить	биты режима ;	db 81h,+
   4011				     0E7h,30h,00h  ; ###Gleb###
   4012	F090  83 FF 30			     cmp     di,30h	     ; есть	установка ч/б	       +
   4013				     адаптера ?
   4014	F093  75 03			     jne     m3
   4015	F095  B8 B000			     mov     ax,0b000h	     ; уст адреса буфера	для ч/б   +
   4016				     адаптера
   4017	F098  8E C0		     m3:     mov     es,ax
   4018	F09A  58			     pop     ax		     ; восстановить	значение
   4019	F09B  8A 26 0049r		     mov     ah,crt_mode     ; получить	текущий режим в AH
   4020	F09F  2E: FF A4	F045r		     jmp   cs:m1[si]
   4021	F0A4			     video_io	     endp
   4022				     ;-------------------------
   4023				     ; set mode
   4024
   4025				     ;	 Эта	программа устанавливает режим работы  +
   4026				     адаптера ЭЛИ
   4027				     ;
   4028				     ;	 ВХОД
   4029				     ;		(AL) - содержит	значение режима.
   4030				     ;
   4031				     ;--------------------------
   4032
   4033				     ;	 Таблицы	параметров ЭЛИ
   4034
   4035	F0A4			     video_parms label	     byte
   4036
   4037				     ;	 Таблица	инициализации
   4038
   4039	F0A4  38 28 2D 0A 1F 06	19	     db	     38h,28h,2dh,0ah,1fh,6,19h	 ; уст для 40х25
   4040
   4041	F0AB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   4042	F0B0  00 00 00 00		     db	     0,0,0,0
   4043	      =0010		     m4	     equ     10h
   4044
   4045	F0B4  71 50 5A 0A 1F 06	19	     db	     71h,50h,5ah,0ah,1fh,6,19h	 ; уст для 80х25
   4046
   4047	F0BB  1C 02 07 06 07		     db	     1ch,2,7,6,7
   4048	F0C0  00 00 00 00		     db	     0,0,0,0
   4049
   4050	F0C4  38 28 2D 0A 7F 06	64	     db	     38h,28h,2dh,0ah,7fh,6,64h	 ; уст для графики
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 82
1840v5.asm



   4051
   4052	F0CB  70 02 01 06 07		     db	     70h,2,1,6,7
   4053	F0D0  00 00 00 00		     db	     0,0,0,0
   4054
   4055	F0D4  62 50 50 0F 19 06	19	     db	     62h,50h,50h,0fh,19h,6,19h	 ; уст для 80х25	ч/б	       +
   4056				     адаптера
   4057
   4058	F0DB  19 02 0D 0B 0C		     db	     19h,2,0dh,0bh,0ch
   4059	F0E0  00 00 00 00		     db	     0,0,0,0
   4060
   4061	F0E4			     m5	     label   word	     ; таблица для			       +
   4062				     восстановления длины
   4063	F0E4  0800			     dw	     2048
   4064	F0E6  1000			     dw	     4096
   4065	F0E8  4000			     dw	     16384
   4066	F0EA  4000			     dw	     16384
   4067
   4068				     ;	 Колонки
   4069	F0EC			     m6	     label   byte
   4070	F0EC  28 28 50 50 28 28	50+	     db	     40,40,80,80,40,40,80,80
   4071	      50
   4072
   4073
   4074				     ;--- c_reg_tab
   4075	F0F4			     m7	     label   byte	     ; таблица установки режима
   4076	F0F4  2C 28 2D 29 2A 2E	1E+	     db	     2ch,28h,2dh,29h,2ah,2eh,1eh,29h
   4077	      29
   4078
   4079
   4080	F0FC			     set_mode proc   near
   4081	F0FC  BA 03D4			     mov     dx,03d4h	     ; адрес цветного адаптера
   4082	F0FF  B3 00			     mov     bl,0     ;	уст значение	для цветного	       +
   4083				     адаптера
   4084	F101  83 FF 30			     cmp     di,30h	     ; установлен ч/б адаптер ?
   4085	F104  75 07			     jne     m8		     ; переход, если	указан	       +
   4086				     цветной
   4087	F106  B0 07			     mov     al,7	     ; указать ч/б режим
   4088	F108  BA 03B4			     mov     dx,03b4h	     ; адрес для ч/б адаптера
   4089	F10B  FE C3			     inc     bl		     ; установить режим для ч/б    +
   4090				     адаптера
   4091	F10D  8A E0		     m8:     mov     ah,al	     ; сохранить режим в	AH
   4092	F10F  A2 0049r			     mov     crt_mode,al
   4093	F112  89 16 0063r		     mov     addr_6845,dx    ; сохранить адрес		       +
   4094				     управляющего порта
   4095								     ; для активного дисплея
   4096	F116  1E			     push    ds
   4097	F117  50			     push    ax		     ; сохранить режим
   4098	F118  52			     push    dx		     ; сохранить значение порта  +
   4099				     вывода
   4100	F119  83 C2 04			     add     dx,4	     ; указать адрес регистра      +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 83
1840v5.asm



   4101				     управления
   4102	F11C  8A C3			     mov     al,bl	     ; получить	режим для	       +
   4103				     адаптера
   4104	F11E  EE			     out     dx,al	     ; сброс экрана
   4105	F11F  5A			     pop     dx		     ; восстановить	DX
   4106	F120  2B C0			     sub     ax,ax
   4107	F122  8E D8			     mov     ds,ax	     ; установить адрес таблицы  +
   4108				     векторов
   4109					     assume  ds:abs0
   4110	F124  C5 1E 0074r		     lds     bx,parm_ptr ; получить значение		       +
   4111				     параметров адаптера ЭЛИ
   4112	F128  58			     pop     ax		     ; восстановить	AX
   4113					     assume  ds:code
   4114	F129  B9 0010			     mov     cx,m4	; установить длину таблицы       +
   4115				     параметров
   4116	F12C  80 FC 02			     cmp     ah,2	     ; определение режима
   4117	F12F  72 10			     jc	     m9		     ; режим 0 или 1 ?
   4118	F131  03 D9			     add     bx,cx	     ; уст начало таблицы	       +
   4119				     параметров
   4120	F133  80 FC 04			     cmp     ah,4
   4121	F136  72 09			     jc	     m9		     ; режим 2 или 3
   4122	F138  03 D9			     add     bx,cx	     ; начало таблицы для графики
   4123	F13A  80 FC 07			     cmp     ah,7
   4124	F13D  72 02			     jc	     m9		     ; режимы 4, 5 или	6 ?
   4125	F13F  03 D9			     add     bx,cx	     ; уст начало таблицы для ч/б +
   4126				     адаптера
   4127
   4128				     ;	 BX указывает на строку таблицы			       +
   4129				     инициализации
   4130
   4131	F141			     m9:			     ; OUT_INIT
   4132	F141  50			     push    ax		     ; сохранить режим в	AH
   4133	F142  32 E4			     xor     ah,ah	     ;
   4134
   4135				     ;	 Цикл таблицы, устанавливающий адреса	       +
   4136				     регистров	и выводящий значения
   4137				     ; из таблицы
   4138
   4139	F144			     m10:
   4140	F144  8A C4			     mov     al,ah	     ;
   4141	F146  EE			     out     dx,al
   4142	F147  42			     inc     dx		     ; указать адрес порта
   4143	F148  FE C4			     inc     ah		     ;
   4144	F14A  8A 07			     mov     al,byte ptr [bx]	; получить значение	       +
   4145				     таблицы
   4146	F14C  EE			     out     dx,al	     ; послать строку из	таблицы +
   4147				     в	порт
   4148	F14D  43			     inc     bx		     ; +1 к адресу таблицы
   4149	F14E  4A			     dec     dx		     ; -1 из адреса порта
   4150	F14F  E2 F3			     loop    m10	     ; передана	вся таблица ?
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 84
1840v5.asm



   4151	F151  58			     pop     ax		     ; вернуть режимы
   4152	F152  1F			     pop     ds		     ; вернуть сегмент
   4153					     assume  ds:data
   4154
   4155				     ;	 Инициализация буфера дисплея
   4156
   4157	F153  33 FF			     xor     di,di	     ; DI=0
   4158	F155  89 3E 004Er		     mov     crt_start,di    ; сохранить начальный адрес
   4159	F159  C6 06 0062r 00		     mov     active_page,0   ; установить активную	       +
   4160				     страницу
   4161	F15E  B9 2000			     mov     cx,8192	     ; количество слов в	цветном +
   4162				     адаптере
   4163	F161  80 FC 04			     cmp     ah,4	     ; опрос графики
   4164	F164  72 0C			     jc	     m12	     ; нет инициализации графики
   4165	F166  80 FC 07			     cmp     ah,7	     ; опрос ч/б	адаптера
   4166	F169  74 04			     je	     m11	     ; инициализация ч/б	адаптера
   4167	F16B  33 C0			     xor     ax,ax	     ; для графического режима
   4168	F16D  EB 06			     jmp     short m13	     ; очистить	буфер
   4169	F16F			     m11:			     ; инициализация ч/б	адаптера
   4170	F16F  B9 0800			     mov     cx,2048	     ; об'ем буфера ч/б адаптера
   4171	F172			     m12:
   4172	F172  B8 0720			     mov     ax,' '+7*256    ; заполнить характеристики +
   4173				     для альфа
   4174	F175			     m13:			     ; очистить	буфер
   4175	F175  F3> AB			     rep     stosw	     ; заполнить область буфера  +
   4176				     пробелами
   4177
   4178				     ;	 Формирование порта управления режимом
   4179
   4180	F177  C7 06 0060r 0067		     mov     cursor_mode,67h   ; установить режим	       +
   4181				     текущего курсора (ERROR - MUS BE 607h)
   4182	F17D  A0 0049r			     mov     al,crt_mode     ; получить	режим в регистре +
   4183				     AX
   4184	F180  32 E4			     xor     ah,ah
   4185	F182  8B F0			     mov     si,ax	     ; таблица указателей режима
   4186	F184  8B 16 0063r		     mov     dx,addr_6845    ; подготовить адрес порта    +
   4187				     для вывода
   4188	F188  83 C2 04			     add     dx,4
   4189	F18B  2E: 8A 84	F0F4r		     mov al,cs:m7[si]
   4190	F190  EE			     out     dx,al
   4191	F191  A2 0065r			     mov     crt_mode_set,al
   4192
   4193				     ;	 Форморование количества колонок
   4194
   4195	F194  2E: 8A 84	F0ECr		     mov al,cs:m6[si]
   4196	F199  32 E4			     xor     ah,ah
   4197	F19B  A3 004Ar			     mov     crt_cols,ax     ; коичество колонок на	       +
   4198				     экране
   4199
   4200				     ;	 Установить позицию курсора
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 85
1840v5.asm



   4201
   4202	F19E  81 E6 000E		     and     si,0eh	     ; db 81h,0E6h,0Eh,00h   ; ###Gleb###
   4203	F1A2  2E: 8B 8C	F0E4r		     mov cx,cs:m5[si]  ; длина для очистки
   4204	F1A7  89 0E 004Cr		     mov     crt_len,cx
   4205	F1AB  B9 0008			     mov     cx,8	     ; очистить	все позиции	       +
   4206				     курсора
   4207	F1AE  BF 0050r			     mov     di,offset cursor_posn
   4208	F1B1  1E			     push    ds		     ; восстановить	сегмент
   4209	F1B2  07			     pop     es
   4210	F1B3  33 C0			     xor     ax,ax
   4211	F1B5  F3> AB			     rep     stosw	     ; заполнить нулями
   4212
   4213				     ;	 Установка регистра сканирования
   4214
   4215	F1B7  42			     inc     dx		     ; уст порт сканирования	по   +
   4216				     умолчанию
   4217	F1B8  B0 30			     mov     al,30h	     ; значение	30H для всех	       +
   4218				     режимов,
   4219								     ; исключая	640х200
   4220	F1BA  80 3E 0049r 06		     cmp     crt_mode,6	     ; режим ч/б	640х200
   4221	F1BF  75 02			     jnz     m14	     ; если	не 640х200
   4222	F1C1  B0 3F			     mov     al,3fh	     ; если	640х200, то поместить в 3FH
   4223	F1C3  EE		     m14:    out     dx,al	     ; вывод правильного	       +
   4224				     значения в порт 3D9
   4225	F1C4  A2 0066r			     mov     crt_pallette,al   ; сохранить значение для    +
   4226				     использования
   4227
   4228				     ;	 Нормальный возврат
   4229
   4230	F1C7			     video_return:
   4231	F1C7  5F			     pop     di
   4232	F1C8  5E			     pop     si
   4233	F1C9  5B			     pop     bx
   4234	F1CA			     m15:
   4235	F1CA  59			     pop     cx		     ; восстановление регистров
   4236	F1CB  5A			     pop     dx
   4237	F1CC  1F			     pop     ds
   4238	F1CD  07			     pop     es
   4239	F1CE  CF			     iret		     ; возврат из прерывания
   4240	F1CF			     set_mode	     endp
   4241				     ;--------------------
   4242				     ; set_ctype
   4243				     ;
   4244				     ;	 Эта	программа устанавливает размер	       +
   4245				     курсора и управление им
   4246				     ;
   4247				     ;	 ВХОД
   4248				     ;		(CX) - содержит	размер курсора. (CH -	       +
   4249				     начальная	граница,
   4250				     ;		       CL - конечная граница)
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 86
1840v5.asm



   4251				     ;
   4252				     ;--------------------
   4253	F1CF			     set_ctype proc  near
   4254	F1CF  B4 0A			     mov     ah,10	     ; установить регистр 6845	для +
   4255				     курсора
   4256	F1D1  89 0E 0060r		     mov     cursor_mode,cx   ;	сохранить в области	       +
   4257				     данных
   4258	F1D5  E8 0002			     call    m16	     ; вывод регистра CX
   4259	F1D8  EB ED			     jmp     short video_return
   4260
   4261	F1DA			     m16:
   4262	F1DA  8B 16 0063r		     mov     dx,addr_6845    ; адрес регистра
   4263	F1DE  8A C4			     mov     al,ah	     ; получить	значение
   4264	F1E0  EE			     out     dx,al	     ; установить регистр
   4265	F1E1  42			     inc     dx		     ; регистр данных
   4266	F1E2  8A C5			     mov     al,ch	     ; данные
   4267	F1E4  EE			     out     dx,al
   4268	F1E5  4A			     dec     dx
   4269	F1E6  8A C4			     mov     al,ah
   4270	F1E8  FE C0			     inc     al		     ; указать другой регистр      +
   4271				     данных
   4272	F1EA  EE			     out     dx,al	     ; установить второй регистр
   4273	F1EB  42			     inc     dx
   4274	F1EC  8A C1			     mov     al,cl	     ; второе значение данных
   4275	F1EE  EE			     out     dx,al
   4276	F1EF  C3			     ret		     ; возврат
   4277	F1F0			     set_ctype	     endp
   4278				     ;----------------------------
   4279				     ; set_cpos
   4280				     ;
   4281				     ;	 Установить текущую позицию курсора
   4282				     ;
   4283				     ;	 ВХОД
   4284				     ;		DX - строка, колонка,
   4285				     ;		BH - номер	страницы.
   4286				     ;
   4287				     ;-----------------------------
   4288	F1F0			     set_cpos proc   near
   4289	F1F0  8A CF			     mov     cl,bh
   4290	F1F2  32 ED			     xor     ch,ch	     ; установить счетчик
   4291	F1F4  D1 E1			     sal     cx,1	     ; сдвиг слова
   4292	F1F6  8B F1			     mov     si,cx
   4293	F1F8  89 94 0050r		     mov word ptr [si +	offset cursor_posn],dx	;сохранить	       +
   4294				     указатель
   4295	F1FC  38 3E 0062r		     cmp     active_page,bh
   4296	F200  75 05			     jnz     m17
   4297	F202  8B C2			     mov     ax,dx	     ; получить	строку/колонку в +
   4298				     AX
   4299	F204  E8 0002			     call    m18	     ; установить курсор
   4300	F207			     m17:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 87
1840v5.asm



   4301	F207  EB BE			     jmp     short video_return	 ; возврат
   4302	F209			     set_cpos	     endp
   4303
   4304				     ;	 Установить позицию курсора, AX	содержит       +
   4305				     строку/колонку
   4306
   4307	F209			     m18     proc    near
   4308	F209  E8 007F			     call    position
   4309	F20C  8B C8			     mov     cx,ax
   4310	F20E  03 0E 004Er		     add     cx,crt_start    ; сложить с начальным	       +
   4311				     адресом страницы
   4312	F212  D1 F9			     sar     cx,1	     ; делить на 2
   4313	F214  B4 0E			     mov     ah,14
   4314	F216  E8 FFC1			     call    m16
   4315	F219  C3			     ret
   4316	F21A			     m18     endp
   4317				     ;---------------------------
   4318				     ; read_cursor
   4319				     ;
   4320				     ;	 Считать	текущее положение курсора
   4321				     ;
   4322				     ;	 Эта	программа восстанавливает текущее       +
   4323				     положение	курсора
   4324				     ;
   4325				     ;	 ВХОД
   4326				     ;		BH - номер	страницы
   4327				     ;
   4328				     ;	 ВЫХОД
   4329				     ;		DX - строка/колонка текущей	позиции	       +
   4330				     курсора,
   4331				     ;		CX - размер курсора и управление им
   4332				     ;
   4333				     ;---------------------------
   4334	F21A			     read_cursor proc near
   4335	F21A  8A DF			     mov     bl,bh
   4336	F21C  32 FF			     xor     bh,bh
   4337	F21E  D1 E3			     sal     bx,1
   4338	F220  8B 97 0050r		     mov dx,word ptr [bx+offset	cursor_posn]
   4339	F224  8B 0E 0060r		     mov     cx,cursor_mode
   4340	F228  5F			     pop     di		     ; восстановить	регистры
   4341	F229  5E			     pop     si
   4342	F22A  5B			     pop     bx
   4343	F22B  58			     pop     ax
   4344	F22C  58			     pop     ax
   4345	F22D  1F			     pop     ds
   4346	F22E  07			     pop     es
   4347	F22F  CF			     iret
   4348	F230			     read_cursor     endp
   4349				     ;-----------------------------
   4350				     ; act_disp_page
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 88
1840v5.asm



   4351				     ;
   4352				     ;	  Эта программа устанавливает активную	       +
   4353				     страницу буфера адаптера ЭЛИ
   4354				     ;
   4355				     ;	 ВХОД
   4356				     ;		AL - страница.
   4357				     ;
   4358				     ;	 ВЫХОД
   4359				     ;		Выполняется сброс контроллера для	       +
   4360				     установки	новой страницы.
   4361				     ;
   4362				     ;-----------------------------
   4363	F230			     act_disp_page proc	     near
   4364	F230  A2 0062r			     mov     active_page,al  ; сохранить значение	       +
   4365				     активной страницы
   4366	F233  8B 0E 004Cr		     mov     cx,crt_len	     ; получить	длину области      +
   4367				     буфера
   4368	F237  98			     cbw		     ; преобразовать AL
   4369	F238  50			     push    ax		     ; сохранить значение	       +
   4370				     страницы
   4371	F239  F7 E1			     mul     cx
   4372	F23B  A3 004Er			     mov     crt_start,ax    ; сохранить начальный адрес
   4373								     ; для следующего требования
   4374	F23E  8B C8			     mov     cx,ax	     ; переслать начальный адрес+
   4375				     в	CX
   4376	F240  D1 F9			     sar     cx,1	     ; делить на 2
   4377	F242  B4 0C			     mov     ah,12
   4378	F244  E8 FF93			     call    m16
   4379	F247  5B			     pop     bx		     ; восстановить	значение       +
   4380				     страницы
   4381	F248  D1 E3			     sal     bx,1
   4382	F24A  8B 87 0050r		     mov ax,word ptr [bx+offset	cursor_posn]   ; получить курсор
   4383	F24E  E8 FFB8			     call    m18	     ; установить позицию	       +
   4384				     курсора
   4385	F251  E9 FF73			     jmp     video_return
   4386	F254			     act_disp_page   endp
   4387				     ;------------------------------
   4388				     ; set color
   4389				     ;
   4390				     ;	 Эта	программа устанавливает цветовую	       +
   4391				     палитру.
   4392				     ;
   4393				     ;	 ВХОД
   4394				     ;		BH=0
   4395				     ;		     BL	- значение пяти младших бит,	       +
   4396				     используемых для выбора
   4397				     ;			  цветовой палитры (цвет заднего     +
   4398				     плана	для цветной
   4399				     ;			  графики 320х200 или цвет каймы для    +
   4400				     цветного 40х25)
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 89
1840v5.asm



   4401				     ;		BH=1
   4402				     ;		     BL	- номер цветовой палитры
   4403				     ;			  BL=0 - зеленый(1), красный(2), желтый(3),
   4404				     ;			  BL=1 - голубой(1), фиолетовый(2), белый+
   4405				     (3)
   4406				     ;
   4407				     ;	 ВЫХОД
   4408				     ;		Установленная цветовая палитра в	       +
   4409				     порту	3D9.
   4410				     ;------------------------------
   4411	F254			     set_color proc  near
   4412	F254  8B 16 0063r		     mov     dx,addr_6845    ; порт	для палитры
   4413	F258  83 C2 05			     add     dx,5	     ; установить порт
   4414	F25B  A0 0066r			     mov     al,crt_pallette   ; получить текущее	       +
   4415				     значение палитры
   4416	F25E  0A FF			     or	     bh,bh	     ; цвет	0 ?
   4417	F260  75 0E			     jnz     m20	     ; вывод цвета 1
   4418
   4419				     ;	 Обработка цветовой палитры 0
   4420
   4421	F262  24 E0			     and     al,0e0h	     ; сбросить	5 младших бит
   4422	F264  80 E3 1F			     and     bl,01fh	     ; сбросить	3 старших бита
   4423	F267  0A C3			     or	     al,bl
   4424	F269			     m19:
   4425	F269  EE			     out     dx,al	      ;	вывод выбранного	цвета в  +
   4426				     порт 3D9
   4427	F26A  A2 0066r			     mov     crt_pallette,al  ;	сохранить значение цвета
   4428	F26D  E9 FF57			     jmp     video_return
   4429
   4430				     ;	 Обработка цветовой палитры 1
   4431
   4432	F270			     m20:
   4433	F270  24 DF			     and     al,0dfh	     ;
   4434	F272  D0 EB			     shr     bl,1	     ; проверить младший бит	BL
   4435	F274  73 F3			     jnc     m19
   4436	F276  0C 20			     or	     al,20h	     ;
   4437	F278  EB EF			     jmp     short m19	     ; переход
   4438	F27A			     set_color	     endp
   4439				     ;--------------------------
   4440				     ; video state
   4441				     ;
   4442				     ;	 Эта	программа получает текущее состояние  +
   4443				     ЭЛИ в AX.
   4444				     ;
   4445				     ;		AH - количество колонок,
   4446				     ;		AL - текущий режим,
   4447				     ;		BH - номер	активной страницы.
   4448				     ;
   4449				     ;---------------------------
   4450	F27A			     video_state proc	     near
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 90
1840v5.asm



   4451	F27A  8A 26 004Ar		     mov     ah,byte ptr crt_cols   ; получить количество    +
   4452				     колонок
   4453	F27E  A0 0049r			     mov     al,crt_mode	     ; текущий режим
   4454	F281  8A 3E 0062r		     mov     bh,active_page  ; получить	текущую активную+
   4455				     страницу
   4456	F285  5F			     pop     di		     ; восстановить	регистры
   4457	F286  5E			     pop     si
   4458	F287  59			     pop     cx
   4459	F288  E9 FF3F			     jmp     m15	     ; возврат к программе
   4460	F28B			     video_state     endp
   4461				     ;---------------------------
   4462				     ; position
   4463				     ;
   4464				     ;	 Эта	программа вычисляет адрес буфера	       +
   4465				     символа в режиме альфа.
   4466				     ;
   4467				     ;	 ВХОД
   4468				     ;		AX - номер	строки, номер колонки,
   4469				     ;
   4470				     ;	 ВЫХОД
   4471				     ;		AX - смещение символа с	координатами (AH,  +
   4472				     AL) относительно
   4473				     ;		     начала страницы. Смещение		       +
   4474				     измеряется в байтах.
   4475				     ;
   4476				     ;----------------------------
   4477	F28B			     position proc   near
   4478	F28B  53			     push    bx		     ; сохранить регистр
   4479	F28C  8B D8			     mov     bx,ax
   4480	F28E  8A C4			     mov     al,ah	     ; строки в AL
   4481	F290  F6 26 004Ar		     mul     byte ptr crt_cols
   4482	F294  32 FF			     xor     bh,bh
   4483	F296  03 C3			     add     ax,bx	     ; добавить	к значению	       +
   4484				     колонки
   4485	F298  D1 E0			     sal     ax,1	     ; * 2 для байтов атрибута
   4486	F29A  5B			     pop     bx
   4487	F29B  C3			     ret
   4488	F29C			     position	     endp
   4489				     ;-------------------------------
   4490				     ;scroll up
   4491				     ;
   4492				     ;	 Эта	программа перемещает	блок символов      +
   4493				     вверх	по экрану.
   4494				     ;
   4495				     ;	 ВХОД
   4496				     ;		AH - текуший режим,
   4497				     ;		AL - количество перемещаемых строк
   4498				     ;		CX - координаты левого верхнего	угла       +
   4499				     блока
   4500				     ;		     (строка, колонка),
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 91
1840v5.asm



   4501				     ;		DX - координаты правого нижнего	угла
   4502				     ;		BH - атрибут символа пробела (для	       +
   4503				     опробеливания	освобожда-
   4504				     ;		     емых строк),
   4505				     ;
   4506				     ;	 ВЫХОД
   4507				     ;		Модифицированный буфер дисплея.
   4508				     ;
   4509				     ;-----------------------------------
   4510					     assume cs:code,ds:data,es:data
   4511	F29C			     scroll_up proc  near
   4512	F29C  8A D8			     mov     bl,al	 ; сохранить количество	       +
   4513				     перемещаемых строк
   4514	F29E  80 FC 04			     cmp     ah,4	     ; проверка	графического       +
   4515				     режима
   4516	F2A1  72 08			     jc	     n1
   4517	F2A3  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4518	F2A6  74 03			     je	     n1
   4519	F2A8  E9 01F3			     jmp     graphics_up
   4520	F2AB			     n1:
   4521	F2AB  53			     push    bx		     ; сохранить полный атрибут  +
   4522				     в	BH
   4523	F2AC  8B C1			     mov     ax,cx	     ; координаты левого	       +
   4524				     верхнего угла
   4525	F2AE  E8 0039			     call    scroll_position
   4526	F2B1  74 33			     jz	     n7
   4527	F2B3  03 F0			     add     si,ax
   4528	F2B5  8A E6			     mov     ah,dh	     ; строка
   4529	F2B7  2A E3			     sub     ah,bl
   4530	F2B9			     n2:
   4531	F2B9  E8 0075			     call    n10	     ; сдвинуть	одну строку
   4532	F2BC  03 F5			     add     si,bp
   4533	F2BE  03 FD			     add     di,bp	     ; указать на следующую	       +
   4534				     строку в блоке
   4535	F2C0  FE CC			     dec     ah		     ; счетчик строк для	сдвига
   4536	F2C2  75 F5			     jnz     n2		     ; цикл	строки
   4537	F2C4			     n3:			     ; очистка входа
   4538	F2C4  58			     pop     ax		     ; восстановить	атрибут в AH
   4539	F2C5  B0 20			     mov     al,' '	     ; заполнить пробелами
   4540	F2C7			     n4:			     ; очистка счетчика
   4541	F2C7  E8 0070			     call    n11	     ; очистка строки
   4542	F2CA  03 FD			     add     di,bp	     ; указать следующую строку
   4543	F2CC  FE CB			     dec     bl		     ; счетчик строк для	сдвига
   4544	F2CE  75 F7			     jnz     n4		     ; очистка счетчика
   4545	F2D0			     n5:			     ; конец сдвига
   4546	F2D0  B8 0040			     mov     ax,dat
   4547	F2D3  8E D8			     mov     ds,ax
   4548	F2D5  80 3E 0049r 07		     cmp     crt_mode,7	     ; ч/б адаптер ?
   4549	F2DA  74 07			     je	     n6		     ; если	да - пропуск режима     +
   4550				     сброса
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 92
1840v5.asm



   4551	F2DC  A0 0065r			     mov     al,crt_mode_set
   4552	F2DF  BA 03D8			     mov     dx,03d8h	     ; установить порт цветного  +
   4553				     адаптера
   4554	F2E2  EE			     out     dx,al
   4555	F2E3			     n6:
   4556	F2E3  E9 FEE1			     jmp     video_return
   4557	F2E6			     n7:
   4558	F2E6  8A DE			     mov     bl,dh
   4559	F2E8  EB DA			     jmp     short n3	     ; очистить
   4560	F2EA			     scroll_up	     endp
   4561
   4562				     ;	 Обработка сдвига
   4563
   4564	F2EA			     scroll_position proc    near
   4565	F2EA  80 3E 0049r 02		     cmp     crt_mode,2
   4566	F2EF  72 19			     jb	     n9		     ; обработать 80х25 отдельно
   4567	F2F1  80 3E 0049r 03		     cmp     crt_mode,3
   4568	F2F6  77 12			     ja	     n9
   4569
   4570				     ;	 Сдиг для цветного адаптера в режиме 80х25
   4571
   4572	F2F8  52			     push    dx
   4573	F2F9  BA 03DA			     mov     dx,3dah	     ; обработка цветного	       +
   4574				     адаптера
   4575	F2FC  50			     push    ax
   4576	F2FD			     n8:			     ; ожидание	доступности	       +
   4577				     дисплея
   4578	F2FD  EC			     in	     al,dx
   4579	F2FE  A8 08			     test    al,8
   4580	F300  74 FB			     jz	     n8		     ; ожидание	доступности	       +
   4581				     дисплея
   4582	F302  B0 25			     mov     al,25h
   4583	F304  BA 03D8			     mov     dx,03d8h
   4584	F307  EE			     out     dx,al	     ; выключить ЭЛИ
   4585	F308  58			     pop     ax
   4586	F309  5A			     pop     dx
   4587	F30A  E8 FF7E		     n9:     call    position
   4588	F30D  03 06 004Er		     add     ax,crt_start    ; смещение	активной	       +
   4589				     страницы
   4590	F311  8B F8			     mov     di,ax	     ; для адреса сдвига
   4591	F313  8B F0			     mov     si,ax
   4592	F315  2B D1			     sub     dx,cx	     ; DX=строка
   4593	F317  FE C6			     inc     dh
   4594	F319  FE C2			     inc     dl		     ; прибавление к началу
   4595	F31B  32 ED			     xor     ch,ch	     ; установить старший байт    +
   4596				     счетчика в 0
   4597	F31D  8B 2E 004Ar		     mov     bp,crt_cols     ; получить	число колонок      +
   4598				     дисплея
   4599	F321  03 ED			     add     bp,bp	     ; увеличить на 2 байт	       +
   4600				     атрибута
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 93
1840v5.asm



   4601	F323  8A C3			     mov     al,bl	     ; получить	счетчик строки
   4602	F325  F6 26 004Ar		     mul     byte ptr crt_cols	 ; определить	смещение из  +
   4603				     адреса,
   4604	F329  03 C0			     add     ax,ax     ; умноженного	на 2,	для байта      +
   4605				     атрибута
   4606	F32B  06			     push    es	     ; установить адресацию для	       +
   4607				     области буфера
   4608	F32C  1F			     pop     ds
   4609	F32D  80 FB 00			     cmp     bl,0	     ; 0 означает очистку блока
   4610	F330  C3			     ret		     ; возврат с установкой	       +
   4611				     флажков
   4612	F331			     scroll_position endp
   4613
   4614				     ;	 Перемещение	строки
   4615
   4616	F331			     n10     proc    near
   4617	F331  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4618				     передачи
   4619	F333  56			     push    si
   4620	F334  57			     push    di		     ; сохранить начальный адрес
   4621	F335  F3> A5			     rep     movsw	     ; передать	эту строку на       +
   4622				     экран
   4623	F337  5F			     pop     di
   4624	F338  5E			     pop     si		     ; восстановить	адресацию
   4625	F339  C3			     ret
   4626	F33A			     n10     endp
   4627
   4628				     ;	 очистка	строки
   4629
   4630	F33A			     n11     proc    near
   4631	F33A  8A CA			     mov     cl,dl	     ; получить	колонки для	       +
   4632				     очистки
   4633	F33C  57			     push    di
   4634	F33D  F3> AB			     rep     stosw	     ; запомнить полный знак
   4635	F33F  5F			     pop     di
   4636	F340  C3			     ret
   4637	F341			     n11     endp
   4638				     ;------------------------
   4639				     ; scroll_down
   4640				     ;
   4641				     ;	 Эта	программа перемещает	блок символов      +
   4642				     вниз по
   4643				     ; экрану, заполняя верхние строки пробелом с  +
   4644				     заданным атрибутом
   4645				     ;
   4646				     ;	 ВХОД
   4647				     ;		AH - текущий режим,
   4648				     ;		AL - количество строк,
   4649				     ;		CX - верхний левый угол	блока,
   4650				     ;		DX - правый нижний угол	блока,
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 94
1840v5.asm



   4651				     ;		BH - атрибут символа-заполнителя	       +
   4652				     (пробела),
   4653				     ;
   4654				     ;-------------------------
   4655	F341			     scroll_down proc near
   4656	F341  FD			     std		     ; уст направление сдвига      +
   4657				     вниз
   4658	F342  8A D8			     mov     bl,al	     ; количество строк в BL
   4659	F344  80 FC 04			     cmp     ah,4	     ; проверка	графики
   4660	F347  72 08			     jc	     n12
   4661	F349  80 FC 07			     cmp     ah,7	     ; проверка	ч/б адаптера
   4662	F34C  74 03			     je	     n12
   4663	F34E  E9 01A6			     jmp     graphics_down
   4664	F351			     n12:
   4665	F351  53			     push    bx		     ; сохранить атрибут в BH
   4666	F352  8B C2			     mov     ax,dx	     ; нижний правый угол
   4667	F354  E8 FF93			     call    scroll_position
   4668	F357  74 20			     jz	     n16
   4669	F359  2B F0			     sub     si,ax	     ; SI для адресации
   4670	F35B  8A E6			     mov     ah,dh
   4671	F35D  2A E3			     sub     ah,bl	     ; передать	количество строк
   4672	F35F			     n13:
   4673	F35F  E8 FFCF			     call    n10	     ; передать	одну строку
   4674	F362  2B F5			     sub     si,bp
   4675	F364  2B FD			     sub     di,bp
   4676	F366  FE CC			     dec     ah
   4677	F368  75 F5			     jnz     n13
   4678	F36A			     n14:
   4679	F36A  58			     pop     ax		     ; восстановить	атрибут в AH
   4680	F36B  B0 20			     mov     al,' '
   4681	F36D			     n15:
   4682	F36D  E8 FFCA			     call    n11	     ; очистка одной строки
   4683	F370  2B FD			     sub     di,bp	     ; перейти к следующей строке
   4684	F372  FE CB			     dec     bl
   4685	F374  75 F7			     jnz     n15
   4686	F376  E9 FF57			     jmp     n5		     ; конец сдвига
   4687	F379			     n16:
   4688	F379  8A DE			     mov     bl,dh
   4689	F37B  EB ED			     jmp     short n14
   4690	F37D			     scroll_down  endp
   4691				     ;--------------------
   4692				     ; read_ac_current
   4693				     ;
   4694				     ;	 Эта	программа считывает атрибут и	код	       +
   4695				     символа, находящегося в теку-
   4696				     ; щем положении курсора
   4697				     ;
   4698				     ;	 ВХОД
   4699				     ;		AH - текущий режим,
   4700				     ;		BH - номер	страницы (только для режима     +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 95
1840v5.asm



   4701				     альфа),
   4702				     ;
   4703				     ;	 ВЫХОД
   4704				     ;		AL - код символа,
   4705				     ;		AH - атрибут символа.
   4706				     ;
   4707				     ;---------------------
   4708					     assume cs:code,ds:data,es:data
   4709	F37D			     read_ac_current proc near
   4710	F37D  80 FC 04			     cmp     ah,4	     ; это графика ?
   4711	F380  72 08			     jc	     p1
   4712	F382  80 FC 07			     cmp     ah,7	     ; ч/б адаптер ?
   4713	F385  74 03			     je	     p1
   4714	F387  E9 02A9			     jmp     graphics_read
   4715	F38A			     p1:			     ;
   4716	F38A  E8 001A			     call    find_position
   4717	F38D  8B F3			     mov     si,bx	     ; установить адресацию в SI
   4718
   4719
   4720	F38F  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4721	F393  83 C2 06			     add     dx,6	     ; порт	состояния
   4722	F396  06			     push    es
   4723	F397  1F			     pop     ds		     ; получить	сегмент
   4724	F398			     p2:
   4725	F398  EC			     in	     al,dx	     ; получить	состояние
   4726	F399  A8 01			     test    al,1
   4727	F39B  75 FB			     jnz     p2		     ; ожидание
   4728	F39D  FA			     cli		; сброс признака разрешения     +
   4729				     прерывания
   4730	F39E			     p3:
   4731	F39E  EC			     in	     al,dx	     ; получить	состояние
   4732	F39F  A8 01			     test    al,1
   4733	F3A1  74 FB			     jz	     p3		     ; ожидание
   4734	F3A3  AD			     lodsw		     ; получить	символ/атрибут
   4735	F3A4  E9 FE20			     jmp     video_return
   4736	F3A7			     read_ac_current endp
   4737
   4738	F3A7			     find_position proc	near
   4739	F3A7  8A CF			     mov     cl,bh	     ; поместить страницу в CX
   4740	F3A9  32 ED			     xor     ch,ch
   4741	F3AB  8B F1			     mov     si,cx	     ; передать	в SI индекс,	       +
   4742				     умноженный на 2
   4743	F3AD  D1 E6			     sal     si,1	     ; для слова смещения
   4744	F3AF  8B 84 0050r		     mov ax,word ptr [si+offset	cursor_posn]   ; получить	       +
   4745				     строку/ко-
   4746								     ; лонку этой страницы
   4747	F3B3  33 DB			     xor     bx,bx	     ; установить начальный	       +
   4748				     адрес	в 0
   4749	F3B5  E3 06			     jcxz    p5
   4750	F3B7			     p4:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 96
1840v5.asm



   4751	F3B7  03 1E 004Cr		     add     bx,crt_len	     ; длина буфера
   4752	F3BB  E2 FA			     loop    p4
   4753	F3BD			     p5:
   4754	F3BD  E8 FECB			     call    position
   4755	F3C0  03 D8			     add     bx,ax
   4756	F3C2  C3			     ret
   4757	F3C3			     find_position   endp
   4758				     ;---------------------
   4759				     ;write_ac_current
   4760				     ;
   4761				     ;	 Эта	программа записывает	атрибут и код       +
   4762				     символа в текущую позицию
   4763				     ; курсора
   4764				     ;
   4765				     ;	 ВХОД
   4766				     ;		AH - текущий режим,
   4767				     ;		BH - номер	страницы,
   4768				     ;		CX - счетчик (количество повторений	       +
   4769				     символов),
   4770				     ;		AL - код символа,
   4771				     ;		BL - атрибут символа (для режимов альфа)  +
   4772				     или цвет символа
   4773				     ;		     для графики.
   4774				     ;
   4775				     ;----------------------
   4776	F3C3			     write_ac_current proc near
   4777	F3C3  80 FC 04			     cmp     ah,4	     ; это графика ?
   4778	F3C6  72 08			     jc	     p6
   4779	F3C8  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4780	F3CB  74 03			     je	     p6
   4781	F3CD  E9 01B1			     jmp     graphics_write
   4782	F3D0			     p6:
   4783	F3D0  8A E3			     mov     ah,bl	     ; получить	атрибут в AH
   4784	F3D2  50			     push    ax		     ; хранить
   4785	F3D3  51			     push    cx		     ; хранить счетчик
   4786	F3D4  E8 FFD0			     call    find_position
   4787	F3D7  8B FB			     mov     di,bx	     ; адрес в DI
   4788	F3D9  59			     pop     cx		     ; вернуть счетчик
   4789	F3DA  5B			     pop     bx		     ; и символ
   4790	F3DB			     p7:			     ; цикл	записи
   4791
   4792
   4793	F3DB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4794	F3DF  83 C2 06			     add     dx,6	     ; указать порт состояния
   4795	F3E2			     p8:
   4796	F3E2  EC			     in	     al,dx	     ; получить	состояние
   4797	F3E3  A8 01			     test    al,1
   4798	F3E5  75 FB			     jnz     p8		     ; ожидать
   4799	F3E7  FA			     cli		  ; сброс признака	разрешения   +
   4800				     прерывания
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 97
1840v5.asm



   4801	F3E8			     p9:
   4802	F3E8  EC			     in	     al,dx	     ; получить	состояние
   4803	F3E9  A8 01			     test    al,1
   4804	F3EB  74 FB			     jz	     p9		     ; ожидать
   4805	F3ED  8B C3			     mov     ax,bx
   4806	F3EF  AB			     stosw		     ; записать	символ и	атрибут
   4807	F3F0  FB			     sti		     ; уст признак разрешения      +
   4808				     прерывания
   4809	F3F1  E2 E8			     loop    p7
   4810	F3F3  E9 FDD1			     jmp     video_return
   4811	F3F6			     write_ac_current  endp
   4812				     ;---------------------
   4813				     ;write_c_current
   4814				     ;
   4815				     ;	 Эта	программа записывает	символ в	текущую +
   4816				     позицию курсора.
   4817				     ;
   4818				     ;	 ВХОД
   4819				     ;		BH - номер	страницы (только для альфа       +
   4820				     режимов),
   4821				     ;		CX - счетчик (количество повторений	       +
   4822				     символа),
   4823				     ;		AL - код символа,
   4824				     ;
   4825				     ;-----------------------
   4826	F3F6			     write_c_current proc near
   4827	F3F6  80 FC 04			     cmp     ah,4	     ; это графика ?
   4828	F3F9  72 08			     jc	     p10
   4829	F3FB  80 FC 07			     cmp     ah,7	     ; это ч/б адаптер ?
   4830	F3FE  74 03			     je	     p10
   4831	F400  E9 017E			     jmp     graphics_write
   4832	F403			     p10:
   4833	F403  50			     push    ax		     ; сохранить в стеке
   4834	F404  51			     push    cx		     ; сохранить количество	       +
   4835				     повторений
   4836	F405  E8 FF9F			     call    find_position
   4837	F408  8B FB			     mov     di,bx	     ; адрес в DI
   4838	F40A  59			     pop     cx		     ; вернуть количество	       +
   4839				     повторений
   4840	F40B  5B			     pop     bx		     ; BL - код символа
   4841	F40C			     p11:
   4842
   4843
   4844	F40C  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   4845	F410  83 C2 06			     add     dx,6	     ; указать порт состояния
   4846	F413			     p12:
   4847	F413  EC			     in	     al,dx	     ; получить	состояние
   4848	F414  A8 01			     test    al,1
   4849	F416  75 FB			     jnz     p12	     ; ожидать
   4850	F418  FA			     cli		     ; сброс признака разрешения+
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 98
1840v5.asm



   4851				     прерывания
   4852	F419			     p13:
   4853	F419  EC			     in	     al,dx	     ; получить	состояние
   4854	F41A  A8 01			     test    al,1
   4855	F41C  74 FB			     jz	     p13	     ; ожидание
   4856	F41E  8A C3			     mov     al,bl	     ; восстановить	символ
   4857	F420  AA			     stosb		     ; записать	символ
   4858	F421  47			     inc     di
   4859	F422  E2 E8			     loop    p11	     ; цикл
   4860	F424  E9 FDA0			     jmp     video_return
   4861	F427			     write_c_current endp
   4862				     ;---------------------
   4863				     ; read dot	- write	dot
   4864				     ;
   4865				     ;	 Эта	программа считывает/записывает точку.
   4866				     ;
   4867				     ;	 ВХОД
   4868				     ;		DX - строка (0-199),
   4869				     ;		CX - колонка (0-639),
   4870				     ;		AL - цвет выводимой точки.
   4871				     ;		     Если бит 7=1, то выполняется операция
   4872				     ;		     XOR над	значением точки из буфера	       +
   4873				     дисплея и значением
   4874				     ;		     точки	из регистра AL (при записи	       +
   4875				     точки).
   4876				     ;
   4877				     ;	 ВЫХОД
   4878				     ;		AL - значение считанной точки
   4879				     ;
   4880				     ;----------------------
   4881					     assume cs:code,ds:data,es:data
   4882	F427			     read_dot proc   near
   4883	F427  E8 0031			     call    r3		     ; определить положение	       +
   4884				     точки
   4885	F42A  26: 8A 04			     mov     al,es:[si]	     ; получить	байт
   4886	F42D  22 C4			     and     al,ah	     ; размаскировать другие       +
   4887				     биты в байте
   4888	F42F  D2 E0			     shl     al,cl	     ;
   4889	F431  8A CE			     mov     cl,dh	     ; получить	число бит	       +
   4890				     результата
   4891	F433  D2 C0			     rol     al,cl
   4892	F435  E9 FD8F			     jmp     video_return    ; выход из прерывания
   4893	F438			     read_dot	     endp
   4894
   4895	F438			     write_dot proc  near
   4896	F438  50			     push    ax		     ; сохранить значение точки
   4897	F439  50			     push    ax		     ; еще раз
   4898	F43A  E8 001E			     call    r3		     ; определить положение	       +
   4899				     точки
   4900	F43D  D2 E8			     shr     al,cl	     ; сдвиг для установки бит     +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 99
1840v5.asm



   4901				     при выводе
   4902	F43F  22 C4			     and     al,ah	     ; сбросить	другие биты
   4903	F441  26: 8A 0C			     mov     cl,es:[si]	     ; получить	текущий байт
   4904	F444  5B			     pop     bx
   4905	F445  F6 C3 80			     test    bl,80h
   4906	F448  75 0D			     jnz     r2
   4907	F44A  F6 D4			     not     ah	       ; установить маску для		       +
   4908				     передачи указанных бит
   4909	F44C  22 CC			     and     cl,ah
   4910	F44E  0A C1			     or	     al,cl
   4911	F450			     r1:
   4912	F450  26: 88 04			     mov es:[si],al	     ; восстановить	байт в памяти
   4913	F453  58			     pop     ax
   4914	F454  E9 FD70			     jmp     video_return    ; к выходу из программы
   4915	F457			     r2:
   4916	F457  32 C1			     xor     al,cl	     ; исключающее ИЛИ над	       +
   4917				     значениями точки
   4918	F459  EB F5			     jmp     short r1	     ; конец записи
   4919	F45B			     write_dot	     endp
   4920
   4921				     ;-------------------------------------
   4922				     ;
   4923				     ;	 Эта	программа определяет	относительный     +
   4924				     адрес	байта (внутри буфера
   4925				     ; дисплея),	из которого должна быть		       +
   4926				     считана/записана точка,с заданными
   4927				     ; координатами.
   4928				     ;
   4929				     ;	 ВХОД
   4930				     ;		DX - строка (0-199),
   4931				     ;		CX - колонка (0-639).
   4932				     ;
   4933				     ;	 ВЫХОД
   4934				     ;		SI - относительный	адрес байта,		       +
   4935				     содержащего точку внутри
   4936				     ;		     буфера дисплея,
   4937				     ;		AH - маска	для выделения значения	       +
   4938				     заданной точки внутри байта
   4939				     ;		CL - константа	сдвига маски	в AH в крайнюю+
   4940				     левую	позицию,
   4941				     ;		DH - число	бит,	определяющих значение      +
   4942				     точки.
   4943				     ;
   4944				     ;--------------------------------------
   4945
   4946	F45B			     r3	     proc    near
   4947	F45B  53			     push    bx		     ; сохранить BX
   4948	F45C  50			     push    ax		     ; сохранить AL
   4949
   4950				     ;	 Вычисление первого байта	указанной строки+
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 100
1840v5.asm



   4951				     умножением на 40.
   4952				     ; Наименьший бит строки	определяет		       +
   4953				     четно/нечетную 80-байтовую строку.
   4954
   4955	F45D  B0 28			     mov     al,40
   4956	F45F  52			     push    dx		     ; сохранить значение строки
   4957	F460  80 E2 FE			     and     dl,0feh	     ; сброс четно/нечетного	бита
   4958	F463  F6 E2			     mul     dl	  ; AX содержит	адрес первого байта   +
   4959				     указанной	строки
   4960	F465  5A			     pop     dx		     ; восстановить	его
   4961	F466  F6 C2 01			     test    dl,1	     ; проверить			       +
   4962				     четность/нечетность
   4963	F469  74 03			     jz	     r4		     ; переход,если строка четная
   4964	F46B  05 2000			     add     ax,2000h	     ; смещение	для нахождения    +
   4965				     нечетных строк
   4966	F46E			     r4:			     ; четная строка
   4967	F46E  8B F0			     mov     si,ax	     ; передать	указатель в SI
   4968	F470  58			     pop     ax		     ; восстановить	значение AL
   4969	F471  8B D1			     mov     dx,cx	     ; значение	колонки в DX
   4970
   4971				     ;	 Определение	действительных графических    +
   4972				     режимов
   4973				     ;
   4974				     ;	 Установка регистров согласно	режимaм
   4975				     ;
   4976				     ;	       BH - количество бит, определяющее точку,
   4977				     ;	       BL - константа выделения точки из левых   +
   4978				     бит байта,
   4979				     ;	       CH - константа для выделения из номера     +
   4980				     колонки номера позиции
   4981				     ;		    первого бита, определяющего	точку в  +
   4982				     байте, т.е.	получение
   4983				     ;		    остатка от	деления номера на 8 (для     +
   4984				     режима 640х200) или
   4985				     ;		    номера на 4	(для	режима 320х200),
   4986				     ;	       CL - константа сдвига (для выполнения       +
   4987				     деления на 8 или на 4).
   4988
   4989	F473  BB 02C0			     mov     bx,2c0h
   4990	F476  B9 0302			     mov     cx,302h	     ; установка параметров
   4991	F479  80 3E 0049r 06		     cmp     crt_mode,6
   4992	F47E  72 06			     jc	     r5		     ;
   4993	F480  BB 0180			     mov     bx,180h
   4994	F483  B9 0703			     mov     cx,703h	     ; уст параметры для		       +
   4995				     старшего регистра
   4996
   4997				     ;	 Определение	бита смещения в байте	по маске
   4998	F486			     r5:
   4999	F486  22 EA			     and     ch,dl	     ;
   5000
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 101
1840v5.asm



   5001				     ;	 Определение	байта смещения в колонке
   5002
   5003	F488  D3 EA			     shr     dx,cl	     ; сдвиг для коррекции
   5004	F48A  03 F2			     add     si,dx	     ; получить	указатель
   5005	F48C  8A F7			     mov     dh,bh   ; получить	указатель битов	       +
   5006				     результата в DH
   5007
   5008				     ;	 Умножение BH (количество бит в байте) на	CH     +
   5009				     (бит смещения)
   5010
   5011	F48E  2A C9			     sub     cl,cl
   5012	F490			     r6:
   5013	F490  D0 C8			     ror     al,1    ; левое крайнее значение в AL	для +
   5014				     записи
   5015	F492  02 CD			     add     cl,ch	     ; прибавить значение бита    +
   5016				     смещения
   5017	F494  FE CF			     dec     bh		     ; счетчик контроля
   5018	F496  75 F8			     jnz     r6	     ; на выходе CL содержит счетчик    +
   5019				     сдвига для
   5020								     ; восстановления
   5021	F498  8A E3			     mov     ah,bl	     ; получить	маску в AH
   5022	F49A  D2 EC			     shr     ah,cl	     ; передать	маску в ячейку
   5023	F49C  5B			     pop     bx		     ; восстановить	регистр
   5024	F49D  C3			     ret		     ; возврат с восстановлением
   5025	F49E			     r3	     endp
   5026
   5027				     ;----------------------------------------
   5028				     ;
   5029				     ;
   5030				     ;	  Программа перемещает блок символов вверх +
   5031				     в	режиме графики
   5032				     ;
   5033				     ;-----------------------------------------
   5034
   5035	F49E			     graphics_up proc near
   5036	F49E  8A D8			     mov     bl,al	     ; сохранить количество	       +
   5037				     символов
   5038	F4A0  8B C1			     mov     ax,cx	     ; получить	верхний левый      +
   5039				     угол в AX
   5040
   5041
   5042	F4A2  E8 026A			     call    graph_posn
   5043	F4A5  8B F8			     mov     di,ax	     ; сохранить результат
   5044
   5045				     ;	 Определить размеры блока
   5046
   5047	F4A7  2B D1			     sub     dx,cx
   5048	F4A9  81 C2 0101		     add     dx,101h
   5049	F4AD  D0 E6			     sal     dh,1
   5050	F4AF  D0 E6			     sal     dh,1
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 102
1840v5.asm



   5051
   5052	F4B1  80 3E 0049r 06		     cmp     crt_mode,6
   5053	F4B6  73 04			     jnc     r7
   5054
   5055	F4B8  D0 E2			     sal     dl,1
   5056	F4BA  D1 E7			     sal     di,1	     ;
   5057
   5058				     ;	 Определение	адреса источника	в буфере
   5059	F4BC			     r7:
   5060	F4BC  06			     push    es
   5061	F4BD  1F			     pop     ds
   5062	F4BE  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   5063				     счетчика
   5064	F4C0  D0 E3			     sal     bl,1	     ; умножение числа строк	на 4
   5065	F4C2  D0 E3			     sal     bl,1
   5066	F4C4  74 2D			     jz	     r11	     ; если	0, занести пробелы
   5067	F4C6  8A C3			     mov     al,bl	     ; получить	число строк в AL
   5068	F4C8  B4 50			     mov     ah,80	     ; 80 байт/строк
   5069	F4CA  F6 E4			     mul     ah		     ; определить смещение	       +
   5070				     источника
   5071	F4CC  8B F7			     mov     si,di	     ; установить источник
   5072	F4CE  03 F0			     add     si,ax	     ; сложить источник с ним
   5073	F4D0  8A E6			     mov     ah,dh	     ; количество строк
   5074	F4D2  2A E3			     sub     ah,bl	     ; определить число		       +
   5075				     перемещений
   5076
   5077	F4D4			     r8:
   5078	F4D4  E8 0080			     call    r17	     ; перемещение одной строки
   5079	F4D7  81 EE 1FB0		     sub     si,2000h-80     ; перемещение в следующую    +
   5080				     строку
   5081	F4DB  81 EF 1FB0		     sub     di,2000h-80
   5082	F4DF  FE CC			     dec     ah		     ; количество строк для	       +
   5083				     перемещения
   5084	F4E1  75 F1			     jnz     r8	     ; продолжать, пока все строки не +
   5085				     переместятся
   5086
   5087				     ;	 Заполнение освобожденных строк
   5088	F4E3			     r9:
   5089	F4E3  8A C7			     mov     al,bh
   5090	F4E5			     r10:
   5091	F4E5  E8 0088			     call    r18	     ; очистить	эту строку
   5092	F4E8  81 EF 1FB0		     sub     di,2000h-80     ; указать на следующую
   5093	F4EC  FE CB			     dec     bl		     ; количество строк для	       +
   5094				     заполнения
   5095	F4EE  75 F5			     jnz     r10	     ; цикл	очистки
   5096	F4F0  E9 FCD4			     jmp     video_return    ; к выходу из программы
   5097
   5098	F4F3			     r11:
   5099	F4F3  8A DE			     mov     bl,dh	     ; установить количество       +
   5100				     пробелов
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 103
1840v5.asm



   5101	F4F5  EB EC			     jmp     short r9	     ; очистить
   5102	F4F7			     graphics_up     endp
   5103
   5104				     ;---------------------------------
   5105				     ;
   5106				     ;	 Программа перемещает блок символов вниз в +
   5107				     режиме графики
   5108				     ;
   5109				     ;----------------------------------
   5110
   5111	F4F7			     graphics_down proc	     near
   5112	F4F7  FD			     std		     ; установить направление
   5113	F4F8  8A D8			     mov     bl,al	     ; сохранить количество	       +
   5114				     строк
   5115	F4FA  8B C2			     mov     ax,dx	     ; получить	нижнюю правую      +
   5116				     позицию в AX
   5117
   5118
   5119	F4FC  E8 0210			     call    graph_posn
   5120	F4FF  8B F8			     mov     di,ax	     ; сохранить результат
   5121
   5122				     ;	 Определение	размера блока
   5123
   5124	F501  2B D1			     sub     dx,cx
   5125	F503  81 C2 0101		     add     dx,101h
   5126	F507  D0 E6			     sal     dh,1
   5127	F509  D0 E6			     sal     dh,1
   5128
   5129
   5130	F50B  80 3E 0049r 06		     cmp     crt_mode,6
   5131	F510  73 05			     jnc     r12
   5132
   5133	F512  D0 E2			     sal     dl,1
   5134	F514  D1 E7			     sal     di,1
   5135	F516  47			     inc     di
   5136
   5137				     ;	 Определение	адреса источника	в буфере
   5138	F517			     r12:
   5139	F517  06			     push    es
   5140	F518  1F			     pop     ds
   5141	F519  2A ED			     sub     ch,ch	     ; обнулить	старший байт	       +
   5142				     счетчика
   5143	F51B  81 C7 00F0		     add     di,240	     ; указать последнюю строку
   5144	F51F  D0 E3			     sal     bl,1	     ; умножить	количество строк+
   5145				     на 4
   5146	F521  D0 E3			     sal     bl,1
   5147	F523  74 2E			     jz	     r16	     ; если	0, заполнить пробелом
   5148	F525  8A C3			     mov     al,bl	     ; получить	количество строк+
   5149				     в	AL
   5150	F527  B4 50			     mov     ah,80	     ; 80 байт/строк
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 104
1840v5.asm



   5151	F529  F6 E4			     mul     ah		     ; определить смещение	       +
   5152				     источника
   5153	F52B  8B F7			     mov     si,di	     ; установить источник
   5154	F52D  2B F0			     sub     si,ax	     ; вычесть смещение
   5155	F52F  8A E6			     mov     ah,dh	     ; количество строк
   5156	F531  2A E3			     sub     ah,bl	     ; определить число для	       +
   5157				     перемещения
   5158
   5159	F533			     r13:
   5160	F533  E8 0021			     call    r17	     ; переместить одну строку
   5161	F536  81 EE 2050		     sub     si,2000h+80     ; установить следующую	       +
   5162				     строку
   5163	F53A  81 EF 2050		     sub     di,2000h+80
   5164	F53E  FE CC			     dec     ah		     ; количество строк для	       +
   5165				     перемещения
   5166	F540  75 F1			     jnz     r13	     ; продолжать, пока все не      +
   5167				     переместятся
   5168
   5169				     ;	 Заполнение освобожденных строк
   5170	F542			     r14:
   5171	F542  8A C7			     mov     al,bh	     ; атрибут заполнения
   5172	F544			     r15:
   5173	F544  E8 0029			     call    r18	     ; очистить	строку
   5174	F547  81 EF 2050		     sub     di,2000h+80     ; указать следующую строку
   5175	F54B  FE CB			     dec     bl		     ; число строк для заполнения
   5176	F54D  75 F5			     jnz     r15
   5177	F54F  FC			     cld		     ; сброс признака		       +
   5178				     направления
   5179	F550  E9 FC74			     jmp     video_return    ; к выходу из программы
   5180
   5181	F553			     r16:
   5182	F553  8A DE			     mov     bl,dh
   5183	F555  EB EB			     jmp     short r14	     ; очистить
   5184	F557			     graphics_down endp
   5185
   5186				     ;	 Программа перемещения одной строки
   5187
   5188	F557			     r17     proc    near
   5189	F557  8A CA			     mov     cl,dl	     ; число байт в строке
   5190	F559  56			     push    si
   5191	F55A  57			     push    di		     ; хранить указатели
   5192	F55B  F3> A4			     rep     movsb	     ; переместить четное поле
   5193	F55D  5F			     pop     di
   5194	F55E  5E			     pop     si
   5195	F55F  81 C6 2000		     add     si,2000h
   5196	F563  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5197	F567  56			     push    si
   5198	F568  57			     push    di		     ; сохранить указатели
   5199	F569  8A CA			     mov     cl,dl	     ; возврат счвтчика
   5200	F56B  F3> A4			     rep     movsb	     ; передать	нечетное поле
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 105
1840v5.asm



   5201	F56D  5F			     pop     di
   5202	F56E  5E			     pop     si		     ; возврат указателей
   5203	F56F  C3			     ret		     ; возврат к программе
   5204	F570			     r17     endp
   5205
   5206				     ;	 Заполнение пробелами строки
   5207
   5208	F570			     r18     proc    near
   5209	F570  8A CA			     mov     cl,dl	     ; число байт в поле
   5210	F572  57			     push    di		     ; хранить указатель
   5211	F573  F3> AA			     rep     stosb	     ; запомнить новое значение
   5212	F575  5F			     pop     di		     ; вернуть указатель
   5213	F576  81 C7 2000		     add     di,2000h	     ; указать нечетное поле
   5214	F57A  57			     push    di
   5215	F57B  8A CA			     mov     cl,dl
   5216	F57D  F3> AA			     rep     stosb	     ; заполнить нечетное поле
   5217	F57F  5F			     pop     di
   5218	F580  C3			     ret		     ; возврат к программе
   5219	F581			     r18     endp
   5220
   5221				     ;--------------------------------------
   5222				     ;
   5223				     ;	graphics_write
   5224				     ;
   5225				     ;	 Эта	программа записывает	символ в	режиме   +
   5226				     графики
   5227				     ;
   5228				     ;	 ВХОД
   5229				     ;		AL - код символа,
   5230				     ;		BL - атрибут цвета,	который используется+
   5231				     в	качестве цвета
   5232				     ;		     переднего	плана (цвет символа). Если +
   5233				     бит 7 BL=1, то
   5234				     ;		     выполняется операция XOR над	байтом в+
   5235				     буфере и байтом
   5236				     ;		     в	генераторе символов,
   5237				     ;		CX - счетчик повторений символа
   5238				     ;
   5239				     ;----------------------------------------
   5240
   5241					     assume cs:code,ds:data,es:data
   5242	F581			     graphics_write proc near
   5243	F581  B4 00			     mov     ah,0	     ; AH=0
   5244	F583  50			     push    ax		     ; сохранить значение кода    +
   5245				     символа
   5246
   5247				     ;	 Определение	позиции в области буфера	       +
   5248				     засылкой туда кода	точек
   5249
   5250	F584  E8 0185			     call    s26	     ; найти ячейку в области       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 106
1840v5.asm



   5251				     буфера
   5252	F587  8B F8			     mov     di,ax	     ; указатель области в DI
   5253
   5254				     ;	 Определение	области для получения кода      +
   5255				     точки
   5256
   5257	F589  58			     pop     ax		     ; восстановить	код точки
   5258	F58A  3C 80			     cmp     al,80h	     ; во второй половине ?
   5259	F58C  73 06			     jae     s1		     ; да
   5260
   5261				     ;	 Изображение	есть в первой половине памяти
   5262
   5263	F58E  BE FA6Er			     mov     si, offset	crt_char_gen  ;	смещение изображения
   5264	F591  0E			     push    cs		     ; хранить сегмент в	стеке
   5265	F592  EB 0F			     jmp     short s2	     ; определить режим
   5266
   5267				     ;	 Изображение	есть во второй части памяти
   5268
   5269	F594			     s1:
   5270	F594  2C 80			     sub     al,80h	     ; 0 во вторую половину
   5271	F596  1E			     push    ds		     ; хранить указатель данных
   5272	F597  2B F6			     sub     si,si
   5273	F599  8E DE			     mov     ds,si	     ; установить адресацию
   5274					     assume  ds:abs0
   5275	F59B  C5 36 007Cr		     lds     si,ext_ptr	     ; получить	смещение
   5276	F59F  8C DA			     mov     dx,ds	     ; получить	сегмент
   5277					     assume  ds:data
   5278	F5A1  1F			     pop     ds		     ; восстановить	сегмент	       +
   5279				     данных
   5280	F5A2  52			     push    dx		     ; хранить сегмент в	стеке
   5281
   5282				     ;	 Опеделение графического режима операции
   5283
   5284	F5A3			     s2:			     ; определение режима
   5285	F5A3  D1 E0			     sal     ax,1	     ; умножить	указатель кода    +
   5286				     на 8
   5287	F5A5  D1 E0			     sal     ax,1
   5288	F5A7  D1 E0			     sal     ax,1
   5289	F5A9  03 F0			     add     si,ax	     ; SI содержит смещение
   5290	F5AB  80 3E 0049r 06		     cmp     crt_mode,6
   5291	F5B0  1F			     pop     ds		     ; восстановить	указатель     +
   5292				     таблицы
   5293	F5B1  72 2C			     jc	     s7	     ; проверка	для средней		       +
   5294				     разрешающей способности
   5295
   5296				     ;	 Высокая	разрешающая способность
   5297	F5B3			     s3:
   5298	F5B3  57			     push    di		     ; сохранить указатель	       +
   5299				     области
   5300	F5B4  56			     push    si		     ; сохранить указатель кода
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 107
1840v5.asm



   5301	F5B5  B6 04			     mov     dh,4	     ; количество циклов
   5302	F5B7			     s4:
   5303	F5B7  AC			     lodsb		     ; выборка четного байта
   5304	F5B8  F6 C3 80			     test    bl,80h
   5305	F5BB  75 16			     jnz     s6
   5306	F5BD  AA			     stosb
   5307	F5BE  AC			     lodsb
   5308	F5BF			     s5:
   5309	F5BF  26: 88 85	1FFF		     mov es:[di+1fffh],al    ; запомнить во второй части
   5310	F5C4  83 C7 4F			     add     di,79	     ; передать	следующую строку
   5311	F5C7  FE CE			     dec     dh		     ; выполнить цикл
   5312	F5C9  75 EC			     jnz     s4
   5313	F5CB  5E			     pop     si
   5314	F5CC  5F			     pop     di		     ; восстановить	указатель     +
   5315				     области
   5316	F5CD  47			     inc     di	     ; указать на следующую позицию   +
   5317				     символа
   5318	F5CE  E2 E3			     loop    s3		     ; записать	последующие	       +
   5319				     символы
   5320	F5D0  E9 FBF4			     jmp     video_return
   5321
   5322	F5D3			     s6:
   5323	F5D3  26: 32 05			     xor al,es:[di]
   5324	F5D6  AA			     stosb		     ; запомнить код
   5325	F5D7  AC			     lodsb		     ; выборка нечетного символа
   5326	F5D8  26: 32 85	1FFF		     xor  al,es:[di+1fffh]
   5327	F5DD  EB E0			     jmp     s5		     ; повторить
   5328
   5329				     ;	 Средняя	разрешающая способность записи
   5330	F5DF			     s7:
   5331	F5DF  8A D3			     mov     dl,bl	     ; сохранить старший бит	       +
   5332				     цвета
   5333	F5E1  D1 E7			     sal     di,1    ; умножить	на 2,	т.к. два		       +
   5334				     байта/символа
   5335	F5E3  E8 00D1			     call    s19	     ; расширение BL до полного     +
   5336				     слова	цвета
   5337	F5E6			     s8:
   5338	F5E6  57			     push    di
   5339	F5E7  56			     push    si
   5340	F5E8  B6 04			     mov     dh,4	     ; число циклов
   5341	F5EA			     s9:
   5342	F5EA  AC			     lodsb		     ; получить	код точки
   5343	F5EB  E8 00DE			     call    s21	     ; продублировать
   5344	F5EE  23 C3			     and     ax,bx	     ; окрашивание в заданный      +
   5345				     цвет
   5346	F5F0  F6 C2 80			     test    dl,80h
   5347	F5F3  74 07			     jz	     s10
   5348	F5F5  26: 32 25			     xor     ah,es:[di]	     ; выполнить функцию XOR со      +
   5349				     "старым"
   5350	F5F8  26: 32 45	01		     xor     al,es:[di+1]    ; и "новым" цветами
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 108
1840v5.asm



   5351	F5FC  26: 88 25		     s10:    mov  es:[di],ah	     ; запомнить первый байт
   5352	F5FF  26: 88 45	01		     mov es:[di+1],al	     ; запомнить второй байт
   5353	F603  AC			     lodsb		     ; получить	код точки
   5354	F604  E8 00C5			     call    s21
   5355	F607  23 C3			     and     ax,bx	     ; окрашивание нечетного       +
   5356				     байта
   5357	F609  F6 C2 80			     test    dl,80h
   5358	F60C  74 0A			     jz	 s11
   5359	F60E  26: 32 A5	2000		     xor     ah,es:[di+2000h]	; из первой половины
   5360	F613  26: 32 85	2001		     xor     al,es:[di+2001h]	; и из второй половины
   5361	F618  26: 88 A5	2000	     s11:    mov     es:[di+2000h],ah
   5362	F61D  26: 88 85	2001		     mov     es:[di+2001h],al	; запомнить вторую часть   +
   5363				     буфера
   5364	F622  83 C7 50			     add     di,80	     ; указать следующую ячейку
   5365	F625  FE CE			     dec     dh
   5366	F627  75 C1			     jnz     s9		     ; повторить
   5367	F629  5E			     pop     si
   5368	F62A  5F			     pop     di
   5369	F62B  83 C7 02			     add     di,2	     ; переход к следующему	       +
   5370				     символу
   5371	F62E  E2 B6			     loop    s8		     ; режим записи
   5372	F630  E9 FB94			     jmp     video_return
   5373	F633			     graphics_write  endp
   5374				     ;-------------------------------------
   5375				     ;graphics_read
   5376				     ;
   5377				     ;	 Программа считывает символ в режиме	       +
   5378				     графики
   5379				     ;
   5380				     ;-------------------------------------
   5381	F633			     graphics_read   proc    near
   5382	F633  E8 00D6			     call    s26
   5383	F636  8B F0			     mov     si,ax	     ; сохранить в SI
   5384	F638  83 EC 08			     sub     sp,8	     ; зарезервировать в стеке 8  +
   5385				     байт для
   5386								     ; записи символа из	буфера   +
   5387				     дисплея
   5388	F63B  8B EC			     mov     bp,sp	     ; указатель для хранения      +
   5389				     области
   5390
   5391				     ;	 Определение	режима графики
   5392
   5393	F63D  80 3E 0049r 06		     cmp     crt_mode,6
   5394	F642  06			     push    es
   5395	F643  1F			     pop     ds		     ; указать сегмент
   5396	F644  72 1A			     jc	     s13	     ; средняя разрешающая	       +
   5397				     способность
   5398
   5399				     ;	Высокая разрешающая способность для	       +
   5400				     считавания
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 109
1840v5.asm



   5401
   5402	F646  B6 04			     mov     dh,4
   5403	F648			     s12:
   5404	F648  8A 04			     mov     al,byte ptr [si]	; получить первый	байт
   5405	F64A  88 46 00			     mov byte ptr [bp],al	; запомнить в	памяти
   5406	F64D  45			     inc     bp
   5407	F64E  8A 84 2000		     mov al,byte ptr [si+2000h]	  ; получить младший байт
   5408	F652  88 46 00			     mov byte ptr [bp],al
   5409	F655  45			     inc     bp
   5410	F656  83 C6 50			     add     si,80	     ; переход на следующую	       +
   5411				     четную строку
   5412	F659  FE CE			     dec     dh
   5413	F65B  75 EB			     jnz     s12	     ; повторить
   5414	F65D  EB 17			     jmp     short s15	     ; переход к хранению кодов   +
   5415				     точек
   5416	F65F  90			     nop
   5417
   5418				     ;	 Средняя	разрешающая способность для	       +
   5419				     считывания
   5420	F660			     s13:
   5421	F660  D1 E6			     sal     si,1      ; смещение умножить на	2, т.к. 2    +
   5422				     байта/символа
   5423	F662  B6 04			     mov     dh,4
   5424	F664			     s14:
   5425	F664  E8 0088			     call    s23
   5426	F667  81 C6 2000		     add     si,2000h
   5427	F66B  E8 0081			     call    s23
   5428	F66E  81 EE 1FB0		     sub     si,2000h-80
   5429	F672  FE CE			     dec     dh
   5430	F674  75 EE			     jnz     s14	     ; повторить
   5431
   5432				     ;	 Сохранить
   5433	F676			     s15:
   5434	F676  BF FA6Er			     mov     di,offset crt_char_gen   ;	смещение
   5435	F679  0E			     push    cs
   5436	F67A  07			     pop     es
   5437	F67B  83 ED 08			     sub     bp,8	     ; восстановить	начальный     +
   5438				     адрес
   5439	F67E  8B F5			     mov     si,bp
   5440	F680  FC			     cld		     ; установить направление
   5441	F681  B0 00			     mov     al,0
   5442	F683			     s16:
   5443	F683  16			     push    ss
   5444	F684  1F			     pop     ds
   5445	F685  BA 0080			     mov     dx,128	     ; количество символов
   5446	F688			     s17:
   5447	F688  56			     push    si
   5448	F689  57			     push    di
   5449	F68A  B9 0008			     mov     cx,8	     ; количество байт в	символе
   5450	F68D  F3> A6			     repe    cmpsb	     ; сравнить
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 110
1840v5.asm



   5451	F68F  5F			     pop     di
   5452	F690  5E			     pop     si
   5453	F691  74 1E			     jz	     s18	     ; если	признак = 0,символы      +
   5454				     сравнились
   5455	F693  FE C0			     inc     al		     ; не сравнились
   5456	F695  83 C7 08			     add     di,8	     ; следующий код точки
   5457	F698  4A			     dec     dx		     ; - 1 из	счетчика
   5458	F699  75 ED			     jnz     s17	     ; повторить
   5459
   5460
   5461	F69B  3C 00			     cmp     al,0
   5462	F69D  74 12			     je	     s18    ; переход, если все сканировано,  +
   5463				     но символ
   5464							    ; не найден
   5465	F69F  2B C0			     sub     ax,ax
   5466	F6A1  8E D8			     mov     ds,ax	     ; установить адресацию	       +
   5467				     вектора
   5468					     assume  ds:abs0
   5469	F6A3  C4 3E 007Cr		     les     di,ext_ptr
   5470	F6A7  8C C0			     mov     ax,es
   5471	F6A9  0B C7			     or	     ax,di
   5472	F6AB  74 04			     jz	     s18
   5473	F6AD  B0 80			     mov     al,128	     ; начало второй части
   5474	F6AF  EB D2			     jmp     short s16	     ; вернуться и повторить
   5475					     assume  ds:data
   5476
   5477	F6B1			     s18:
   5478	F6B1  83 C4 08			     add     sp,8
   5479	F6B4  E9 FB10			     jmp     video_return
   5480	F6B7			     graphics_read   endp
   5481
   5482				     ;---------------------------------
   5483				     ;
   5484				     ;	 Эта	программа заполняет регистр BX	двумя     +
   5485				     младшими битами
   5486				     ; регистра	BL.
   5487				     ;
   5488				     ;	 ВХОД
   5489				     ;		BL - используемый цвет (младшие два бита).
   5490				     ;
   5491				     ;	 ВЫХОД
   5492				     ;		BX - используемый цвет (восемь		       +
   5493				     повторений двух битов цвета).
   5494				     ;
   5495				     ;---------------------------------
   5496	F6B7			     s19     proc    near
   5497	F6B7  80 E3 03			     and     bl,3	     ; выделить	биты цвета
   5498	F6BA  8A C3			     mov     al,bl	     ; переписать в AL
   5499	F6BC  51			     push    cx		     ; сохранить регистр
   5500	F6BD  B9 0003			     mov     cx,3	     ; количество повторений
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 111
1840v5.asm



   5501	F6C0			     s20:
   5502	F6C0  D0 E0			     sal     al,1
   5503	F6C2  D0 E0			     sal     al,1	     ; сдвиг влево на 2
   5504	F6C4  0A D8			     or	     bl,al	     ; в BL накапливается		       +
   5505				     результат
   5506	F6C6  E2 F8			     loop    s20	     ; цикл
   5507	F6C8  8A FB			     mov     bh,bl	     ; заполнить
   5508	F6CA  59			     pop     cx
   5509	F6CB  C3			     ret		     ; все выполнено
   5510	F6CC			     s19     endp
   5511				     ;--------------------------------------
   5512				     ;
   5513				     ;	 Эта	программа берет байт в AL и	удваивает     +
   5514				     все биты, превращая
   5515				     ; 8 бит	в 16 бит. Результат помещается в AX.
   5516				     ;--------------------------------------
   5517	F6CC			     s21     proc    near
   5518	F6CC  52			     push    dx		     ; сохранить регистры
   5519	F6CD  51			     push    cx
   5520	F6CE  53			     push    bx
   5521	F6CF  BA 0000			     mov     dx,0	     ; результат удвоения
   5522	F6D2  B9 0001			     mov     cx,1	     ; маска
   5523	F6D5			     s22:
   5524	F6D5  8B D8			     mov     bx,ax
   5525	F6D7  23 D9			     and     bx,cx	     ; выделение бита
   5526	F6D9  0B D3			     or	     dx,bx	     ; накапливание	результата
   5527	F6DB  D1 E0			     shl     ax,1
   5528	F6DD  D1 E1			     shl     cx,1	     ; сдвинуть	базу и маску на 1
   5529	F6DF  8B D8			     mov     bx,ax
   5530	F6E1  23 D9			     and     bx,cx
   5531	F6E3  0B D3			     or	     dx,bx
   5532	F6E5  D1 E1			     shl     cx,1    ; сдиг	маски, для выделения	       +
   5533				     следующего бита
   5534	F6E7  73 EC			     jnc     s22
   5535	F6E9  8B C2			     mov     ax,dx
   5536	F6EB  5B			     pop     bx		     ; восстановить	регистры
   5537	F6EC  59			     pop     cx
   5538	F6ED  5A			     pop     dx
   5539	F6EE  C3			     ret		     ; к выходу из прерывания
   5540	F6EF			     s21     endp
   5541
   5542				     ;----------------------------------
   5543				     ;
   5544				     ;	 Эта	программа преобразовывает		       +
   5545				     двух-битовое представление	точки
   5546				     ; (C1,C0) в однобитовое
   5547				     ; (C1,C0) к однобитовому.
   5548				     ;
   5549				     ;----------------------------------
   5550	F6EF			     s23     proc    near
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 112
1840v5.asm



   5551	F6EF  8A 24			     mov     ah,byte ptr [si]	; получить первый	байт
   5552	F6F1  8A 44 01			     mov     al,byte ptr [si+1]	  ; получить второй байт
   5553	F6F4  B9 C000			     mov     cx,0c000h	     ; 2 бита маски
   5554	F6F7  B2 00			     mov     dl,0	     ; регистр результата
   5555	F6F9			     s24:
   5556	F6F9  85 C1			     test    ax,cx	     ; проверка	2 младших бит	AX на+
   5557				     0
   5558	F6FB  F8			     clc		     ; сбросить	признак переноса+
   5559				     CF
   5560	F6FC  74 01			     jz	     s25	     ; переход если 0
   5561	F6FE  F9			     stc		     ; нет -	установить CF
   5562	F6FF  D0 D2		     s25:    rcl     dl,1	     ; циклический сдвиг
   5563	F701  D1 E9			     shr     cx,1
   5564	F703  D1 E9			     shr     cx,1
   5565	F705  73 F2			     jnc     s24	     ; повторить, если CF=1
   5566	F707  88 56 00			     mov byte ptr [bp],dl    ; запомнить результат
   5567	F70A  45			     inc     bp
   5568	F70B  C3			     ret		     ; к выходу из прерывания
   5569	F70C			     s23     endp
   5570
   5571				     ;---------------------------------------
   5572				     ;
   5573				     ;	 Эта	программа определает	положение	       +
   5574				     курсора относительно	мяти и
   5575				     ; начала буфера в режиме графики			       +
   5576				     /символ
   5577				     ;
   5578				     ;	 ВЫХОД
   5579				     ;		AX  содержит смещение курсора
   5580				     ;
   5581				     ;-----------------------------------------
   5582	F70C			     s26     proc    near
   5583	F70C  A1 0050r			     mov     ax,cursor_posn  ; получить	текущее		       +
   5584				     положение	курсора
   5585	F70F			     graph_posn	     label   near
   5586	F70F  53			     push    bx		     ; сохранить регистр
   5587	F710  8B D8			     mov     bx,ax	     ; сохранить текущее	       +
   5588				     положение	курсора
   5589	F712  8A C4			     mov     al,ah	     ; строка
   5590	F714  F6 26 004Ar		     mul     byte ptr crt_cols	 ; умножить на байт/колонку
   5591	F718  D1 E0			     shl     ax,1	     ; умножить	на 4
   5592	F71A  D1 E0			     shl     ax,1
   5593	F71C  2A FF			     sub     bh,bh	     ; выделить	значение колонки
   5594	F71E  03 C3			     add     ax,bx	     ; определить смещение
   5595	F720  5B			     pop     bx
   5596	F721  C3			     ret		     ; к выходу из прерывания
   5597	F722			     s26     endp
   5598
   5599				     ;----------------------------------------
   5600				     ;
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 113
1840v5.asm



   5601				     ;	 Записать телетайп (INT	10H, AH=14)
   5602				     ;
   5603				     ;	 Эта	программа выводит символ в буфер ЭЛИ с +
   5604				     одновременной	уста-
   5605				     ; новкой позиции курсора и передвижением	       +
   5606				     курсора на экране.
   5607				     ;	 После записи символа	в последнюю позицию   +
   5608				     строки выполняется ав-
   5609				     ; томатический	переход на новую строку. Если  +
   5610				     страница экрана за-
   5611				     ; полнена (позиция курсора 24,79/39),	выполняется +
   5612				     перемещение экрана
   5613				     ; на одну строку вверх. Освободившаяся строка+
   5614				     заполняется значением
   5615				     ; атрибута	символа (для алфавитно-цифрового   +
   5616				     режима). Для графики цвет=00
   5617				     ; После записи очередного символа курсор	       +
   5618				     установлен в следующую	позицию.
   5619				     ;
   5620				     ;	 ВХОД
   5621				     ;		AL - код выводимого символа,
   5622				     ;		BL - цвет переднего плана для графики.
   5623				     ;
   5624				     ;----------------------------------------
   5625
   5626					     assume  cs:code,ds:data
   5627	F722			     write_tty	     proc    near
   5628	F722  50			     push    ax		     ; сохранить регистры
   5629	F723  50			     push    ax
   5630	F724  B4 03			     mov     ah,3
   5631	F726  CD 10			     int     10h	     ; считать положение	       +
   5632				     текущего курсора
   5633	F728  58			     pop     ax		     ; восстановить	символ
   5634
   5635				     ;	 DX содержит текущую позицию курсора
   5636
   5637	F729  3C 08			     cmp     al,8	     ; есть	возврат на одну	       +
   5638				     позицию ?
   5639	F72B  74 59			     je	     u8		     ; возврат на одну позицию
   5640	F72D  3C 0D			     cmp     al,0dh	     ; есть	возврат каретки ?
   5641	F72F  74 5E			     je	     u9		     ; возврат каретки
   5642	F731  3C 0A			     cmp     al,0ah	     ; есть	граница поля	?
   5643	F733  74 5E			     je	     u10	     ; граница поля
   5644	F735  3C 07			     cmp     al,07h	     ; звуковой	сигнал ?
   5645	F737  74 61			     je	     u11	     ; звуковой	сигнал
   5646
   5647				     ;	 Запись символа на экран
   5648
   5649	F739  8A 3E 0062r		     mov     bh,active_page
   5650	F73D  B4 0A			     mov     ah,10	     ; запись символа без	       +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 114
1840v5.asm



   5651				     атрибута
   5652	F73F  B9 0001			     mov     cx,1
   5653	F742  CD 10			     int     10h
   5654
   5655				     ;	 Положение курсора для следующего символа
   5656
   5657	F744  FE C2			     inc     dl
   5658	F746  3A 16 004Ar		     cmp     dl,byte ptr crt_cols
   5659	F74A  75 36			     jnz     u7		     ; переход к установке	       +
   5660				     курсора
   5661	F74C  B2 00			     mov     dl,0
   5662	F74E  80 FE 18			     cmp     dh,24	     ; проверка	граничной строки
   5663	F751  75 2D			     jnz     u6		     ; установить курсор
   5664
   5665				     ;	 Сдвиг экрана
   5666	F753			     u1:
   5667
   5668	F753  B4 02			     mov     ah,2
   5669	F755  B7 00			     mov     bh,0
   5670	F757  CD 10			     int     10h	     ; установить курсор
   5671
   5672
   5673	F759  A0 0049r			     mov     al,crt_mode     ; получить	текущий режим
   5674	F75C  3C 04			     cmp     al,4
   5675	F75E  72 06			     jc	     u2		     ; считывание курсора
   5676	F760  3C 07			     cmp     al,7
   5677	F762  B7 00			     mov     bh,0	     ; цвет	заднего плана
   5678	F764  75 06			     jne     u3
   5679
   5680	F766			     u2:			     ; считывание курсора
   5681	F766  B4 08			     mov     ah,8
   5682	F768  CD 10			     int     10h	; считать символ/атрибут	       +
   5683				     текущего курсора
   5684	F76A  8A FC			     mov     bh,ah	     ; запомнить в BH
   5685
   5686				     ;	 Перемещение	экрана на одну строку	вверх
   5687
   5688	F76C			     u3:
   5689	F76C  B8 0601			     mov     ax,601h
   5690	F76F  B9 0000			     mov     cx,0	     ; верхний левый угол
   5691	F772  B6 18			     mov     dh,24	     ; координаты нижнего	       +
   5692				     правого
   5693	F774  8A 16 004Ar		     mov     dl,byte ptr crt_cols    ; угла
   5694	F778  FE CA			     dec     dl
   5695	F77A			     u4:
   5696	F77A  CD 10			     int     10h
   5697
   5698				     ;	 Выход из прерывания
   5699
   5700	F77C			     u5:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 115
1840v5.asm



   5701	F77C  58			     pop     ax		     ; восстановить	символ
   5702	F77D  E9 FA47			     jmp     video_return    ; возврат к программе
   5703
   5704	F780			     u6:			     ; установить курсор
   5705	F780  FE C6			     inc     dh		     ; следующая строка
   5706	F782			     u7:			     ; установить курсор
   5707	F782  B4 02			     mov     ah,2
   5708	F784  EB F4			     jmp     short u4	     ; установить новый курсор
   5709
   5710				     ;	 Сдвиг курсора на	одну позицию	влево
   5711
   5712	F786			     u8:
   5713	F786  80 FA 00			     cmp     dl,0
   5714	F789  74 F7			     je	     u7		     ; установить курсор
   5715	F78B  FE CA			     dec     dl		     ; нет -	снова его передать
   5716	F78D  EB F3			     jmp     short u7
   5717
   5718				     ;	 Перемещение	курсора в начало строки
   5719
   5720	F78F			     u9:
   5721	F78F  B2 00			     mov     dl,0
   5722	F791  EB EF			     jmp     short u7	     ; установить курсор
   5723
   5724				     ;	 Перемещение	курсора на следующую строку
   5725
   5726	F793			     u10:
   5727	F793  80 FE 18			     cmp     dh,24	     ; последняя строка экрана
   5728	F796  75 E8			     jne     u6		     ; да - сдвиг экрана
   5729	F798  EB B9			     jmp     short u1	     ; нет -	снова установить	       +
   5730				     курсор
   5731
   5732				     ;	 Звуковой сигнал
   5733
   5734	F79A			     u11:
   5735	F79A  B3 02			     mov     bl,2	     ; уст длительность		       +
   5736				     звукового	сигнала
   5737	F79C  E8 EE0A			     call    beep	     ; звук
   5738	F79F  EB DB			     jmp     short u5	     ; возврат
   5739	F7A1			     write_tty	     endp
   5740
   5741				     ;
   5742				     ;----------------------------------------
   5743				     ;
   5744				     ;	 Эта	программа считывает положение	       +
   5745				     светового	пера.
   5746				     ; Проверяется переключатель и триггер	       +
   5747				     светового	пера. Если бит 1 ре-
   5748				     ; гистра состояния (порт 3DA)=1, то триггер	       +
   5749				     установлен. Если бит 2 порта
   5750				     ; 3DA=0, то установлен	переключатель.
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 116
1840v5.asm



   5751				     ;	 Порты 3BD	и 3DC используются	для установки и   +
   5752				     сброса триггера и пере-
   5753				     ; ключателя светового пера.
   5754				     ;	 В регистрах R16 и R17 контроллера содержится  +
   5755				     адрес	координат пера
   5756				     ; относительно	начала буфера дисплея.
   5757				     ;	 Если триггер и переключатель установлены, +
   5758				     то программа определяет
   5759				     ; положение светового пера, в противном	       +
   5760				     случае, возврат без выдачи
   5761				     ; информации.
   5762				     ;
   5763				     ;	 В ППЭВМ ЕС1841	функция не поддерживается
   5764				     ;-------------------------------------------------
   5765
   5766
   5767
   5768
   5769					     assume  cs:code,ds:data
   5770
   5771				     ;	 Таблица	поправок для	получения		       +
   5772				     фактических координат светового пера
   5773
   5774	F7A1			     v1	     label   byte
   5775	F7A1  03 03 05 05 03 03	03+	     db	     3,3,5,5,3,3,3,4
   5776	      04
   5777
   5778	F7A9			     read_lpen	     proc    near
   5779
   5780
   5781	F7A9  B4 00			     mov     ah,0	     ; код возврата,	если перо не +
   5782				     включено
   5783	F7AB  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес 6845
   5784	F7AF  83 C2 06			     add     dx,6	     ; указать регистр состояния
   5785	F7B2  EC			     in	     al,dx	     ; получить	регистр		       +
   5786				     состояния
   5787	F7B3  A8 04			     test    al,4	     ; проверить переключатель   +
   5788				     светового	пера
   5789	F7B5  75 78			     jnz     v6		     ; не установлено, возврат
   5790
   5791				     ;	 Проверка триггера светового пера
   5792
   5793	F7B7  A8 02			     test    al,2	     ; проверить триггер	       +
   5794				     светового	пера
   5795	F7B9  74 7E			     jz	     v7		     ; возврат без сброса	       +
   5796				     триггера
   5797
   5798				     ;	 Триггер	был установлен, считать значение в+
   5799				     AH
   5800
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 117
1840v5.asm



   5801	F7BB  B4 10			     mov     ah,16	     ; уст регистры светового      +
   5802				     пера 6845
   5803
   5804				     ;	 Ввод регистров, указанных AH и			       +
   5805				     преобразование в строки колонки в DX
   5806
   5807	F7BD  8B 16 0063r		     mov     dx,addr_6845
   5808	F7C1  8A C4			     mov     al,ah
   5809	F7C3  EE			     out     dx,al	     ; вывести в порт
   5810	F7C4  42			     inc     dx
   5811	F7C5  EC			     in	     al,dx	     ; получить	значение из порта
   5812	F7C6  8A E8			     mov     ch,al	     ; сохранить его в CX
   5813	F7C8  4A			     dec     dx		     ; регистр адреса
   5814	F7C9  FE C4			     inc     ah
   5815	F7CB  8A C4			     mov     al,ah	     ; второй регистр данных
   5816	F7CD  EE			     out     dx,al
   5817	F7CE  42			     inc     dx
   5818	F7CF  EC			     in	     al,dx	     ; получить	второе значение  +
   5819				     данных
   5820	F7D0  8A E5			     mov     ah,ch	     ; AX содержит координаты	       +
   5821				     светового	пера
   5822
   5823
   5824	F7D2  8A 1E 0049r		     mov     bl,crt_mode
   5825	F7D6  2A FF			     sub     bh,bh	     ; выделить	значение режима  +
   5826				     в	BX
   5827	F7D8  2E: 8A 9F	F7A1r		     mov     bl,cs:v1[bx]    ; значение	поправки
   5828	F7DD  2B C3			     sub     ax,bx
   5829	F7DF  2B 06 004Er		     sub     ax,crt_start
   5830
   5831	F7E3  79 03			     jns     v2
   5832	F7E5  B8 0000			     mov     ax,0	     ; поместить 0
   5833
   5834				     ;	 Определить режим
   5835
   5836	F7E8			     v2:
   5837	F7E8  B1 03			     mov     cl,3	     ; установить счетчик
   5838	F7EA  80 3E 0049r 04		     cmp     crt_mode,4	     ; определить, режим	графики +
   5839				     или
   5840								     ; альфа
   5841	F7EF  72 2A			     jb	     v4		     ; альфа-перо
   5842	F7F1  80 3E 0049r 07		     cmp     crt_mode,7
   5843	F7F6  74 23			     je	     v4		     ; альфа-перо
   5844
   5845				     ;	 Графический	режим
   5846
   5847	F7F8  B2 28			     mov     dl,40	     ; делитель	для графики
   5848	F7FA  F6 F2			     div     dl	     ; определение строки (AL)	и	       +
   5849				     колонки (AH)
   5850								     ; пределы AL 0-99, AH 0-39
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 118
1840v5.asm



   5851
   5852				     ;	 Определение	положения строки	для графики
   5853
   5854	F7FC  8A E8			     mov     ch,al	     ; сохранить значение строки+
   5855				     в	CH
   5856	F7FE  02 ED			     add     ch,ch	     ; умножить	на 2			       +
   5857				     четно/нечетное поле
   5858	F800  8A DC			     mov     bl,ah	     ; значение	колонки в BX
   5859	F802  2A FF			     sub     bh,bh	     ; умножить	на 8 для среднего +
   5860				     результата
   5861	F804  80 3E 0049r 06		     cmp     crt_mode,6	     ; определить среднюю или      +
   5862				     наивысшую
   5863								     ; разрешающую способность
   5864	F809  75 04			     jne     v3		     ; не наивысшая разрешающая  +
   5865				     способность
   5866	F80B  B1 04			     mov     cl,4     ;	сдвинуть значение наивысшей   +
   5867				     разрешающей
   5868							      ;	способности
   5869	F80D  D0 E4			     sal     ah,1    ; сдвиг на 1 разряд влево	       +
   5870				     значения колонки
   5871	F80F			     v3:			     ; не наивысшая разрешающая  +
   5872				     способность
   5873	F80F  D3 E3			     shl     bx,cl   ; умножить	на 16	для наивысшей      +
   5874				     разрешающей
   5875							     ; способности
   5876
   5877				     ;	 Определение	положения символа для альфа
   5878
   5879	F811  8A D4			     mov     dl,ah	     ; значение	колонки для	       +
   5880				     возврата
   5881	F813  8A F0			     mov     dh,al	     ; значение	строки
   5882	F815  D0 EE			     shr     dh,1	     ; делить на 4
   5883	F817  D0 EE			     shr     dh,1	     ; для значения в пределах 0-24
   5884	F819  EB 12			     jmp     short v5	     ; возврат светового пера
   5885
   5886				     ;	 Режим альфа светового пера
   5887
   5888	F81B			     v4:			     ; альфа светового пера
   5889	F81B  F6 36 004Ar		     div     byte ptr crt_cols	; строка,	колонка
   5890	F81F  8A F0			     mov     dh,al	     ; строка в DH
   5891	F821  8A D4			     mov     dl,ah	     ; колонка в DL
   5892	F823  D2 E0			     sal     al,cl	     ; умножение строк на 8
   5893	F825  8A E8			     mov     ch,al
   5894	F827  8A DC			     mov     bl,ah
   5895	F829  32 FF			     xor     bh,bh
   5896	F82B  D3 E3			     sal     bx,cl
   5897	F82D			     v5:
   5898	F82D  B4 01			     mov     ah,1	     ; указать, что все		       +
   5899				     установлено
   5900	F82F			     v6:
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 119
1840v5.asm



   5901	F82F  52			     push    dx		     ; сохранить значение	       +
   5902				     возврата
   5903	F830  8B 16 0063r		     mov     dx,addr_6845    ; получить	базовый адрес
   5904	F834  83 C2 07			     add     dx,7
   5905	F837  EE			     out     dx,al	     ; вывод
   5906	F838  5A			     pop     dx		     ; восстановить	значение
   5907	F839			     v7:
   5908	F839  5F			     pop     di		      ;	восстановить регистры
   5909	F83A  5E			     pop     si
   5910	F83B  1F			     pop     ds
   5911	F83C  1F			     pop     ds
   5912	F83D  1F			     pop     ds
   5913	F83E  1F			     pop     ds
   5914	F83F  07			     pop     es
   5915	F840  CF			     iret
   5916	F841			     read_lpen	     endp
   5917
   5918				     ;--- int 12 ------------------------------------
   5919				     ;
   5920				     ;	  Программа определения размера памяти.
   5921				     ;
   5922				     ;	  Эта программа передает в	регистр AX об'ем    +
   5923				     памяти в Кбайтах.
   5924				     ;
   5925				     ;-----------------------------------------
   5926
   5927					     assume  cs:code,ds:data
   5928	F841			     memory_size_determine   proc    far
   5929	F841  FB			     sti		     ; установить бит разрешения+
   5930				     прерывания
   5931	F842  1E			     push    ds		     ; сохранить сегмент
   5932	F843  B8 0040			     mov     ax,dat	     ; установить адресацию
   5933	F846  8E D8			     mov     ds,ax
   5934	F848  A1 0013r			     mov     ax,memory_size  ; получить	значение размера+
   5935				     памяти
   5936	F84B  1F			     pop     ds		     ; восстановить	сегмент
   5937	F84C  CF			     iret		     ; возврат из прерывания
   5938	F84D			     memory_size_determine   endp
   5939
   5940				     ;--- int 11-------------------------------
   5941				     ;
   5942				     ;	  Программа определения состава		       +
   5943				     оборудования.
   5944				     ;
   5945				     ;	 Эта	программа передает в регистр AX	       +
   5946				     конфигурацию системы.
   5947				     ;
   5948				     ;	 Разряды	регистра AX имеют следующее	       +
   5949				     значение:
   5950				     ;	 0	 - загрузка системы с НГМД;
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 120
1840v5.asm



   5951				     ;	 5,4	 - тип подключенного ЭЛИ и режим его       +
   5952				     работы:
   5953				     ;		   00 -	не используется;
   5954				     ;		   01 -	40х25,	черно-белый режим цветного      +
   5955				     графического
   5956				     ;			ЭЛИ;
   5957				     ;		   10 -	80х25,	черно-белый режим цветного      +
   5958				     графического
   5959				     ;			ЭЛИ;
   5960				     ;		   11 -	80х25,	черно-белый режим		       +
   5961				     монохромного ЭЛИ.
   5962				     ;	 7,6	 - количество	НГМД;
   5963				     ;	 11,10,9 - количество	адаптеров стыка С2;
   5964				     ;	 12	 - адаптер игр;
   5965				     ;	 15,14	 - количество	печатающих устройств.
   5966				     ;	 Разряды	6 и 7 устанавливаются только в том   +
   5967				     случае, если
   5968				     ; разряд 0 установлен в "1".
   5969				     ;
   5970				     ;----------------------------------------------
   5971
   5972					     assume  cs:code,ds:data
   5973	F84D			     equipment	     proc    far
   5974	F84D  FB			     sti		     ; установить признак	       +
   5975				     разрешения прерывания
   5976	F84E  1E			     push    ds		     ; сохранить сегмент
   5977	F84F  B8 0040			     mov     ax,dat	     ; установить адресацию
   5978	F852  8E D8			     mov     ds,ax
   5979	F854  A1 0010r			     mov     ax,equip_flag   ; получить	конфигурацию       +
   5980				     системы
   5981	F857  1F			     pop     ds		     ; восстановить	сегмент
   5982	F858  CF			     iret		     ; возврат из прерывания
   5983	F859			     equipment	     endp
   5984
   5985				     ;****************************************
   5986				     ;
   5987				     ;	 Загрузка знакогенератора
   5988				     ;
   5989				     ;****************************************
   5990
   5991	F859			     bct     proc    near
   5992	F859  B8 DC00			     mov     ax,0dc00h
   5993	F85C  8E C0			     mov     es,ax
   5994	F85E  B9 1400			     mov     cx,1400h
   5995	F861  BA 03B8			     mov     dx,3b8h
   5996	F864  33 C0			     xor     ax,ax
   5997	F866  EE			     out     dx,al
   5998	F867  33 FF			     xor     di,di
   5999	F869  FC			     cld
   6000	F86A  F3> AB			     rep     stosw
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 121
1840v5.asm



   6001	F86C  BE FA6Er			     mov     si,offset crt_char_gen
   6002	F86F  33 FF			     xor     di,di
   6003	F871  B1 80			     mov     cl,128
   6004	F873			     bct1:
   6005	F873  B3 08			     mov     bl,8
   6006	F875  2E		     bct2:   db	     02eh	     ;cs:  segment prefix (not handled by Turbo	       +
   6007				     Assembler)
   6008	F876  AC			     lodsb
   6009	F877  AB			     stosw
   6010	F878  4B			     dec     bx
   6011	F879  75 FA			     jnz     bct2
   6012	F87B  83 C7 10			     add     di,10h
   6013	F87E  E2 F3			     loop    bct1
   6014	F880  B0 01			     mov     al, 1
   6015	F882  EE			     out     dx, al
   6016				     ;CGA loader
   6017	F883  B8 B800				     mov     ax, 0B800h
   6018	F886  8E C0				     mov     es, ax
   6019	F888  B0 01				     mov     al, 1
   6020	F88A  B2 DF				     mov     dl, 0DFh	     ;leading "3" (3DFh) already set before
   6021	F88C  EE				     out     dx, al
   6022	F88D  B2 D8				     mov     dl, 0D8h
   6023	F88F  B0 00				     mov     al, 0
   6024	F891  EE				     out     dx, al
   6025	F892  33 FF				     xor     di, di
   6026	F894  B9 0400				     mov     cx, 1024
   6027	F897  BE FA6Er				     mov     si, offset	crt_char_gen
   6028	F89A  33 FF				     xor     di, di
   6029	F89C  2E				     db	     02eh	     ;cs: segment prefix (not handled by Turbo +
   6030				     Assembler)
   6031	F89D  F3> A4				     rep movsb
   6032	F89F  B0 09				     mov     al, 00001001b
   6033	F8A1  EE				     out     dx, al
   6034	F8A2  B0 00				     mov     al,0
   6035	F8A4  B2 DF				     mov     dl, 0DFh
   6036	F8A6  EE				     out     dx, al
   6037	F8A7  C3				     ret
   6038	F8A8			     bct     endp
   6039
   6040				     ;rc продолжение	обработчика ошибки теста	       +
   6041				     памяти
   6042	F8A8			     osh2:
   6043	F8A8  BE F8C3r			     mov si,offset membank
   6044	F8AB  B9 0004			     mov cx,4
   6045	F8AE  D1 EF			     shr di,1
   6046	F8B0  73 02			     jnc evn
   6047	F8B2  03 F1			     add si,cx
   6048	F8B4  E8 EDF0		     evn:    call prt_str
   6049	F8B7  BE E2D0r			     mov     si,offset e1    ; установить адрес поля	       +
   6050				     сообщения
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 122
1840v5.asm



   6051								     ; об ошибке
   6052	F8BA  B9 0004			     mov     cx,e1l	     ; получить	счетчик поля	       +
   6053				     сообщения	об ошибке
   6054	F8BD  E8 ED35			     call    p_msg	     ; печать ошибки
   6055	F8C0  E9 EB64			     jmp     tst12	     ; переход к следующему тесту
   6056
   6057	F8C3  20 28 30 29	     membank	     db	' (0)'		     ;rc для	теста памяти
   6058	F8C7  20 28 31 29			     db	' (1)'
   6059
   6060				     ;
   6061				     ;	 Таблица	кодов русских маленьких букв	       +
   6062				     (строчных)
   6063				     ;
   6064	F8CB			     rust    label   byte
   6065	F8CB  1B 31 32 33 34 35	36+	     db	     1bh,'1234567890-='
   6066	      37 38 39 30 2D 3D
   6067
   6068
   6069	F8D8  08 09			     db	     08h,09h
   6070	F8DA  D9 E6 E3 DA D5 DD	D3+	     db	     0d9h,0e6h,0e3h,0dah,0d5h,0ddh,0d3h,0e8h
   6071	      E8
   6072
   6073	F8E2  E9 D7 D6 ED 0D FF	E4+	     db	     0e9h,0d7h,0d6h,0edh,0dh,-1,0e4h,0ebh
   6074	      EB
   6075
   6076	F8EA  D2 D0 DF E0 DE DB	D4+	     db	     0d2h,0d0h,0dfh,0e0h,0deh,0dbh,0d4h,';:'
   6077	      3B 3A
   6078
   6079	F8F3  D1 EE 5C EF E7 E1	DC+	     db	     0d1h,0eeh,5ch,0efh,0e7h,0e1h,0dch,0d8h
   6080	      D8
   6081
   6082	F8FB  E2 EC 2C 2E 2F E5	2A	     db	     0e2h,0ech,',./',0e5h,'*'
   6083
   6084	F902  FF 20 EA			     db	     -1,' ',0eah
   6085
   6086
   6087	F905			     k30     label   byte
   6088	F905  52 4F 50 51 4B 4C	4D	     db	     82,79,80,81,75,76,77
   6089
   6090	F90C  47 48 49			     db	     71,72,73
   6091				     ;---
   6092	F90F  10 11 12 13 14 15	16+	     db	     16,17,18,19,20,21,22,23
   6093	      17
   6094
   6095	F917  18 19 1E 1F 20 21	22+	     db	     24,25,30,31,32,33,34,35
   6096	      23
   6097
   6098	F91F  24 25 26 2C 2D 2E	2F+	     db	     36,37,38,44,45,46,47,48
   6099	      30
   6100
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 123
1840v5.asm



   6101	F927  31 32			     db	     49,50
   6102
   6103				     ;	     Временный	обработчик прерываний стыка С2
   6104
   6105	F929			     rs232_io:
   6106	F929  B8 61F0				     mov     ax, 61F0h
   6107	F92C  CF				     iret
   6108
   6109	F92D			     int15h:
   6110	F92D  F9				     stc
   6111	F92E  B4 86				     mov     ah, 86h
   6112	F930  CA 0002				     retf    2
   6113
   6114				     ;---
   6115	F933  F6 06 0017r 03	     k89:    test    kb_flag,left_shift+right_shift
   6116	F938  74 11			     jz	     k80
   6117	F93A  3C F0			     cmp     al,0f0h
   6118	F93C  74 23			     je	     k89a
   6119	F93E  3C B0			     cmp     al,0b0h
   6120	F940  72 06			     jb	     k81
   6121	F942  3C CF			     cmp     al,0cfh
   6122	F944  77 02			     ja	     k81
   6123	F946  04 20			     add     al,20h
   6124	F948  E9 EE94		     k81:    jmp     k61
   6125	F94B  3C F1		     k80:    cmp     al,0f1h
   6126	F94D  74 0D			     je	     k89b
   6127	F94F  3C D0			     cmp     al,0d0h
   6128	F951  72 F5			     jb	     k81
   6129	F953  3C FE			     cmp     al,0feh
   6130	F955  77 F1			     ja	     k81
   6131	F957  2C 20			     sub     al,20h
   6132	F959  E9 EE83			     jmp     k61
   6133	F95C  2C 01		     k89b:   sub     al,01h
   6134	F95E  E9 EE7E			     jmp     k61
   6135	F961  04 01		     k89a:   add     al,01h
   6136	F963  E9 EE79			     jmp     k61
   6137
   6138	F966			     write_tty2:
   6139	F966  8A 3E 0062r			     mov     bh, ds:active_page
   6140	F96A  E9 FDB5				     jmp     write_tty
   6141
   6142	F96D			     f19a:
   6143	F96D  42				     inc     dx
   6144	F96E  B0 08				     mov     al, 8
   6145	F970  EE				     out     dx, al
   6146	F971  BA 03FE				     mov     dx, 3FEh
   6147	F974  EE				     out     dx, al
   6148	F975  B0 A4				     mov     al, 0A4h
   6149	F977  E6 21				     out     inta01, al
   6150	F979  8B C6				     mov     ax, si
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 124
1840v5.asm



   6151	F97B  B1 03				     mov     cl, 3
   6152	F97D  E9 EBDC				     jmp     f19b
   6153
   6154	F980			     f20a:
   6155	F980  B0 80				     mov     al, 80h
   6156	F982  E6 A0				     out     0A0h, al
   6157	F984  B0 BC				     mov     al, 0BCh
   6158	F986  E6 21				     out     21h, al
   6159	F988  E9 EBE9				     jmp     f20b
   6160				     ;
   6161	F98B  50		     dummm_return:   push    ax
   6162	F98C  B0 20				     mov     al,20h
   6163	F98E  E6 20				     out     20h,al
   6164	F990  58				     pop     ax
   6165	F991  CF				     iret
   6166
   6167	F992  DC*(00)				     db	220 dup(0)
   6168
   6169				     ;**************************************
   6170				     ;
   6171				     ;	 Знакогенератор графический 320х200 и 640х200
   6172				     ;
   6173				     ;***************************************
   6174
   6175
   6176
   6177	FA6E			     crt_char_gen  label  byte
   6178	FA6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;d_00
   6179	      00
   6180
   6181	FA76  7E 81 A5 81 BD 99	81+	     db	     07eh,081h,0a5h,081h,0bdh,099h,081h,07eh ;d_01
   6182	      7E
   6183
   6184	FA7E  7E FF DB FF C3 E7	FF+	     db	     07eh,0ffh,0dbh,0ffh,0c3h,0e7h,0ffh,07eh ;d_02
   6185	      7E
   6186
   6187	FA86  6C FE FE FE 7C 38	10+	     db	     06ch,0feh,0feh,0feh,07ch,038h,010h,000h ;d_03
   6188	      00
   6189
   6190	FA8E  10 38 7C FE 7C 38	10+	     db	     010h,038h,07ch,0feh,07ch,038h,010h,000h ;d_04
   6191	      00
   6192
   6193	FA96  38 7C 38 FE FE 7C	38+	     db	     038h,07ch,038h,0feh,0feh,07ch,038h,07ch ;d_05
   6194	      7C
   6195
   6196	FA9E  10 10 38 7C FE 7C	38+	     db	     010h,010h,038h,07ch,0feh,07ch,038h,07ch ;d_06
   6197	      7C
   6198
   6199	FAA6  00 00 18 3C 3C 18	00+	     db	     000h,000h,018h,03ch,03ch,018h,000h,000h ;d_07
   6200	      00
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 125
1840v5.asm



   6201
   6202	FAAE  FF FF E7 C3 C3 E7	FF+	     db	     0ffh,0ffh,0e7h,0c3h,0c3h,0e7h,0ffh,0ffh ;d_08
   6203	      FF
   6204
   6205	FAB6  00 3C 66 42 42 66	3C+	     db	     000h,03ch,066h,042h,042h,066h,03ch,000h ;d_09
   6206	      00
   6207
   6208	FABE  FF C3 99 BD BD 99	C3+	     db	     0ffh,0c3h,099h,0bdh,0bdh,099h,0c3h,0ffh ;d_0a
   6209	      FF
   6210
   6211	FAC6  0F 07 0F 7D CC CC	CC+	     db	     00fh,007h,00fh,07dh,0cch,0cch,0cch,078h ;d_0b
   6212	      78
   6213
   6214	FACE  3C 66 66 66 3C 18	7E+	     db	     03ch,066h,066h,066h,03ch,018h,07eh,018h ;d_0c
   6215	      18
   6216
   6217	FAD6  3F 33 3F 30 30 70	F0+	     db	     03fh,033h,03fh,030h,030h,070h,0f0h,0e0h ;d_0d
   6218	      E0
   6219
   6220	FADE  7F 63 7F 63 63 67	E6+	     db	     07fh,063h,07fh,063h,063h,067h,0e6h,0c0h ;d_0e
   6221	      C0
   6222
   6223	FAE6  99 5A 3C E7 E7 3C	5A+	     db	     099h,05ah,03ch,0e7h,0e7h,03ch,05ah,099h ;d_0f
   6224	      99
   6225
   6226
   6227	FAEE  80 E0 F8 FE F8 E0	80+	     db	     080h,0e0h,0f8h,0feh,0f8h,0e0h,080h,000h ;d_10
   6228	      00
   6229
   6230	FAF6  02 0E 3E FE 3E 0E	02+	     db	     002h,00eh,03eh,0feh,03eh,00eh,002h,000h ;d_11
   6231	      00
   6232
   6233	FAFE  18 3C 7E 18 18 7E	3C+	     db	     018h,03ch,07eh,018h,018h,07eh,03ch,018h ;d_12
   6234	      18
   6235
   6236	FB06  66 66 66 66 66 00	66+	     db	     066h,066h,066h,066h,066h,000h,066h,000h ;d_13
   6237	      00
   6238
   6239	FB0E  7F DB DB 7B 1B 1B	1B+	     db	     07fh,0dbh,0dbh,07bh,01bh,01bh,01bh,000h ;d_14
   6240	      00
   6241
   6242	FB16  3E 63 38 6C 6C 38	CC+	     db	     03eh,063h,038h,06ch,06ch,038h,0cch,078h ;d_15
   6243	      78
   6244
   6245	FB1E  00 00 00 00 7E 7E	7E+	     db	     000h,000h,000h,000h,07eh,07eh,07eh,000h ;d_16
   6246	      00
   6247
   6248	FB26  18 3C 7E 18 7E 3C	18+	     db	     018h,03ch,07eh,018h,07eh,03ch,018h,0ffh ;d_17
   6249	      FF
   6250
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 126
1840v5.asm



   6251	FB2E  18 3C 7E 18 18 18	18+	     db	     018h,03ch,07eh,018h,018h,018h,018h,000h ;d_18
   6252	      00
   6253
   6254	FB36  18 18 18 18 7E 3C	18+	     db	     018h,018h,018h,018h,07eh,03ch,018h,000h ;d_19
   6255	      00
   6256
   6257	FB3E  00 18 0C FE 0C 18	00+	     db	     000h,018h,00ch,0feh,00ch,018h,000h,000h ;d_1a
   6258	      00
   6259
   6260	FB46  00 30 60 FE 60 30	00+	     db	     000h,030h,060h,0feh,060h,030h,000h,000h ;d_1b
   6261	      00
   6262
   6263	FB4E  00 00 C0 C0 C0 FE	00+	     db	     000h,000h,0c0h,0c0h,0c0h,0feh,000h,000h ;d_1c
   6264	      00
   6265
   6266	FB56  00 24 66 FF 66 24	00+	     db	     000h,024h,066h,0ffh,066h,024h,000h,000h ;d_1d
   6267	      00
   6268
   6269	FB5E  00 18 3C 7E FF FF	00+	     db	     000h,018h,03ch,07eh,0ffh,0ffh,000h,000h ;d_1e
   6270	      00
   6271
   6272	FB66  00 FF FF 7E 3C 18	00+	     db	     000h,0ffh,0ffh,07eh,03ch,018h,000h,000h ;d_1f
   6273	      00
   6274
   6275
   6276	FB6E  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,000h ;sp d_20
   6277	      00
   6278
   6279	FB76  30 78 78 30 30 00	30+	     db	     030h,078h,078h,030h,030h,000h,030h,000h ;!	d_21
   6280	      00
   6281
   6282	FB7E  6C 6C 6C 00 00 00	00+	     db	     06ch,06ch,06ch,000h,000h,000h,000h,000h ;"d_22
   6283	      00
   6284
   6285	FB86  6C 6C FE 6C FE 6C	6C+	     db	     06ch,06ch,0feh,06ch,0feh,06ch,06ch,000h ;#	d_23
   6286	      00
   6287
   6288	FB8E  30 7C C0 78 0C F8	30+	     db	     030h,07ch,0c0h,078h,00ch,0f8h,030h,000h ;$	d_24
   6289	      00
   6290
   6291	FB96  00 C6 CC 18 30 66	C6+	     db	     000h,0c6h,0cch,018h,030h,066h,0c6h,000h ;per cent d_25
   6292	      00
   6293
   6294	FB9E  38 6C 38 76 DC CC	76+	     db	     038h,06ch,038h,076h,0dch,0cch,076h,000h ;&	d_26
   6295	      00
   6296
   6297	FBA6  60 60 C0 00 00 00	00+	     db	     060h,060h,0c0h,000h,000h,000h,000h,000h ;'	d_27
   6298	      00
   6299
   6300	FBAE  18 30 60 60 60 30	18+	     db	     018h,030h,060h,060h,060h,030h,018h,000h ;(	d_28
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 127
1840v5.asm



   6301	      00
   6302
   6303	FBB6  60 30 18 18 18 30	60+	     db	     060h,030h,018h,018h,018h,030h,060h,000h ;)	d_29
   6304	      00
   6305
   6306	FBBE  00 66 3C FF 3C 66	00+	     db	     000h,066h,03ch,0ffh,03ch,066h,000h,000h ;*	d_2a
   6307	      00
   6308
   6309	FBC6  00 30 30 FC 30 30	00+	     db	     000h,030h,030h,0fch,030h,030h,000h,000h ;+	d_2b
   6310	      00
   6311
   6312	FBCE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,060h ;,	d_2c
   6313	      60
   6314
   6315	FBD6  00 00 00 FC 00 00	00+	     db	     000h,000h,000h,0fch,000h,000h,000h,000h ;-	d_2d
   6316	      00
   6317
   6318	FBDE  00 00 00 00 00 30	30+	     db	     000h,000h,000h,000h,000h,030h,030h,000h ;.	d_2e
   6319	      00
   6320
   6321	FBE6  06 0C 18 30 60 C0	80+	     db	     006h,00ch,018h,030h,060h,0c0h,080h,000h ;/	d_2f
   6322	      00
   6323
   6324
   6325	FBEE  7C C6 CE DE F6 E6	7C+	     db	     07ch,0c6h,0ceh,0deh,0f6h,0e6h,07ch,000h ;0	d_30
   6326	      00
   6327
   6328	FBF6  30 70 30 30 30 30	FC+	     db	     030h,070h,030h,030h,030h,030h,0fch,000h ;1	d_31
   6329	      00
   6330
   6331	FBFE  78 CC 0C 38 60 CC	FC+	     db	     078h,0cch,00ch,038h,060h,0cch,0fch,000h ;2	d_32
   6332	      00
   6333
   6334	FC06  78 CC 0C 38 0C CC	78+	     db	     078h,0cch,00ch,038h,00ch,0cch,078h,000h ;3	d_33
   6335	      00
   6336
   6337	FC0E  1C 3C 6C CC FE 0C	1E+	     db	     01ch,03ch,06ch,0cch,0feh,00ch,01eh,000h ;4	d_34
   6338	      00
   6339
   6340	FC16  FC C0 F8 0C 0C CC	78+	     db	     0fch,0c0h,0f8h,00ch,00ch,0cch,078h,000h ;5	d_35
   6341	      00
   6342
   6343	FC1E  38 60 C0 F8 CC CC	78+	     db	     038h,060h,0c0h,0f8h,0cch,0cch,078h,000h ;6	d_36
   6344	      00
   6345
   6346	FC26  FC CC 0C 18 30 30	30+	     db	     0fch,0cch,00ch,018h,030h,030h,030h,000h ;7	d_37
   6347	      00
   6348
   6349	FC2E  78 CC CC 78 CC CC	78+	     db	     078h,0cch,0cch,078h,0cch,0cch,078h,000h ;8	d_38
   6350	      00
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 128
1840v5.asm



   6351
   6352	FC36  78 CC CC 7C 0C 18	70+	     db	     078h,0cch,0cch,07ch,00ch,018h,070h,000h ;9	d_39
   6353	      00
   6354
   6355	FC3E  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,000h ;:	d_3a
   6356	      00
   6357
   6358	FC46  00 30 30 00 00 30	30+	     db	     000h,030h,030h,000h,000h,030h,030h,060h ;;	d_3b
   6359	      60
   6360
   6361	FC4E  18 30 60 C0 60 30	18+	     db	     018h,030h,060h,0c0h,060h,030h,018h,000h ;<	d_3c
   6362	      00
   6363
   6364	FC56  00 00 FC 00 00 FC	00+	     db	     000h,000h,0fch,000h,000h,0fch,000h,000h ;=	d_3d
   6365	      00
   6366
   6367	FC5E  60 30 18 0C 18 30	60+	     db	     060h,030h,018h,00ch,018h,030h,060h,000h ;>	d_3e
   6368	      00
   6369
   6370	FC66  78 CC 0C 18 30 00	30+	     db	     078h,0cch,00ch,018h,030h,000h,030h,000h ;?	d_3f
   6371	      00
   6372
   6373
   6374	FC6E  7C C6 DE DE DE C0	78+	     db	     07ch,0c6h,0deh,0deh,0deh,0c0h,078h,000h ;@	d_40
   6375	      00
   6376
   6377	FC76  30 78 CC CC FC CC	CC+	     db	     030h,078h,0cch,0cch,0fch,0cch,0cch,000h ;A	d_41
   6378	      00
   6379
   6380	FC7E  FC 66 66 7C 66 66	FC+	     db	     0fch,066h,066h,07ch,066h,066h,0fch,000h ;B	d_42
   6381	      00
   6382
   6383	FC86  3C 66 C0 C0 C0 66	3C+	     db	     03ch,066h,0c0h,0c0h,0c0h,066h,03ch,000h ;C	d_43
   6384	      00
   6385
   6386	FC8E  F8 6C 66 66 66 6C	F8+	     db	     0f8h,06ch,066h,066h,066h,06ch,0f8h,000h ;D	d_44
   6387	      00
   6388
   6389	FC96  FE 62 68 78 68 62	FE+	     db	     0feh,062h,068h,078h,068h,062h,0feh,000h ;E	d_45
   6390	      00
   6391
   6392	FC9E  FE 62 68 78 68 60	F0+	     db	     0feh,062h,068h,078h,068h,060h,0f0h,000h ;F	d_46
   6393	      00
   6394
   6395	FCA6  3C 66 C0 C0 CE 66	3E+	     db	     03ch,066h,0c0h,0c0h,0ceh,066h,03eh,000h ;G	d_47
   6396	      00
   6397
   6398	FCAE  CC CC CC FC CC CC	CC+	     db	     0cch,0cch,0cch,0fch,0cch,0cch,0cch,000h ;H	d_48
   6399	      00
   6400
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 129
1840v5.asm



   6401	FCB6  78 30 30 30 30 30	78+	     db	     078h,030h,030h,030h,030h,030h,078h,000h ;I	d_49
   6402	      00
   6403
   6404	FCBE  1E 0C 0C 0C CC CC	78+	     db	     01eh,00ch,00ch,00ch,0cch,0cch,078h,000h ;J	d_4a
   6405	      00
   6406
   6407	FCC6  E6 66 6C 78 6C 66	E6+	     db	     0e6h,066h,06ch,078h,06ch,066h,0e6h,000h ;K	d_4b
   6408	      00
   6409
   6410	FCCE  F0 60 60 60 62 66	FE+	     db	     0f0h,060h,060h,060h,062h,066h,0feh,000h ;L	d_4c
   6411	      00
   6412
   6413	FCD6  C6 EE FE FE D6 C6	C6+	     db	     0c6h,0eeh,0feh,0feh,0d6h,0c6h,0c6h,000h ;M	d_4d
   6414	      00
   6415
   6416	FCDE  C6 E6 F6 DE CE C6	C6+	     db	     0c6h,0e6h,0f6h,0deh,0ceh,0c6h,0c6h,000h ;N	d_4e
   6417	      00
   6418
   6419	FCE6  38 6C C6 C6 C6 6C	38+	     db	     038h,06ch,0c6h,0c6h,0c6h,06ch,038h,000h ;O	d_4f
   6420	      00
   6421
   6422
   6423	FCEE  FC 66 66 7C 60 60	F0+	     db	     0fch,066h,066h,07ch,060h,060h,0f0h,000h ;P	d_50
   6424	      00
   6425
   6426	FCF6  78 CC CC CC DC 78	1C+	     db	     078h,0cch,0cch,0cch,0dch,078h,01ch,000h ;Q	d_51
   6427	      00
   6428
   6429	FCFE  FC 66 66 7C 6C 66	E6+	     db	     0fch,066h,066h,07ch,06ch,066h,0e6h,000h ;R	d_52
   6430	      00
   6431
   6432	FD06  78 CC E0 70 1C CC	78+	     db	     078h,0cch,0e0h,070h,01ch,0cch,078h,000h ;S	d_53
   6433	      00
   6434
   6435	FD0E  FC B4 30 30 30 30	78+	     db	     0fch,0b4h,030h,030h,030h,030h,078h,000h ;T	d_54
   6436	      00
   6437
   6438	FD16  CC CC CC CC CC CC	FC+	     db	     0cch,0cch,0cch,0cch,0cch,0cch,0fch,000h ;U	d_55
   6439	      00
   6440
   6441	FD1E  CC CC CC CC CC 78	30+	     db	     0cch,0cch,0cch,0cch,0cch,078h,030h,000h ;V	d_56
   6442	      00
   6443
   6444	FD26  C6 C6 C6 D6 FE EE	C6+	     db	     0c6h,0c6h,0c6h,0d6h,0feh,0eeh,0c6h,000h ;W	d_57
   6445	      00
   6446
   6447	FD2E  C6 C6 6C 38 38 6C	C6+	     db	     0c6h,0c6h,06ch,038h,038h,06ch,0c6h,000h ;X	d_58
   6448	      00
   6449
   6450	FD36  CC CC CC 78 30 30	78+	     db	     0cch,0cch,0cch,078h,030h,030h,078h,000h ;Y	d_59
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 130
1840v5.asm



   6451	      00
   6452
   6453	FD3E  FE C6 8C 18 32 66	FE+	     db	     0feh,0c6h,08ch,018h,032h,066h,0feh,000h ;Z	d_5a
   6454	      00
   6455
   6456	FD46  78 60 60 60 60 60	78+	     db	     078h,060h,060h,060h,060h,060h,078h,000h ;(	d_5b
   6457	      00
   6458
   6459	FD4E  C0 60 30 18 0C 06	02+	     db	     0c0h,060h,030h,018h,00ch,006h,002h,000h ;backslash
   6460	      00
   6461
   6462	FD56  78 18 18 18 18 18	78+	     db	     078h,018h,018h,018h,018h,018h,078h,000h ;)	d_5d
   6463	      00
   6464
   6465	FD5E  10 38 6C C6 00 00	00+	     db	     010h,038h,06ch,0c6h,000h,000h,000h,000h ;cimpqumflex
   6466	      00
   6467
   6468	FD66  00 00 00 00 00 00	00+	     db	     000h,000h,000h,000h,000h,000h,000h,0ffh ;_	d_5f
   6469	      FF
   6470
   6471
   6472	FD6E  30 30 18 00 00 00	00+	     db	     030h,030h,018h,000h,000h,000h,000h,000h ;	d_60
   6473	      00
   6474
   6475	FD76  00 00 78 0C 7C CC	76+	     db	     000h,000h,078h,00ch,07ch,0cch,076h,000h ;lower case a
   6476	      00
   6477
   6478	FD7E  E0 60 60 7C 66 66	DC+	     db	     0e0h,060h,060h,07ch,066h,066h,0dch,000h ;b	d_62
   6479	      00
   6480
   6481	FD86  00 00 78 CC C0 CC	78+	     db	     000h,000h,078h,0cch,0c0h,0cch,078h,000h ;c	d_63
   6482	      00
   6483
   6484	FD8E  1C 0C 0C 7C CC CC	76+	     db	     01ch,00ch,00ch,07ch,0cch,0cch,076h,000h ;d	d_64
   6485	      00
   6486
   6487	FD96  00 00 78 CC FC C0	78+	     db	     000h,000h,078h,0cch,0fch,0c0h,078h,000h ;e	d_65
   6488	      00
   6489
   6490	FD9E  38 6C 60 F0 60 60	F0+	     db	     038h,06ch,060h,0f0h,060h,060h,0f0h,000h ;f	d_66
   6491	      00
   6492
   6493	FDA6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,0f8h ;g	d_67
   6494	      F8
   6495
   6496	FDAE  E0 60 6C 76 66 66	E6+	     db	     0e0h,060h,06ch,076h,066h,066h,0e6h,000h ;h	d_68
   6497	      00
   6498
   6499	FDB6  30 00 70 30 30 30	78+	     db	     030h,000h,070h,030h,030h,030h,078h,000h ;i	d_69
   6500	      00
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 131
1840v5.asm



   6501
   6502	FDBE  0C 00 0C 0C 0C CC	CC+	     db	     00ch,000h,00ch,00ch,00ch,0cch,0cch,078h ;j	d_6a
   6503	      78
   6504
   6505	FDC6  E0 60 66 6C 78 6C	E6+	     db	     0e0h,060h,066h,06ch,078h,06ch,0e6h,000h ;k	d_6b
   6506	      00
   6507
   6508	FDCE  70 30 30 30 30 30	78+	     db	     070h,030h,030h,030h,030h,030h,078h,000h ;l	d_6c
   6509	      00
   6510
   6511	FDD6  00 00 CC FE FE D6	C6+	     db	     000h,000h,0cch,0feh,0feh,0d6h,0c6h,000h ;m	d_6d
   6512	      00
   6513
   6514	FDDE  00 00 F8 CC CC CC	CC+	     db	     000h,000h,0f8h,0cch,0cch,0cch,0cch,000h ;n	d_6e
   6515	      00
   6516
   6517	FDE6  00 00 78 CC CC CC	78+	     db	     000h,000h,078h,0cch,0cch,0cch,078h,000h ;o	d_6f
   6518	      00
   6519
   6520
   6521	FDEE  00 00 DC 66 66 7C	60+	     db	     000h,000h,0dch,066h,066h,07ch,060h,0f0h ;p	d_70
   6522	      F0
   6523
   6524	FDF6  00 00 76 CC CC 7C	0C+	     db	     000h,000h,076h,0cch,0cch,07ch,00ch,01eh ;q	d_71
   6525	      1E
   6526
   6527	FDFE  00 00 DC 76 66 60	F0+	     db	     000h,000h,0dch,076h,066h,060h,0f0h,000h ;r	d_72
   6528	      00
   6529
   6530	FE06  00 00 7C C0 78 0C	F8+	     db	     000h,000h,07ch,0c0h,078h,00ch,0f8h,000h ;s	d_73
   6531	      00
   6532
   6533	FE0E  10 30 7C 30 30 34	18+	     db	     010h,030h,07ch,030h,030h,034h,018h,000h ;t	d_74
   6534	      00
   6535
   6536	FE16  00 00 CC CC CC CC	76+	     db	     000h,000h,0cch,0cch,0cch,0cch,076h,000h ;u	d_75
   6537	      00
   6538
   6539	FE1E  00 00 CC CC CC 78	30+	     db	     000h,000h,0cch,0cch,0cch,078h,030h,000h ;v	d_76
   6540	      00
   6541
   6542	FE26  00 00 C6 D6 FE FE	6C+	     db	     000h,000h,0c6h,0d6h,0feh,0feh,06ch,000h ;w	d_77
   6543	      00
   6544
   6545	FE2E  00 00 C6 6C 38 6C	C6+	     db	     000h,000h,0c6h,06ch,038h,06ch,0c6h,000h ;x	d_78
   6546	      00
   6547
   6548	FE36  00 00 CC CC CC 7C	0C+	     db	     000h,000h,0cch,0cch,0cch,07ch,00ch,0f8h ;y	d_79
   6549	      F8
   6550
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 132
1840v5.asm



   6551	FE3E  00 00 FC 98 30 64	FC+	     db	     000h,000h,0fch,098h,030h,064h,0fch,000h ;z	d_7a
   6552	      00
   6553
   6554	FE46  1C 30 30 E0 30 30	1C+	     db	     01ch,030h,030h,0e0h,030h,030h,01ch,000h ;	d_7b
   6555	      00
   6556
   6557	FE4E  18 18 18 00 18 18	18+	     db	     018h,018h,018h,000h,018h,018h,018h,000h ;	d_7c
   6558	      00
   6559
   6560	FE56  E0 30 30 1C 30 30	E0+	     db	     0e0h,030h,030h,01ch,030h,030h,0e0h,000h ;	d_7d
   6561	      00
   6562
   6563	FE5E  76 DC 00 00 00 00	00+	     db	     076h,0dch,000h,000h,000h,000h,000h,000h ;	d_7e
   6564	      00
   6565
   6566	FE66  00 10 38 6C C6 C6	FE+	     db	     000h,010h,038h,06ch,0c6h,0c6h,0feh,000h ;delta d_7f
   6567	      00
   6568
   6569
   6570				     ;---int 1a-------------------------------
   6571				     ;
   6572				     ;	 Программа установки-считывания времени     +
   6573				     суток
   6574				     ;
   6575				     ;	 Эта	программа обеспечивает выполнение       +
   6576				     двух функций, код которых
   6577				     ; задается	в регистре AH:
   6578				     ;	 AH=0 -	считать текущее состояние часов. После+
   6579				     выполнения коман-
   6580				     ; ды регистры CX	и DX содержат старшую и младшую+
   6581				     части	счетчика.
   6582				     ;	 Если регистр AL содержит "0", то счет	идет в    +
   6583				     течение одних
   6584				     ; суток, при любом другом значении счет	       +
   6585				     переходит	на следующие
   6586				     ; сутки;
   6587				     ;
   6588				     ;	 AH=1 -	записать текущее	состояние часов.	       +
   6589				     Регистры CX и DX
   6590				     ; содержат	старшую и младшую части счетчика.
   6591				     ;
   6592				     ;------------------------------------------
   6593					     assume  cs:code,ds:data
   6594	FE6E			     time_of_day     proc    far
   6595	FE6E  FB			     sti	     ; уст признак разрешения	       +
   6596				     прерывания
   6597	FE6F  1E			     push    ds	     ; сохранить сегмент
   6598	FE70  50			     push    ax	     ; сохранить параметры
   6599	FE71  B8 0040			     mov     ax,dat
   6600	FE74  8E D8			     mov     ds,ax
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 133
1840v5.asm



   6601	FE76  58			     pop     ax
   6602	FE77  0A E4			     or	     ah,ah   ; AH=0 ?
   6603	FE79  74 07			     jz	     t2	 ; да, переход	к считыванию		       +
   6604				     текущего состояния
   6605	FE7B  FE CC			     dec     ah	     ; AH=1 ?
   6606	FE7D  74 16			     jz	     t3	 ; да, переход	к установке текущего +
   6607				     состояния
   6608
   6609	FE7F			     t1:     ; Возврат из программы
   6610
   6611	FE7F  FB			     sti	     ; уст признак разрешения	       +
   6612				     прерывания
   6613	FE80  1F			     pop     ds	     ; возврат сегмента
   6614	FE81  CF			     iret	     ; возврат к программе,вызвавшей +
   6615				     процедуру
   6616
   6617	FE82			     t2:     ; Считать текущее состояния	часов
   6618
   6619	FE82  FA			     cli	     ; сбросить	признак разрешения    +
   6620				     прерывания
   6621	FE83  A0 0070r			     mov     al,timer_ofl  ; считать в AL флажок перехода+
   6622				     на сле-
   6623	FE86  C6 06 0070r 00		     mov     timer_ofl,0   ; дующие сутки и	сбросить его+
   6624				     в	памяти
   6625	FE8B  8B 0E 006Er		     mov     cx,timer_high	     ; установить старшую и  +
   6626				     младшую
   6627	FE8F  8B 16 006Cr		     mov     dx,timer_low	     ; части счетчика
   6628	FE93  EB EA			     jmp     short t1
   6629
   6630	FE95			     t3:     ; Установить текущее состояние часов
   6631
   6632	FE95  FA			     cli	     ; сброс признака разрешения	       +
   6633				     прерывания
   6634	FE96  89 16 006Cr		     mov     timer_low,dx	     ; установить младшую и  +
   6635				     старшую
   6636	FE9A  89 0E 006Er		     mov     timer_high,cx	     ; части счетчика
   6637	FE9E  C6 06 0070r 00		     mov     timer_ofl,0     ; сброс флажка перехода	       +
   6638				     через	сутки
   6639	FEA3  EB DA			     jmp     short t1	     ; возврат из программы	       +
   6640				     отсчета времени
   6641	FEA5			     time_of_day     endp
   6642
   6643				     ;-------int 08-------------------
   6644				     ;
   6645				     ;	 Программа обработки прерывания таймера     +
   6646				     КР580ВИ53 (INT	8H) об-
   6647				     ; рабатывает прерывания, аппаратурно	       +
   6648				     возникающие от нулевого канала
   6649				     ; таймера, на вход которого подаются сигналы  +
   6650				     с	частотой 1,228 МГц,
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 134
1840v5.asm



   6651				     ; делящиеся на 56263 для обеспечения 18,2		       +
   6652				     прерываний в секунду.
   6653				     ;	 При	обработке прерывания	корректируется   +
   6654				     программный счетчик,
   6655				     ; хранящийся в памяти по адресу 0046CH (младшая   +
   6656				     часть	счетчика) и
   6657				     ; адресу 0047EH (старшая часть счетчика)	и	       +
   6658				     используемый для уста-
   6659				     ; новки времени суток.
   6660				     ;	 В функции программы входит коррекция	       +
   6661				     счетчика, управляющего
   6662				     ; двигателем НГМД. После обнуления счетчика   +
   6663				     двигатель	выключается.
   6664				     ;	 Вектор 1CH дает возможность пользователю     +
   6665				     входить в заданную
   6666				     ; программу с частотой прерывания таймера (18.2+
   6667				     прерываний в секун-
   6668				     ; ду). Для этого	в таблице векторов прерываний+
   6669				     по адресу 007CH
   6670				     ; необходимо задать адрес пользовательской   +
   6671				     программы.
   6672				     ;
   6673				     ;---------------------------------------------------
   6674
   6675	FEA5			     timer_int	     proc    far
   6676	FEA5  FB			     sti	     ; уст признак разрешения	       +
   6677				     прерывания
   6678	FEA6  1E			     push    ds
   6679	FEA7  50			     push    ax
   6680	FEA8  52			     push    dx
   6681	FEA9  B8 0040			     mov     ax,dat
   6682	FEAC  8E D8			     mov     ds,ax
   6683	FEAE  FF 06 006Cr		     inc     timer_low	  ; +1 к старшей части счетчика
   6684	FEB2  75 04			     jnz     t4
   6685	FEB4  FF 06 006Er		     inc     timer_high	  ; +1 к старшей части счетчика
   6686
   6687	FEB8			     t4:     ; Опрос счетчика = 24	часам
   6688
   6689	FEB8  83 3E 006Er 18		     cmp     timer_high,018h
   6690	FEBD  75 19			     jnz     t5
   6691	FEBF  81 3E 006Cr 00B0		     cmp     timer_low,0b0h
   6692	FEC5  75 11			     jnz     t5
   6693
   6694				     ;	 Таймер исчерпал 24 часа
   6695
   6696	FEC7  C7 06 006Er 0000		     mov     timer_high,0   ; сброс старшей	и младшей      +
   6697				     частей
   6698	FECD  C7 06 006Cr 0000		     mov     timer_low,0    ; счетчика и установка	       +
   6699				     флажка пере-
   6700	FED3  C6 06 0070r 01		     mov     timer_ofl,1    ; хода счета на следующие      +
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 135
1840v5.asm



   6701				     сутки
   6702
   6703				     ;	 Выключение мотора НГМД, если счетчик	       +
   6704				     управления мотором
   6705				     ; исчерпан
   6706
   6707	FED8			     t5:
   6708	FED8  FE 0E 0040r		     dec     motor_count
   6709	FEDC  75 0B			     jnz     t6		     ; переход, если	счетчик не    +
   6710				     установлен
   6711	FEDE  80 26 003Fr F0		     and     motor_status,0f0h
   6712	FEE3  B0 0C			     mov     al,0ch
   6713	FEE5  BA 03F2			     mov     dx,03f2h
   6714	FEE8  EE			     out     dx,al	     ; выключить мотор
   6715
   6716	FEE9			     t6:
   6717	FEE9  CD 1C			     int     1ch     ; передача	управления программе+
   6718				     пользователя
   6719	FEEB  B0 20			     mov     al,eoi
   6720	FEED  E6 20			     out     020h,al	    ; конец прерывания
   6721	FEEF  5A			     pop     dx
   6722	FEF0  58			     pop     ax
   6723	FEF1  1F			     pop     ds
   6724	FEF2  CF			     iret		     ; возврат из прерывания
   6725	FEF3			     timer_int	     endp
   6726				     ;---------------------------------
   6727				     ;
   6728				     ;	 Эти	вектора передаются в область		       +
   6729				     прерывания 8086 во время
   6730				     ; включения питания.
   6731				     ;
   6732				     ;---------------------------------
   6733	FEF3			     vector_table    label   word    ; таблица векторов		       +
   6734				     прерываний
   6735
   6736	FEF3  FEA5r			     dw	     offset timer_int	     ; прерывание 8
   6737	FEF5  E987r			     dw	     offset kb_int	     ; прерывание 9
   6738	FEF7  FF53r			     dw	     offset dummy_return     ; прерывание А
   6739	FEF9  F98Br			     dw	     offset dummm_return     ; прерывание B
   6740	FEFB  F98Br			     dw	     offset dummm_return     ; прерывание C
   6741	FEFD  FF53r			     dw	     offset dummy_return     ; прерывание D
   6742	FEFF  EF57r			     dw	     offset disk_int	     ; прерывание E
   6743	FF01  FF53r			     dw	     offset dummy_return     ; прерывание F
   6744	FF03  F065r			     dw	     offset video_io	     ; прерывание 10H
   6745	FF05  F84Dr			     dw	     offset equipment	     ; прерывание 11H
   6746	FF07  F841r			     dw	     offset memory_size_determine    ; прерывание 12H
   6747	FF09  EC59r			     dw	     offset diskette_io	     ; прерывание 13H
   6748	FF0B  F929r			     dw	     offset rs232_io	     ; прерывание  14H
   6749	FF0D  F92Dr			     dw	     offset int15h	     ; int 15h (rc заглушка)
   6750	FF0F  E82Er			     dw	     offset keyboard_io	     ; прерывание 16H
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 136
1840v5.asm



   6751	FF11  EFD2r			     dw	     offset printer_io	     ; прерывание 17H
   6752	FF13  E06Cr			     dw	     offset start	     ; rc перывание 18h,	       +
   6753				     поставил как в	1841 перезагрузку
   6754	FF15  E6F7r			     dw	     offset boot_strap	     ; прерывание 19H
   6755	FF17  FE6Er			     dw	     time_of_day     ; прерывание 1АH - время суток
   6756	FF19  FF53r			     dw	     dummy_return    ; прерывание 1BH	- прерывание +
   6757				     клавиатуры
   6758	FF1B  FF53r			     dw	     dummy_return    ; прерывание 1C - прерывание  +
   6759				     таймера
   6760	FF1D  F0A4r			     dw	     video_parms     ; прерывание 1D - параметры    +
   6761				     видео
   6762	FF1F  EFC7r			     dw	     offset  disk_base	 ;прерывание 1EH - параметры+
   6763				     НГМД
   6764	FF21  0000			     dw	     0		     ; 1FH - адрес	таблицы пользов. +
   6765				     знакогенер. (не инициализируется)
   6766
   6767					     org     0ff53h	     ;rc для	того, чтобы не	       +
   6768				     съехало при сокращении	таблицы векторов
   6769	FF53			     dummy_return:
   6770	FF53  CF			     iret
   6771
   6772				     ;---int 5----------------------
   6773				     ;
   6774				     ;	 Программа вывода на печать содержимого      +
   6775				     буфера ЭЛИ вызывается
   6776				     ; одновременным нажатием клавиши ПЕЧ и	       +
   6777				     клавиши переключения регист-
   6778				     ; ров. Позиция курсора сохраняется до	       +
   6779				     завершения процедуры обработки
   6780				     ; прерывания. Повторное	нажатие названных      +
   6781				     клавиш во время обработки
   6782				     ; прерывания игнорируется.
   6783				     ;	 При	выполнении программы	в постоянно	       +
   6784				     распределенной рабочей
   6785				     ; области памяти по	адресу 0500H			       +
   6786				     устанавливается следующая
   6787				     ; информация:
   6788				     ;	 0    -	содержимое буфера ЭЛИ еще	не выведено  +
   6789				     на печать,	либо
   6790				     ; вывод уже завершен;
   6791				     ;	 1    -	в процессе вывода содержимого	буфера   +
   6792				     ЭЛИ на печать;
   6793				     ;	 255  -	при печати обнаружена ошибка.
   6794				     ;-----------------------------------------------------
   6795
   6796					     assume  cs:code,ds:xxdata
   6797
   6798	FF54			     print_screen    proc    far
   6799	FF54  FB			     sti		  ; уст признак разрешения	       +
   6800				     прерывания
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 137
1840v5.asm



   6801	FF55  1E			     push    ds
   6802	FF56  50			     push    ax
   6803	FF57  53			     push    bx
   6804	FF58  51			     push    cx	  ; будет использоваться заглавная +
   6805				     буква	для курсора
   6806	FF59  52			     push    dx	  ; будет содержать текущее	       +
   6807				     положение	курсора
   6808	FF5A  B8 0050			     mov     ax,xxdat	     ; адрес 50
   6809	FF5D  8E D8			     mov     ds,ax
   6810	FF5F  80 3E 0000r 01		     cmp     status_byte,1   ; печать готова ?
   6811	FF64  74 5F			     jz	     exit	     ; переход, если	печать	       +
   6812				     готова
   6813	FF66  C6 06 0000r 01		     mov     status_byte,1   ;
   6814	FF6B  B4 0F			     mov     ah,15	     ; требуется текущий режим    +
   6815				     экрана
   6816	FF6D  CD 10			     int     10h	     ; AL - режим,	AH - число		       +
   6817				     строк/колонок
   6818								     ; BH - страница,выведенная на +
   6819				     экран
   6820
   6821
   6822				     ;*************************************8
   6823				     ;
   6824				     ;	 В этом месте:
   6825				     ;			 AX - колонка, строка,
   6826				     ;			 BH - номер отображаемой страницы.
   6827				     ;
   6828				     ;	 Стек содержит DS, AX, BX, CX, DX.
   6829				     ;
   6830				     ;			 AL - режим
   6831				     ;
   6832				     ;**************************************
   6833
   6834	FF6F  8A CC			     mov     cl,ah
   6835	FF71  B5 19			     mov     ch,25
   6836	FF73  E8 0055			     call    crlf
   6837	FF76  51			     push    cx
   6838	FF77  B4 03			     mov     ah,3
   6839	FF79  CD 10			     int     10h
   6840	FF7B  59			     pop     cx
   6841	FF7C  52			     push    dx
   6842	FF7D  33 D2			     xor     dx,dx
   6843
   6844				     ;**************************************
   6845				     ;
   6846				     ;	  Считывание знака, находящегося в текущей  +
   6847				     позиции курсора
   6848				     ; и вывод на печать
   6849				     ;
   6850				     ;**************************************
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 138
1840v5.asm



   6851
   6852	FF7F  B4 02		     pri10:  mov     ah,2
   6853	FF81  CD 10			     int     10h
   6854	FF83  B4 08			     mov     ah,8
   6855	FF85  CD 10			     int     10h
   6856	FF87  0A C0			     or	     al,al
   6857	FF89  75 02			     jnz     pri15
   6858	FF8B  B0 20			     mov     al,' '
   6859	FF8D			     pri15:
   6860	FF8D  52			     push    dx
   6861	FF8E  33 D2			     xor     dx,dx
   6862	FF90  32 E4			     xor     ah,ah
   6863	FF92  CD 17			     int     17h
   6864	FF94  5A			     pop     dx
   6865	FF95  F6 C4 25			     test    ah,25h
   6866	FF98  75 21			     jnz     err10
   6867	FF9A  FE C2			     inc     dl
   6868	FF9C  3A CA			     cmp     cl,dl
   6869	FF9E  75 DF			     jnz     pri10
   6870	FFA0  32 D2			     xor     dl,dl
   6871	FFA2  8A E2			     mov     ah,dl
   6872	FFA4  52			     push    dx
   6873	FFA5  E8 0023			     call    crlf
   6874	FFA8  5A			     pop     dx
   6875	FFA9  FE C6			     inc     dh
   6876	FFAB  3A EE			     cmp     ch,dh
   6877	FFAD  75 D0			     jnz     pri10
   6878	FFAF  5A			     pop     dx
   6879	FFB0  B4 02			     mov     ah,2
   6880	FFB2  CD 10			     int     10h
   6881	FFB4  C6 06 0000r 00		     mov     status_byte,0
   6882	FFB9  EB 0A			     jmp     short exit
   6883	FFBB  5A		     err10:  pop     dx
   6884	FFBC  B4 02			     mov     ah,2
   6885	FFBE  CD 10			     int     10h
   6886	FFC0  C6 06 0000r FF		     mov     status_byte,0ffh
   6887
   6888	FFC5  5A		     exit:   pop     dx
   6889	FFC6  59			     pop     cx
   6890	FFC7  5B			     pop     bx
   6891	FFC8  58			     pop     ax
   6892	FFC9  1F			     pop     ds
   6893	FFCA  CF			     iret
   6894	FFCB			     print_screen    endp
   6895
   6896				     ;	 Возврат	каретки
   6897
   6898	FFCB			     crlf    proc    near
   6899	FFCB  33 D2			     xor     dx,dx
   6900	FFCD  32 E4			     xor     ah,ah
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 139
1840v5.asm



   6901	FFCF  B0 0A			     mov     al,12q
   6902	FFD1  CD 17			     int     17h
   6903	FFD3  32 E4			     xor     ah,ah
   6904	FFD5  B0 0D			     mov     al,15q
   6905	FFD7  CD 17			     int     17h
   6906	FFD9  C3			     ret
   6907	FFDA			     crlf    endp
   6908
   6909	FFDA  16*(00)				     db	22 dup(0)
   6910
   6911				     ;--------------------------------------
   6912				     ;
   6913				     ;	 Включение питания
   6914				     ;
   6915				     ;--------------------------------------
   6916
   6917				     ;vector segment at	0ffffh
   6918
   6919				     ;	 Переход	по включению	питания
   6920
   6921	FFF0  EA		     POST:	     db	     0eah	     ; db    0eah,5bh,0e0h,00h,0f0h  ; jmp reset
   6922	FFF1  E06Cr F000			     dw	     offset reset, cod	     ; ###Gleb###
   6923
   6924	FFF5  30 34 2F 32 34 2F	38+		     db	'04/24/81'
   6925	      31
   6926
   6927	FFFD  00 00				     db	   0, 0
   6928
   6929	FFFF  00				     db	   0 ;
   6930				     ;vector ends
   6931
   6932
   6933
   6934
   6935
   6936
   6937	0000			     code    ends
   6938					     end     POST
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 140
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12-12-21"
??FILENAME			  Text	 "1840v5  "
??TIME				  Text	 "21:45:46"
??VERSION			  Number 0500
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 1840V5
@WORDSIZE			  Text	 2
A5700051COPR_IB			  Byte	 CODE:E000
ACTIVE_PAGE			  Byte	 DATA:0062
ACT_DISP_PAGE			  Near16 CODE:F230
ADDR_6845			  Word	 DATA:0063
ALT_INPUT			  Byte	 DATA:0019
ALT_KEY				  Number 0038
ALT_SHIFT			  Number 0008
ASCII_TBL			  Byte	 CODE:E417
B1				  Near16 CODE:EFF5
B2				  Near16 CODE:EFFB
B3				  Near16 CODE:F002
B4				  Near16 CODE:F017
B5				  Near16 CODE:F01F
B6				  Near16 CODE:F020
B7				  Near16 CODE:F02B
B8				  Near16 CODE:F033
B9				  Near16 CODE:F03D
BAD_ADDR_MARK			  Number 0002
BAD_CMD				  Number 0001
BAD_CRC				  Number 0010
BAD_DMA				  Number 0008
BAD_NEC				  Number 0020
BAD_SEEK			  Number 0040
BCT				  Near16 CODE:F859
BCT1				  Near16 CODE:F873
BCT2				  Near16 CODE:F875
BEEP				  Near16 CODE:E5A9
BIOS_BREAK			  Byte	 DATA:0071
BOOT_LOCN			  Far16	 ABS0:7C00
BOOT_STRAP			  Near16 CODE:E6F7
BOOT_VEC			  Dword	 ABS0:0064
BUFFER_END			  Word	 DATA:0082
BUFFER_HEAD			  Word	 DATA:001A
BUFFER_START			  Word	 DATA:0080
BUFFER_TAIL			  Word	 DATA:001C
C1				  Word	 CODE:E016
C10				  Near16 CODE:E0C2
C11				  Near16 CODE:E0EA
C12				  Near16 CODE:E0FC
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 141
Symbol Table



C13				  Near16 CODE:E10D
C14				  Near16 CODE:E113
C15				  Near16 CODE:E121
C16				  Near16 CODE:E12D
C17				  Near16 CODE:E137
C18				  Near16 CODE:E147
C19				  Near16 CODE:E193
C21				  Near16 CODE:E1A3
C22				  Near16 CODE:E1E1
C23				  Near16 CODE:E1ED
C25				  Near16 CODE:E1FB
C2A				  Near16 CODE:E02A
C2B				  Near16 CODE:E02D
C3				  Near16 CODE:E035
C3A				  Near16 CODE:E04D
C4				  Near16 CODE:E064
C7X				  Near16 CODE:E06B
C8				  Near16 CODE:E09F
C9				  Near16 CODE:E0BC
CA3				  Near16 CODE:E1F6
CAPS_KEY			  Number 0056
CAPS_SHIFT			  Number 0040
CAPS_STATE			  Number 0040
CAW				  Word	 CODE:E018
CHK_STAT_2			  Near16 CODE:EF0F
CMD_BLOCK			  Byte	 DATA:0042
CMD_PORT			  Number 0063
COD				  Number F000
CONTROL_BYTE			  Byte	 DATA:0076
CRLF				  Near16 CODE:FFCB
CRT_CHAR_GEN			  Byte	 CODE:FA6E
CRT_COLS			  Word	 DATA:004A
CRT_LEN				  Word	 DATA:004C
CRT_MODE			  Byte	 DATA:0049
CRT_MODE_SET			  Byte	 DATA:0065
CRT_PALLETTE			  Byte	 DATA:0066
CRT_START			  Word	 DATA:004E
CSI				  Word	 ABS0:04D0
CTL_KEY				  Number 001D
CTL_SHIFT			  Number 0004
CURSOR_MODE			  Word	 DATA:0060
CURSOR_POSN			  Word	 DATA:0050
D1				  Byte	 CODE:E205
D10				  Near16 CODE:E294
D11				  Near16 CODE:E29E
D12				  Near16 CODE:E2BA
D13				  Near16 CODE:E2C4
D14				  Near16 CODE:E2CE
D1L				  Number 000E
D2				  Byte	 CODE:E213
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 142
Symbol Table



D2L				  Number 000E
D3				  Near16 CODE:E240
D4				  Near16 CODE:E25D
D5				  Near16 CODE:E25F
D6				  Near16 CODE:E265
D7				  Near16 CODE:E26D
D8				  Near16 CODE:E27F
D9				  Near16 CODE:E288
DAL				  Near16 CODE:E4E9
DAT				  Number 0040
DECIMAL_LOOP			  Near16 CODE:E645
DEL_KEY				  Number 0053
DISKETTE_IO			  Far16	 CODE:EC59
DISKETTE_PARM			  Dword	 ABS0:0078
DISKETTE_STATUS			  Byte	 DATA:0041
DISKW_STATUS			  Byte	 DATA:0074
DISK_BASE			  Byte	 CODE:EFC7
DISK_FORMAT			  Near16 CODE:ED1B
DISK_INT			  Far16	 CODE:EF57
DISK_POINTER			  Dword	 ABS0:0078
DISK_READ			  Near16 CODE:ED0E
DISK_RESET			  Near16 CODE:ECB9
DISK_STATUS			  Near16 CODE:ED0A
DISK_VECTOR			  Dword	 ABS0:0100
DISK_VERF			  Near16 CODE:ED17
DISK_WRITE			  Near16 CODE:ED41
DMA				  Number 0000
DMA08				  Number 0008
DMA_BOUNDARY			  Number 0009
DMA_SETUP			  Near16 CODE:EEC9
DUMMM_RETURN			  Near16 CODE:F98B
DUMMY_RETURN			  Near16 CODE:FF53
E1				  Byte	 CODE:E2D0
E10				  Near16 CODE:E362
E11				  Near16 CODE:E380
E12				  Near16 CODE:E382
E13				  Near16 CODE:E384
E14				  Near16 CODE:E38D
E15				  Near16 CODE:E38F
E16				  Near16 CODE:E398
E17				  Near16 CODE:E3A0
E18				  Near16 CODE:E3A6
E19				  Near16 CODE:E3AB
E190				  Near16 CODE:E605
E1A				  Near16 CODE:E2E0
E1L				  Number 0004
E20A				  Near16 CODE:E614
E20B				  Near16 CODE:E619
E20C				  Near16 CODE:E629
E21A				  Near16 CODE:E675
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 143
Symbol Table



E3				  Near16 CODE:E2FA
E300				  Byte	 CODE:E689
E3A				  Near16 CODE:E305
E7				  Near16 CODE:E313
E8				  Near16 CODE:E323
E9				  Near16 CODE:E345
EOI				  Number 0020
EQUIPMENT			  Far16	 CODE:F84D
EQUIP_FLAG			  Word	 DATA:0010
EQ_FL				  Byte	 ABS0:0410
ERR01				  Near16 CODE:E0C0
ERR10				  Near16 CODE:FFBB
ERROR_BEEP			  Near16 CODE:E768
ERR_BEEP			  Near16 CODE:E580
ERR_WAIT			  Near16 CODE:E4E0
EVN				  Near16 CODE:F8B4
EXIT				  Near16 CODE:FFC5
EXT_PTR				  Dword	 ABS0:007C
F1				  Byte	 CODE:E40E
F10				  Near16 CODE:E490
F11				  Near16 CODE:E4A5
F12				  Near16 CODE:E4A7
F13				  Near16 CODE:E4BD
F14				  Near16 CODE:E4C6
F15				  Near16 CODE:E4CC
F16				  Near16 CODE:E502
F17				  Near16 CODE:E516
F18				  Near16 CODE:E542
F19				  Near16 CODE:E559
F19A				  Near16 CODE:F96D
F19B				  Near16 CODE:E55C
F1L				  Number 0004
F20				  Near16 CODE:E570
F20A				  Near16 CODE:F980
F20B				  Near16 CODE:E574
F21				  Near16 CODE:E57A
F23				  Near16 CODE:E57D
F3				  Byte	 CODE:E412
F39				  Byte	 CODE:E690
F3L				  Number 0003
F4				  Word	 CODE:E415
F4E				  Word	 CODE:E417
F5				  Near16 CODE:E444
F6				  Near16 CODE:E45C
F7				  Near16 CODE:E465
F7A				  Near16 CODE:E475
FIND_POSITION			  Near16 CODE:F3A7
G1				  Near16 CODE:E58C
G10				  Near16 CODE:E5EC
G2				  Near16 CODE:E591
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 144
Symbol Table



G3				  Near16 CODE:E597
G4				  Near16 CODE:E59C
G5				  Near16 CODE:E5A2
G6				  Near16 CODE:E5A4
G7				  Near16 CODE:E5C0
G8				  Near16 CODE:E5D2
G9				  Near16 CODE:E5E5
GET_PARM			  Near16 CODE:EE51
GRAPHICS_DOWN			  Near16 CODE:F4F7
GRAPHICS_READ			  Near16 CODE:F633
GRAPHICS_UP			  Near16 CODE:F49E
GRAPHICS_WRITE			  Near16 CODE:F581
GRAPH_POSN			  Near16 CODE:F70F
H1				  Near16 CODE:E707
H2				  Near16 CODE:E722
H3				  Near16 CODE:E727
H4				  Near16 CODE:E72A
HDISK_INT			  Dword	 ABS0:0034
HD_ERROR			  Byte	 DATA:0042
HF_NUM				  Byte	 DATA:0075
HF_TBL_VEC			  Dword	 ABS0:0104
HOLD_STATE			  Number 0008
H_PARITY			  Near16 CODE:E3FC
IDNPOL				  Word	 DATA:0090
INF_KEY				  Number 0059
INS_KEY				  Number 0052
INS_SHIFT			  Number 0080
INS_STATE			  Number 0080
INT15H				  Near16 CODE:F92D
INT5_PTR			  Word	 ABS0:0014
INTA00				  Number 0020
INTA01				  Number 0021
INT_ADDR			  Word	 ABS0:0020
INT_FLAG			  Number 0080
INT_PTR				  Dword	 ABS0:0020
INV_KEY_L			  Number 0058
INV_KEY_R			  Number 005A
INV_SHIFT			  Number 0004
IO_RAM_SIZE			  Word	 DATA:0015
IO_ROM_INIT			  Word	 DATA:0067
IO_ROM_SEG			  Word	 DATA:0069
J1				  Near16 CODE:EC87
J10				  Near16 CODE:ED29
J11				  Near16 CODE:ED57
J12				  Near16 CODE:EDA0
J13				  Near16 CODE:EDA4
J14				  Near16 CODE:EDAA
J15				  Near16 CODE:EDD4
J16				  Near16 CODE:EDF9
J17				  Near16 CODE:EE00
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 145
Symbol Table



J18				  Near16 CODE:EE3D
J19				  Near16 CODE:EE3F
J2				  Near16 CODE:ECAB
J20				  Near16 CODE:EE46
J21				  Near16 CODE:EE47
J22				  Near16 CODE:EE4B
J23				  Near16 CODE:E736
J24				  Near16 CODE:E73D
J25				  Near16 CODE:E747
J26				  Near16 CODE:E749
J27				  Near16 CODE:E752
J28				  Near16 CODE:EE95
J29				  Near16 CODE:EEB9
J3				  Near16 CODE:ECB3
J30				  Near16 CODE:EEC0
J300				  Near16 CODE:EEAB
J31				  Near16 CODE:EEC6
J32				  Near16 CODE:EEC8
J33				  Near16 CODE:EEDE
J34				  Near16 CODE:EF28
J35				  Near16 CODE:EF29
J36				  Near16 CODE:EF37
J37				  Near16 CODE:EF4A
J38				  Near16 CODE:EF74
J39				  Near16 CODE:EF79
J4				  Near16 CODE:ECD2
J40				  Near16 CODE:EF85
J40A				  Near16 CODE:EF8A
J41				  Near16 CODE:EF8F
J42				  Near16 CODE:EF96
J43				  Near16 CODE:EF9E
J44				  Near16 CODE:EFAC
J45				  Near16 CODE:EFC4
J5				  Near16 CODE:ECD4
J6				  Near16 CODE:ECD6
J7				  Near16 CODE:ECF8
J8				  Near16 CODE:ED09
J9				  Near16 CODE:ED10
K1				  Near16 CODE:E845
K10				  Byte	 CODE:E8DC
K11				  Byte	 CODE:E916
K12				  Byte	 CODE:E950
K13				  Byte	 CODE:E95A
K14				  Byte	 CODE:E964
K15				  Byte	 CODE:E971
K16				  Near16 CODE:E9AF
K17				  Near16 CODE:E9D9
K18				  Near16 CODE:EA4B
K19				  Near16 CODE:EA60
K2				  Near16 CODE:E85E
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 146
Symbol Table



K20				  Near16 CODE:EA6E
K21				  Near16 CODE:EA74
K22				  Near16 CODE:EA7B
K23				  Near16 CODE:EA9F
K24				  Near16 CODE:EAC3
K25				  Near16 CODE:EACC
K26				  Near16 CODE:EAEB
K26A				  Near16 CODE:EA48
K27				  Near16 CODE:EAF0
K28				  Near16 CODE:EAFF
K29				  Near16 CODE:EB09
K3				  Near16 CODE:E86F
K30				  Byte	 CODE:F905
K300				  Near16 CODE:EA1D
K301				  Near16 CODE:EA22
K302				  Near16 CODE:EA37
K303				  Near16 CODE:EA93
K304				  Near16 CODE:EAAF
K307				  Near16 CODE:EAF9
K31				  Near16 CODE:EB1F
K32				  Near16 CODE:EB28
K33				  Near16 CODE:EB44
K34				  Near16 CODE:EB55
K35				  Near16 CODE:EB65
K36				  Near16 CODE:EB69
K37				  Near16 CODE:EB6B
K38				  Near16 CODE:EB75
K39				  Near16 CODE:EB98
K4				  Near16 CODE:E75B
K40				  Near16 CODE:EBB3
K400				  Near16 CODE:EA06
K401				  Near16 CODE:EA0E
K406				  Near16 CODE:E9C2
K406B				  Near16 CODE:EADB
K407				  Near16 CODE:E9D6
K41				  Near16 CODE:EBBD
K42				  Near16 CODE:EBC7
K43				  Near16 CODE:EBD1
K44				  Near16 CODE:EBD7
K45				  Near16 CODE:EBEF
K46				  Near16 CODE:EBFC
K47				  Near16 CODE:EC06
K48				  Near16 CODE:EC19
K49				  Near16 CODE:EC27
K5				  Near16 CODE:E767
K50				  Near16 CODE:EC37
K51				  Near16 CODE:EC3D
K52				  Near16 CODE:EC43
K53				  Near16 CODE:EC4A
K54				  Near16 CODE:E78D
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 147
Symbol Table



K54A				  Near16 CODE:EBEC
K55				  Near16 CODE:E796
K56				  Near16 CODE:E7A0
K57				  Near16 CODE:E7A4
K58				  Near16 CODE:E7AD
K59				  Near16 CODE:E7D2
K6				  Byte	 CODE:E875
K60				  Near16 CODE:E7D5
K61				  Near16 CODE:E7DF
K62				  Near16 CODE:E7FC
K63				  Near16 CODE:E802
K64				  Near16 CODE:E804
K65				  Near16 CODE:E771
K66				  Near16 CODE:E778
K67				  Near16 CODE:E781
K6L				  Number 000C
K7				  Byte	 CODE:E881
K8				  Byte	 CODE:E889
K80				  Near16 CODE:F94B
K81				  Near16 CODE:F948
K88				  Near16 CODE:E7BE
K89				  Near16 CODE:F933
K89A				  Near16 CODE:F961
K89B				  Near16 CODE:F95C
K9				  Byte	 CODE:E8C3
K98				  Near16 CODE:EC13
K99				  Near16 CODE:E7F7
KBDINT				  Number 0002
KBD_IN				  Number 0060
KBD_RESET			  Near16 CODE:E5CB
KB_BUFFER			  Word	 DATA:001E
KB_BUFFER_END			  Word	 DATA:003E
KB_CTL				  Number 0061
KB_DAT				  Number 0060
KB_FLAG				  Byte	 DATA:0017
KB_FLAG_1			  Byte	 DATA:0018
KB_INT				  Far16	 CODE:E987
KEYBOARD_IO			  Far16	 CODE:E82E
LAST_VAL			  Byte	 DATA:006B
LAT				  Number 0002
LAT_KEY				  Number 0057
LAT_SHIFT			  Number 0001
LEFT_KEY			  Number 0054
LEFT_SHIFT			  Number 0002
M1				  Word	 CODE:F045
M10				  Near16 CODE:F144
M11				  Near16 CODE:F16F
M12				  Near16 CODE:F172
M13				  Near16 CODE:F175
M14				  Near16 CODE:F1C3
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 148
Symbol Table



M15				  Near16 CODE:F1CA
M16				  Near16 CODE:F1DA
M17				  Near16 CODE:F207
M18				  Near16 CODE:F209
M19				  Near16 CODE:F269
M1L				  Number 0020
M2				  Near16 CODE:F080
M20				  Near16 CODE:F270
M3				  Near16 CODE:F098
M4				  Number 0010
M5				  Word	 CODE:F0E4
M6				  Byte	 CODE:F0EC
M7				  Byte	 CODE:F0F4
M8				  Near16 CODE:F10D
M9				  Near16 CODE:F141
MAX_PERIOD			  Number 0540
MEMBANK				  Byte	 CODE:F8C3
MEMORY_SIZE			  Word	 DATA:0013
MEMORY_SIZE_DETERMINE		  Far16	 CODE:F841
MEM_SIZ				  Word	 ABS0:0413
MFG_TST				  Byte	 DATA:0012
MIN_PERIOD			  Number 0410
MOTOR_COUNT			  Byte	 DATA:0040
MOTOR_STATUS			  Byte	 DATA:003F
MOTOR_WAIT			  Number 0025
N1				  Near16 CODE:F2AB
N10				  Near16 CODE:F331
N11				  Near16 CODE:F33A
N12				  Near16 CODE:F351
N13				  Near16 CODE:F35F
N14				  Near16 CODE:F36A
N15				  Near16 CODE:F36D
N16				  Near16 CODE:F379
N2				  Near16 CODE:F2B9
N3				  Near16 CODE:F2C4
N4				  Near16 CODE:F2C7
N5				  Near16 CODE:F2D0
N6				  Near16 CODE:F2E3
N7				  Near16 CODE:F2E6
N8				  Near16 CODE:F2FD
N9				  Near16 CODE:F30A
NEC_OP				  Near16 CODE:EE64
NEC_OUTPUT			  Near16 CODE:E72F
NEC_STATUS			  Byte	 DATA:0042
NMI_INT				  Near16 CODE:E2AB
NMI_PTR				  Word	 ABS0:0008
NUM_KEY				  Number 0045
NUM_SHIFT			  Number 0020
NUM_STATE			  Number 0020
NUM_TRANS			  Near16 CODE:EFB0
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 149
Symbol Table



ORG_VECTOR			  Dword	 ABS0:004C
OSH				  Near16 CODE:E3CE
OSH2				  Near16 CODE:F8A8
P1				  Near16 CODE:F38A
P10				  Near16 CODE:F403
P11				  Near16 CODE:F40C
P12				  Near16 CODE:F413
P13				  Near16 CODE:F419
P2				  Near16 CODE:F398
P3				  Near16 CODE:F39E
P4				  Near16 CODE:F3B7
P5				  Near16 CODE:F3BD
P6				  Near16 CODE:F3D0
P7				  Near16 CODE:F3DB
P8				  Near16 CODE:F3E2
P9				  Near16 CODE:F3E8
PARITY				  Near16 CODE:E3E5
PARM_PTR			  Dword	 ABS0:0074
PORT_A				  Number 0060
PORT_B				  Number 0061
PORT_C				  Number 0062
PORT_OFF			  Byte	 DATA:0077
POSITION			  Near16 CODE:F28B
POST				  Near16 CODE:FFF0
PRI10				  Near16 CODE:FF7F
PRI15				  Near16 CODE:FF8D
PRINTER_BASE			  Word	 DATA:0008
PRINTER_IO			  Far16	 CODE:EFD2
PRINT_SCREEN			  Far16	 CODE:FF54
PRN_HEX_BYTE			  Near16 CODE:E3FF
PRT_DEC_LOOP			  Near16 CODE:E652
PRT_HEX				  Near16 CODE:E684
PRT_SIZ				  Near16 CODE:E63E
PRT_STR				  Near16 CODE:E6A7
P_MSG				  Near16 CODE:E5F5
R1				  Near16 CODE:F450
R10				  Near16 CODE:F4E5
R11				  Near16 CODE:F4F3
R12				  Near16 CODE:F517
R13				  Near16 CODE:F533
R14				  Near16 CODE:F542
R15				  Near16 CODE:F544
R16				  Near16 CODE:F553
R17				  Near16 CODE:F557
R18				  Near16 CODE:F570
R2				  Near16 CODE:F457
R3				  Near16 CODE:F45B
R4				  Near16 CODE:F46E
R5				  Near16 CODE:F486
R6				  Near16 CODE:F490
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 150
Symbol Table



R7				  Near16 CODE:F4BC
R8				  Near16 CODE:F4D4
R9				  Near16 CODE:F4E3
READ_AC_CURRENT			  Near16 CODE:F37D
READ_CURSOR			  Near16 CODE:F21A
READ_DOT			  Near16 CODE:F427
READ_LPEN			  Near16 CODE:F7A9
RECORD_NOT_FND			  Number 0004
REGEN				  Byte	 VIDEO_RAM:0000
REGENW				  Word	 VIDEO_RAM:0000
RESET				  Near16 CODE:E06C
RESET_FLAG			  Word	 DATA:0072
RESULTS				  Near16 CODE:EF6B
RES_FL				  Word	 ABS0:0472
RIGHT_KEY			  Number 0055
RIGHT_SHIFT			  Number 0001
ROS				  Near16 CODE:E0EC
RS232_BASE			  Word	 DATA:0000
RS232_IO			  Near16 CODE:F929
RUST				  Byte	 CODE:F8CB
RUST2				  Byte	 CODE:E6BD
RUS_KEY				  Number 005B
RW_OPN				  Near16 CODE:ED4D
S1				  Near16 CODE:F594
S10				  Near16 CODE:F5FC
S11				  Near16 CODE:F618
S12				  Near16 CODE:F648
S13				  Near16 CODE:F660
S14				  Near16 CODE:F664
S15				  Near16 CODE:F676
S16				  Near16 CODE:F683
S17				  Near16 CODE:F688
S18				  Near16 CODE:F6B1
S19				  Near16 CODE:F6B7
S2				  Near16 CODE:F5A3
S20				  Near16 CODE:F6C0
S21				  Near16 CODE:F6CC
S22				  Near16 CODE:F6D5
S23				  Near16 CODE:F6EF
S24				  Near16 CODE:F6F9
S25				  Near16 CODE:F6FF
S26				  Near16 CODE:F70C
S3				  Near16 CODE:F5B3
S4				  Near16 CODE:F5B7
S5				  Near16 CODE:F5BF
S6				  Near16 CODE:F5D3
S7				  Near16 CODE:F5DF
S8				  Near16 CODE:F5E6
S9				  Near16 CODE:F5EA
SCROLL_DOWN			  Near16 CODE:F341
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 151
Symbol Table



SCROLL_KEY			  Number 0046
SCROLL_POSITION			  Near16 CODE:F2EA
SCROLL_SHIFT			  Number 0010
SCROLL_STATE			  Number 0010
SCROLL_UP			  Near16 CODE:F29C
SEEK				  Near16 CODE:EE67
SEEK_STATUS			  Byte	 DATA:003E
SET_COLOR			  Near16 CODE:F254
SET_CPOS			  Near16 CODE:F1F0
SET_CTYPE			  Near16 CODE:F1CF
SET_MODE			  Near16 CODE:F0FC
SKIP_SIZE_DET			  Near16 CODE:E3C5
SP_TEST				  Near16 CODE:E5D8
STA				  Number 0030
START				  Near16 CODE:E06C
STATUS_BYTE			  Byte	 XXDATA:0000
STAT_OFFSET			  Byte	 DATA:007C
STGTST				  Near16 CODE:E01A
STGTST_CNT			  Near16 CODE:E01D
STG_LOC0			  Byte	 ABS0:0000
T1				  Near16 CODE:FE7F
T2				  Near16 CODE:FE82
T3				  Near16 CODE:FE95
T4				  Near16 CODE:FEB8
T5				  Near16 CODE:FED8
T6				  Near16 CODE:FEE9
TABL				  Word	 DATA:00E0
TABL1				  Word	 ABS0:04E0
TIMER				  Number 0040
TIMERO				  Number 0040
TIMER_HIGH			  Word	 DATA:006E
TIMER_INT			  Far16	 CODE:FEA5
TIMER_LOW			  Word	 DATA:006C
TIMER_OFL			  Byte	 DATA:0070
TIME_OF_DAY			  Far16	 CODE:FE6E
TIME_OUT			  Number 0080
TIM_CTL				  Number 0043
TMINT				  Number 0001
TMP_TOS				  Word	 DATA:3FF0
TOS				  Word	 STAC:0100
TST12				  Near16 CODE:E427
TST14				  Near16 CODE:E47D
TST6				  Near16 CODE:E221
TST8				  Near16 CODE:E2D4
U1				  Near16 CODE:F753
U10				  Near16 CODE:F793
U11				  Near16 CODE:F79A
U2				  Near16 CODE:F766
U3				  Near16 CODE:F76C
U4				  Near16 CODE:F77A
Turbo Assembler	 Version 5.0	    12-12-21 21:45:46	    Page 152
Symbol Table



U5				  Near16 CODE:F77C
U6				  Near16 CODE:F780
U7				  Near16 CODE:F782
U8				  Near16 CODE:F786
U9				  Near16 CODE:F78F
USUAL				  Near16 CODE:E3D9
V1				  Byte	 CODE:F7A1
V2				  Near16 CODE:F7E8
V3				  Near16 CODE:F80F
V4				  Near16 CODE:F81B
V5				  Near16 CODE:F82D
V6				  Near16 CODE:F82F
V7				  Near16 CODE:F839
VECTOR_TABLE			  Word	 CODE:FEF3
VIDEO_INT			  Word	 ABS0:0040
VIDEO_IO			  Near16 CODE:F065
VIDEO_PARMS			  Byte	 CODE:F0A4
VIDEO_RA			  Number B800
VIDEO_RETURN			  Near16 CODE:F1C7
VIDEO_STATE			  Near16 CODE:F27A
WAIT_INT			  Near16 CODE:EF30
WRITE_AC_CURRENT		  Near16 CODE:F3C3
WRITE_C_CURRENT			  Near16 CODE:F3F6
WRITE_DOT			  Near16 CODE:F438
WRITE_PROTECT			  Number 0003
WRITE_TTY			  Near16 CODE:F722
WRITE_TTY2			  Near16 CODE:F966
X1				  Near16 CODE:ED8B
X2				  Near16 CODE:ED87
XLAT_PRINT_COD			  Near16 CODE:E6B0
XXDAT				  Number 0050
ZB				  Byte	 ABS0:0000
ZW				  Word	 ABS0:0000

Groups & Segments		  Bit Size Align  Combine Class

ABS0				  16  7C00 Para	  none
CODE				  16  00010000 Para   none
DATA				  16  3FF0 Para	  none
STAC				  16  0100 Para	  Stack
VIDEO_RAM			  16  4000 Para	  none
XXDATA				  16  0001 Para	  none
